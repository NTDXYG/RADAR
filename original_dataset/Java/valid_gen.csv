nl,code
Returns the root user preferences node. <code> Preferences getUserPreferences ( ) { ,Preferences retVal = Preferences . userRoot ( ) . node ( PREF_ROOT ) ; return retVal ; }
Returns the GroupingState for this SpellReferenceChoiceSet. The GroupingState indicates how this SpellReferenceChoiceSet can be combined with other PrimitiveChoiceSets. <code> GroupingState getGroupingState ( ) { ,GroupingState state = GroupingState . EMPTY ; for ( CDOMReference < ? extends CDOMListObject < Spell >> listref : set ) { state = state . add ( listref . getGroupingState ( ) ) ; } return state ; }
"Place a chess piece on the board at position column, row. Does not verify whether the piece can be attacked buy other present pieces or that it can attack any of them. <code> void placeChessPieceAtPosition ( ChessPiece piece , int column , int row ) { ","piece . setColumn ( column ) ; piece . setRow ( row ) ; pieceOffsets . put ( row * width + column , piece ) ; }"
Returns enum value for the passed return code or null if return code is unknown. <code> ReturnValue getByReturnCode ( int returnCode ) { ,for ( ReturnValue value : ReturnValue . values ( ) ) { if ( returnCode == value . getReturnCode ( ) ) { return value ; } } return null ; }
Remove the sharedObject from the object map. <code> void removeObject ( SharedObjectInterface sharedObject ) { ,"SharedEntry key = new SharedEntry ( sharedObject . getClass ( ) . getName ( ) , sharedObject . getName ( ) ) ; objectsMap . remove ( key ) ; }"
Utility method for guessing a font family name from its base name. <code> String guessFamily ( String name ) { ,"String fam = name ; int inx ; if ( ( inx = fam . indexOf ( ',' ) ) > 0 ) fam = fam . substring ( 0 , inx ) ; if ( ( inx = fam . lastIndexOf ( '-' ) ) > 0 ) fam = fam . substring ( 0 , inx ) ; return fam ; }"
"Check if the type of the argument matches our expectation. If not, report an error. <code> void checkType ( Class < ? > actual , Class < ? > expected ) { ","if ( expected == actual || expected . isAssignableFrom ( actual ) ) return ; if ( expected == JCodeModel . boxToPrimitive . get ( actual ) ) return ; throw new IllegalArgumentException ( ""Expected "" + expected + "" but found "" + actual ) ; }"
Sniffs out the expander/DSL config name as best it can. <code> String findDSLConfigName ( String content ) { ,"String name = null ; Matcher matches = EXPANDER_PATTERN . matcher ( content ) ; if ( matches . find ( ) ) { name = matches . group ( 1 ) + "".dsl"" ; } return name ; }"
Calculates the event addresses that appear in any of the traces. <code> LinkedHashSet < BreakpointAddress > getUnionizedAddresses ( final List < TraceList > traces ) { ,final LinkedHashSet < BreakpointAddress > addresses = new LinkedHashSet < BreakpointAddress > ( ) ; for ( final Collection < BreakpointAddress > collection : getTraceAddresses ( traces ) ) { addresses . addAll ( collection ) ; } return addresses ; }
"Print a number of countries exporting given export item. <code> void numberOfExporters ( CSVParser parser , String exportItem ) { ","int exportersCount = 0 ; p ( ""Exporters of "" + exportItem + "": "" ) ; for ( CSVRecord record : parser ) { String exports = record . get ( ""Exports"" ) ; if ( exports . contains ( exportItem ) ) exportersCount ++ ; } pl ( exportersCount ) ; }"
"The ShuffleCards method swap two random cards, basically simulating a shuffle. <code> void shuffleCards ( ) { ","int newIndex ; SecureRandom rand = new SecureRandom ( ) ; for ( int i = 0 ; i < 52 ; ++ i ) { newIndex = rand . nextInt ( 52 ) ; swapCards ( i , newIndex ) ; } }"
Gets the action type for a compaction commit <code> String getCompactedCommitActionType ( ) { ,"switch ( metaClient . getTableType ( ) ) { case COPY_ON_WRITE : return HoodieTimeline . COMMIT_ACTION ; case MERGE_ON_READ : return HoodieTimeline . COMPACTION_ACTION ; } throw new HoodieException ( ""Unsupported table type :"" + metaClient . getTableType ( ) ) ; }"
Convert a list of item values to data values. <code> List < Object > getDataValues ( List < ? > itemValues ) { ,"List < Object > dataValues = new ArrayList < Object > ( itemValues . size ( ) ) ; for ( int i = 0 ; i < itemValues . size ( ) ; i ++ ) { dataValues . add ( i , getDataValue ( itemValues . get ( i ) ) ) ; } return dataValues ; }"
"Gets the parent folder. <code> String getParentFolder ( final String directory , final Date date ) { ",Calendar cal = Calendar . getInstance ( ) ; cal . setTime ( date ) ; return null ; }
Output similar to SOAPMessage.writeTo(). <code> void writeTo ( SOAPMessage msg ) { ,"if ( debug == 0 ) { return ; } println ( ""==== TestHelper.writeTo(...) Start ===="" ) ; msg . writeTo ( ostream ) ; println ( ) ; println ( ""==== TestHelper.writeTo(...) End ===="" ) ; }"
Return the closure of typedModel.usedPackages and their importedPackages. <code> Set < org . eclipse . ocl . pivot . Package > getAllUsedPackages ( @ NonNull TypedModel typedModel ) { ,"Set < org . eclipse . ocl . pivot . Package > allUsedPackages = new HashSet < org . eclipse . ocl . pivot . Package > ( ) ; getAllUsedPackagesInternal ( allUsedPackages , typedModel ) ; return allUsedPackages ; }"
Removes password from connection url <code> String getLogUrl ( String url ) { ,Util . PropertyList connectProperties = Util . parseConnectString ( url ) ; connectProperties . remove ( RolapConnectionProperties . JdbcPassword . name ( ) ) ; return connectProperties . toString ( ) ; }
"Write an RTF control word to our Writer, preceeded by a star '' meaning ""ignore this if you don't know what it means"" <code> void writeStarControlWord ( String word ) { ","writer . write ( ""|*|"" ) ; writer . write ( word ) ; writer . write ( ' ' ) ; }"
Look at the list of loading loaders and remove them if they have been completed or abandoned. This is necessary as there are cases where a LoaderManager will notify LoaderCallbacks that a Loader has been abandoned. <code> void cleanupLoaders ( ) { ,for ( int loaderId : mLoadersLoading ) { Loader loader = mLoaderManager . getLoader ( loaderId ) ; if ( loader == null ) { mLoadersLoading . remove ( loaderId ) ; } } }
Instantiates an object of a specified class using a no-arg constructor. <code> T newInstance ( final Class < T > clazz ) { ,"T result = null ; try { Constructor < T > ctor = getDefaultConstructor ( clazz ) ; ctor . setAccessible ( true ) ; result = ctor . newInstance ( ) ; } catch ( Exception e ) { throw new RuntimeException ( ""failed to instantiate class: "" + clazz . getName ( ) ) ; } return result ; }"
"Returns the target state of a transition leaving this state and labeled with label. If no such transition exists, returns null. <code> State getState ( int label ) { ","final int index = Arrays . binarySearch ( labels , label ) ; return index >= 0 ? states [ index ] : null ; }"
Sets the x and y momentum (delta per time unit). <code> void setMomentum ( Size newMomentum ) { ,mx = newMomentum . cx ; my = newMomentum . cy ; }
Get CPU time in nanoseconds. <code> long getCpuTime ( ) { ,ThreadMXBean bean = ManagementFactory . getThreadMXBean ( ) ; return bean . isCurrentThreadCpuTimeSupported ( ) ? bean . getCurrentThreadCpuTime ( ) : 0L ; }
Return a list of all ancestors of this node. The first node of list is the root and the last is the parent of this node. <code> List < ? extends Tree > getAncestors ( Tree t ) { ,"if ( t . getParent ( ) == null ) return Collections . emptyList ( ) ; List < Tree > ancestors = new ArrayList < Tree > ( ) ; t = t . getParent ( ) ; while ( t != null ) { ancestors . add ( 0 , t ) ; t = t . getParent ( ) ; } return ancestors ; }"
Add new listener object. <code> void addListener ( SpringSystemListener newListener ) { ,"if ( newListener == null ) { throw new IllegalArgumentException ( ""newListener is required"" ) ; } mListeners . add ( newListener ) ; }"
Transform Calendar to ISO 8601 string. <code> String fromCalendar ( final Calendar calendar ) { ,"Date date = calendar . getTime ( ) ; String formatted = new SimpleDateFormat ( ""yyyy-MM-dd'T'HH:mm:ssZ"" ) . format ( date ) ; return formatted . substring ( 0 , 22 ) + "":"" + formatted . substring ( 22 ) ; }"
returns card at the top of the deck <code> Card getTopCard ( ) { ,"if ( cards . isEmpty ( ) ) { throw new IndexOutOfBoundsException ( ""Deck is empty"" ) ; } return cards . get ( cards . size ( ) - 1 ) ; }"
Test operator logic emits correct results. <code> void testNodeProcessing ( ) { ,"testNodeSchemaProcessing ( true , true ) ; testNodeSchemaProcessing ( true , false ) ; testNodeSchemaProcessing ( false , true ) ; testNodeSchemaProcessing ( false , false ) ; }"
Return the offset in pixels required to center a given character <code> int getCharOffset ( char c ) { ,if ( c >= fOffsets . length ) return 0 ; return fOffsets [ c ] ; }
The attributes of the parameter object. <code> java . util . List < ParameterAttribute > getAttributes ( ) { ,if ( attributes == null ) { attributes = new com . amazonaws . internal . SdkInternalList < ParameterAttribute > ( ) ; } return attributes ; }
This method is used by the internal data structure of the histogram to get the limit of data points that should be counted at one bucket. <code> int getCountPerNodeLimit ( ) { ,int limit = ( int ) ( totalCount / 10 ) ; if ( 0 == limit ) { limit = 1 ; } return limit ; }
Returns the value of the Entry object at the given xIndex. Returns Float.NaN if no value is at the given x-index. INFORMATION: This method does calculations at runtime. Do not over-use in performance critical situations. <code> float getYValForXIndex ( int xIndex ) { ,Entry e = getEntryForXIndex ( xIndex ) ; if ( e != null ) return e . getVal ( ) ; else return Float . NaN ; }
Sets or replaces the current image in the Model <code> void setImage ( BufferedImage bi ) { ,image = bi ; rects . clear ( ) ; }
"Check the database to find out whether any of a set of fields are used for any of the entries. <code> boolean linksFound ( BibtexDatabase database , String [ ] fields ) { ",for ( BibtexEntry entry : database . getEntries ( ) ) { for ( String field : fields ) { if ( entry . getField ( field ) != null ) return true ; } } return false ; }
Resets the variable tables <code> void destroyVariableTables ( ) { ,chemicalTable = null ; physicsVarTable = null ; systemVarTable = null ; waterColumnVarTable = null ; typeTable = null ; tables = null ; }
"Write a variable size long. <code> void writeVarLong ( ByteBuffer buff , long x ) { ",while ( ( x & ~ 0x7f ) != 0 ) { buff . put ( ( byte ) ( 0x80 | ( x & 0x7f ) ) ) ; x >>>= 7 ; } buff . put ( ( byte ) x ) ; }
New instance of grid for form layout <code> Grid newGridLayout ( ) { ,Grid grid = new Grid ( ) ; grid . makeNoStrip ( ) ; return grid ; }
"Use >= and <= comparison as a workaround for BETWEEN, make sure min < max (explicit RHS version). <code> void shouldNotUseBetweenPredicateRhsMinMaxReversed ( ) { ","SqlConstraints . setDisableBetweenPredicate ( true ) ; int max = uniqueInt ( 10 ) ; int min = max + uniqueInt ( 10 ) ; String actual = between ( ""lhs"" , ""rhs"" , min , max ) ; String expected = ""lhs >= rhs + "" + max + "" AND lhs <= rhs + "" + min ; assertEquals ( expected , actual ) ; }"
"Populates the specified bean definition property with the value of the attribute whose name is provided if that attribute is defined in the given element. <code> boolean setValueIfAttributeDefined ( BeanDefinitionBuilder builder , Element element , String attributeName , String propertyName ) { ","String attributeValue = element . getAttribute ( attributeName ) ; if ( StringUtils . hasText ( attributeValue ) ) { builder . addPropertyValue ( propertyName , new TypedStringValue ( attributeValue ) ) ; return true ; } return false ; }"
"When a file is Base64-encoded, it takes 4 bytes to encode 3 bytes of content, plus we throw in a newline after encoding 57 characters or so. <code> long estimateFileSize ( File file ) { ",if ( file == null ) { return 0 ; } else { return file . length ( ) * 4 / 3 + file . length ( ) / 57 ; } }
returns a list of system ids for a given profile <code> List < Long > getSystemIdsByProfile ( Long profileId ) { ,"List < Long > systemIdList = new ArrayList < Long > ( ) ; Connection con = null ; try { con = DBUtils . getConn ( ) ; systemIdList = getSystemIdsByProfile ( con , profileId ) ; } catch ( Exception e ) { e . printStackTrace ( ) ; } DBUtils . closeConn ( con ) ; return systemIdList ; }"
"Add some amount to a gauge. <code> void incGauge ( String gaugeName , long delta ) { ","MutableGaugeLong gaugeInt = metricsRegistry . getLongGauge ( gaugeName , 0l ) ; gaugeInt . incr ( delta ) ; }"
Gets the delivery channel. <code> DeliveryChannel getChannel ( ) { ,DeliveryChannel chnl = null ; if ( _context != null ) { try { chnl = _context . getDeliveryChannel ( ) ; } catch ( Exception e ) { throw new RuntimeException ( e ) ; } } return chnl ; }
"Check if the parsed OData URI is a query and it results in something that is not an entity or a collection of entities; for example a primitive value, complex object, enum value or a collection of any of those. <code> boolean isNonEntityQuery ( ODataUri uri , EntityDataModel entityDataModel ) { ","Type type = getTargetTypeOrNull ( uri , entityDataModel ) ; return type != null && type . getMetaType ( ) != MetaType . ENTITY ; }"
"Returns the amount of time for this particle to collide with a vertical wall, assuming no interening collisions. <code> double timeToHitVerticalWall ( ) { ",if ( vx > 0 ) return ( 1.0 - rx - radius ) / vx ; else if ( vx < 0 ) return ( radius - rx ) / vx ; else return INFINITY ; }
Each individual register is a separate object and Observable. This handy method will add the given Observer to each one. <code> void addRegistersObserver ( Observer observer ) { ,for ( int i = 0 ; i < registers . length ; i ++ ) { registers [ i ] . addObserver ( observer ) ; } }
"Returns the aspect ratio from two points. <code> double findAspectRatio ( Point3d min , Point3d max ) { ",double x = Math . abs ( min . x ) + Math . abs ( max . x ) ; double y = Math . abs ( min . y ) + Math . abs ( max . y ) ; return x / y ; }
Add a new slide to the end of message. <code> boolean addNewSlide ( ) { ,int position = mModel . size ( ) ; return addNewSlide ( position ) ; }
"Serialize an instance, restore it, and check for equality. <code> void testSerialization ( ) { ","TickLabelEntity e1 = new TickLabelEntity ( new Rectangle2D . Double ( 1.0 , 2.0 , 3.0 , 4.0 ) , ""ToolTip"" , ""URL"" ) ; TickLabelEntity e2 = ( TickLabelEntity ) TestUtilities . serialised ( e1 ) ; assertEquals ( e1 , e2 ) ; }"
"Compute grid1 = grid1 - grid2 <code> void addBy ( GenericGrid < T > input , GenericGrid < T > sub ) { ","GenericGridOperatorInterface < T > op = input . selectGridOperator ( input , sub ) ; op . addBy ( input , sub ) ; }"
Returns number of method calls for the class. Sum number of method calls on all instrumented instances belonging to this instrumented class. It's sum of all method calls for all known instrumented instances. <code> int getInvocationCount ( String methodName ) { ,int invocationCount = 0 ; for ( InstrumentedInstance instance : getInstances ( ) ) { invocationCount += instance . getInvocationCount ( methodName ) ; } return invocationCount ; }
Currently webservice content generators are wired up by a plugin. The following methods generate urls for executing web service and wsdl generation. These methods are tightly bound to the content generator specifications in the default-plugin of the system solution. <code> String getWebServiceExecuteUrl ( ) { ,"String url = PentahoSystem . getApplicationContext ( ) . getFullyQualifiedServerURL ( ) + ""content/"" + WS_EXECUTE_SERVICE_ID + ""/"" ; return url ; }"
Returns a string representation of this object; useful for testing and debugging. <code> String toString ( ) { ,"StringBuilder sb = new StringBuilder ( ) ; sb . append ( ""{"" ) ; if ( getProject ( ) != null ) sb . append ( ""Project: "" + getProject ( ) ) ; sb . append ( ""}"" ) ; return sb . toString ( ) ; }"
The list of tags for the cluster parameter group. <code> java . util . List < Tag > getTags ( ) { ,if ( tags == null ) { tags = new com . amazonaws . internal . ListWithAutoConstructFlag < Tag > ( ) ; tags . setAutoConstruct ( true ) ; } return tags ; }
"Adds new data description implementation, defined for passed target and task. <code> void addDataDescription ( String step , DataDescriptionImpl dd ) { ","String key = createKey ( step , dd . getName ( ) ) ; mapDataDescription . put ( key , dd ) ; }"
Gets the Batch service quotas for the specified subscription at the given location. <code> Observable < BatchLocationQuotaInner > getQuotasAsync ( String locationName ) { ,"return getQuotasWithServiceResponseAsync ( locationName ) . map ( new Func1 < ServiceResponse < BatchLocationQuotaInner > , BatchLocationQuotaInner > ( ) { @ Override public BatchLocationQuotaInner call ( ServiceResponse < BatchLocationQuotaInner > response ) { return response . body ( ) ; } } ) ; }"
Call this to convert the projects. <code> List < ProjectView > convertProjects ( Project rootProject ) { ,rootLevelResultingProjects . clear ( ) ; projectMap . clear ( ) ; addRootLevelProject ( rootProject ) ; buildDependencies ( ) ; return rootLevelResultingProjects ; }
Lookup an broker connection by name. <code> MqttBrokerConnection getConnection ( String brokerName ) { ,"MqttBrokerConnection conn = brokerConnections . get ( brokerName . toLowerCase ( ) ) ; if ( conn == null ) { conn = new MqttBrokerConnection ( brokerName ) ; brokerConnections . put ( brokerName . toLowerCase ( ) , conn ) ; } return conn ; }"
Returns a JSON encoded array string representing this object. <code> String toString ( ) { ,JsonArrayBuilder ab = Json . createArrayBuilder ( ) ; for ( int x = 0 ; x < list . size ( ) ; ++ x ) { JsonValue value = list . get ( x ) ; if ( value instanceof EcommerceItem ) { ab . add ( ( ( EcommerceItem ) value ) . toJsonArray ( ) ) ; } else { ab . add ( value ) ; } } return ab . build ( ) . toString ( ) ; }
Add a mapping between a corresponding sipSession related to a headerName. See Also getCorrespondingSipSession method. <code> void removeCorrespondingSipSession ( MobicentsSipSessionKey sipSession ) { ,joinSession . remove ( sipSession ) ; replacesSession . remove ( sipSession ) ; }
"starting from the end and check back, the number of check backs = input[i] if any input[i-count] during check back is true, input[i] is reachable <code> boolean jumpDPReverse ( int [ ] input ) { ",int len = input . length ; boolean [ ] m = new boolean [ len ] ; m [ len - 1 ] = true ; for ( int i = len - 2 ; i >= 0 ; i -- ) { for ( int count = 1 ; count <= input [ i ] ; count ++ ) { if ( i + count <= len - 1 ) m [ i ] = m [ i + count ] ; if ( m [ i ] == true ) break ; } } return m [ 0 ] ; }
Generate an array of test strings. <code> void generateTestStrings ( ) { ,"testStrings . clear ( ) ; random = new Random ( 123 ) ; for ( int i = 0 ; i < TEST_STRING_COUNT ; i ++ ) { testStrings . add ( RandomStringUtils . random ( 10 , 0 , 0 , true , true , null , random ) ) ; } }"
Converts the input numeric text to the internationalized form using the zero character. <code> String convertNumberToI18N ( String numericText ) { ,if ( zeroDigit == '0' ) { return numericText ; } int diff = zeroDigit - '0' ; char [ ] array = numericText . toCharArray ( ) ; for ( int i = 0 ; i < array . length ; i ++ ) { array [ i ] = ( char ) ( array [ i ] + diff ) ; } return new String ( array ) ; }
"Set new values for a range of Unicode character. <code> void setElementAt ( char start , char end , char value ) { ","int i ; if ( isCompact ) { expand ( ) ; } for ( i = start ; i <= end ; ++ i ) { values [ i ] = value ; touchBlock ( i >> BLOCKSHIFT , value ) ; } }"
Method to validate user mobile number <code> Object updateRequest ( ServiceRequestUpdate requestUpdate ) { ,try { return insertrequesttpdate ( requestUpdate ) ; } catch ( Exception e ) { throw new RuntimeException ( e ) ; } }
Start the shell process. <code> Object executeTestFile ( ) { ,try { task . exec ( ) ; } catch ( IOException e ) { System . err . println ( e ) ; file . exception = e . toString ( ) ; } return null ; }
"Retrieves the username from the HTTP context. It reads the 'wisdom.monitor.username' in the session, and checks it is equal to the username set in the application configuration. <code> String getUserName ( Context context ) { ","if ( ! enabled ) { return ""admin"" ; } String user = context . session ( ) . get ( ""wisdom.monitor.username"" ) ; if ( user != null && user . equals ( username ) ) { return user ; } return null ; }"
Answer the manifest for this container (if possible). Manifest is cached until the file is renewed. <code> Manifest getManifest ( ) { ,if ( getError ( ) != null || getFile ( ) == null ) return null ; if ( manifestTime < getFile ( ) . lastModified ( ) ) { try ( JarInputStream jin = new JarInputStream ( IO . stream ( getFile ( ) ) ) ) { manifest = jin . getManifest ( ) ; } manifestTime = getFile ( ) . lastModified ( ) ; } return manifest ; }
Shown the state that the request is processing. <code> void showProcessing ( boolean inProgress ) { ,view . setLoaderVisibility ( inProgress ) ; view . setInputsEnableState ( ! inProgress ) ; }
Returns a string representation of this object; useful for testing and debugging. <code> String toString ( ) { ,"StringBuilder sb = new StringBuilder ( ) ; sb . append ( ""{"" ) ; if ( getActionType ( ) != null ) sb . append ( ""ActionType: "" + getActionType ( ) ) ; sb . append ( ""}"" ) ; return sb . toString ( ) ; }"
"All Rainfall related code <code> float getRainfall ( World world , int x , int y , int z ) { ","if ( world . isRemote ) { ChunkData cd = TFC_Core . getCDM ( world ) . getData ( x >> 4 , z >> 4 ) ; if ( cd != null ) return cd . getRainfall ( x & 15 , z & 15 ) ; } DataLayer dl = getCacheManager ( world ) . getRainfallLayerAt ( x , z ) ; return dl != null ? dl . floatdata1 : DataLayer . Rain_500 . floatdata1 ; }"
returns the iDepthth ancestor of the current element <code> Frame getAncestorFrame ( int iDepth ) { ,for ( Frame f = currentFrame ; f != null ; f = f . parent ) { if ( iDepth -- == 0 ) { return f ; } } return null ; }
"BuildTime: 2014-8-30 Description: Get the external cache directory,it will be bulid a directory what is name ""Android/data/PACKAGE_NAME/cache"" for 2.2 system"" <code> File getExternalCacheDir ( Context context ) { ","if ( hasExternalCacheDir ( ) ) { return context . getExternalCacheDir ( ) ; } final String cacheDir = ""/Android/data/"" + context . getPackageName ( ) + ""/cache/"" ; return new File ( Environment . getExternalStorageDirectory ( ) . getPath ( ) + cacheDir ) ; }"
A list of DB cluster parameter groups. <code> java . util . List < DBClusterParameterGroup > getDBClusterParameterGroups ( ) { ,if ( dBClusterParameterGroups == null ) { dBClusterParameterGroups = new com . amazonaws . internal . ListWithAutoConstructFlag < DBClusterParameterGroup > ( ) ; dBClusterParameterGroups . setAutoConstruct ( true ) ; } return dBClusterParameterGroups ; }
"Does nothing, data not changing! <code> void addDataProviderListener ( IDataProviderListener listener ) { ",if ( listeners == null ) listeners = new HashSet < IDataProviderListener > ( ) ; listeners . add ( listener ) ; }
Test remove multi spaces. <code> void testRemoveMultiSpaces ( ) { ,"String source = readResource ( ""testRemoveMultiSpaces.html"" ) ; String result = readResource ( ""testRemoveMultiSpacesResult.html"" ) ; HtmlCompressor compressor = new HtmlCompressor ( ) ; compressor . setRemoveMultiSpaces ( true ) ; assertEquals ( result , compressor . compress ( source ) ) ; }"
Read the next short from the InputStream. <code> int readShort ( ) { ,int k = readWord ( ) ; if ( k > 0x7fff ) k -= 0x10000 ; return k ; }
Get a sub-list with all entries for the specified field names <code> IErrorList getListOfFields ( @ Nullable final String ... aSearchFieldNames ) { ,"if ( ArrayHelper . isEmpty ( aSearchFieldNames ) ) { return getSubList ( x -> false ) ; } return getSubList ( x -> x . hasErrorFieldName ( ) && ArrayHelper . contains ( aSearchFieldNames , x . getErrorFieldName ( ) ) ) ; }"
Convert a short into a byte array <code> byte [ ] toByteArray ( short value ) { ,byte [ ] bytes = new byte [ 2 ] ; bytes [ 0 ] = ( byte ) ( value >> 8 ) ; bytes [ 1 ] = ( byte ) ( value & 0x00FF ) ; return bytes ; }
Returns the process inputs according to the GeoTools API expectations <code> LazyInputMap getProcessInputs ( WPSExecutionManager manager ) { ,if ( inputs == null ) { return getInputsInternal ( manager ) ; } return inputs ; }
Check to see if unlimited strength crypto is available. There is an implicit assumption that the JCE jurisdiction policy files are not going to be changing while this given JVM is running. <code> boolean isUnlimitedStrengthCryptoAvailable ( ) { ,if ( ! s_aChecked . getAndSet ( true ) ) { s_bUnlimitedStrength = _isUnlimitedStrengthAvailable ( ) ; } return s_bUnlimitedStrength ; }
delete all session information <code> void deleteAllSession ( HttpSession session ) { ,"session . setAttribute ( TIMEOUT , null ) ; session . setAttribute ( AUTH_TOKEN , null ) ; session . setAttribute ( USER_ID , null ) ; session . setAttribute ( SESSION_ID , null ) ; session . invalidate ( ) ; }"
"Returns a combined label with the name and value in one string. Eg: name=Priority value=P4 would become ""Priority-P4"". name=Security value=null would become ""Security"". <code> String getLabelText ( ) { ","String labelText = name ; if ( value != null ) { labelText += ""-"" + value ; } return labelText ; }"
"Stores fields in a map using name as the key for faster lookup <code> Map < String , FieldDto > asFieldMapByName ( Collection < FieldDto > fields ) { ","Map < String , FieldDto > fieldMap = new HashMap < > ( ) ; for ( FieldDto field : fields ) { fieldMap . put ( field . getBasic ( ) . getName ( ) , field ) ; } return fieldMap ; }"
Sets a fixed clock to be used. <code> void useFixedClock ( final ZonedDateTime dateTime ) { ,"requireNonNull ( dateTime , DATETIME_MUST_NOT_BE_NULL ) ; useFixedClock ( dateTime . toInstant ( ) , dateTime . getZone ( ) ) ; }"
Returns a string representation of this object; useful for testing and debugging. <code> String toString ( ) { ,"StringBuilder sb = new StringBuilder ( ) ; sb . append ( ""{"" ) ; if ( getLayers ( ) != null ) sb . append ( ""Layers: "" + getLayers ( ) + "","" ) ; if ( getFailures ( ) != null ) sb . append ( ""Failures: "" + getFailures ( ) ) ; sb . append ( ""}"" ) ; return sb . toString ( ) ; }"
"Method to determine the customs desk index of the current passenger, return -1 if there is no current passenger <code> int getCurrentIndex ( ) { ",if ( currentPassenger == null ) { return Passenger . INITIAL_CUSTOMS_LINE_INDEX ; } else { return currentPassenger . getLineIndex ( ) ; } }
"Simple test to see if the decode is none standard where standard is [0,1,0,1,0,1]. <code> boolean isNormalDecode ( float [ ] decode ) { ","for ( int i = 0 , max = decode . length ; i < max ; i += 2 ) { if ( decode [ i ] != 0.0f || decode [ i + 1 ] != NORMAL_DECODE_CEIL ) { return false ; } } return true ; }"
The interceptor method. This should intercept postActivate of the bean <code> void ddInterceptorPostActivate ( final InvocationContext ctx ) { ,"Interceptor . profile ( ctx , ""ddInterceptorPostActivate"" ) ; ctx . proceed ( ) ; return ; }"
EnvironmentMocker can create file. <code> void writesFileContentToTheDesignatedLocation ( ) { ,"final String name = ""src/main/java/Main.java"" ; final String content = ""class Main {}"" ; final Environment env = new Environment . Mock ( ) . withFile ( name , content ) ; final File file = new File ( env . basedir ( ) , name ) ; MatcherAssert . assertThat ( file . exists ( ) , Matchers . is ( true ) ) ; }"
"Return the list of scores associated with the specified batch and gene. <code> Collection < RNAIHairpinValue > getHairpinScores ( String batchId , String geneName ) { ","Map < String , Collection < RNAIHairpinValue >> scoresForBatch = hairpinScores . get ( batchId ) ; if ( scoresForBatch == null ) { return null ; } else { return scoresForBatch . get ( geneName ) ; } }"
Call this when your activity gets paused. <code> void onPause ( ) { ,try { if ( ! registeredCallbacks ) { onPause ( activity ) ; } } catch ( Throwable t ) { Util . handleException ( t ) ; } }
"Gets string value for key from shared preferences. <code> String getString ( Context context , String sharedPreferenceName , String key ) { ","final SharedPreferences sharedPreferences = getPreferences ( context , sharedPreferenceName ) ; return sharedPreferences . getString ( key , DEFAULT_STRING_VALUE ) ; }"
"Dumps the GDL output of the search space to the given file. <code> void dumpGDL ( String title , String fileName ) { ","try { System . err . println ( ""Dumping "" + title + "" to "" + fileName ) ; FileWriter f = new FileWriter ( fileName ) ; f . write ( dumpGDL ( title ) ) ; f . close ( ) ; } catch ( IOException ioe ) { ioe . printStackTrace ( ) ; } }"
Retrieves a checksum of the rulesets being used. Any change to any rule of any ruleset should trigger a checksum change. <code> long getChecksum ( ) { ,long checksum = 1 ; for ( final RuleSet ruleSet : ruleSets ) { checksum = checksum * 31 + ruleSet . getChecksum ( ) ; } return checksum ; }
Whether or not connected to wifi <code> boolean isWifi ( Context context ) { ,ConnectivityManager connectivity = ( ConnectivityManager ) context . getSystemService ( Context . CONNECTIVITY_SERVICE ) ; if ( connectivity != null ) { return connectivity . getActiveNetworkInfo ( ) . getType ( ) == ConnectivityManager . TYPE_WIFI ; } return false ; }
"Small utility for making comparing floats easier. <code> int compareFloat ( float float1 , float float2 ) { ",if ( float1 > float2 ) return 1 ; if ( float2 > float1 ) return - 1 ; return 0 ; }
"Transforms given IProperty to a readable string. <code> String toTreeString ( IProperty < ? , ? > pProperty ) { ","StringBuilder stringBuilder = new StringBuilder ( ) ; _buildTree ( stringBuilder , pProperty , """" ) ; return stringBuilder . toString ( ) ; }"
Get the set of keys from the javac resource bundles. <code> Set < String > getResourceKeys ( ) { ,"Set < String > results = new TreeSet < String > ( ) ; for ( String name : new String [ ] { ""javac"" , ""compiler"" } ) { ResourceBundle b = ResourceBundle . getBundle ( ""com.sun.tools.javac.resources."" + name ) ; results . addAll ( b . keySet ( ) ) ; } return results ; }"
Calculates the okay mood days: Days that fall between -1 and 1. <code> int okMoodDays ( ) { ,int okCount = 0 ; for ( Integer nums : theMood ) { if ( nums >= - 1 && nums <= 1 ) { okCount ++ ; } } return okCount ; }
Does this equation contain an appearance of a given cell? <code> boolean hasCell ( DF_LatticeCell cell ) { ,for ( DF_LatticeCell operand : operands ) { if ( operand == cell ) { return true ; } } return false ; }
Reads the next 8 bits from standard input and return as an 8-bit byte. <code> byte readByte ( ) { ,char c = readChar ( ) ; byte x = ( byte ) ( c & 0xff ) ; return x ; }
Add optional parameters of the given type to the end of the param list. <code> boolean addOptionalParams ( JSType ... types ) { ,if ( hasVarArgs ( ) ) { return false ; } for ( JSType type : types ) { newParameter ( registry . createOptionalType ( type ) ) . setOptionalArg ( true ) ; } return true ; }
"Updates an SSA representation, placing phi functions and renaming all registers above a certain threshold number. <code> void updateSsaMethod ( Optimizer optimizer , SsaMethod ssaMeth , int threshold ) { ","LocalVariableInfo localInfo = LocalVariableExtractor . extract ( ssaMeth ) ; placePhiFunctions ( ssaMeth , localInfo , threshold ) ; new SsaRenamer ( optimizer , ssaMeth , threshold ) . run ( ) ; }"
"Returns the property value evaluated by J2SEProject's PropertyEvaluator. <code> Object getEvaluatedProperty ( Project p , String value ) { ",if ( value == null ) { return null ; } J2SEProject j2seprj = ( J2SEProject ) p . getLookup ( ) . lookup ( J2SEProject . class ) ; if ( j2seprj != null ) { return j2seprj . evaluator ( ) . evaluate ( value ) ; } else { return null ; } }
"Retrieve integer data from shared preferences in private mode. <code> int getInt ( Context context , String key ) { ","SharedPreferences mainPref = context . getSharedPreferences ( context . getResources ( ) . getString ( R . string . shared_pref_package ) , Context . MODE_PRIVATE ) ; return mainPref . getInt ( key , DEFAULT_INDEX ) ; }"
"Convenience method that fires the validation error event to SP tracking server, resetting the internal ad availability state. <code> void fireValidationErrorEvent ( String message ) { ","resetState ( ) ; fireEvent ( SPInterstitialEvent . ValidationError , message ) ; }"
Gets the String value of this Object. <code> String toString ( ) { ,"String str = """" ; str += ""user= "" + name + ""  "" ; str += ""key= "" + Base64 . encode ( key ) + ""  "" ; return str ; }"
"Algorithm for searching class loaders for HA-JDBC url. <code> URL findResource ( String resource , ClassLoader loader ) { ","try { return new URL ( resource ) ; } catch ( MalformedURLException e ) { return findResource ( resource , loader , XMLDatabaseClusterConfigurationFactory . class . getClassLoader ( ) , ClassLoader . getSystemClassLoader ( ) ) ; } }"
"Disable collect events for Visor instance. <code> void stopCollect ( IgniteEx g , String visorKey ) { ",synchronized ( listenVisor ) { listenVisor . remove ( visorKey ) ; tryDisableEvents ( g ) ; } }
Get command to refresh at redo only <code> Command getAtRedo ( final IEditorPart editor ) { ,return new CommandStub ( ) { public void redo ( ) { refresh ( editor ) ; } } ; }
A function where the output is the geometric average the inputs <code> float aveGeo ( float ... arr ) { ,"float product = 1 ; for ( float f : arr ) { product *= f ; } return ( float ) Math . pow ( product , 1.00 / arr . length ) ; }"
"Returns the iterable of collections that have the specified provider. <code> Iterable < S > filterByProvider ( Iterable < S > prerequisites , final Class < C > provider ) { ","return Iterables . filter ( prerequisites , new Predicate < S > ( ) { @ Override public boolean apply ( S target ) { return target . getProvider ( provider ) != null ; } } ) ; }"
Sets (or unsets) the system-wide cookie handler. Note: non-standard http protocol handlers may ignore this setting. <code> void setDefault ( CookieHandler cHandler ) { ,SecurityManager sm = System . getSecurityManager ( ) ; if ( sm != null ) { sm . checkPermission ( SecurityConstants . SET_COOKIEHANDLER_PERMISSION ) ; } cookieHandler = cHandler ; }
Counts the number of test cases that will be run by this test. <code> int countTestCases ( ) { ,int count = 0 ; for ( Enumeration e = tests ( ) ; e . hasMoreElements ( ) ; ) { Test test = ( Test ) e . nextElement ( ) ; count = count + test . countTestCases ( ) ; } return count ; }
Get the last component of a name. <code> String getLastComponent ( final Name name ) { ,"if ( name . size ( ) > 0 ) return name . get ( name . size ( ) - 1 ) ; return """" ; }"
Creates the Paint object for drawing the crop window guidelines. <code> Paint newGuidelinePaint ( ) { ,final Paint paint = new Paint ( ) ; paint . setColor ( Color . parseColor ( SEMI_TRANSPARENT ) ) ; paint . setStrokeWidth ( DEFAULT_GUIDELINE_THICKNESS_PX ) ; return paint ; }
Translate a namespace prefix to its URI. <code> String translateNamespacePrefixToUri ( String prefix ) { ,"if ( ""xml"" . equals ( prefix ) ) { return ""http://www.w3.org/XML/1998/namespace"" ; } NamespaceContext context = getNamespaceContext ( ) ; if ( context != null ) { return context . translateNamespacePrefixToUri ( prefix ) ; } return null ; }"
"Gets the title from a map of field values. <code> String getTitle ( Map < String , String > fieldValues ) { ","for ( Map . Entry < String , String > entry : fieldValues . entrySet ( ) ) { if ( entry . getKey ( ) . contains ( ""/NavText/"" ) ) { return entry . getValue ( ) ; } } return null ; }"
"Load data from URL. url must be not null. Note, this method doesn't check if data or url is null. <code> void loadData ( ) { ","RandomAccessFileOrArray raf = new RandomAccessFileOrArray ( new RandomAccessSourceFactory ( ) . createSource ( url ) ) ; ByteArrayOutputStream stream = new ByteArrayOutputStream ( ) ; StreamUtil . transferBytes ( raf , stream ) ; raf . close ( ) ; data = stream . toByteArray ( ) ; }"
"Extracts the string from the ""VFO"" field <code> RadioVfos parseVfoField ( JSONObject jso ) { ","if ( jso . has ( VFO_PAR ) ) { int i = Integer . parseInt ( jso . getString ( VFO_PAR ) ) ; for ( RadioVfos vfo : RadioVfos . values ( ) ) { if ( vfo . getCode ( ) == i ) return vfo ; } } logger . warning ( ""SON object didn't contained "" + VFO_PAR + "" key."" ) ; return RadioVfos . NONE ; }"
Retrieve (or create) an interned HystrixThreadPoolKey instance for a given name. <code> HystrixThreadPoolKey asKey ( String name ) { ,"HystrixThreadPoolKey k = intern . get ( name ) ; if ( k == null ) { k = new HystrixThreadPoolKeyDefault ( name ) ; intern . putIfAbsent ( name , k ) ; } return k ; }"
"Creates a new Enterprise in data base <code> BasicResult createEnterprise ( UserSession userSession , Enterprise enterprise ) { ","UserCommand userCommand = new UserCommand ( ) ; Object [ ] args = new Object [ 2 ] ; args [ 0 ] = userSession ; args [ 1 ] = enterprise ; return userCommand . execute ( userSession , ResourceLocator . ENTERPRISE_CREATE , args ) ; }"
Get a named config set <code> PublishedConfigSet getConfigSet ( String setname ) { ,"PublishedConfigSet configSet = appState . getPublishedConfigSet ( setname ) ; if ( configSet == null ) { throw new NotFoundException ( ""Not found: "" + setname ) ; } return configSet ; }"
"gets the appropriate adapter wrapper around the object inspector if necessary, that is, if we're dealing with numbers. The JSON parser won't parse the number because it's deferred (lazy). <code> AbstractPrimitiveJavaObjectInspector getPrimitiveJavaObjectInspector ( PrimitiveCategory primitiveCategory ) { ","if ( ! primitiveOICache . containsKey ( primitiveCategory ) ) { primitiveOICache . put ( primitiveCategory , PrimitiveObjectInspectorFactory . getPrimitiveJavaObjectInspector ( primitiveCategory ) ) ; } return primitiveOICache . get ( primitiveCategory ) ; }"
"Encodes byte into its quoted-printable representation. <code> void writeEncodeQuotedPrintableByte ( final int b , @ Nonnull final OutputStream aOS ) { ",final char cHigh = StringHelper . getHexCharUpperCase ( ( b >> 4 ) & 0xF ) ; final char cLow = StringHelper . getHexCharUpperCase ( b & 0xF ) ; aOS . write ( ESCAPE_CHAR ) ; aOS . write ( cHigh ) ; aOS . write ( cLow ) ; }
Determines if the configureSNMP event is for a specific address. <code> boolean isSpecific ( ) { ,if ( getLastIPAddress ( ) == null || getLastIPAddress ( ) . equals ( getFirstIPAddress ( ) ) ) { return true ; } else { return false ; } }
"Convert a hexadecimal character into the corresponding nibble value. <code> byte parseNibble ( byte b , int shift ) { ",byte rv = 0 ; if ( b >= '0' && b <= '9' ) rv |= ( b - '0' ) << shift ; else if ( b >= 'a' && b <= 'f' ) rv |= ( b - 'a' + 10 ) << shift ; else if ( b >= 'A' && b <= 'F' ) rv |= ( b - 'A' + 10 ) << shift ; return rv ; }
"Returns the output file name. <code> String getOutputFileName ( String filename , ConverterTypeTo to ) { ","StringBuilder name = new StringBuilder ( filename . replace ( '.' , '_' ) ) ; name . append ( '.' ) ; name . append ( to . getExtension ( ) ) ; return name . toString ( ) ; }"
Should be called on the holder onStop() method. This will fire onStop event to all registered event listeners <code> void fireOnStopEvent ( ) { ,"trackEvent ( ""fireOnStopEvent"" ) ; fireEventOccurred ( onStopRunnable ) ; }"
"Convenience method to access V array using 2D coordinates. <code> float getCurrentVAt ( int x , int y ) { ",if ( y >= 0 && y < height && x >= 0 && x < width ) { return v [ y * width + x ] ; } return 0 ; }
"Encodes the given stream using Quoted-Printable. This assumes that stream is text and therefore does not escape all line endings. <code> void encodeQuotedPrintable ( final InputStream in , final OutputStream out ) { ","final QuotedPrintableEncoder encoder = new QuotedPrintableEncoder ( DEFAULT_ENCODING_BUFFER_SIZE , false ) ; encoder . encode ( in , out ) ; }"
Filters the children to display in the tree. <code> Set < AbstractActor > filterPISDFChildren ( final EList < AbstractActor > vertices ) { ,final Set < AbstractActor > result = new LinkedHashSet < > ( ) ; for ( final AbstractActor actor : vertices ) { result . add ( actor ) ; } return result ; }
"Gets a filtered list of languages. The list is cached for the lifetime of this ISO639_3 object. <code> Hashtable < String , LanguageCode > getLanguagesByScopeAndType ( LanguageCode . Scope scope , LanguageCode . Type type ) { ","final Map < String , LanguageCode > all = getLanguages ( ) ; final Hashtable < String , LanguageCode > result = new Hashtable < String , LanguageCode > ( ) ; for ( final LanguageCode c : all . values ( ) ) { if ( c . scope . equals ( scope ) && c . type . equals ( type ) ) result . put ( c . id , c ) ; } return result ; }"
Returns a count of the number of items in the system <code> long getItemCount ( ) { ,"Query query = entityManager . createNamedQuery ( ""Item.count"" , Category . class ) ; return ( Long ) query . getSingleResult ( ) ; }"
Get the indice arg max of this vector <code> int argMax ( ) { ,int max = 0 ; for ( int i = 1 ; i < size ( ) ; i ++ ) { if ( get ( i ) > get ( max ) ) { max = i ; } } return max ; }
X for given lon starting from 0 <code> double getXForLon ( double lon ) { ,if ( mMapTile != null ) { return mMapTile . getOffsetX ( lon ) + BitmapHolder . WIDTH / 2 ; } return - 1 ; }
Checks cross count according to path rule to define is it point inside shape or not. <code> boolean isInside ( final int cross ) { ,if ( rule == WIND_NON_ZERO ) { return Crossing . isInsideNonZero ( cross ) ; } return Crossing . isInsideEvenOdd ( cross ) ; }
This is an override method that generates hashcode. <code> int hashCode ( ) { ,int prime = UtilConstants . PRIME_CONST ; int result = UtilConstants . ONE ; result = prime * result + ( ( key == null ) ? UtilConstants . ZERO : key . hashCode ( ) ) ; result = prime * result + ( ( value == null ) ? UtilConstants . ZERO : value . hashCode ( ) ) ; return result ; }
"Return the relation that holds between the given entities. Return a relation of type UNRELATED if this sentence contains no relation between the entities. <code> RelationMention getRelation ( RelationMentionFactory factory , ExtractionObject ... args ) { ","for ( RelationMention rel : relationMentions ) { if ( rel . argsMatch ( args ) ) { return rel ; } } return RelationMention . createUnrelatedRelation ( factory , args ) ; }"
This method is used to determine the default AsyncSupport if all else fails. <code> AsyncSupport defaultCometSupport ( final boolean preferBlocking ) { ,if ( ! preferBlocking && testClassExists ( SERVLET_30 ) ) { return new Servlet30CometSupport ( config ) ; } else { return new BlockingIOCometSupport ( config ) ; } }
"O(1) space solution, O(n) time Rotate is a good idea in solving these problems. <code> int [ ] rotateByLeecode ( int [ ] nums , int k ) { ","if ( nums == null || nums . length < 2 ) return nums ; k = k % nums . length ; reverseArray ( nums , 0 , nums . length - k - 1 ) ; reverseArray ( nums , nums . length - k , nums . length - 1 ) ; reverseArray ( nums , 0 , nums . length - 1 ) ; return nums ; }"
Get a URL from configuration or system properties. <code> URL getURL ( final String name ) { ,"String value = props . getProperty ( name , null ) ; if ( value != null ) { if ( ! value . endsWith ( ""/"" ) ) value += ""/"" ; return new URL ( value ) ; } return null ; }"
A callback method for when the generation timer ticks. <code> void onGenerationTimerTick ( ActionEvent e ) { ,lastGenerationMilliseconds = System . currentTimeMillis ( ) ; universe . nextGeneration ( ) ; }
"This is the property bag <code> void setProperty ( String key , String value ) { ","List < String > list = new ArrayList < String > ( ) ; list . add ( value ) ; propertyBag . put ( key , list ) ; }"
Gets a list of the supported formats for reading. <code> List < FileFormat < T >> getWriteFormats ( ) { ,List < FileFormat < T >> ret = alist ( ) ; for ( FileFormat < T > f : formats ) { if ( f . getOutput ( ) != null ) ret . add ( f ) ; } return ret ; }
Get timestamp of transmission of the message <code> long getExchangeTimestamp ( Exchange exchange ) { ,long storedTimestamp = 0 ; if ( exchangeInfoMap . isEmpty ( ) ) { return 0 ; } if ( exchangeInfoMap . get ( exchange ) != null ) { storedTimestamp = exchangeInfoMap . get ( exchange ) . getTimestamp ( ) ; } return storedTimestamp ; }
Applies the forces to all bodies. <code> void applyForces ( ) { ,for ( int i = 0 ; i < forces . size ( ) ; ++ i ) { forces . get ( i ) . apply ( ) ; } }
Threadsafe Factory that provides an authorized Bigquery service. <code> Bigquery getService ( ) { ,if ( service == null ) { synchronized ( serviceLock ) { if ( service == null ) { service = createAuthorizedClient ( ) ; } } } return service ; }
Close column finder popup. <code> void disposePopup ( ) { ,if ( ppopup != null && ! ppopup . isDisposed ( ) ) { ppopup . close ( ) ; ppopup . dispose ( ) ; ppopup = null ; } }
recursively call given a reverse of scanned number <code> boolean isPalindrome ( int x ) { ,"if ( x < 0 ) return false ; return isPalindrome ( x , 0 ) ; }"
"Returns the node containing the specified name. <code> Node searchNodes ( String stateName , Node node ) { ",Node temp = node ; boolean found = false ; while ( temp != null && ! found ) { if ( temp . getState ( ) . getStateName ( ) . equalsIgnoreCase ( stateName ) ) { found = true ; } else { temp = temp . getNext ( ) ; } } return temp ; }
"Tests for orientation property - can be null - set is honored - can be bound - is HORIZONTAL by default - if bound, impl_cssSettable returns false - if specified via CSS and not bound, impl_cssSettable returns true <code> void orientationDefaultValueIsHORIZONTAL ( ) { ","assertSame ( Orientation . HORIZONTAL , separator . getOrientation ( ) ) ; assertSame ( Orientation . HORIZONTAL , separator . orientationProperty ( ) . get ( ) ) ; }"
"Converts the type to a string that represents the type in the SimpleTimeZone time mode. (e.g., ""SimpleTimeZone.WALL_TIME""). <code> String getTypeForSimpleTimeZone ( ) { ","String stz = ""SimpleTimeZone."" ; if ( isWall ( ) ) { return stz + ""WALL_TIME"" ; } else if ( isSTD ( ) ) { return stz + ""STANDARD_TIME"" ; } else if ( isUTC ( ) ) { return stz + ""UTC_TIME"" ; } else { return null ; } }"
Set the current pseudo name of the user session. <code> void setPseudoName ( String name ) { ,pseudo = name ; pseudoModified = true ; }
First day of summer (Icelandic: Sumardagurinn fyrsti) Thursday during the period 19 to 25 April <code> Date firstDayOfSummer ( ) { ,"GregorianCalendar calendar = USDateUtilities . cal ( ) ; calendar . set ( year ( ) , GregorianCalendar . APRIL , 19 , 0 , 0 , 0 ) ; calendar = USDateUtilities . setToNextDayOfWeek ( calendar , GregorianCalendar . THURSDAY ) ; return calendar . getTime ( ) ; }"
Called by the Renderer when it creates a new framebuffer <code> void onNewFrameBuffer ( ) { ,if ( ! enabled ) return ; memoryFrameBuffers ++ ; }
Returns the message digest of the specified file with the SHA algorithm. <code> byte [ ] messageDigestWithSHA ( File file ) { ,FileInputStream fis = new FileInputStream ( file ) ; try { return messageDigestWithSHA ( fis ) ; } finally { fis . close ( ) ; } }
"Retrieve a variable value. <code> Object getVariableValue ( String namespaceURI , String prefix , String localName ) { ","VariableContext context = getVariableContext ( ) ; if ( context != null ) { return context . getVariableValue ( namespaceURI , prefix , localName ) ; } else { throw new UnresolvableException ( ""No variable context installed"" ) ; } }"
Returns the number of bytes used by the table already cached (approximate) <code> BigDecimal getUsedMemory ( ) { ,"IDataBase dataBase = DataBase . getDataBase ( cacheConfiguration . getCacheDataSource ( ) ) ; BigDecimal usedMemory = dataBase . getUsedMemorySize ( cacheConfiguration . getSchema ( ) , cacheConfiguration . getTableNamePrefix ( ) ) ; logger . debug ( ""Used memory is equal to ["" + usedMemory + ""]"" ) ; return usedMemory ; }"
Check the MBean class name. <code> void checkClass ( ) { ,Class clazz = Thread . currentThread ( ) . getContextClassLoader ( ) . loadClass ( referencedMBeanClassName ) ; MBeanCapability . of ( clazz ) ; }
Set the processor singleton. <code> CoordinatorProcessor setProcessor ( final CoordinatorProcessor processor ) { ,final CoordinatorProcessor origProcessor = PROCESSOR ; PROCESSOR = processor ; return origProcessor ; }
"Description of the Method <code> void generateTestFile ( String test , String diff , int width , int height ) { ","Uu . p ( ""test = "" + test ) ; String out = xhtmlToDiff ( test , width , height ) ; Uu . string_to_file ( out , new File ( diff ) ) ; }"
Get the last Screen used <code> Activity getLastActivity ( ) { ,if ( lastActivity == null ) { return activities . get ( startActivity ) ; } return activities . get ( lastActivity ) ; }
"get a pair of colors that fulfil a certain role. see OPTIONS_RAW returns {-1, -1} if not found <code> int [ ] getOptionColor ( int i ) { ",if ( i < 0 || i >= options . length ) return INVALID ; return options [ i ] ; }
"Asserts that two objects refer to the same object. If they are not an AssertionFailedError is thrown with the given message. <code> void assertSame ( String message , Object expected , Object actual ) { ","if ( expected == actual ) return ; failNotSame ( message , expected , actual ) ; }"
Gets the number of pages in the document. <code> int getPageCount ( ) { ,throwIfClosed ( ) ; return mPageCount ; }
Creates a new type based on the original function type by adding the original this pointer type to the beginning of the argument type list and replacing the this pointer type with bottom. <code> void fixFunctionType ( Node functionNode ) { ,TypeI t = functionNode . getTypeI ( ) ; if ( t == null ) { return ; } FunctionTypeI ft = t . toMaybeFunctionType ( ) ; if ( ft != null ) { functionNode . setTypeI ( ft . convertMethodToFunction ( ) ) ; } }
"Format the given phone number <code> String formatPhoneNumber ( String number , String normalizedNumber , String countryIso ) { ","if ( TextUtils . isEmpty ( number ) ) { return """" ; } if ( PhoneNumberUtils . isUriNumber ( number ) ) { return number ; } if ( TextUtils . isEmpty ( countryIso ) ) { countryIso = mCurrentCountryIso ; } return PhoneNumberUtils . formatNumber ( number , normalizedNumber , countryIso ) ; }"
"Read a specified number of bits and return them combined as an integer value. The bits are written to the integer starting at the highest bit ( << aNumberOfBits ), going down to the lowest bit ( << 0 ) <code> int readBits ( final int aNumberOfBits , boolean stuffIfEnd ) { ",int value = 0 ; for ( int i = aNumberOfBits - 1 ; i >= 0 ; i -- ) { value |= ( readBit ( stuffIfEnd ) << i ) ; } return value ; }
Traverses a specified node looking for files to check. Found files are added to a specified list. Subdirectories are also traversed. <code> List < File > listFiles ( File node ) { ,final List < File > files = Lists . newLinkedList ( ) ; if ( node . canRead ( ) ) { if ( node . isDirectory ( ) ) { for ( File element : node . listFiles ( ) ) { files . addAll ( listFiles ( element ) ) ; } } else if ( node . isFile ( ) ) { files . add ( node ) ; } } return files ; }
Parses a GTFSAgency from a line in the corresponding GTFS file (agency.txt). <code> GTFSAgency fromGTFS ( String line ) { ,"String tokens [ ] = line . split ( "","" ) ; return new GTFSAgency ( tokens [ AGENCY_ID ] , tokens [ AGENCY_NAME ] ) ; }"
Get the list of roles currently known by users (there's guarantee the well known ROLE_ADMINISTRATOR will be part of the lot) <code> List < String > getRoles ( ) { ,"checkUserMap ( ) ; Set < String > roles = new TreeSet < String > ( ) ; roles . add ( ""ROLE_ADMINISTRATOR"" ) ; for ( User user : getUsers ( ) ) { for ( GrantedAuthority ga : user . getAuthorities ( ) ) { roles . add ( ga . getAuthority ( ) ) ; } } return new ArrayList < String > ( roles ) ; }"
Make sure we've registered our Pig Shim <code> void sqoopShimRegistered ( ) { ,ServiceLoader < SqoopShim > l = ServiceLoader . load ( SqoopShim . class ) ; SqoopShim s = l . iterator ( ) . next ( ) ; assertTrue ( CommonSqoopShim . class . isAssignableFrom ( s . getClass ( ) ) ) ; }
Returns the variable back-off factor for this exchange. <code> double getExchangeVBF ( Exchange exchange ) { ,double vbf = 2 ; if ( exchangeInfoMap . isEmpty ( ) ) { return 0 ; } if ( exchangeInfoMap . get ( exchange ) != null ) { vbf = exchangeInfoMap . get ( exchange ) . getVBF ( ) ; } return vbf ; }
Find the center of curvature (point on the evolute) at the nadir of a point. <code> Vector2D getCenterOfCurvature ( final Vector2D point ) { ,"final Vector2D projected = projectToEllipse ( point ) ; return new Vector2D ( evoluteFactorX * projected . getX ( ) * projected . getX ( ) * projected . getX ( ) , evoluteFactorY * projected . getY ( ) * projected . getY ( ) * projected . getY ( ) ) ; }"
"to new activity,use animation from bottom to top carry data <code> void goToActivityFromBottom2Top ( Context context , Class < ? > cls , Bundle bundle ) { ","Activity activity = ( Activity ) context ; Intent intent = new Intent ( ) ; intent . setClass ( activity , cls ) ; intent . putExtras ( bundle ) ; activity . startActivity ( intent ) ; activity . overridePendingTransition ( R . anim . in_from_bottom , R . anim . out_to_top ) ; }"
Gets the owner id <code> int getOwnerId ( ) { ,"Properties p = null ; int id = - 1 ; try { p = new Properties ( ) ; p . load ( new FileInputStream ( ""mango.properties"" ) ) ; id = Integer . parseInt ( p . getProperty ( ""MangoOwner"" ) ) ; } catch ( Exception e ) { } return id ; }"
Returns the value of an option. <code> String getOptionValue ( String optionName ) { ,"String key ; if ( ! optionName . startsWith ( ""-"" ) ) key = ""-"" + optionName . toLowerCase ( ) ; else key = optionName . toLowerCase ( ) ; if ( map_ . containsKey ( key ) ) return map_ . get ( key ) . toString ( ) . trim ( ) ; else return null ; }"
It obtains the last element of the pattern <code> ItemAbstractionPair getLastElement ( ) { ,if ( size ( ) > 0 ) { return getIthElement ( size ( ) - 1 ) ; } return null ; }
Takes an array of ManagedObjects and returns the MOR for each MO <code> ManagedObjectReference [ ] createMORs ( ManagedObject [ ] mos ) { ,if ( mos == null ) { throw new IllegalArgumentException ( ) ; } ManagedObjectReference [ ] mors = new ManagedObjectReference [ mos . length ] ; for ( int i = 0 ; i < mos . length ; i ++ ) { mors [ i ] = mos [ i ] . getMOR ( ) ; } return mors ; }
Returns instance of the RunOptions. <code> RunOptions getInstance ( ) { ,if ( instance == null ) { instance = new RunOptions ( ) ; } return instance ; }
"Verify if its FLOAT, REAL or DOUBLE. <code> boolean isFloatingType ( int type ) { ",switch ( type ) { case Types . FLOAT : case Types . REAL : case Types . DOUBLE : return true ; default : return isNumericType ( type ) ; } }
"Returns the method call which is on the top of the stack, or null if there's no such element. <code> Expression getEnclosingMethodCall ( ) { ",if ( enclosingMethodCalls . isEmpty ( ) ) return null ; return enclosingMethodCalls . getFirst ( ) ; }
Returns the compile data for a crosstab. <code> Serializable getCrosstabCompileData ( JRCrosstab crosstab ) { ,"Serializable compileData = crosstabCompileData . get ( Integer . valueOf ( crosstab . getId ( ) ) ) ; if ( compileData == null ) { throw new JRException ( EXCEPTION_MESSAGE_KEY_COMPILE_DATA_FOR_CROSSTAB_NOT_FOUND , ( Object [ ] ) null ) ; } return compileData ; }"
Converts the volume as read as the progress from a SeekBar scaled to 100 and as saved in UserPreferences to the format taken by setVolume methods. <code> float getVolumeFromPercentage ( int progress ) { ,if ( progress == 100 ) return 1f ; return ( float ) ( 1 - ( Math . log ( 101 - progress ) / Math . log ( 101 ) ) ) ; }
"Determines the position of the previous break before the start index on an element list. <code> int determinePreviousBreak ( List elems , int startIndex ) { ",int prevBreak = startIndex - 1 ; while ( prevBreak >= 0 ) { KnuthElement el = ( KnuthElement ) elems . get ( prevBreak ) ; if ( el . isPenalty ( ) && el . getPenalty ( ) < KnuthElement . INFINITE ) { break ; } prevBreak -- ; } return prevBreak ; }
Writes an integer as a typed bytes sequence. <code> void writeInt ( int i ) { ,out . write ( Type . INT . code ) ; out . writeInt ( i ) ; }
"Based on the mesh type, chooses the proper way to see if the point is inside the marker mesh.It is assumed that the ""grid"" being tested is located at 0,0 and its dimensions are 2radius. <code> boolean isInMesh ( float x , float y , float radius , TerrainTool . Meshes mesh ) { ","switch ( mesh ) { case Box : return isInBox ( x , y , radius ) ; case Sphere : return isInRadius ( x , y , radius ) ; default : throw new IllegalArgumentException ( ""Unkown mesh type "" + mesh ) ; } }"
Remove all whitespace characters from a string <code> CharSequence removeAllWhitespace ( final CharSequence value ) { ,if ( containsWhitespace ( value ) ) { final StringBuffer sb = new StringBuffer ( value . length ( ) ) ; for ( int i = 0 ; i < value . length ( ) ; i ++ ) { final char c = value . charAt ( i ) ; if ( c > 32 || ! C0WHITE [ c ] ) { sb . append ( c ) ; } } return sb ; } return value ; }
Returns an autonomous command based on the name (the unique identifier) of it. <code> Command getAutonomousCommand ( String name ) { ,"for ( CustomEntry < String , Command > entry : autonomousCommands ) if ( entry . getKey ( ) . equals ( name ) ) return entry . getValue ( ) ; return DEFAULT_AUTO . getValue ( ) ; }"
Find all view instances. <code> List < RemoteAmbariClusterEntity > findAll ( ) { ,"TypedQuery < RemoteAmbariClusterEntity > query = entityManagerProvider . get ( ) . createNamedQuery ( ""allRemoteAmbariClusters"" , RemoteAmbariClusterEntity . class ) ; return query . getResultList ( ) ; }"
Gets the current settings of this object. <code> String [ ] getOptions ( ) { ,"Vector result ; result = new Vector ( ) ; result . add ( ""-W"" ) ; result . add ( getClassname ( ) ) ; return ( String [ ] ) result . toArray ( new String [ result . size ( ) ] ) ; }"
Get the singleton instance of this provider <code> EquinoxSecureStorageProvider getInstance ( ) { ,if ( instance == null ) { instance = new EquinoxSecureStorageProvider ( ) ; } return instance ; }
"Checks for valid file name, and converts illegal character to ""_"" character <code> String getValidFileName ( String name ) { ","if ( ! StringUtils . isSet ( name ) ) { return ""untitled"" ; } return name . replaceAll ( ""[^a-zA-Z0-9]"" , ""_"" ) ; }"
"returns the specified property from the specified file <code> Integer getIntConfigParameter ( String filename , String property ) { ",try { return new Integer ( getProp ( filename ) . getProperty ( property ) ) ; } catch ( IOException e ) { e . printStackTrace ( ) ; } return null ; }
Find the number of decimal places represented in the String <code> int getDecimalPlaces ( String inString ) { ,"if ( inString == null || inString . equals ( """" ) ) { return 0 ; } int places = 0 ; final int sLen = inString . length ( ) ; for ( int i = sLen - 1 ; i >= 0 ; i -- ) { char c = inString . charAt ( i ) ; if ( c >= '0' && c <= '9' ) { places ++ ; } else { return places ; } } return 0 ; }"
"Retrieves the value of the given key from the ERXSystem properties store, return defaultValue if the key does not exist. <code> String getProperty ( String key , String defaultValue ) { ",String value = ERXSystem . getProperty ( key ) ; return value == null ? defaultValue : value ; }
Returns the total number of rows requested by each child line <code> int getRowsRequested ( ) { ,int count = 0 ; for ( AccountingLineViewLineFillingElement line : lines ) { count += line . getRequestedRowCount ( ) ; } return count ; }
"Given a new variable name, lookup the source name, may return null if it's not found. <code> String lookupSourceName ( String newName ) { ",initReverseMap ( ) ; return reverseMap . get ( newName ) ; }
Get the Thread Context Loader which is a JDK 1.2 feature. If we are running under JDK 1.1 or anything else goes wrong the method returns null. <code> ClassLoader getTCL ( ) { ,"Method method = null ; try { method = Thread . class . getMethod ( ""getContextClassLoader"" , ( Class < ? > [ ] ) null ) ; } catch ( NoSuchMethodException e ) { return null ; } return ( ClassLoader ) method . invoke ( Thread . currentThread ( ) , ( Object [ ] ) null ) ; }"
Extracts all notifiers from all notifications contained in the SourcedNotification. <code> Set getAllNotifiers ( SourcedNotification sn ) { ,Collection notifications = sn . getNotifications ( ) ; Set rv = new HashSet ( notifications . size ( ) ) ; Iterator itor = notifications . iterator ( ) ; while ( itor . hasNext ( ) ) { Notification noti = ( Notification ) itor . next ( ) ; rv . add ( noti . getNotifier ( ) ) ; } return rv ; }
Create a SynapseController instance based on information in the ServerConfigurationInformation <code> SynapseController createSynapseController ( ServerConfigurationInformation information ) { ,validate ( information ) ; return loadSynapseController ( information ) ; }
Returns ViewState ID which is suitable for current JSF implementation. <code> String getViewStateId ( FacesContext context ) { ,if ( JsfVersion . getCurrent ( ) . isCompliantWith ( JSF_2_2 ) ) { return generateUniqueViewStateId ( context ) ; } return PartialResponseWriter . VIEW_STATE_MARKER ; }
"updates the status table to keep track of key placement status <code> void updateSystemStatus ( HostSystem hostSystem , Long userId ) { ","Connection con = null ; try { con = DBUtils . getConn ( ) ; updateSystemStatus ( con , hostSystem , userId ) ; } catch ( Exception e ) { e . printStackTrace ( ) ; } DBUtils . closeConn ( con ) ; }"
"Create a test event <code> TimelineEvent createEvent ( long timestamp , String type , Map < String , Object > info ) { ",TimelineEvent event = new TimelineEvent ( ) ; event . setTimestamp ( timestamp ) ; event . setEventType ( type ) ; event . setEventInfo ( info ) ; return event ; }
Closes a group of SequenceFile readers. <code> void closeReaders ( SequenceFile . Reader [ ] readers ) { ,if ( readers != null ) { for ( int i = 0 ; i < readers . length ; i ++ ) { SequenceFile . Reader reader = readers [ i ] ; if ( reader != null ) { reader . close ( ) ; } } } }
Check if the current user is an registered user based on request <code> boolean isRegisteredUser ( HttpServletRequest request ) { ,"if ( request == null ) { throw new IllegalArgumentException ( ""The request cannot be null."" ) ; } Actor actor = ActorStateUtility . retrieveActorFromRequest ( request ) ; boolean isRegisteredUser = isRegisteredUser ( actor ) ; return isRegisteredUser ; }"
A helper method to return the StreamCaching instance for a given list of interceptors <code> StreamCaching getStreamCaching ( List < InterceptStrategy > interceptors ) { ,for ( InterceptStrategy interceptStrategy : interceptors ) { if ( interceptStrategy instanceof StreamCaching ) { return ( StreamCaching ) interceptStrategy ; } } return null ; }
"convert a given old datanode to new datanode <code> DataNode convertDataNode ( DataTree dt , DataNode parent , DataNodeV1 oldDataNode ) { ","StatPersisted stat = convertStat ( oldDataNode . stat ) ; DataNode dataNode = new DataNode ( parent , oldDataNode . data , dt . convertAcls ( oldDataNode . acl ) , stat ) ; dataNode . setChildren ( oldDataNode . children ) ; return dataNode ; }"
Returns an EncryptionZone representing the ez for a given path. Returns an empty marker EncryptionZone if path is not in an ez. <code> EncryptionZone getEZINodeForPath ( INodesInPath iip ) { ,"final EncryptionZoneInt ezi = getEncryptionZoneForPath ( iip ) ; if ( ezi == null ) { return null ; } else { return new EncryptionZone ( ezi . getINodeId ( ) , getFullPathName ( ezi ) , ezi . getSuite ( ) , ezi . getVersion ( ) , ezi . getKeyName ( ) ) ; } }"
Add a new connection to this repository for the current user. <code> void addConnection ( Connection < ? > connection ) { ,"try { ConnectionData data = connection . createData ( ) ; int rank = connService . getMaxRank ( userId , data . getProviderId ( ) ) ; connService . create ( userId , connection , rank ) ; } catch ( DuplicateKeyException e ) { throw new DuplicateConnectionException ( connection . getKey ( ) ) ; } }"
Create a new session factory. <code> SessionFactory newFactory ( ) { ,final ServiceLoader < SessionFactory > sessionFactory = ServiceLoader . load ( SessionFactory . class ) ; final Iterator < SessionFactory > itr = sessionFactory . iterator ( ) ; if ( itr . hasNext ( ) ) { return itr . next ( ) ; } else { return null ; } }
Moves the cursor to the next position and returns its Object. <code> T getNext ( ) { ,if ( mCursor . move ( 1 ) ) { return getParsedObject ( ) ; } else { return null ; } }
Gets the settings as string. <code> String getSettingsAsString ( ) { ,"if ( present == null ) { return """" ; } StringBuffer ret = new StringBuffer ( ) ; for ( String s : present ) { ret . append ( s ) ; ret . append ( ';' ) ; } return ret . toString ( ) ; }"
Tests if the directory contains the essential root file for a Daisy book Currently it's limited to checking for Daisy 2.02 books. <code> boolean folderContainsDaisy2_02Book ( File folder ) { ,"if ( ! folder . isDirectory ( ) ) { return false ; } if ( new File ( folder , ""ncc.html"" ) . exists ( ) ) { return true ; } if ( new File ( folder , ""NCC.HTML"" ) . exists ( ) ) { return true ; } return false ; }"
This method is used to add an entry to the cache hash. <code> void appendEntry ( final CacheEntry value ) { ,"CacheEntry ce = map . get ( value . getUrl ( ) ) ; if ( ce == null ) { map . put ( value . getUrl ( ) , value ) ; } else { ce . setBody ( value . getBody ( ) ) ; ce . setHeaders ( value . getHeaders ( ) ) ; } }"
Encodes a char value as a big-endian 16-bit integer into a 2-byte buffer and returns the buffer. <code> byte [ ] encodeChar ( char value ) { ,"byte [ ] buffer = new byte [ 2 ] ; encodeChar ( value , buffer , 0 ) ; return buffer ; }"
"Creates the singleton used by the native-side NetworkChangeNotifier. <code> NetworkChangeNotifier createInstance ( Context context , int nativeChangeNotifier ) { ","assert sInstance == null ; sInstance = new NetworkChangeNotifier ( context , nativeChangeNotifier ) ; return sInstance ; }"
"Returns the ""localname"" part of a QName, which is the whole name if it has no prefix. <code> String getLocalName ( Element element ) { ",String name = element . getTagName ( ) ; if ( name . indexOf ( ':' ) > 0 ) { name = name . substring ( name . indexOf ( ':' ) + 1 ) ; } return name ; }
"Returns the RoomLink Entity with the corresponding room name, for the current room only. Null if there is no such RoomLink. <code> RoomLink getRoomLink ( String roomName ) { ",for ( Entity e : getEntities ( ) ) if ( e instanceof RoomLink ) { RoomLink r = ( RoomLink ) e ; if ( r . roomName ( ) . equals ( roomName ) ) return r ; } return null ; }
"Get the value of an annotation field. <code> T getAnnotationField ( Annotation annotation , String fieldName , T defaultValue ) { ","T methodResult = null ; if ( annotation != null ) methodResult = ReflectionUtils . invokeMethod ( annotation , fieldName ) ; return methodResult != null ? methodResult : defaultValue ; }"
Removes the header on the FAULT message (FAULT must be OUT) <code> Processor removeFaultHeader ( final String name ) { ,"return new Processor ( ) { public void process ( Exchange exchange ) { exchange . getOut ( ) . setFault ( true ) ; exchange . getOut ( ) . removeHeader ( name ) ; } @ Override public String toString ( ) { return ""removeFaultHeader("" + name + "")"" ; } } ; }"
Get the interval from the last lap start time to the current time as a text string and reset the lap start time. <code> String getLapTimeText ( String text ) { ,"long time = getLapTime ( ) ; return getText ( time , text ) ; }"
Given an integer string if it's a valid int (see isValidInt) it converts it into an integer otherwise it throws an exception <code> int toInteger ( @ Nullable final String integerStr ) { ,if ( ! isValidInt ( integerStr ) ) { throw new IllegalArgumentException ( integerStr + ExceptionValues . EXCEPTION_DELIMITER + ExceptionValues . INVALID_INTEGER_VALUE ) ; } final String stripedInteger = StringUtils . strip ( integerStr ) ; return NumberUtils . createInteger ( stripedInteger ) ; }
"Returns a scaling transform: [ sx 0 0 ] [ 0 sy 0 ] [ 0 0 1 ] <code> AffineTransform getScaleInstance ( double sx , double sy ) { ","AffineTransform t = new AffineTransform ( ) ; t . setToScale ( sx , sy ) ; return t ; }"
"Renders the Table header border, based on the map of provided headers. <code> String getHeaderBorder ( Map < Integer , TableHeader > headers ) { ","final StringBuilder headerBorder = new StringBuilder ( ) ; for ( TableHeader header : headers . values ( ) ) { headerBorder . append ( CommonUtils . padRight ( ""  "" , header . getWidth ( ) + 2 , '-' ) ) ; } headerBorder . append ( "" "" ) ; return headerBorder . toString ( ) ; }"
A parallel unsized stream of longs generates at least 100 values <code> void testUnsizedLongsCount ( ) { ,"LongAdder counter = new LongAdder ( ) ; Random r = new Random ( ) ; long size = 100 ; r . longs ( ) . limit ( size ) . parallel ( ) . forEach ( x -> { counter . increment ( ) ; } ) ; assertEquals ( counter . sum ( ) , size ) ; }"
Creates a singleton instance of the AsyncController <code> AsyncController getInstance ( ) { ,if ( INSTANCE == null ) { INSTANCE = new AsyncController ( ) ; } return INSTANCE ; }
"Returns the declaration of a name within all active scopes and within a specified namespace. <code> Decl fndDecl ( String nameSpace , String name ) { ",LinkedList < ScopedDecl > scopedDecls = symbolTable . get ( nameSpace + name ) ; if ( ( scopedDecls == null ) || ( scopedDecls . isEmpty ( ) ) ) throw new CannotFndNameDecl ( nameSpace + name ) ; else return scopedDecls . peekFirst ( ) . decl ; }
newline and indent by current indentation level <code> void lnIndent ( ) { ,printLn ( ) ; out . print ( indent ) ; }
"Returns all the current alive and successful containers for the given profile which have completed provisioning <code> List < Container > aliveAndSuccessfulContainersForProfile ( String profile , FabricService fabricService ) { ","Container [ ] allContainers = fabricService . getContainers ( ) ; return aliveAndSuccessfulContainersForProfile ( profile , allContainers ) ; }"
Utility method to convert JMX constructor info instances to Flash friendly constructor info instances. <code> MBeanConstructorInfo [ ] convertConstructors ( javax . management . MBeanConstructorInfo [ ] source ) { ,MBeanConstructorInfo [ ] constructors = new MBeanConstructorInfo [ source . length ] ; for ( int i = 0 ; i < source . length ; i ++ ) { constructors [ i ] = new MBeanConstructorInfo ( source [ i ] ) ; } return constructors ; }
Removes a listener from the list that's notified each time a change to the data model occurs. <code> void removeListDataListener ( final ListDataListener l ) { ,listdatalistener . remove ( l ) ; tempListeners = null ; }
"Return an array of DownloadRuntime objects which match the given attributes <code> DownloadRuntime [ ] findDownloadRuntimes ( String wtpId , String subType , String beginVersion , boolean bInclusive , String endVersion , boolean eInclusive , IProgressMonitor monitor ) { ","RuntimeRangeRepresentation rep = new RuntimeRangeRepresentation ( wtpId , subType , beginVersion , bInclusive , endVersion , eInclusive ) ; return findDownloadRuntimes ( rep , monitor ) ; }"
Returns the buffering capabilities of this configuration. <code> BufferCapabilities getBufferCapabilities ( ) { ,"if ( imageCapabilities == null ) getImageCapabilities ( ) ; if ( bufferCapabilities == null ) bufferCapabilities = new BufferCapabilities ( imageCapabilities , imageCapabilities , null ) ; return bufferCapabilities ; }"
Returns a string representation of this object; useful for testing and debugging. <code> String toString ( ) { ,"StringBuilder sb = new StringBuilder ( ) ; sb . append ( ""{"" ) ; if ( getS3Bucket ( ) != null ) sb . append ( ""S3Bucket: "" + getS3Bucket ( ) + "","" ) ; if ( getS3Key ( ) != null ) sb . append ( ""S3Key: "" + getS3Key ( ) ) ; sb . append ( ""}"" ) ; return sb . toString ( ) ; }"
Remove from the beginning of the list in O(1) <code> Node < MyType > removeFirst ( ) { ,if ( head == null ) return null ; Node < MyType > temp = head ; if ( head . next == null ) { head = null ; tail = null ; return temp ; } head = head . next ; head . prev = null ; return temp ; }
"Add an output file <code> void addOutputFile ( SourceFile source , String output ) { ","PackageNode pkg = source . package_ ( ) ; String key = pkg == null ? """" : pkg . package_ ( ) . get ( ) . fullName ( ) . toString ( ) + ""."" ; key += source . source ( ) . name ( ) . substring ( 0 , source . source ( ) . name ( ) . lastIndexOf ( "".x10"" ) ) ; key = key . replace ( '.' , File . separatorChar ) ; addOutputFile ( key , output ) ; }"
This static method will extract the SqlFunction inside the given SqlFunction if the given SqlFunction is wrapped in DrillCalciteSqlFunctionWrapper and will just return the given SqlFunction if it is not wrapped. <code> SqlFunction extractSqlOperatorFromWrapper ( final SqlFunction sqlFunction ) { ,if ( sqlFunction instanceof DrillCalciteSqlWrapper ) { return ( SqlFunction ) ( ( DrillCalciteSqlWrapper ) sqlFunction ) . getOperator ( ) ; } else { return sqlFunction ; } }
"Called when a Chapter is written. position will hold the height at which the chapter will be written to. <code> void onChapter ( PdfWriter writer , Document document , float paragraphPosition , Paragraph title ) { ","PdfPageEvent event ; for ( Iterator i = events . iterator ( ) ; i . hasNext ( ) ; ) { event = ( PdfPageEvent ) i . next ( ) ; event . onChapter ( writer , document , paragraphPosition , title ) ; } }"
Returns a string representation of this object; useful for testing and debugging. <code> String toString ( ) { ,"StringBuilder sb = new StringBuilder ( ) ; sb . append ( ""{"" ) ; if ( alarmHistoryItems != null ) sb . append ( ""AlarmHistoryItems: "" + alarmHistoryItems + "", "" ) ; if ( nextToken != null ) sb . append ( ""NextToken: "" + nextToken + "", "" ) ; sb . append ( ""}"" ) ; return sb . toString ( ) ; }"
Set Sub Protocol request list. <code> void setSubProtocols ( String ... protocols ) { ,"subProtocols . clear ( ) ; Collections . addAll ( subProtocols , protocols ) ; }"
"GWT safe version of Arrays.copyOf. <code> T [ ] arraysCopyOf ( T [ ] original , int newLength ) { ","T [ ] copy = newArray ( original , newLength ) ; System . arraycopy ( original , 0 , copy , 0 , Math . min ( original . length , newLength ) ) ; return copy ; }"
Initializes the target data line. <code> void initTargetDataLine ( ) { ,"DataLine . Info dataLineInfo = new DataLine . Info ( TargetDataLine . class , getAudioFormat ( ) ) ; try { setTargetDataLine ( ( TargetDataLine ) AudioSystem . getLine ( dataLineInfo ) ) ; } catch ( LineUnavailableException e ) { e . printStackTrace ( ) ; return ; } }"
Sets up the IsElementOf processors. <code> void setUp ( ) { ,"processor = new IsElementOf ( input ) ; chainedProcessor = new IsElementOf ( input , new IdentityTransform ( ) ) ; }"
Get the password of HTTPS proxy <code> String getHttpPassword ( ) { ,ProxyPreference preference = getProxyDao ( ) . get ( ProxyKey . HTTP_PASSWORD ) ; return preference != null ? preference . getValue ( ) : StringUtils . EMPTY ; }
generate token with format %phoneNumber% <code> String generateApiToken ( String phoneNumber ) { ,"String token = """" ; int mid = r . nextInt ( 10 ) ; for ( int i = 0 ; i < 10 ; i ++ ) { token += stringPool . charAt ( r . nextInt ( stringPool . length ( ) ) ) ; if ( i == mid ) token += phoneNumber ; } return token ; }"
"Decompress an integer array using Simple16 <code> int s16Decompress ( final int [ ] out , final int outOffset , final int [ ] in , final int inOffset , final int n ) { ","int numIdx , j = 0 , bits = 0 ; numIdx = in [ inOffset ] >>> S16_BITSSIZE ; final int num = S16_NUM [ numIdx ] < n ? S16_NUM [ numIdx ] : n ; for ( j = 0 , bits = 0 ; j < num ; j ++ ) { out [ outOffset + j ] = readBitsForS16 ( in , inOffset , bits , S16_BITS [ numIdx ] [ j ] ) ; bits += S16_BITS [ numIdx ] [ j ] ; } return num ; }"
"Get the StringManager for a particular package. If a manager for a package already exists, it will be reused, else a new StringManager will be created and returned. <code> StringManager getManager ( String packageName ) { ","StringManager mgr = ( StringManager ) managers . get ( packageName ) ; if ( mgr == null ) { mgr = new StringManager ( packageName ) ; managers . put ( packageName , mgr ) ; } return mgr ; }"
"Return if the candidate is in the same primary country as any of the places already picked <code> boolean inSameCountry ( ResolvedLocation candidate , List < ResolvedLocation > placesAlreadyPicked ) { ","for ( ResolvedLocation selected : placesAlreadyPicked ) { if ( inSameCountry ( candidate , selected ) ) { return true ; } } return false ; }"
"null and Exception safe; drills through accessibility issues <code> Object getValue ( Field field_ , Object target_ ) { ","if ( ( field_ == null ) || ( target_ == null ) ) return null ; try { if ( ! field_ . isAccessible ( ) ) field_ . setAccessible ( true ) ; return field_ . get ( target_ ) ; } catch ( Exception e_ ) { LOG . error ( null , e_ ) ; return null ; } }"
"Writes a specific short value (2 bytes) to the output stream. <code> void writeShort ( OutputStream out , short v ) { ",out . write ( ( byte ) ( 0xff & ( v >> 8 ) ) ) ; out . write ( ( byte ) ( 0xff & v ) ) ; }
This is the override of super method. <code> boolean isValid ( Field f ) { ,for ( Filter filter : filterList ) { if ( ! filter . isValid ( f ) ) return false ; } return true ; }
Provides a default configuration (TikaConfig). Currently creates a new instance each time it's called; we may be able to have it return a shared instance once it is completely immutable. <code> TikaConfig getDefaultConfig ( ) { ,"try { return new TikaConfig ( ) ; } catch ( IOException e ) { throw new RuntimeException ( ""Unable to read default configuration"" , e ) ; } catch ( TikaException e ) { throw new RuntimeException ( ""Unable to access default configuration"" , e ) ; } }"
Groups array to json object. <code> Object groupsArrayToJsonObject ( Group [ ] groups ) { ,"JSONObject groupO = new JSONObject ( ) ; for ( int i = 0 ; i < groups . length ; i ++ ) { groupO . put ( groups [ i ] . getId ( ) + """" , groups [ i ] . toJsonObject ( ) ) ; } return groupO ; }"
Validates that a server URL is in the correct format. <code> boolean isValidServerURL ( String serverURL ) { ,boolean valid = true ; try { new TeiidURL ( serverURL ) ; } catch ( Exception e ) { valid = false ; } return valid ; }
Returns the picture for this Card. <code> ImageIcon getPicture ( ) { ,"try { return new ImageIcon ( GUI . class . getResource ( ""images/"" + id + "".jpg"" ) ) ; } catch ( Exception ex ) { return new ImageIcon ( GUI . class . getResource ( ""images/blank.jpg"" ) ) ; } }"
Removes the specific collection of locations from this argument. <code> void removeLocs ( Collection < PBLoc > locs ) { ,"l_locs . removeAll ( locs ) ; if ( ! l_locs . isEmpty ( ) ) l_locs . get ( 0 ) . type = """" ; }"
Returns the volume label that is stored in this directory. Reading the volume label is only supported for the root directory. <code> String getLabel ( ) { ,checkRoot ( ) ; return volumeLabel ; }
Checks if the string is PrintableString (see X.680) <code> boolean isPrintableString ( String str ) { ,for ( int i = 0 ; i < str . length ( ) ; ++ i ) { char ch = str . charAt ( i ) ; if ( ! ( ch == 0x20 || ch >= 0x27 && ch <= 0x29 || ch >= 0x2B && ch <= 0x3A || ch == '=' || ch == '?' || ch >= 'A' && ch <= 'Z' || ch >= 'a' && ch <= 'z' ) ) { return false ; } } return true ; }
"Finds a reverse rotation to the specified one. Any side transformed by the rotation passed as a parameter, when passed to the returned rotation will return the original Side. <code> Rotation findReverse ( Rotation rotation ) { ",Preconditions . checkNotNull ( rotation ) ; return REVERSE_ROTATIONS_MAP . get ( rotation ) ; }
Asserts that the current response was redirected and returns the prior response. <code> RecordedResponse priorResponse ( ) { ,"Response priorResponse = response . priorResponse ( ) ; assertNotNull ( priorResponse ) ; assertNull ( priorResponse . body ( ) ) ; return new RecordedResponse ( priorResponse . request ( ) , priorResponse , null , null , null ) ; }"
List all available products in the store <code> Product [ ] listProducts ( ) { ,"String response = mApiInterface . listProducts ( ) ; return new Gson ( ) . fromJson ( response , Product [ ] . class ) ; }"
This method is used to retrieve a linked list of field identifiers indicating the fields present in a task record. <code> int [ ] getModel ( ) { ,m_fields [ m_count ] = - 1 ; return ( m_fields ) ; }
Unmerges the specified cells. The Range passed in should be one that has been previously returned as a result of the getMergedCells method <code> void unmergeCells ( Range r ) { ,int index = ranges . indexOf ( r ) ; if ( index != - 1 ) { ranges . remove ( index ) ; } }
"Given a user id and a list of movies, it takes out those movies which have been rated by the user. Non-volatile to parameters. <code> ArrayList < Item > getUnratedMovies ( int uid , ArrayList < Item > movies ) { ","ArrayList < Item > unrated = new ArrayList < Item > ( ) ; for ( Item i : movies ) { if ( mh . getRating ( uid , i . getIdAsInt ( ) ) < 0 ) { unrated . add ( i ) ; } } return unrated ; }"
"Double rotate binary tree node: first left child with its right child; then node k3 with new left child. For AVL trees, this is a double rotation for case 2. Update heights, then return new root. <code> AvlNode doubleWithLeftChild ( final AvlNode k3 ) { ",k3 . left = AvlTree . rotateWithRightChild ( k3 . left ) ; return AvlTree . rotateWithLeftChild ( k3 ) ; }
"Formats message by adding Array of arguments <code> String getMessage ( ResourceBundle messages , String messageKey , Object msgArgs [ ] ) { ","for ( int i = 0 ; i < msgArgs . length ; i ++ ) { if ( msgArgs [ i ] == null ) msgArgs [ i ] = """" ; } MessageFormat formatter = new MessageFormat ( messages . getString ( messageKey ) ) ; return formatter . format ( msgArgs ) ; }"
Convert unixtime into date <code> Date unixtimeToDate ( long millis ) { ,if ( millis == 0 ) return null ; return new Date ( millis ) ; }
Gets the date and time for the end of the Assertion time interval in as specified by SAML v2.0 section 2.5.1. <code> String getNotOnOrAfterDateAndTime ( ) { ,"Calendar afterCal = Calendar . getInstance ( ) ; afterCal . add ( Calendar . MINUTE , ASSERTION_NOT_ON_OR_AFTER_MINUTES ) ; return DATE_TIME_FORMAT . format ( afterCal . getTime ( ) ) ; }"
"call before invoke the request <code> void beforeCall ( URL url , Request request ) { ","String uri = url . getUri ( ) ; onBeforeCall ( getServiceStat ( uri ) ) ; onBeforeCall ( getMethodStat ( uri , request . getMethodName ( ) , request . getParamtersDesc ( ) ) ) ; }"
Test node logic emits correct results <code> void testNodeProcessing ( ) { ,"testNodeProcessingSchema ( new InsertSort < Integer > ( ) , ""Integer"" ) ; testNodeProcessingSchema ( new InsertSort < Double > ( ) , ""Double"" ) ; testNodeProcessingSchema ( new InsertSort < Float > ( ) , ""Float"" ) ; testNodeProcessingSchema ( new InsertSort < String > ( ) , ""String"" ) ; }"
"Fetch an ImageIcon relative to the calling location. <code> ImageIcon getImageIcon ( String location , String description ) { ","if ( location . startsWith ( RESOURCE_URL ) == false ) { location = RESOURCE_URL + location ; } final URL iconURL = IconUtilitities . class . getResource ( location ) ; if ( iconURL == null ) { return null ; } return new ImageIcon ( iconURL , description ) ; }"
Lazily create and configure the facade. <code> DbFacade getDbFacade ( ) { ,if ( dbFacade == null ) { synchronized ( DbFacadeLocator . class ) { if ( dbFacade == null ) { dbFacade = createDbFacade ( ) ; } } } return dbFacade ; }
method which opens a new SpreadsheetDocument <code> XSpreadsheetDocument createCalcDoc ( String frameName ) { ,"XComponent oDoc = openDoc ( ""scalc"" , frameName ) ; if ( oDoc != null ) { DesktopTools . bringWindowToFront ( oDoc ) ; return UnoRuntime . queryInterface ( XSpreadsheetDocument . class , oDoc ) ; } else { return null ; } }"
"Create the specified topic. <code> void createTopic ( String topic , int numPartitions , int replicationFactor ) { ","RackAwareMode rackAwareMode = null ; AdminUtils . createTopic ( getZkUtils ( ) , topic , numPartitions , replicationFactor , new Properties ( ) , rackAwareMode ) ; }"
"Test inverse transformation from ""real world"" coordinates to grid coordinates coordinate using the localization grid. <code> void testInverseTransform ( ) { ","final double [ ] array = getGridCoordinates ( true ) ; grid . getMathTransform ( ) . inverse ( ) . transform ( array , 0 , array , 0 , array . length / 2 ) ; compare ( array , false , EPS ) ; }"
Calculates the CRC64 checksum for the given data array. <code> long hashByAlgo1 ( final byte [ ] data ) { ,long sum = 0 ; for ( final byte b : data ) { final int lookupidx = ( ( int ) sum ^ b ) & 0xff ; sum = ( sum >>> 8 ) ^ LOOKUPTABLE [ lookupidx ] ; } return sum ; }
"This function is used to play a sound at a given location. <code> void playSound ( float posX , float posY , float posZ , boolean flag ) { ","if ( flag ) audio . playAsSoundEffect ( 1.0f , 1.0f , false , posX , posY , posZ ) ; else audio . playAsSoundEffect ( 1.0f , 1.0f , false ) ; }"
"Sends a command for a specified item to the event bus. <code> Object sendCommand ( Item item , Command command ) { ","EventPublisher publisher = ScriptActivator . eventPublisherTracker . getService ( ) ; if ( publisher != null && item != null ) { publisher . post ( ItemEventFactory . createCommandEvent ( item . getName ( ) , command ) ) ; } return null ; }"
"Extract measures from song for particular track <code> List < TGMeasure > extractMeasures_rtnMeas ( TGTrack t , int min , int max ) { ",List < TGMeasure > rtn = new ArrayList < TGMeasure > ( ) ; for ( int x = min ; x <= max ; x ++ ) { rtn . add ( t . getMeasure ( x ) ) ; } return rtn ; }
Returns the total amount of the currency in this balance. <code> BigDecimal getTotal ( ) { ,if ( total == null ) { return available . add ( frozen ) . subtract ( borrowed ) . add ( loaned ) . add ( withdrawing ) . add ( depositing ) ; } else { return total ; } }
Reads and validates the first line of a WebVTT file. <code> void validateWebvttHeaderLine ( ParsableByteArray input ) { ,"String line = input . readLine ( ) ; if ( line == null || ! HEADER . matcher ( line ) . matches ( ) ) { throw new SubtitleDecoderException ( ""Expected WEBVTT. Got "" + line ) ; } }"
Returns a Matcher that matches any function call that has the given number of arguments. <code> Matcher functionCallWithNumArgs ( final int numArgs ) { ,"return new Matcher ( ) { @ Override public boolean matches ( Node node , NodeMetadata metadata ) { return node . isCall ( ) && ( node . getChildCount ( ) - 1 ) == numArgs ; } } ; }"
"Create a basic subscription without marketdata semantics. <code> void createBasicSubscription ( final MamaBasicSubscriptionCallback callback , final MamaTransport transport , final MamaQueue queue , final String topic , final Object closure ) { ","myClosure = closure ; createNativeSubscription ( callback , transport , queue , topic , null ) ; }"
"Adds a menu item to the context menu. <code> MenuItem addItem ( String text , final Command command ) { ","MenuItem menuItem = new MenuItem ( text , new Command ( ) { @ Override public void execute ( ) { hide ( ) ; command . execute ( ) ; } } ) ; menuItem . setStylePrimaryName ( ""ode-ContextMenuItem"" ) ; menuBar . addItem ( menuItem ) ; return menuItem ; }"
Remove fractional part if V target is non Double/FLoat type <code> String removeFractionalPart ( String str ) { ,"if ( isFractionalType ( base ) & isNotFractionalType ( target ) ) return str . substring ( 0 , str . indexOf ( ""."" ) ) ; return str ; }"
Adds the value to the data set. <code> void addValue ( double v ) { ,"if ( size == value . length ) { value = Arrays . copyOf ( value , size * 2 ) ; } sorted = false ; value [ size ++ ] = v ; }"
"Gets the double property. <code> double getDoubleProperty ( final String xmlFileName , final String name , final double defaultValue , final String category ) { ","final double output = getXMLConfiguration ( xmlFileName ) . getDouble ( category + ""."" + name ) ; return output == 0 ? defaultValue : output ; }"
Calls requestLayout on layout parent associated with this constraint object. <code> void requestLayout ( ) { ,Iterator < Parent > nodeIter = impl_nodes . iterator ( ) ; while ( nodeIter . hasNext ( ) ) { nodeIter . next ( ) . requestLayout ( ) ; } }
Recursively fires create events for all children if recursive descent is enabled. Otherwise the create event is only fired for the initial File. <code> void _onFileCreateRecursive ( @ Nonnull final File aCreatedFile ) { ,m_aMonitor . onFileCreated ( aCreatedFile ) ; if ( m_aMonitor . isRecursive ( ) ) { final File [ ] aChildren = aCreatedFile . listFiles ( ) ; if ( aChildren != null ) for ( final File aChild : aChildren ) _onFileCreateRecursive ( aChild ) ; } }
"Gets the top offset from the top, left position of the page specified by this destination. <code> float getTop ( ) { ",if ( ! inited ) init ( ) ; return top ; }
Get container by id <code> Container getMandatoryContainer ( String containerIdOrName ) { ,"Container container = getContainer ( containerIdOrName ) ; if ( container == null ) { throw new DockerAccessException ( ""Cannot find container %s"" , containerIdOrName ) ; } return container ; }"
Add a short integer (2 bytes) to the message. <code> void appendInt ( int val ) { ,buf [ pos ++ ] = ( byte ) ( ( val >>> 8 ) & 0xFF ) ; buf [ pos ++ ] = ( byte ) ( val & 0xFF ) ; }
"Determine if the field accepts a string default value, this is only true for fields of type String or a sub-type of String <code> boolean acceptsStringInitialValue ( SootField field ) { ","if ( field . getType ( ) instanceof RefType ) { SootClass fieldClass = ( ( RefType ) field . getType ( ) ) . getSootClass ( ) ; return fieldClass . getName ( ) . equals ( ""java.lang.String"" ) ; } return false ; }"
Returns the id of the element that would be returned by a subsequent call to next. Returns null if the list iterator is at the end of the list. <code> Integer nextId ( ) { ,if ( hasNext ( ) ) return _nextNode . getValue ( ) . getId ( ) ; else return null ; }
"Appends new component names to the TOC component. <code> void appendTOC ( Descriptor descriptor , Collection < Component > components ) { ","File tocFile = new File ( descriptor . filenameFor ( Component . TOC ) ) ; try ( PrintWriter w = new PrintWriter ( new FileWriter ( tocFile , true ) ) ) { for ( Component component : components ) w . println ( component . name ) ; } catch ( IOException e ) { throw new FSWriteError ( e , tocFile ) ; } }"
Set the message explaining why the run has failed. <code> void setErrorMessage ( String aMessage ) { ,status = STATUS_ERROR ; message = aMessage ; }
"Unescapes any Java literals found in the String. For example, it will turn a sequence of '\' and 'n' into a newline character, unless the '\' is preceded by another '\'. <code> String unescapeJava ( String str ) { ","if ( str == null ) { return null ; } try { StringWriter writer = new StringWriter ( str . length ( ) ) ; unescapeJava ( writer , str ) ; return writer . toString ( ) ; } catch ( IOException ioe ) { throw new RuntimeException ( ioe ) ; } }"
"Assign a new path, or null to have none. <code> void setPath ( Path path , boolean forceClosed ) { ","mPath = path ; native_setPath ( native_instance , path != null ? path . ni ( ) : 0 , forceClosed ) ; }"
"Updates the given company; it checks that the company already exists. <code> Company updateCompany ( String companyId , Company company ) { ","Company existing = getCompany ( companyId ) ; if ( existing == null ) { throw new NotFoundException ( ""No company with id '"" + companyId + ""'"" ) ; } companies . put ( companyId , company ) ; return company ; }"
Returns the byte array resulting from converting this object to a structure usable by the system APIs. <code> byte [ ] toBytes ( ) { ,"byte [ ] buffer = new byte [ getByteLength ( ) ] ; toBytes ( buffer , 0 ) ; return buffer ; }"
"Register the given EventListener to the contest and event class. <code> void registerObserver ( Class < T > event , EventListener < ? > listener ) { ","Set < EventListener < ? >> observers = registrations . get ( event ) ; if ( observers == null ) { observers = new CopyOnWriteArraySet < EventListener < ? >> ( ) ; registrations . put ( event , observers ) ; } observers . add ( listener ) ; }"
Returns the number of calls made for the method described by the input parameter methodName. <code> int getNumberCallsMade ( String methodName ) { ,if ( callsMade . containsKey ( methodName ) ) { return callsMade . get ( methodName ) ; } else { return 0 ; } }
We return the cached memory to garbage collector. <code> void cleanCache ( ) { ,segHeader = null ; rectHeader = null ; }
Get VIEW intent to open browser to view given url <code> Intent getOpenUrlIntent ( String url ) { ,"Uri uri = Uri . parse ( url ) ; return new Intent ( Intent . ACTION_VIEW , uri ) ; }"
"Test of setDelegate method, of class CentroidBoundaryConstraint. <code> void testSetDelegate ( ) { ","BoundaryConstraint constraint = new ReinitialisationBoundary ( ) ; CentroidBoundaryConstraint instance = new CentroidBoundaryConstraint ( ) ; instance . setDelegate ( constraint ) ; Assert . assertEquals ( constraint , instance . delegate ) ; }"
Decides whether the filter should be applied. <code> boolean shouldFilter ( AppendingStringBuffer responseBuffer ) { ,"int min = Math . min ( 150 , responseBuffer . length ( ) ) ; String firstNChars = responseBuffer . substring ( 0 , min ) ; return firstNChars . contains ( XmlPartialPageUpdate . START_ROOT_ELEMENT ) ; }"
Checks to see if the thread is running <code> boolean isRunning ( ) { ,stateLock . readLock ( ) . lock ( ) ; try { return running ; } finally { stateLock . readLock ( ) . unlock ( ) ; } }
This is exactly same as DFS Traversal. <code> void preOrder ( Node root ) { ,"if ( root != null ) { System . out . print ( root . data + "" "" ) ; preOrder ( root . left ) ; preOrder ( root . right ) ; } }"
Convert a given comma delimited list of regular expressions into an array of String <code> String [ ] commaDelimitedListToStringArray ( final String commaDelimitedStrings ) { ,if ( Strings . isEmpty ( commaDelimitedStrings ) ) { return new String [ 0 ] ; } else { return commaSeparatedValuesPattern . split ( commaDelimitedStrings ) ; } }
Unmark a post as NSFW <code> boolean unmarkNSFW ( String fullName ) { ,"JSONObject object = ( JSONObject ) restClient . post ( ""id="" + fullName + ""&uh="" + user . getModhash ( ) , ApiEndpointUtils . SUBMISSION_UNMARK_AS_NSFW , user . getCookie ( ) ) . getResponseObject ( ) ; return object . toJSONString ( ) . length ( ) == 2 ; }"
"Get the item decay rate, which differs in difference subclass, and can be changed in run time by the user, so not a constant. <code> int forgetRate ( ) { ",if ( forgettingRate != null ) { return forgettingRate . get ( ) ; } return - 1 ; }
Run through the map and remove any references that have been null'd out by the GC. <code> void cleanNullReferences ( Class < T > clazz ) { ,"Map < Object , Reference < Object >> objectMap = getMapForClass ( clazz ) ; if ( objectMap != null ) { cleanMap ( objectMap ) ; } }"
"Get a specific IFDProtocol. <code> IFDProtocol getIFDProtocol ( AddonSpecification spec , String uri ) { ","Object protocolObject = getObject ( spec , uri ) ; if ( protocolObject == null || ! ( protocolObject instanceof IFDProtocol ) ) { return null ; } return ( IFDProtocol ) protocolObject ; }"
Find the maximum number in given array. Time Complexity: O(n) <code> int findMax ( final int [ ] a ) { ,"if ( a == null ) { throw new NullPointerException ( ) ; } if ( a . length == 0 ) { throw new IllegalArgumentException ( ""Array is empty"" ) ; } int max = a [ 0 ] ; for ( int i = 1 ; i < a . length ; i ++ ) { if ( max < a [ i ] ) { max = a [ i ] ; } } return max ; }"
"Registers resource within this session. <code> boolean registerResource ( long rsrcId , Closeable rsrc ) { ","Object old = rsrcMap . putIfAbsent ( rsrcId , rsrc ) ; return old == null ; }"
"Add ipaddress to blockList <code> void addIp ( String ip , SMTPSession session ) { ","long bTime = System . currentTimeMillis ( ) + blockTime ; session . getLogger ( ) . debug ( ""Add ip "" + ip + "" for "" + bTime + "" to blockList"" ) ; synchronized ( blockedIps ) { blockedIps . put ( ip , Long . valueOf ( bTime ) ) ; } }"
Check for the presence of all 'filter' facets in the spring definition. NB: These do not exist yet so the test is disabled. <code> void testFilterFacets ( ) { ,"File sourceFolder = new File ( ""code/src/java/pcgen/cdom/facet/filter"" ) ; checkFacetsDefined ( sourceFolder ) ; }"
Calculates a SHA1 digest for a string. <code> String getSha1Digest ( String content ) { ,"try { InputStream is = new ByteArrayInputStream ( content . getBytes ( ""UTF-8"" ) ) ; return getDigest ( ""SHA1"" , is ) ; } catch ( NoSuchAlgorithmException e ) { return null ; } catch ( UnsupportedEncodingException e ) { return null ; } }"
Returns the line number with the given tag <code> int getLineNumber ( String tag ) { ,"final Integer nr = tags . get ( tag ) ; if ( nr == null ) { throw new NoSuchElementException ( ""Unknown tag: "" + tag ) ; } return nr . intValue ( ) ; }"
Fix an absolute path. Some paths in some violations file contain a .. this causes grief. <code> String fixAbsolutePath ( String abs ) { ,"if ( abs . contains ( "".."" ) ) { return new File ( abs ) . getCanonicalPath ( ) ; } else { return abs ; } }"
This is used to extract information from the HTTP header that can be used to determine the type of the body. This will look at the HTTP headers provided to find a specific token which enables it to determine how to consume the body. <code> byte [ ] getBoundary ( Segment header ) { ,ContentType type = header . getContentType ( ) ; if ( type != null ) { String token = type . getParameter ( BOUNDARY ) ; if ( token != null ) { return token . getBytes ( ) ; } } return null ; }
Get the first selected character name <code> String getFirstSelection ( ) { ,if ( null == firstSelection ) { firstSelection = ( dataList . get ( 0 ) ) . getName ( ) ; } return firstSelection ; }
"Extracts the key which is mapped to tcomponent.xml. Added by Marvin Wang on Mar 26, 2013. <code> String extractKey ( int index ) { ",List < String > keys = extractListKeys ( ) ; if ( index < 0 ) { return null ; } return keys . get ( index ) ; }
Method used to supply connection to the server by passing the naming of the websocket endpoint <code> Session connectToServer ( Class < ? > endpoint ) { ,"WebSocketContainer container = ContainerProvider . getWebSocketContainer ( ) ; URI uri = new URI ( ""ws://"" + base . getHost ( ) + "":"" + base . getPort ( ) + base . getPath ( ) + ""encoder"" ) ; return container . connectToServer ( endpoint , uri ) ; }"
Normalizes a path string. <code> String normalizePath ( String path ) { ,"path = path . trim ( ) ; path = path . replace ( ""|"" , ""/"" ) ; path = path . replaceAll ( ""/+"" , ""/"" ) ; if ( ! path . equals ( SEPARATOR ) && ! path . matches ( ""/|p{Alpha}+:/"" ) && path . endsWith ( SEPARATOR ) ) { path = path . substring ( 0 , path . length ( ) - SEPARATOR . length ( ) ) ; } return path ; }"
Gets the value of the repeating property. <code> boolean isRepeating ( ) { ,if ( repeating == null ) { return false ; } else { return repeating ; } }
Adds a directory to the collection of module paths. <code> void addModuleDir ( final String moduleDir ) { ,"if ( moduleDir == null ) { throw LauncherMessages . MESSAGES . nullParam ( ""moduleDir"" ) ; } final Path path = Paths . get ( moduleDir ) . normalize ( ) ; modulesDirs . add ( path . toString ( ) ) ; }"
"Converts the handle. Handle need not exist, but must be a source reference. <code> IMember transplantHandle ( IMember handle ) { ","final LinkedList oldElements = new LinkedList ( ) ; addElements ( handle , oldElements ) ; final IMember [ ] newElements = convertElements ( ( IMember [ ] ) oldElements . toArray ( new IMember [ 0 ] ) ) ; return newElements [ newElements . length - 1 ] ; }"
Intantiates the static singleton field PERSON_DIR_NAME_FINDER_INSTANCE. Synchronized to guarantee singletonness of the field. <code> void storeSingleton ( ) { ,if ( PERSON_DIR_NAME_FINDER_INSTANCE == null ) { IPersonAttributeDao personAttributeDao = PersonAttributeDaoLocator . getPersonAttributeDao ( ) ; PERSON_DIR_NAME_FINDER_INSTANCE = new PersonDirNameFinder ( personAttributeDao ) ; } }
Returns a string representation of this object; useful for testing and debugging. <code> String toString ( ) { ,"StringBuilder sb = new StringBuilder ( ) ; sb . append ( ""{"" ) ; if ( getAttributeValue ( ) != null ) sb . append ( ""AttributeValue: "" + getAttributeValue ( ) ) ; sb . append ( ""}"" ) ; return sb . toString ( ) ; }"
"is colliding if the difference in positions is below the collision radius <code> boolean isColliding ( Entity entity , int time ) { ",if ( entity != null ) { Vector difference = nextPosition ( time ) . difference ( entity . nextPosition ( time ) ) . abs ( ) ; int collisionRadius = map . getTileDiameter ( ) ; return difference . X < collisionRadius && difference . Y < collisionRadius ; } return false ; }
"method to load user attributes in a map with filtering(AttributeQuery) <code> Map < String , String > getUserAttributes ( String user , String [ ] attributes , Object issuerConfig ) { ","List < SAMLAttributeFinder > finders = getAttributeFinders ( ) ; for ( SAMLAttributeFinder finder : finders ) { Map < String , String > attributeMap = finder . getAttributes ( user , attributes ) ; if ( attributeMap != null && attributeMap . size ( ) > 0 ) { return attributeMap ; } } return null ; }"
Gets the transform which is used for scaling typographical points to pixels in this FontRenderContext. <code> AffineTransform getTransform ( ) { ,if ( transform != null ) { return new AffineTransform ( transform ) ; } return new AffineTransform ( ) ; }
Use java.text.Normalizer to reduce LOCALE strings for comparing <code> String normalizeString ( String string ) { ,"String normalizedString = Normalizer . normalize ( string , Normalizer . Form . NFD ) ; String newString = normalizedString . replaceAll ( ""[^|p{ASCII}]"" , """" ) ; return newString ; }"
"An ""enter search"" model and view handles user data entry of a search <code> ModelAndView < EnterSearchModel , EnterSearchView > newEnterSearchMaV ( String panelName ) { ","EnterSearchModel model = new EnterSearchModel ( panelName ) ; EnterSearchView view = new EnterSearchView ( model ) ; return new ModelAndView < > ( model , view ) ; }"
"Returns the properties associated to this signal. <code> Map < String , Object > getProps ( ) { ","if ( props == null ) props = new HashMap < String , Object > ( ) ; return props ; }"
Get the transform from local coordinates into screen coordinates. <code> AffineTransform getScreenTransform ( ) { ,if ( ! _cacheValid ) { validateCache ( ) ; } return _screenTransform ; }
"the route of the url, if there is not router to process the url, return null <code> IRoute getRoute ( String url ) { ",for ( IRouter router : mRouters ) { if ( router . canOpenTheUrl ( url ) ) { return router . getRoute ( url ) ; } } throw new RouteNotFoundException ( url ) ; }
Gets the guilds that are subscribed to the specified team. <code> List < IGuild > getSubscribedGuilds ( Team team ) { ,return discordClient . getGuilds ( ) . stream ( ) . filter ( guild -> { if ( ! guildPreferences . containsKey ( guild . getID ( ) ) ) { return false ; } return guildPreferences . get ( guild . getID ( ) ) . getTeam ( ) == team ; } ) . collect ( Collectors . toList ( ) ) ; }
Modify the current clipping path by intersecting it with the given path. <code> void intersectClippingPath ( Region area ) { ,"if ( ! isClippingPathDirty ) { Region cloned = new Region ( area ) ; clippingPath = cloned ; isClippingPathDirty = true ; } clippingPath . op ( area , Region . Op . INTERSECT ) ; }"
Obtain the global transaction identifier for the current transaction. <code> XID getXID ( ) { ,Control control = null ; Coordinator coordinator = null ; control = getControl ( ) ; coordinator = getCoordinator ( control ) ; XID xid = getXID ( coordinator ) ; return xid ; }
Returns a new unique name for an index folder. <code> String newName ( ) { ,"dirty = true ; return ""_"" + Integer . toString ( counter ++ , Character . MAX_RADIX ) ; }"
"A ""wallet detail"" panel provides summary details of the current wallet <code> ModelAndView < WalletDetailModel , WalletDetailView > newWalletDetailMaV ( String panelName ) { ","WalletDetailModel model = new WalletDetailModel ( panelName ) ; WalletDetailView view = new WalletDetailView ( model ) ; return new ModelAndView < > ( model , view ) ; }"
"Replace or add a property to the suite for this run only. <code> void setTempProperty ( String key , String value ) { ","if ( properties == null ) { loadProperties ( ) ; } properties . setProperty ( key , value ) ; }"
Get the sample's father <code> Sample getFather ( Sample offSpring ) { ,String paternalID = offSpring . getPaternalID ( ) ; return null == paternalID ? null : samples . get ( paternalID ) ; }
"Identifies and returns the GeometryAttributeType, or null if none exists. <code> GeometryDescriptor getGeometryAttributeType ( ) { ",GeometryDescriptor result = null ; if ( isGeometry ( ) ) { result = ( GeometryDescriptor ) descriptor ; } return result ; }
Removes all call listeners from provided chat. <code> void stopListening ( Chat chat ) { ,"if ( chat != null ) { if ( callChatListener != null ) { callChatListener . stopListening ( chat ) ; } else { if ( logger != null ) logger . error ( ""Could not listen on chat, because a listener was null."" ) ; } } else { logChatError ( chat , new NullPointerException ( ) ) ; } }"
handle requests to sign the result <code> ModelAndView doSign ( final String testId ) { ,ServResults . resultSigned ( testId ) ; return new ModelAndView ( ) ; }
Returns the identifier of the infrastructure device if the connection point belongs to a network element which is indeed an infrastructure device. <code> DeviceId deviceId ( ) { ,"if ( elementId instanceof DeviceId ) { return ( DeviceId ) elementId ; } throw new IllegalStateException ( ""Connection point not associated "" + ""with an infrastructure device"" ) ; }"
"Internally used to look up the after-liveness information for the given variable on edges of the given label, or the merged after-result, if there are no edges with that label. <code> LiveVariableLE getAfterResult ( TACInstruction instr , Variable x , ILabel label ) { ","IResult < TupleLatticeElement < Variable , LiveVariableLE >> after = livenessAnalysis . getLabeledResultsAfter ( instr ) ; LiveVariableLE result ; if ( after . keySet ( ) . contains ( label ) ) { result = after . get ( label ) . get ( x ) ; } else result = livenessAnalysis . getResultsAfter ( instr ) . get ( x ) ; return result ; }"
Returns the quasi identifying attributes. <code> Set < String > getQuasiIdentifyingAttributes ( ) { ,"final Set < String > result = new HashSet < String > ( ) ; for ( final Entry < String , AttributeType > entry : attributeTypes . entrySet ( ) ) { if ( entry . getValue ( ) . getType ( ) == AttributeType . ATTR_TYPE_QI ) { result . add ( entry . getKey ( ) ) ; } } return result ; }"
"OutputStream out will get: ushort nChars byte is16BitFlag byte[]/char[] characterData For this encoding, the is16BitFlag is always present even if nChars==0. <code> void writeUnicodeString ( LittleEndianOutput out , String value ) { ","int nChars = value . length ( ) ; out . writeShort ( nChars ) ; boolean is16Bit = hasMultibyte ( value ) ; out . writeByte ( is16Bit ? 0x01 : 0x00 ) ; if ( is16Bit ) { putUnicodeLE ( value , out ) ; } else { putCompressedUnicode ( value , out ) ; } }"
encode char to there asii table using % as the delimiter <code> String encodeChar ( char c ) { ,"String cS = Character . toString ( c ) ; String s = """" ; if ( cS . matches ( ""[a-zA-Z0-9_.|-~&=]"" ) == false ) { s = ""%"" + Byte . toString ( ( byte ) c ) ; } else { s = cS ; } return s ; }"
Read n bytes from the serial port <code> byte [ ] getBytes ( int n ) { ,byte [ ] bytes = serialPort . readBytes ( n ) ; return bytes ; }
"Appends the ASCII representation of a byte to the line. <code> void appendAscii ( byte [ ] buffer , int nrBytes , Appendable out , int bytesPerLine ) { ","out . append ( "" |"" ) ; for ( int i = 0 ; i < nrBytes ; i ++ ) { out . append ( asc [ 0xff & buffer [ i ] ] ) ; } for ( int i = nrBytes ; i < bytesPerLine ; i ++ ) { out . append ( EXTRA_SPACE ) ; } out . append ( ""| "" ) ; }"
"This method creates the response to the caller if the order could not be processed <code> Object orderFailed ( @ Headers Map < String , Object > in , @ Body String payload , @ OutHeaders Map < String , Object > out ) { ","out . put ( ""customerid"" , in . get ( ""customerid"" ) ) ; out . put ( ""orderid"" , ""failed"" ) ; return ""Order ERROR"" ; }"
Method to extract a String representation of the Dest Host embedded in the packet. <code> String extractDestHost ( byte [ ] p ) { ,"byte [ ] h = new byte [ 28 ] ; for ( int j = 5 , k = 0 ; j < 33 ; j ++ ) { h [ k ++ ] = p [ j ] ; } String DestHost = new String ( h , 0 , h . length ) ; return DestHost ; }"
Can we get the label when it's present in the OWL file? <code> void testGetLabelForPropertyCode01 ( ) { ,"String result = objectUnderTest . getLabelForPropertyCode ( ""averageHeight"" ) ; assertThat ( result , is ( ""Average Height"" ) ) ; }"
Delete file only if it already exists. <code> void deleteIfExists ( final File file ) { ,if ( file . exists ( ) ) { try { Files . delete ( file . toPath ( ) ) ; } catch ( final IOException ex ) { throw new RuntimeException ( ex ) ; } } }
Returns a string representation of this object; useful for testing and debugging. <code> String toString ( ) { ,"StringBuilder sb = new StringBuilder ( ) ; sb . append ( ""{"" ) ; if ( getSummaries ( ) != null ) sb . append ( ""Summaries: "" + getSummaries ( ) ) ; sb . append ( ""}"" ) ; return sb . toString ( ) ; }"
Create a new GZIPOutputStream. <code> GZIPOutputStream newGZIPOutputStream ( OutputStream out ) { ,"try { return new GZIPOutputStream ( out , 1024 ) ; } catch ( Exception e ) { return null ; } }"
checking even and odd number without using modulus or remainder operator. Division operator is used to find whether number is an odd number. Note: Division and modulus are more than twice as expensive as multiplication (a weight 10). <code> boolean isOddWithoutModulus ( int number ) { ,int quotient = number / 2 ; if ( quotient * 2 == number ) { return false ; } return true ; }
"This utility method can be used to combine two criteria using an AND. If both criteria are null, then null will be returned. If either is null, then the other will be returned. <code> Condition combineCriteria ( Condition primaryCrit , Condition additionalCrit , LanguageFactory languageFactory ) { ","if ( primaryCrit == null ) { return additionalCrit ; } else if ( additionalCrit == null ) { return primaryCrit ; } else { return languageFactory . createAndOr ( Operator . AND , primaryCrit , additionalCrit ) ; } }"
"Computes the index (order) of the intIndex'th intersection point in the direction of a specified input line segment <code> int getIndexAlongSegment ( int segmentIndex , int intIndex ) { ",computeIntLineIndex ( ) ; return intLineIndex [ segmentIndex ] [ intIndex ] ; }
"Given a string, returns how many columns this string would need to occupy in a terminal, taking into account that CJK characters takes up two columns. <code> int getTrueWidth ( String s ) { ",int count = 0 ; for ( int i = 0 ; i < s . length ( ) ; i ++ ) { if ( isCharCJK ( s . charAt ( i ) ) ) { count ++ ; } count ++ ; } return count ; }
"Suppress multiple methods for a class. <code> void suppressField ( Class < ? > clazz , String ... fieldNames ) { ","if ( fieldNames == null || fieldNames . length == 0 ) { suppressField ( new Class < ? > [ ] { clazz } ) ; } else { for ( Field field : Whitebox . getFields ( clazz , fieldNames ) ) { MockRepository . addFieldToSuppress ( field ) ; } } }"
Returns with a transformation representing a move by the given vector. <code> ITransformation getTranlationMatrix ( Abstract3d delta ) { ,"double [ ] elemenents = { 1 , 0 , 0 , delta . getX ( ) , 0 , 1 , 0 , delta . getY ( ) , 0 , 0 , 1 , delta . getZ ( ) } ; return new TransformationMatrix ( elemenents ) ; }"
"Test of getClockTime method, of class DefaultClockTime. <code> void testGetClockTime ( ) { ",Number [ ] result = clockTime1 . getClockTime ( ) ; assertFalse ( clockTime2 . getClockTime ( ) . equals ( result ) ) ; }
Gets the flash memory. <code> int getFlashMemory ( ) { ,DeviceInfo i = nxtCommand . getDeviceInfo ( ) ; return i . freeFlash ; }
"Check whether the given expression is a valid call of this function. Two arguments are required. When evaluated, the arguments are converted to strings if they are not already strings. <code> boolean isValid ( FunctionCallExpression expr ) { ",if ( expr . getNumArguments ( ) == 2 ) return true ; return false ; }
"Computes the end time = now + timeout <code> long toEndTime ( Clock clock , Object timeout ) { ",Timespan t = toTimespan ( timeout ) ; if ( t == null ) return 0 ; if ( clock == null ) clock = SystemClock . INSTANCE ; if ( t . getDurationInMilliseconds ( ) == 0 ) return 0 ; return t . futureTimeMillis ( clock ) ; }
Makes the upper 2x2 a rotation matrix of the given angle <code> void loadRotate ( float rot ) { ,"loadIdentity ( ) ; float c , s ; rot *= ( float ) ( java . lang . Math . PI / 180.0f ) ; c = ( float ) java . lang . Math . cos ( rot ) ; s = ( float ) java . lang . Math . sin ( rot ) ; mMat [ 0 ] = c ; mMat [ 1 ] = - s ; mMat [ 3 ] = s ; mMat [ 4 ] = c ; }"
Sets the scheme of SIP address. Valid scheme format is defined in RFC 3261 [1] p.224 <code> void setScheme ( java . lang . String scheme ) { ,"if ( scheme == null ) { throw new NullPointerException ( ""Scheme is null"" ) ; } if ( address . getAddressType ( ) == Address . WILD_CARD ) { throw new IllegalArgumentException ( address . getEceptionMessage ( ) ) ; } address . getURI ( ) . setScheme ( scheme ) ; }"
Adds all configurations that are directly reachable from this configuration through any kind of configuration transition. <code> void addDirectlyReachableConfigurations ( Collection < BuildConfiguration > queue ) { ,for ( ConfigurationHolder holder : transitionTable . values ( ) ) { if ( holder . configuration != null ) { queue . add ( holder . configuration ) ; } } queue . addAll ( splitTransitionTable . values ( ) ) ; }
"Copies the InputStream into the OutputStream, until the end of the stream has been reached. <code> void copyStreams ( final InputStream in , final OutputStream out , final int buffersize ) { ","final byte [ ] bytes = new byte [ buffersize ] ; int bytesRead = in . read ( bytes ) ; while ( bytesRead > - 1 ) { out . write ( bytes , 0 , bytesRead ) ; bytesRead = in . read ( bytes ) ; } }"
Returns a new array containing the remaining keys. <code> Array < K > toArray ( ) { ,"Array array = new Array ( true , set . size ) ; while ( hasNext ) array . add ( next ( ) ) ; return array ; }"
Metodo utilizado para obter o total de paginas da consulta <code> int getTotalPages ( ) { ,int totalPages = EMPTY ; if ( pageSize != EMPTY ) { totalPages = ( totalItems % pageSize == EMPTY ) ? totalItems / pageSize : ( totalItems / pageSize ) + DEFAULT_INCREASE ; } return totalPages ; }
"run a target to touch the test file; verify the timestamp is as expected <code> void touchFile ( String targetName , long timestamp ) { ","buildRule . executeTarget ( targetName ) ; long time = getTargetTime ( ) ; assertTimesNearlyMatch ( timestamp , time ) ; }"
"Deletes a textureId from the TextureManager, and deletes the corresponding texture from the GPU <code> void deleteTexture ( String $textureId ) { ",int glId = _idToTextureName . get ( $textureId ) ; Shared . renderer ( ) . deleteTexture ( glId ) ; _idToTextureName . remove ( $textureId ) ; _idToHasMipMap . remove ( $textureId ) ; }
Attempts to convert a string into an integer value using Regex <code> int toInteger ( String string ) { ,"try { return Integer . parseInt ( string . replaceAll ( ""[^|d]"" , """" ) ) ; } catch ( NumberFormatException e ) { throw new NumberFormatException ( string + "" isn't a number!"" ) ; } }"
"OnDrawFrame is called whenever a new frame needs to be drawn. Normally, this is done at the refresh rate of the screen. <code> void onDrawFrame ( GL10 glUnused ) { ","glClear ( GL_COLOR_BUFFER_BIT ) ; glDrawArrays ( GL_TRIANGLE_FAN , 0 , 6 ) ; glDrawArrays ( GLES20 . GL_LINES , 6 , 2 ) ; glDrawArrays ( GLES20 . GL_POINTS , 8 , 1 ) ; glDrawArrays ( GLES20 . GL_POINTS , 9 , 1 ) ; }"
Fetches the value of a property from the configuration file. <code> String getProperty ( String key ) { ,"if ( ! ready ) prepare ( ""conf/failmon.properties"" ) ; return fmProperties . getProperty ( key ) ; }"
Returns the operator after the current value don't change the position in the expression <code> char getOperator ( ) { ,if ( index == count ) { return SPACE ; } else { return ( items . get ( index ) ) . operator ; } }
Allocates byte array and sets soft references to it <code> void allocateByteArraySoftRef ( int bucketedSize ) { ,byte [ ] byteArray = new byte [ bucketedSize ] ; mByteArraySoftRef . set ( byteArray ) ; mSingleByteArrayPoolStatsTracker . onMemoryAlloc ( bucketedSize ) ; }
It clones a pattern <code> Pattern clonePatron ( ) { ,List < ItemAbstractionPair > elementsCopy = new ArrayList < ItemAbstractionPair > ( elements ) ; Pattern clon = new Pattern ( elementsCopy ) ; return clon ; }
"Sends (synchronously) a long press to the View at the specified coordinates. <code> void longPressView ( View v , int x , int y ) { ","int windowXY [ ] = viewToWindowCoordinates ( v , x , y ) ; int windowX = windowXY [ 0 ] ; int windowY = windowXY [ 1 ] ; longPressInternal ( v . getRootView ( ) , windowX , windowY ) ; }"
Returns a string that is padded on the right with spaces to the current length. <code> String padRight ( String string ) { ,"Spaces . padRight ( string , n ) ; final int x = n - string . length ( ) ; if ( x <= 0 ) { return string ; } return Spaces . append ( new StringBuilder ( string ) , x ) . toString ( ) ; }"
Returns true if the string is empty or only includes whitespace characters. <code> boolean isOnlyWhitespace ( String str ) { ,for ( int i = 0 ; i < str . length ( ) ; i ++ ) { if ( ! Character . isWhitespace ( str . charAt ( i ) ) ) { return false ; } } return true ; }
"return an enum from the value of the parameter <code> T getEnumParameter ( String key , Class < T > cls , T defaultValue ) { ","String val = getParameter ( key ) ; if ( val == null || """" . equals ( val ) ) return defaultValue ; return Enum . valueOf ( cls , val ) ; }"
Returns a string representation of this object; useful for testing and debugging. <code> String toString ( ) { ,"StringBuilder sb = new StringBuilder ( ) ; sb . append ( ""{"" ) ; if ( getDeliveryStreamDescription ( ) != null ) sb . append ( ""DeliveryStreamDescription: "" + getDeliveryStreamDescription ( ) ) ; sb . append ( ""}"" ) ; return sb . toString ( ) ; }"
"Checks if entry is valid in the column <code> boolean checkCol ( int col , int num ) { ",for ( int row = 0 ; row < puzzleSize ; row ++ ) { if ( solvedPuzzle [ row ] [ col ] == num ) { return false ; } } return true ; }
Get the response headers of the HTTP response. <code> Header [ ] getResponseHeaders ( ) { ,"assert responseHeaders . length > 0 : ""Response headers can not be null."" ; return responseHeaders ; }"
Checks if this element has a child element with the given name. <code> boolean hasChild ( final String name ) { ,"final NodeList list = e . getElementsByTagName ( name ) ; for ( int i = 0 , j = list . getLength ( ) ; i < j ; i ++ ) { final Node item = list . item ( i ) ; if ( item . getParentNode ( ) == e ) { return true ; } } return false ; }"
"Test that if we do an incomplete read, we don't call CHECKSUM_OK <code> void testIncompleteRead ( ) { ","BlockReaderRemote2 reader = ( BlockReaderRemote2 ) spy ( util . getBlockReader ( testBlock , 0 , FILE_SIZE_K * 1024 ) ) ; util . readAndCheckEOS ( reader , FILE_SIZE_K / 2 * 1024 , false ) ; verify ( reader , never ( ) ) . sendReadResult ( Status . CHECKSUM_OK ) ; reader . close ( ) ; }"
"Read n physical lines and returns the n-th. If no enough lines exist, null is returned. <code> String readPhysicalLines ( FlatFileParser . LineReader reader , int n ) { ",String line = null ; for ( int i = 0 ; i < n ; i ++ ) { line = reader . readLine ( ) ; if ( line == null ) return null ; } return line ; }
Removes the first element in the linked list. <code> Object removeFirst ( ) { ,if ( first == null ) throw new NoSuchElementException ( ) ; Object element = first . data ; first = first . next ; currentSize -- ; if ( currentSize < 0 ) currentSize = 0 ; return element ; }
"Adds the given number as a OP_N opcode to the given index in the program. <code> ScriptBuilder smallNum ( int index , int num ) { ","checkArgument ( num >= 0 , ""Cannot encode negative numbers with smallNum"" ) ; checkArgument ( num <= 16 , ""Cannot encode numbers larger than 16 with smallNum"" ) ; return addChunk ( index , new ScriptChunk ( Script . encodeToOpN ( num ) , null ) ) ; }"
"Initialize type map with classes that are explicitly mapped to an iOS type. NOTE: if this method's list is changed, IOSClass.forName() needs to be similarly updated. <code> void initializeTypeMap ( ) { ","typeMap . put ( javaObjectType , NSObject ) ; typeMap . put ( javaClassType , IOSClass ) ; typeMap . put ( javaCloneableType , NSCopying ) ; typeMap . put ( javaStringType , NSString ) ; typeMap . put ( javaNumberType , NSNumber ) ; }"
"Paint text on the given Canvas. <code> void paintText ( Canvas canvas , float x , float y , CharSequence text , int start , int end ) { ","if ( canvas == null || text == null ) throw new NullPointerException ( ) ; canvas . getMatrix ( matrix ) ; canvas . drawText ( text , start , end , x , y , paint ) ; }"
Default implementation returns a list of structured data elements with no internal parsing. <code> Object parseStructuredDataElements ( Reader r ) { ,List < String > fragments = new ArrayList < String > ( ) ; while ( r . is ( '[' ) ) { r . mark ( ) ; r . skipTo ( ']' ) ; fragments . add ( r . getMarkedSegment ( ) ) ; } return fragments ; }
"This method splits the supplied url on the character '/' then URL encodes the segments between, returning a URL encoded version of the passed url, leaving any occurrence of '/' as it is. <code> String urlEncodePartsUtf8 ( String url ) { ","final String [ ] split = url . split ( ""/"" , - 1 ) ; final StringBuilder ret = new StringBuilder ( url . length ( ) ) ; for ( int i = 0 ; i < split . length ; i ++ ) { ret . append ( urlEncodeUtf8 ( split [ i ] ) ) ; if ( i < split . length - 1 ) { ret . append ( ""/"" ) ; } } return ret . toString ( ) ; }"
"Returns the value of this timer, in milliseconds <code> int getValue ( ) { ",if ( running ) { long currentTime = System . nanoTime ( ) ; long time = totalTimeNS + ( currentTime - startTime ) ; return ( int ) ( time / 1000000 ) ; } return ( int ) ( totalTimeNS / 1000000 ) ; }
"Increases the turn counter by 1, or wraps around back to 0 <code> void advanceTurn ( ) { ",turnNumber ++ ; curPlayerNum ++ ; if ( curPlayerNum >= game . getNumberOfPlayers ( ) ) { curPlayerNum = 0 ; } }
Create folder in the SDCard <code> boolean createFolder ( String path ) { ,"File direct = new File ( Environment . getExternalStorageDirectory ( ) + ""/"" + path ) ; if ( ! direct . exists ( ) ) { if ( direct . mkdir ( ) ) { return true ; } } return false ; }"
"Controls if the input value is a valid value for component spinner-int. <code> void controlInteger ( Type type , String value ) { ",try { Integer . parseInt ( value ) ; type . setValue ( value ) ; } catch ( Exception pe ) { throw new ParserException ( ) ; } }
Decodes the high 16 bits of an integer as a short. <code> short decodeHighBits ( int i ) { ,long key = i & 0xFFFF0000l ; key >>= 16 ; return ( short ) key ; }
"Removes the given cache directive if it exists, uncaching the data. If the cache request does not exist in HDFS no error is returned. Throws an ImpalaRuntimeException if there was any problem removing the directive. <code> void removeDirective ( long directiveId ) { ","LOG . debug ( ""Removing cache directive id: "" + directiveId ) ; throw new UnsupportedOperationException ( ""HDFS caching is not supported on CDH4"" ) ; }"
Returns the approximated knn-distance at the specified k. <code> double getApproximatedKnnDistance ( int k ) { ,if ( k < k_0 ) { return 0. ; } return FastMath . exp ( getValueAt ( k ) ) ; }
"just reverse bytes order, <code> byte [ ] reverseBytesOrder ( byte [ ] b ) { ",if ( b == null ) return null ; byte [ ] tmp = new byte [ b . length ] ; for ( int i = 0 ; i < b . length ; i ++ ) tmp [ b . length - i - 1 ] = b [ i ] ; return tmp ; }
"Checks if a given allergy has the same allergen as any in the given allergies <code> boolean containsAllergen ( Allergy allergy , Collection < ? extends Allergy > allergies ) { ",for ( Allergy alg : allergies ) { if ( alg . hasSameAllergen ( allergy ) ) { return true ; } } return false ; }
A function where the output is the arithmetic average the inputs <code> float aveAri ( float ... arr ) { ,float sum = 0 ; for ( float f : arr ) { sum += f ; } return sum / arr . length ; }
It reads a review. <code> void checkAnnotatedReview ( ) { ,assertTrue ( ! StringUtils . isBlank ( annotatedHtmlReview . title ( ) ) ) ; assertTrue ( ! StringUtils . isBlank ( annotatedHtmlReview . score ( ) ) ) ; assertTrue ( ! StringUtils . isBlank ( annotatedHtmlReview . info ( ) ) ) ; assertTrue ( annotatedHtmlReview . getPoster ( ) != null ) ; }
Returns any duplicate elements from the given collection. <code> Collection < T > duplicatesFrom ( Collection < T > c ) { ,Set < T > duplicates = new HashSet < T > ( ) ; if ( isEmpty ( c ) ) return duplicates ; Set < T > onlyOne = new HashSet < T > ( ) ; for ( T e : c ) { if ( onlyOne . contains ( e ) ) { duplicates . add ( e ) ; continue ; } onlyOne . add ( e ) ; } return duplicates ; }
Gets the selected state of a toggle action. If the id doesn't correspond to a toggle action then it will fail silently. <code> boolean isSelected ( Object id ) { ,AbstractActionExt action = getStateChangeAction ( id ) ; if ( action != null ) { return action . isSelected ( ) ; } return false ; }
"Returns the resource corresponding to the given model element, or null if there is no applicable resource. <code> IResource getResource ( Object element ) { ","if ( element == null ) { return null ; } if ( element instanceof IResource ) { return ( IResource ) element ; } return ( IResource ) getAdapter ( element , IResource . class , true ) ; }"
"Get all OpenIDs for a given user <code> String [ ] getOpenIDsForUser ( Registry registry , UserRealm realm , String username ) { ","OpenIDUserDAO openIDUserDOA = new OpenIDUserDAO ( registry , realm ) ; return openIDUserDOA . getOpenIDsForUser ( username ) ; }"
A list of MFA devices. <code> java . util . List < MFADevice > getMFADevices ( ) { ,if ( mFADevices == null ) { mFADevices = new com . amazonaws . internal . SdkInternalList < MFADevice > ( ) ; } return mFADevices ; }
"Binds the frame buffer as the current render target. <code> void bindFrameBuffer ( int frameBuffer , int width , int height ) { ","GL11 . glBindTexture ( GL11 . GL_TEXTURE_2D , 0 ) ; GL30 . glBindFramebuffer ( GL30 . GL_DRAW_FRAMEBUFFER , frameBuffer ) ; GL11 . glViewport ( 0 , 0 , width , height ) ; }"
Returns the list of nodes whose element contains one dialog line. <code> NodeList getNodeList ( String content ) { ,"Parser parser = Parser . createParser ( content , ""utf-8"" ) ; NodeFilter filter = new OrFilter ( new HasAttributeFilter ( ""class"" , ""DataB"" ) , new HasAttributeFilter ( ""class"" , ""DataA"" ) ) ; return parser . extractAllNodesThatMatch ( filter ) ; }"
"Set an element and return only when the element is effectively cached. <code> boolean safeSet ( String key , Object value , String expiration ) { ","checkSerializable ( value ) ; return cacheImpl . safeSet ( key , value , Time . parseDuration ( expiration ) ) ; }"
Clears the the current selection and selects a single node. <code> boolean selectSingleNode ( D nodeData ) { ,"if ( ( selectedNodes . size ( ) == 1 ) && ( selectedNodes . get ( 0 ) . equals ( nodeData ) ) ) { return false ; } clearSelections ( ) ; insertAndSelectNode ( nodeData , 0 , true ) ; return true ; }"
"safe and convenient writing to socket character streams; internal helper method <code> void writeLine ( PrintWriter out , String line ) { ","out . write ( line + ""  "" ) ; out . flush ( ) ; }"
Get XMPP Settings of a user <code> XMPPSettingsDTO getXmppSettings ( String userId ) { ,"String message = ""Invalid parameters provided to getXmppSettings"" ; validateInputParameters ( new String [ ] { userId } , message ) ; checkUserAuthorization ( userId , ""getXmppSettings"" ) ; XMPPConfigurator provider = new XMPPConfigurator ( ) ; return provider . getXmppSettings ( userId ) ; }"
"Try to reserve the given number of bytes. Return value indicates whether the caller may use the requested memory. <code> boolean tryReserve ( QueryId queryId , long bytes ) { ","checkArgument ( bytes >= 0 , ""bytes is negative"" ) ; if ( freeBytes - bytes < 0 ) { return false ; } freeBytes -= bytes ; if ( bytes != 0 ) { queryMemoryReservations . merge ( queryId , bytes , Long :: sum ) ; } return true ; }"
"Change SP to PX <code> float spToPx ( Resources resources , float sp ) { ","DisplayMetrics metrics = resources . getDisplayMetrics ( ) ; return TypedValue . applyDimension ( TypedValue . COMPLEX_UNIT_SP , sp , metrics ) ; }"
"This routine returns the JDBC url corresponding to the DBStrings input. <code> String createJDBCurl ( DBStrings dbStrings , boolean withDBName ) { ","String url = """" ; url = ""jdbc:"" + dbStrings . getServerType ( ) . toLowerCase ( ) + ""://"" + dbStrings . getServerHostname ( ) + ( withDBName ? ""/"" + dbStrings . getDatabase ( ) : """" ) ; return url ; }"
Set the magnification for the screen <code> void setMagnify ( int m ) { ,"mag = m ; width = m * 160 ; height = m * 144 ; if ( backBuffer != null ) backBuffer . flush ( ) ; backBuffer = applet . createImage ( 160 * mag , 144 * mag ) ; }"
Return the next token from this tokenizer. <code> String nextToken ( ) { ,"if ( currentPosition >= maxPosition ) { throw new NoSuchElementException ( localStrings . getLocalString ( ""NoMoreTokens"" , ""No more tokens"" ) ) ; } return scanToken ( false ) ; }"
clearSelection to the combo. <code> void clearSelection ( ) { ,"combo . clearSelection ( ) ; combo . setSelection ( new Point ( 1 , 1 ) ) ; }"
"Convenience method to find the shortest path via a single static method call. If you need a more advanced search (e.g. limited by hops, or computation of the path length), use the constructor instead. <code> List < E > findPathBetween ( Graph < V , E > graph , V startVertex , V endVertex ) { ","BellmanFordShortestPath < V , E > alg = new BellmanFordShortestPath < V , E > ( graph , startVertex ) ; return alg . getPathEdgeList ( endVertex ) ; }"
Called immediately after the post-breeding exchange occurs. <code> void postPostBreedingExchangeStatistics ( final EvolutionState state ) { ,for ( int x = 0 ; x < children . length ; x ++ ) children [ x ] . postPostBreedingExchangeStatistics ( state ) ; }
"Gets an object value and transforms it into a byte <code> byte getByte ( ITeiidServerVersion teiidVersion , Object value ) { ","if ( value == null ) { return 0 ; } return transform ( teiidVersion , value , Byte . class ) ; }"
"Conditionally uses one of the synchronized objects. <code> void twoPath ( Object obj1 , Object obj2 , int x ) { ",Object localObj ; synchronized ( obj1 ) { synchronized ( obj2 ) { if ( x == 0 ) { localObj = obj2 ; } else { localObj = obj1 ; } } } doNothing ( localObj ) ; }
"change the Dateformat from ""yyyy-mm-dd"" to ddmmyyy, where yyy is years after 1900 <code> String toGsDateFormat ( String input ) { ","if ( input . length ( ) >= 10 ) { return input . substring ( 8 , 10 ) + input . substring ( 5 , 7 ) + ""1"" + input . substring ( 2 , 4 ) ; } else { return """" ; } }"
Converts a hex String to a byte array. <code> byte [ ] hexStringToBytes ( String s ) { ,byte [ ] ret ; if ( s == null ) return null ; int sz = s . length ( ) ; ret = new byte [ sz / 2 ] ; for ( int i = 0 ; i < sz ; i += 2 ) { ret [ i / 2 ] = ( byte ) ( ( hexCharToInt ( s . charAt ( i ) ) << 4 ) | hexCharToInt ( s . charAt ( i + 1 ) ) ) ; } return ret ; }
setPropagatesToInstance. Determines whether this Qualifier can propagate to instances <code> void setPropagatesToInstance ( boolean bPropagatesToInstance ) { ,try { d_ISWbemQualifierProxy . setPropagatesToInstance ( bPropagatesToInstance ) ; } catch ( com . linar . jintegra . AutomationException automationException ) { automationException . fillInStackTrace ( ) ; throw automationException ; } }
Returns all the clients for the first working pod for the given service <code> List < J4pClient > clientsForService ( String serviceId ) { ,List < Pod > pods = kubernetes . getPodsForService ( serviceId ) ; return clientsForPod ( pods ) ; }
Find a completed subject by String name <code> Subject findCompletedSubjects ( String subjectName ) { ,for ( Subject i : completedSubjects ) { if ( i . getName ( ) . equals ( subjectName ) ) { return i ; } } return null ; }
"Add the given tiles <code> void addTiles ( int inNumTiles , long inSize ) { ",_numTiles += inNumTiles ; _totalSize += inSize ; }
Extracts and returns the boundary token from a line. <code> String extractBoundary ( String line ) { ,"int index = line . lastIndexOf ( ""boundary="" ) ; if ( index == - 1 ) { return null ; } String boundary = line . substring ( index + 9 ) ; if ( boundary . charAt ( 0 ) == '""' ) { index = boundary . lastIndexOf ( '""' ) ; boundary = boundary . substring ( 1 , index ) ; } boundary = ""--"" + boundary ; return boundary ; }"
"Set the n-th record. As with arrays, n starts with 0. <code> void setRecord ( byte n , byte [ ] bytes ) { ","setRecord ( n , bytes , ( short ) 0 , ( short ) bytes . length ) ; return ; }"
Creates the necessary 3 functions on the pipeline before each test <code> void setUp ( ) { ,for ( int i = 0 ; i < 3 ; i ++ ) { funcs [ i ] = prototype . copy ( CopyType . WITHOUT_VALUES_AND_POSITION ) ; ModelProxy . getInstance ( ) . getPipeline ( ) . addFunction ( funcs [ i ] ) ; } conOut = funcs [ 0 ] . getOutConnectors ( ) [ 0 ] ; conIn = funcs [ 1 ] . getInConnectors ( ) [ 0 ] ; }
"Formats the given wallet (transactions and keys) to the given output stream in protocol buffer format. Equivalent to walletToProto(wallet).writeTo(output); <code> void writeWallet ( Wallet wallet , OutputStream output ) { ",Protos . Wallet walletProto = toProtobuf ( wallet ) ; walletProto . writeTo ( output ) ; }
Synchronized method that gives a user a connection from the pool if not empty <code> Connection getConnectionFromPool ( ) { ,Connection connection = null ; if ( connectionsList . size ( ) > 0 ) { connection = connectionsList . get ( 0 ) ; connectionsList . remove ( 0 ) ; } return connection ; }
Returns the next image to add a frame to the buffer (the head) Returns null if buffer is full. <code> JFImage getNewFrame ( ) { ,if ( headInUse ) freeNewFrame ( ) ; int newHead = head + 1 ; if ( newHead == images . length ) newHead = 0 ; if ( newHead == tail ) return null ; headInUse = true ; return images [ head ] ; }
Return the minimum quantizable value. <code> double getMinimumValue ( ) { ,"double minVal = getMinimumUnscaledValue ( ) . doubleValue ( ) ; return minVal * Math . pow ( 0.5 , getFractionBitLength ( ) ) ; }"
Parse the error message from the response. <code> String parseErrorMessage ( JsonNode jsonNode ) { ,for ( String field : errorMessageJsonLocations ) { JsonNode value = jsonNode . get ( field ) ; if ( value != null && value . isTextual ( ) ) { return value . asText ( ) ; } } return null ; }
EnvironmentMocker can write bytearray too. <code> void writesByteArrayToTheDesignatedLocation ( ) { ,"final String name = ""src/main/java/Foo.java"" ; final byte [ ] bytes = ""class Foo {}"" . getBytes ( ) ; final Environment env = new Environment . Mock ( ) . withFile ( name , bytes ) ; final File file = new File ( env . basedir ( ) , name ) ; MatcherAssert . assertThat ( file . exists ( ) , Matchers . is ( true ) ) ; }"
Set the inUse_ flags so that the storage can be returned to the pool <code> void returnToPool ( ) { ,inUse_ = false ; if ( id_ >= 0 ) { pool_ . returned ( id_ ) ; } }
Removes all operations from the History. <code> void clearHistory ( ) { ,ops . setSize ( 0 ) ; firstNewOp = 0 ; }
"Spawns the Kit with the specified name for the specified player with the specified flags <code> void spawnKit ( Player player , String kitName , String ... flags ) { ","if ( kitExists ( kitName ) ) spawnKit ( player , getKit ( kitName ) , flags ) ; else throw new KitException ( ""The kit "" + kitName + "" does not exist."" ) ; }"
Return the most recently put time string for this type. This should represent the creation time of the most recently received message of the specified type and can be used to filter available messages to find those that have not been received. <code> String getMessageTime ( String type ) { ,"if ( messageTimes . containsKey ( type ) ) { return messageTimes . get ( type ) ; } return """" ; }"
Returns a string representation of this object; useful for testing and debugging. <code> String toString ( ) { ,"StringBuilder sb = new StringBuilder ( ) ; sb . append ( ""{"" ) ; if ( getVpc ( ) != null ) sb . append ( ""Vpc: "" + getVpc ( ) ) ; sb . append ( ""}"" ) ; return sb . toString ( ) ; }"
Populates a scenario with data read from the input files which are named in the config which is wrapped in the scenario. <code> void loadScenario ( final Scenario scenario ) { ,ScenarioLoaderImpl scenarioLoader = new ScenarioLoaderImpl ( scenario ) ; scenarioLoader . loadScenario ( ) ; }
"Retruns the path attribute of the passed URL, stripped out of the leading ""/"". Returns null if the url does not have a path. <code> String getPathAsAction ( URL url ) { ",String action = url . getPath ( ) ; if ( action != null ) { action = action . substring ( 1 ) ; } return action ; }
"Adds an instruction with a given delta to this internal result. The delta is only needed because we don't have a proper system for using labels as a normal assembler would have. <code> void addInstructionWithDelta ( final ReilInstruction instruction , final long delta ) { ",instruction . setAddress ( new CAddress ( baseAddress + instructions . size ( ) + delta ) ) ; instructions . add ( instruction ) ; }
Return the name associated with a specified image. <code> String getImageName ( BufferedImage image ) { ,"for ( Map . Entry < String , BufferedImage > entry : instance . imageMap . entrySet ( ) ) { if ( entry . getValue ( ) == image ) return entry . getKey ( ) ; } return null ; }"
Sets the function to be inspected and updates the entire GUI <code> void insertGeoElement ( GeoElement geo ) { ,if ( geo == null || ! geo . isGeoFunction ( ) ) { return ; } getModel ( ) . insertGeoElement ( geo ) ; updateTabPanels ( ) ; }
This method delete the preferences <code> void deletePreferences ( ) { ,mEditor = mPref . edit ( ) ; mEditor . clear ( ) ; mEditor . commit ( ) ; }
"Non-standard helper method, to delete cookie <code> void deleteCookie ( Cookie cookie ) { ","Log . i ( ""Cookies"" , ""deleteCookie"" ) ; String name = cookie . getName ( ) ; cookies . remove ( name ) ; SharedPreferences . Editor prefsWriter = cookiePrefs . edit ( ) ; prefsWriter . remove ( COOKIE_NAME_PREFIX + name ) ; prefsWriter . commit ( ) ; }"
Tests a negative frequency value. <code> void setNegativeFrequency ( ) { ,"MouseJoint mj = new MouseJoint ( b , new Vector2 ( ) , 4.0 , 0.4 , 10.0 ) ; mj . setFrequency ( - 0.3 ) ; }"
Gets Api discovery response in String. <code> String toString ( ) { ,String rv = null ; try { JSONObject obj = toObject ( ) ; rv = obj . toString ( ) ; } catch ( JSONException e ) { } return rv ; }
"Prints the collocations found in this Tree as strings. Each is followed by its boundary constituent indices in the original tree. Example: throw_up (2,3) came_up_with (7,9) <code> void PrintCollocationStrings ( PrintWriter pw ) { ","for ( Collocation c : collocationCollector ) { String cs = c . collocationString ; pw . println ( cs + "" ("" + ( c . span . first ( ) + 1 ) + "","" + ( c . span . second ( ) + 1 ) + "")"" ) ; } }"
"Generate an info message string relating to a particular managed collection. <code> String collectionInfoString ( String role , Serializable id ) { ","StringBuffer s = new StringBuffer ( ) ; s . append ( '[' ) ; if ( role == null ) { s . append ( ""<unreferenced>"" ) ; } else { s . append ( role ) ; s . append ( '#' ) ; if ( id == null ) { s . append ( ""<null>"" ) ; } else { s . append ( id ) ; } } s . append ( ']' ) ; return s . toString ( ) ; }"
Load the version properties from a resource. <code> Properties loadProperties ( ) { ,"props = new Properties ( ) ; try { InputStream in = Version . class . getResourceAsStream ( ""version.properties"" ) ; props . load ( in ) ; in . close ( ) ; } catch ( Exception e ) { throw new Error ( ""Missing version.properties"" ) ; } return props ; }"
Retorna o nome da rua <code> String getStreetName ( ) { ,checkNLoad ( ) ; return streetName ; }
"For the given job, adjust the command line args to set the '-Xmx' java memory flag to be greater than or equal to the min value. <code> List < String > adjustXmxFlag ( DrmJobSubmission job ) { ","Memory javaXmxMin = job . getGpConfig ( ) . getGPMemoryProperty ( job . getJobContext ( ) , JobRunner . PROP_JAVA_XMX_MIN ) ; return adjustXmxFlag ( job , javaXmxMin ) ; }"
Return the (possibly empty) set of definitions for this binding. <code> List < Def > getDefs ( ) { ,if ( defs == null ) { defs = new ArrayList < Def > ( DEF_SET_INITIAL_CAPACITY ) ; } return defs ; }
Pre-configures some properties when showing the page. <code> void pageShown ( ) { ,wizard . setNextFinishButtonEnabled ( false ) ; searchChatRoomPanel . requestFocusInField ( ) ; searchChatRoomPanel . setChatRoomProvider ( joinChatRoom . getChatRoomProvider ( ) ) ; }
"Method called everytime surface changes. Ideally should never be called as surface should not change. <code> void onSurfaceChanged ( GL10 gl , int width , int height ) { ","gl . glMatrixMode ( GL10 . GL_PROJECTION ) ; gl . glLoadIdentity ( ) ; GLU . gluPerspective ( gl , 10.0f , ( float ) width / ( float ) height , 0.1f , 100.0f ) ; gl . glViewport ( 0 , 0 , width , height ) ; gl . glMatrixMode ( GL10 . GL_MODELVIEW ) ; gl . glLoadIdentity ( ) ; }"
Returns the value of the ith parameter. <code> double getParameter ( int index ) { ,"if ( index == 0 ) { return a ; } else if ( index == 1 ) { return b ; } else { throw new IllegalArgumentException ( ""Illegal index: "" + index ) ; } }"
Creates the app mapping for the app id from the configuration <code> AppMapping getAppMapping ( ) { ,Application app = new AppAPI ( podioAPI ) . getApp ( appId ) ; return AppMapping . get ( app ) ; }
"Registers the specified task as an output. <code> void setOutputTask ( PipeTasks pipeTasks , Task outputTask , int pipeIndex ) { ","Integer pipeIndexO = new Integer ( pipeIndex ) ; if ( outputPipeNames . containsKey ( pipeIndexO ) ) { pipeTasks . putTask ( taskId , outputPipeNames . get ( pipeIndexO ) , outputTask ) ; } else { pipeTasks . putTask ( taskId , outputTask ) ; } }"
"Saves the user config as a JSON sting. <code> void setDynamicConfigJson ( Context c , String configJson ) { ","final SharedPreferences . Editor editor = c . getApplicationContext ( ) . getSharedPreferences ( switchBoardSettings , Context . MODE_PRIVATE ) . edit ( ) ; editor . putString ( CONFIG_JSON , configJson ) ; editor . apply ( ) ; }"
"Multiply each element of a PMatrix3D by the scale. mat.m00 = scale and so on... <code> void scaleMat ( PMatrix3D mat , float scale ) { ",mat . m00 *= scale ; mat . m01 *= scale ; mat . m02 *= scale ; mat . m03 *= scale ; mat . m10 *= scale ; mat . m11 *= scale ; mat . m12 *= scale ; mat . m13 *= scale ; mat . m20 *= scale ; mat . m21 *= scale ; mat . m22 *= scale ; mat . m23 *= scale ; mat . m30 *= scale ; mat . m31 *= scale ; mat . m32 *= scale ; mat . m33 *= scale ; }
Returns the column mapping for the given csvcolumn. <code> ColumnMapType getColumnMap ( String csvcol ) { ,ColumnMapType retVal = null ; for ( ColumnMapType cmt : importDescription . getColumnmap ( ) ) { if ( cmt . getCsvcolumn ( ) . equals ( csvcol ) ) { retVal = cmt ; break ; } } return retVal ; }
Returns true if search should be done using given channel <code> boolean containsChannel ( String tested ) { ,for ( String c : channels ) { if ( c . equals ( tested ) ) { return true ; } } return false ; }
Set the user's first name <code> boolean setFirstName ( String n ) { ,"if ( ! n . matches ( ""[a-zA-Z]{1,20}"" ) ) { return false ; } first_name = n ; return true ; }"
Tags a String with part of speech <code> String tagPos ( String text ) { ,"String [ ] tokens = tokenize ( text ) ; String [ ] pos = tagPos ( tokens ) ; String output = """" ; for ( int i = 0 ; i < pos . length ; i ++ ) { output += tokens [ i ] + ""/"" + pos [ i ] + "" "" ; } return output . trim ( ) ; }"
Metodo que retorna un arraylist con las tareas que aun no se han realizado <code> ArrayList < Tarea > darTareasPendientes ( ) { ,ArrayList < Tarea > pendientes = new ArrayList < Tarea > ( ) ; for ( int i = 0 ; i < tareas . size ( ) ; i ++ ) { if ( tareas . get ( i ) . estaRealizada ( ) == false ) { pendientes . add ( tareas . get ( i ) ) ; } } return pendientes ; }
Normalize separate character. Separate character should be '/' always. <code> String normalizeSeparateChar ( final String pathName ) { ,"String normalizedPathName = pathName . replace ( File . separatorChar , '/' ) ; normalizedPathName = normalizedPathName . replace ( '|' , '/' ) ; return normalizedPathName ; }"
"Method used to retrieve bundle of the entity dto passed as a parameter. It tries to find bundle basing on module symbolic name. If module symbolic name is null it retrieves bundle basing on module name. <code> Bundle searchForBundle ( BundleContext context , EntityDto entity ) { ","if ( entity . getBundleSymbolicName ( ) != null ) { return WebBundleUtil . findBundleBySymbolicName ( context , entity . getBundleSymbolicName ( ) ) ; } else { return WebBundleUtil . findBundleByName ( context , entity . getModule ( ) ) ; } }"
"Parse a double value from a string. <code> Double parseNumber ( String key , String value ) { ","try { return Double . parseDouble ( value ) ; } catch ( Exception ex ) { throw new ConfigurationException ( ""openwebif"" , ""Parameter '"" + key + ""' empty or in wrong format, please check your openhab.cfg!"" ) ; } }"
test the set() method <code> void testSet ( ) { ,"assertEquals ( bf_multi . set ( 0 ) , 0x3F80 ) ; assertEquals ( bf_single . set ( 0 ) , 0x4000 ) ; assertEquals ( bf_zero . set ( 0 ) , 0 ) ; }"
Returns a hash code value for the object. <code> int hashCode ( ) { ,int h = hash ; if ( h == 0 ) { h = 1 ; for ( int i = 0 ; i < id . length ; ++ i ) { h = 31 * h + id [ i ] ; } hash = h ; } return h ; }
"Returns a pseudorandom, uniformly distributed long value between 0 (inclusive) and the specified value (exclusive), drawn from this random number generator's sequence. <code> long nextLong ( long n ) { ",if ( n > 0 ) { long bits ; long val ; do { bits = ( ( long ) next ( 31 ) ) << 32 ; bits = bits | ( ( ( long ) next ( 32 ) ) & 0xffffffffL ) ; val = bits % n ; } while ( bits - val + ( n - 1 ) < 0 ) ; return val ; } throw new NotStrictlyPositiveException ( n ) ; }
Disconnect context from EJB(Local)Object so that context.getEJBObject() will throw exception. <code> void disconnectContext ( EJBContextImpl context ) { ,if ( ! isNullEJBObject ( context ) ) { context . getEJBObjectImpl ( ) . setRemoved ( false ) ; context . setEJBObjectImpl ( null ) ; context . setEJBStub ( null ) ; } if ( ! isNullEJBLocalObject ( context ) ) { context . getEJBLocalObjectImpl ( ) . setRemoved ( false ) ; context . setEJBLocalObjectImpl ( null ) ; } }
Returns the distance from the coordinate represented by p0 to the origin of the coordinate system. Note: This method is NON-ROBUST due to floating-point rounding errors. Inexact results according to floating-point rounding errors may be caused. <code> double getDistanceToOrigin ( double [ ] p0 ) { ,"double sum = 0.0 ; for ( int i = 0 , n = p0 . length ; i < n ; ++ i ) { sum += p0 [ i ] * p0 [ i ] ; } return Math . sqrt ( sum ) ; }"
Creates a new Base64Binary by parsing the given String as hex binary data. <code> Base64Binary newInstance ( String stringBase64Binary ) { ,if ( stringBase64Binary == null ) { return null ; } byte [ ] base64Bytes = new Base64 ( ) . decode ( stringBase64Binary ) ; return new Base64Binary ( base64Bytes ) ; }
Draw a Spiral made of many squares. <code> void drawSpiral ( ) { ,"Pen pen = new Pen ( 200 , 200 , myCanvas ) ; pen . setColor ( Color . BLUE ) ; for ( int i = 0 ; i < 52 ; i ++ ) { pen . move ( i * 5 ) ; pen . turn ( 90 ) ; } }"
creates header for environment log file <code> void saveHeader ( ) { ,"logFile = Transmitter . getProperty ( ""files.properties"" , ""task"" ) ; WriteFile . getInstance ( ) . openFile ( logFile ) ; String header = ""id;x;y"" ; WriteFile . getInstance ( ) . write ( header , logFile ) ; }"
radixSort() sorts an array of int keys (using all 32 bits of each key to determine the ordering). <code> int [ ] radixSort ( int [ ] keys ) { ,"int [ ] result ; result = countingSort ( keys , 0 ) ; for ( int i = 1 ; i < 8 ; i ++ ) { result = countingSort ( result , i ) ; } return result ; }"
Set the default web scope factory <code> void setWebScopeFactory ( @ Nonnull final IWebScopeFactory aWebScopeFactory ) { ,"ValueEnforcer . notNull ( aWebScopeFactory , ""WebScopeFactory"" ) ; s_aWebScopeFactory = aWebScopeFactory ; }"
"NOTE: This method is not blocking! (Code runs in thread) <code> void uploadAsync ( final List < GeoPoint > recordedGeoPoints , final String username , final String password , final String description , final String tags , final boolean addDateTags , final String pseudoFileName , final CommonCallback < Void > pCallback ) { ","new Thread ( new Runnable ( ) { public void run ( ) { try { upload ( recordedGeoPoints , username , password , description , tags , addDateTags , pseudoFileName ) ; } catch ( final Exception e ) { pCallback . onFailure ( e ) ; } } } , ""OSMUpload-Thread"" ) . start ( ) ; }"
Tests conversion to thrift representation. <code> void toThriftTest ( ) { ,MountOptions options = MountOptions . defaults ( ) ; MountTOptions thriftOptions = options . toThrift ( ) ; Assert . assertFalse ( thriftOptions . isReadOnly ( ) ) ; options . setReadOnly ( true ) ; thriftOptions = options . toThrift ( ) ; Assert . assertTrue ( thriftOptions . isReadOnly ( ) ) ; }
Notify start of loading process <code> void loadDataStart ( ) { ,monitor . startDataPhase ( ) ; loadPrepare ( ) ; }
Has to be called when the RunTime shuts down <code> void systemFinished ( ) { ,scheduleActions = null ; schedulableTasks = null ; }
Simulates the processing of a new incoming watermark. <code> void processWatermark ( long timestamp ) { ,openOperator ( ) ; testHarness . processWatermark ( new Watermark ( timestamp ) ) ; }
"Delete a multicast route from the MRIB. <code> void removeRoute ( String saddr , String gaddr ) { ","IpPrefix gpfx = IpPrefix . valueOf ( gaddr ) ; IpPrefix spfx = IpPrefix . valueOf ( 0 , 0 ) ; if ( saddr != null && ! saddr . equals ( ""*"" ) ) { spfx = IpPrefix . valueOf ( saddr ) ; } removeRoute ( spfx , gpfx ) ; }"
Get the SpellChecker to be used. <code> boolean GetSpell ( ) { ,if ( mxLinguSvcMgr != null ) mxSpell = mxLinguSvcMgr . getSpellChecker ( ) ; return mxSpell != null ; }
"Iterates over the remaining filter definitions. Returns the first applicable filter, or null if none apply. <code> Filter findNextFilter ( HttpServletRequest request ) { ",while ( ++ index < filterDefinitions . length ) { Filter filter = filterDefinitions [ index ] . getFilterIfMatching ( request ) ; if ( filter != null ) { return filter ; } } return null ; }
Use the magnetic field to compute true (geographic) north from the specified heading relative to magnetic north. <code> float computeTrueNorth ( float heading ) { ,if ( mGeomagneticField != null ) { return heading + mGeomagneticField . getDeclination ( ) ; } else { return heading ; } }
"Scan to a commit entry, starting at a given position in the journal. Return address of entry after commit if found, else -1. <code> long scanForCommit ( Journal jrnl , long startPosn ) { ",Iterator < JournalEntry > iter = jrnl . entries ( startPosn ) ; try { for ( ; iter . hasNext ( ) ; ) { JournalEntry e = iter . next ( ) ; if ( e . getType ( ) == JournalEntryType . Commit ) return e . getEndPosition ( ) ; } return - 1 ; } finally { Iter . close ( iter ) ; } }
"Accept a mouse release event and set the button's ""pressed"" property to true, if the model is armed. If the model is not armed, ignore the event. <code> void mouseReleased ( MouseEvent e ) { ",if ( e . getSource ( ) instanceof AbstractButton ) { AbstractButton button = ( AbstractButton ) e . getSource ( ) ; ButtonModel model = button . getModel ( ) ; if ( ( e . getModifiersEx ( ) & InputEvent . BUTTON1_DOWN_MASK ) != 0 ) { model . setPressed ( false ) ; model . setArmed ( false ) ; } } }
"Create a new Texture from a URL <code> URLTexture createURLTexture ( final String url , final TextureOptions options ) { ","Log . v ( TAG , String . format ( ""createURLTexture(%s, %s)"" , url , options ) ) ; final URLTexture texture = new URLTexture ( mGLState , url , options ) ; addTexture ( texture ) ; return texture ; }"
Checks if the device has a connection <code> boolean checkConnection ( ) { ,ConnectivityManager connectivityManager = ( ConnectivityManager ) mContext . getSystemService ( Context . CONNECTIVITY_SERVICE ) ; NetworkInfo networkInfo = connectivityManager . getActiveNetworkInfo ( ) ; return networkInfo != null && networkInfo . isConnected ( ) ; }
"Gets the image of the downside wall. <code> Image getWallDownImage ( int width , int height ) { ","if ( ( wallDown == null ) || ( - 1 == wallDown . getWidth ( null ) ) ) { wallDown = loadImage ( ""WallDown1.JPG"" , width , height ) ; } return wallDown ; }"
Returns a string representation of this object; useful for testing and debugging. <code> String toString ( ) { ,"StringBuilder sb = new StringBuilder ( ) ; sb . append ( ""{"" ) ; if ( getFailedEvaluations ( ) != null ) sb . append ( ""FailedEvaluations: "" + getFailedEvaluations ( ) ) ; sb . append ( ""}"" ) ; return sb . toString ( ) ; }"
"Get the default cert path builder type. This value can be set at run-time by the security property ""certpathbuilder.type"". If this property is not set, then the value returned is ""PKIX"". <code> String getDefaultType ( ) { ","String type = Security . getProperty ( ""certpathbuilder.type"" ) ; if ( type == null ) type = ""PKIX"" ; return type ; }"
Produces a stream of lines from a file. The result is a stream in order to close it later. This code is not inlined for the reason of Files.lines() throwing a checked IOException that must be caught. <code> Stream < String > path2Lines ( Path path ) { ,try { return Files . lines ( path ) ; } catch ( IOException e ) { throw new UncheckedIOException ( e ) ; } }
"Returns a list of FrameworkMethods - once per method, like there were no parameters. For JUnit to build names for IDE. <code> List < FrameworkMethod > returnListOfMethods ( ) { ","List < FrameworkMethod > resultMethods = new ArrayList < FrameworkMethod > ( ) ; for ( TestMethod testMethod : testMethodsList ) { addTestMethodOnce ( resultMethods , testMethod ) ; cacheMethodRunner ( testMethod ) ; testMethod . warnIfNoParamsGiven ( ) ; } return resultMethods ; }"
Overall progress of the submitted script <code> int getOverallProgress ( ) { ,int sum = 0 ; for ( int progress : jobIdToProgress . values ( ) ) { sum += progress ; } return sum / totalMRJobs ; }
"Return the contained, declared parameter with the given name, or null if there is none. Inherited and child parameters are not considered. <code> PCMetadata getDeclaredParameter ( String name ) { ",for ( PCMetadata parameter : parameters . values ( ) ) { if ( parameter . getName ( ) . equals ( name ) ) return parameter ; } return null ; }
Returns a pointer to the native Boxa object. <code> long getNativeBoxa ( ) { ,if ( mRecycled ) throw new IllegalStateException ( ) ; return mNativeBoxa ; }
"Send the response to the redirected destination while adding the character encoding of ""UTF-8"" as well as adding headers for cache-control and Pragma <code> void sendRedirectForRequestor ( String destination , HttpServletResponse response ) { ","common ( destination , response ) ; response . setHeader ( ""Cache-Control"" , ""no-cache, no-store"" ) ; sendRedirect ( response , destination ) ; }"
Get the server configuration context. <code> ConfigurationContext getServerConfigurationContext ( ) { ,ConfigurationContextService configurationContext = ( ConfigurationContextService ) PrivilegedCarbonContext . getThreadLocalCarbonContext ( ) . getOSGiService ( ConfigurationContextService . class ) ; return configurationContext . getServerConfigContext ( ) ; }
"Writes the input stream to the output stream. Input is done without a Reader object, meaning that the input is copied in its raw form. After it is copied it will close the streams. <code> int copyAndClose ( final InputStream in , final OutputStream out ) { ","try { return copy ( in , out ) ; } finally { IOUtils . closeQuietly ( in ) ; IOUtils . closeQuietly ( out ) ; } }"
"External function to compute a matrix of beta factors <code> Matrix backwardAlgorithm ( HmmModel model , int [ ] observations , boolean scaled ) { ","Matrix beta = new DenseMatrix ( observations . length , model . getNrOfHiddenStates ( ) ) ; backwardAlgorithm ( beta , model , observations , scaled ) ; return beta ; }"
"Add a new video submission to the datastore. <code> void addVideoSubmission ( String videoId , String articleId , String uploader , String authSubToken ) { ","PersistenceManager pm = PMF . get ( ) . getPersistenceManager ( ) ; try { VideoSubmission newSubmission = new VideoSubmission ( videoId , articleId , uploader , authSubToken ) ; newSubmission . save ( pm ) ; } finally { pm . close ( ) ; } }"
Delete rabbit by rabbitId <code> boolean deleteRabbit ( String id ) { ,"logRepository . deleteByRabbitId ( id ) ; logLevelDailyStatisticsRepository . deleteByRabbitId ( id ) ; rabbitRepository . deleteById ( id ) ; coreService . syncRabbitNameCache ( ) ; removeQueue ( ""errabbit.report."" + id ) ; return true ; }"
For concocting exception messages. <code> String getNameString ( String name ) { ,"StringBuffer sb = new StringBuffer ( tableName ) ; if ( name != null ) { sb . append ( ""("" ) . append ( name ) . append ( "")"" ) ; } return sb . toString ( ) ; }"
"Returns the minimum time, formatted according to ISO8601 <code> String getBeginTime ( ) { ",Date minTime = accessor . getMinTime ( ) ; return format ( minTime ) ; }
"Utility method for creating a tree from paths described by strings. <code> T createTreeFromStrings ( Set < String > paths , String separator , ITreeNodeHandler < T , String > handler ) { ","T root = handler . createRoot ( ) ; for ( String pathDescriptor : paths ) { String [ ] pathElements = pathDescriptor . split ( separator ) ; insert ( root , Arrays . asList ( pathElements ) , handler ) ; } return root ; }"
Returns a client for the first working pod in the collection <code> J4pClient clientForPod ( Iterable < Pod > pods ) { ,for ( Pod pod : pods ) { if ( KubernetesHelper . isPodRunning ( pod ) && filterPod ( pod ) ) { J4pClient client = clientForPod ( pod ) ; if ( client != null ) { return client ; } } } return null ; }
"Retrieves a generic time zone display name for a time zone ID. <code> String retrieveGenericDisplayName ( String id , int style , Locale locale ) { ","String [ ] names = retrieveDisplayNamesImpl ( id , locale ) ; if ( Objects . nonNull ( names ) ) { return names [ 6 - style ] ; } else { return null ; } }"
Resets the structure (header information of the instances) <code> void resetStructure ( ) { ,m_instances = null ; m_writeMode = WAIT ; }
Returns actual slide direction for the specified slide direction type. <code> CurtainSlideDirection getActualValue ( final CurtainSlideDirection slideDirection ) { ,if ( slideDirection . equals ( CurtainSlideDirection . random ) ) { final CurtainSlideDirection [ ] slideDirections = CurtainSlideDirection . values ( ) ; return slideDirections [ MathUtils . random ( slideDirections . length - 1 ) + 1 ] ; } else { return slideDirection ; } }
"Check whether two Objects are equal or both null. <code> boolean isEqualOrNull ( Object s1 , Object s2 ) { ",if ( s1 == null && s2 == null ) { return true ; } else if ( s1 != null && s2 != null && s1 . equals ( s2 ) ) { return true ; } return false ; }
Close the message receiver <code> boolean closeReceiver ( ) { ,queueConnection . close ( ) ; queueSession . close ( ) ; queueConsumer . close ( ) ; return true ; }
"Makes sure that provided token is of the expected type <code> void ensureExpectedToken ( Token expected , Token actual , Supplier < XContentLocation > location ) { ","if ( actual != expected ) { String message = ""Failed to parse object: expecting token of type [%s] but found [%s]"" ; throw new ParsingException ( location . get ( ) , String . format ( Locale . ROOT , message , expected , actual ) ) ; } }"
"Installs an uncaught exception handler that logs messages under the ""uncaught"" category. <code> void installUncaughtExceptionHandler ( ) { ","GWT . setUncaughtExceptionHandler ( new GWT . UncaughtExceptionHandler ( ) { public void onUncaughtException ( Throwable e ) { Log . severe ( e . getMessage ( ) , ""uncaught"" , e ) ; } } ) ; }"
"Apply the filters to the data in the order given and add the /Filter and /DecodeParms entries to the stream dictionary. If the filters have already been applied to the data (either externally, or internally) then the dictionary entries added. <code> void putFilterDictEntries ( PDFDictionary dict ) { ","if ( filters . size ( ) > 0 ) { List names = new java . util . ArrayList ( ) ; List parms = new java . util . ArrayList ( ) ; populateNamesAndParms ( names , parms ) ; putFilterEntries ( dict , names ) ; putDecodeParams ( dict , parms ) ; } }"
"Returns whether the kth argument to a function call has to be an expression. <code> boolean requiresExpression ( UnresolvedFunCall funCall , int k ) { ","List < Resolver > resolvers = funTable . getResolvers ( funCall . getFunName ( ) , funCall . getSyntax ( ) ) ; for ( Resolver resolver2 : resolvers ) { if ( ! resolver2 . requiresExpression ( k ) ) { return false ; } } return true ; }"
Tests IPv6 destination criterion. <code> void matchIPv6DstTest ( ) { ,"Criterion criterion = Criteria . matchIPv6Dst ( ipPrefix6 ) ; ObjectNode result = criterionCodec . encode ( criterion , context ) ; assertThat ( result , matchesCriterion ( criterion ) ) ; }"
"Run a SQL command which does not return a recordset: CREATE/INSERT/UPDATE/DELETE/DROP/etc. <code> boolean executeUpdate ( Connection conn , String command ) { ",Statement stmt = null ; try { stmt = conn . createStatement ( ) ; stmt . executeUpdate ( command ) ; return true ; } finally { if ( stmt != null ) { stmt . close ( ) ; } } }
Test to check to see if the .draw() method actually returns a Card <code> void DeckDrawIsCard ( ) { ,"Deck d = new Deck ( ) ; Object o = d . Draw ( ) ; if ( ! ( o instanceof Card ) ) { fail ( ""Object drawn from deck isn't card"" ) ; } }"
"Check intent action is or not exist. if exist return true else return false. <code> boolean intentActionExist ( Context context , String intentAction ) { ","final PackageManager packageManager = context . getPackageManager ( ) ; final Intent intent = new Intent ( intentAction ) ; List < ResolveInfo > list = packageManager . queryIntentActivities ( intent , PackageManager . MATCH_DEFAULT_ONLY ) ; return list . size ( ) > 0 ; }"
"Assigns created, person and gameround to the current values <code> void initializeAction ( Action action ) { ",action . setCreated ( new Date ( ) ) ; action . setPerson ( person ) ; action . setGameRound ( gameRound ) ; }
Returns the document-level URI. <code> PDURIDictionary getURI ( ) { ,COSDictionary uri = ( COSDictionary ) root . getDictionaryObject ( COSName . URI ) ; return uri == null ? null : new PDURIDictionary ( uri ) ; }
"Prefixes an input array with a 4-byte transportable length field. If the input data is null or has zero length, returns a 4-byte representation of 0. <code> byte [ ] lenPrefix ( byte [ ] data ) { ",if ( data == null || data . length == 0 ) { return fromInt ( 0 ) ; } return ByteBuffer . allocate ( 4 + data . length ) . putInt ( data . length ) . put ( data ) . array ( ) ; }
Retrieves the name of the object bound to the naming context that is also bound to the current thread. <code> String getThreadName ( ) { ,"Object obj = threadObjectBindings . get ( Thread . currentThread ( ) ) ; if ( obj == null ) { throw new NamingException ( sm . getString ( ""contextBindings.noContextBoundToThread"" ) ) ; } return obj . toString ( ) ; }"
Returns the boolean value of this property. Throws if not set and no default. <code> boolean getBoolean ( boolean defaultValue ) { ,"assert property . type ( ) == ConnectionProperty . Type . BOOLEAN ; return get_ ( BOOLEAN_CONVERTER , Boolean . toString ( defaultValue ) ) ; }"
"Gets the height in user coordinate space. By convention, the usual height of a RenderedImage is equal to 1.0F. <code> float getHeight ( ) { ",if ( boundingBox == null ) { boundingBox = myCRIF . getBounds2D ( paramBlock ) ; } return ( float ) boundingBox . getHeight ( ) ; }
Calculate a hash using AES. <code> long secureHash ( long x ) { ,"writeLong ( data , 0 , x ) ; aes . encrypt ( data , 0 , 16 ) ; return readLong ( data , 0 ) ; }"
"Gets the date using a date in string, using passed format. <code> Date getDate ( String date , String format ) { ","SimpleDateFormat formatter = new SimpleDateFormat ( format , Locale . ENGLISH ) ; return formatter . parse ( date ) ; }"
Returns the ring that constitute the boundary of this rectangle. <code> LinearRing2D asRing ( ) { ,"Point2D pts [ ] = new Point2D [ 4 ] ; pts [ 0 ] = new Point2D ( x0 , y0 ) ; pts [ 1 ] = new Point2D ( x0 + w , y0 ) ; pts [ 2 ] = new Point2D ( x0 + w , y0 + h ) ; pts [ 3 ] = new Point2D ( x0 , y0 + h ) ; return new LinearRing2D ( pts ) ; }"
"Checks that a string is both non-null and non-empty. <code> String checkNotBlank ( String argument , String message , Object ... args ) { ","Preconditions . checkNotNull ( argument , message , args ) ; Preconditions . checkArgument ( ! StringUtils . isBlank ( argument ) , message , args ) ; return argument ; }"
"A job that extracts data from a table. <code> Job extractJob ( final Bigquery bigquery , final String cloudStoragePath , final TableReference table ) { ","JobConfigurationExtract extract = new JobConfigurationExtract ( ) . setSourceTable ( table ) . setDestinationUri ( cloudStoragePath ) ; return bigquery . jobs ( ) . insert ( table . getProjectId ( ) , new Job ( ) . setConfiguration ( new JobConfiguration ( ) . setExtract ( extract ) ) ) . execute ( ) ; }"
Tests EditLogFileOutputStream doesn't throw NullPointerException on being abort/abort sequence. See HDFS-2011. <code> void testEditLogFileOutputStreamAbortAbort ( ) { ,"EditLogFileOutputStream editLogStream = new EditLogFileOutputStream ( conf , TEST_EDITS , 0 ) ; editLogStream . abort ( ) ; editLogStream . abort ( ) ; }"
Returns the variable for which there is evidence. <code> List < Node > getVariablesInEvidence ( ) { ,List < Node > nodes = new ArrayList < Node > ( ) ; for ( int i = 0 ; i < getNumNodes ( ) ; i ++ ) { if ( proposition . getSingleCategory ( i ) != - 1 ) { nodes . add ( getNode ( i ) ) ; } } return nodes ; }
"Test of indexOf method, of class IntegerArrayList. <code> void testIndexOf ( ) { ","Random rng = new Random ( ) ; final int N = 6 ; for ( int i = 0 ; i < N ; i ++ ) { int number = rng . nextInt ( 50 ) ; add ( number ) ; } for ( Integer i : referenceList ) { int referencePos = referenceList . indexOf ( i ) ; assertEquals ( referencePos , list . indexOf ( i ) ) ; } }"
"Create a PathFileObject whose binary name can be inferred from the relative path to a sibling. <code> PathFileObject createSiblingPathFileObject ( JavacPathFileManager fileManager , final Path path , final String relativePath ) { ","return new PathFileObject ( fileManager , path ) { @ Override String inferBinaryName ( Iterable < ? extends Path > paths ) { return toBinaryName ( relativePath , ""/"" ) ; } } ; }"
Check if the file exists. <code> boolean checkSDFile ( String filename ) { ,File f = new File ( filename ) ; if ( f . exists ( ) ) return true ; return false ; }
sets the feature values for this tuple <code> void setFeat ( float [ ] f ) { ,floatFeat = new float [ f . length ] ; for ( int i = 0 ; i < f . length ; i ++ ) { floatFeat [ i ] = f [ i ] ; } }
"Creates the temp directory for the PDF, HTML and Java Script files. Note: The directory is deleted as soon as the jvm terminates. <code> void createTmpDir ( ) { ","String tmpDirPath = FileUtils . getHomeConfigDir ( ) . getAbsolutePath ( ) + ""/tmp"" ; tmpDir = new File ( tmpDirPath ) ; tmpDir . mkdirs ( ) ; tmpDir . deleteOnExit ( ) ; }"
"Flatten this object in to a Parcel. <code> void writeToParcel ( Parcel dest , int flags ) { ","dest . writeString ( name ) ; dest . writeByte ( ( byte ) ( gender == Gender . MALE ? 1 : gender == Gender . FEMALE ? 2 : 0 ) ) ; dest . writeString ( firstName ) ; dest . writeString ( lastName ) ; dest . writeString ( picture != null ? picture . getAbsolutePath ( ) : """" ) ; }"
"This rethrow the exception providing an allowed Exception in first priority, even it is a Runtime exception <code> RuntimeException rethrowAllowedTypeFirst ( final Throwable t , Class < T > allowedType ) { ",if ( t instanceof Error ) { if ( t instanceof OutOfMemoryError ) { OutOfMemoryErrorDispatcher . onOutOfMemory ( ( OutOfMemoryError ) t ) ; } throw ( Error ) t ; } else if ( allowedType . isAssignableFrom ( t . getClass ( ) ) ) { throw ( T ) t ; } else { throw peel ( t ) ; } }
Deletes algorithm descriptions and help files <code> void deleteDescriptionFiles ( ) { ,final File file = new File ( getGrassDescriptionFolder ( ) ) ; final String [ ] files = file . list ( ) ; if ( files != null ) { for ( final String element : files ) { new File ( file . getAbsoluteFile ( ) + File . separator + element ) . delete ( ) ; } } }
"Adds the specified expr as a non-final candidate <code> void addNonFinalCandidate ( String alias , ExprNodeDesc expr ) { ","if ( nonFinalPreds . get ( alias ) == null ) { nonFinalPreds . put ( alias , new ArrayList < ExprNodeDesc > ( ) ) ; } nonFinalPreds . get ( alias ) . add ( expr ) ; }"
BootstrapStandby when the existing NN is active <code> void testBootstrapStandbyWithActiveNN ( ) { ,cluster . transitionToActive ( 0 ) ; bootstrapStandbys ( ) ; }
"Set a timeout. Starts a (daemon) thread which checks if the timeout has elapsed. <code> void setTimeout ( int timeoutInSeconds , Runnable timeoutRunnable ) { ","Timeout t = new Timeout ( timeoutInSeconds , timeoutRunnable ) ; Thread timeoutThread = new Thread ( t ) ; timeoutThread . setDaemon ( true ) ; timeoutThread . start ( ) ; }"
Add a trace listener for the purposes of debugging and diagnosis. <code> void addTraceListener ( TraceListener tl ) { ,m_transformer . setDebug ( true ) ; if ( null == m_traceListeners ) m_traceListeners = new Vector ( ) ; m_traceListeners . addElement ( tl ) ; }
Returns a string representation of this object; useful for testing and debugging. <code> String toString ( ) { ,"StringBuilder sb = new StringBuilder ( ) ; sb . append ( ""{"" ) ; if ( getVolume ( ) != null ) sb . append ( ""Volume: "" + getVolume ( ) ) ; sb . append ( ""}"" ) ; return sb . toString ( ) ; }"
"Basic listener function to signal ImageBackend that task has started. <code> void onStart ( long id , TaskImage input , TaskImage result , TaskInfo . Destination aDestination ) { ","TaskInfo job = new TaskInfo ( id , input , result , aDestination ) ; final ImageProcessorListener listener = mImageTaskManager . getProxyListener ( ) ; listener . onStart ( job ) ; }"
Stop wav play back <code> void stopWavFile ( ) { ,m_clip . stop ( ) ; m_clip . flush ( ) ; m_clip . close ( ) ; }
Returns a formatted string of the Calendar value timePlaced. <code> String getTimePlaced ( ) { ,"String time = doubleDigit ( timePlaced . get ( 11 ) ) + "":"" + doubleDigit ( timePlaced . get ( 12 ) ) + "":"" + doubleDigit ( timePlaced . get ( 13 ) ) + "":"" + tripleDigit ( timePlaced . get ( 14 ) ) ; return time ; }"
Return the branch qualifier of this transaction. <code> byte [ ] getBranchQualifier ( ) { ,if ( branchId . length == 0 ) return branchId ; else return ( byte [ ] ) branchId . clone ( ) ; }
"serializes the given objects to the specified stream. <code> void writeAll ( OutputStream stream , Object [ ] o ) { ",ObjectOutputStream oos ; int i ; if ( ! ( stream instanceof BufferedOutputStream ) ) { stream = new BufferedOutputStream ( stream ) ; } oos = new ObjectOutputStream ( stream ) ; for ( i = 0 ; i < o . length ; i ++ ) { oos . writeObject ( o [ i ] ) ; } oos . flush ( ) ; oos . close ( ) ; }
"Formats bytes, e.g. 1000 -> 1kB, -2500 -> -2.5 kB <code> String formatBytes ( long bytes ) { ","if ( bytes < 0 ) { return ""-"" . concat ( formatBytes ( - bytes ) ) ; } int unit = 1000 ; if ( bytes < unit ) { return bytes + "" B"" ; } int exp = ( int ) ( Math . log ( bytes ) / Math . log ( unit ) ) ; char pre = ""kMGTPE"" . charAt ( exp - 1 ) ; return format ( ""%.1f %sB"" , bytes / Math . pow ( unit , exp ) , pre ) ; }"
"Extract a parameter value from a request. <code> String getDefault ( final HttpServletRequest request , final String name , final String defaultValue ) { ",final String val = request . getParameter ( name ) ; return null == val ? defaultValue : val ; }
"Safely converts a string into an integer. <code> int toInt ( String val , int fail ) { ",if ( TextUtils . isEmpty ( val ) ) return fail ; try { return Integer . parseInt ( val ) ; } catch ( NumberFormatException nfe ) { } return fail ; }
Creates a preferences object as described in the extension's xml. <code> IJavaFoldingPreferenceBlock createPreferences ( ) { ,if ( fHasPreferences ) { IJavaFoldingPreferenceBlock prefs = ( IJavaFoldingPreferenceBlock ) fElement . createExecutableExtension ( PREFERENCES_CLASS ) ; return prefs ; } else { return new EmptyJavaFoldingPreferenceBlock ( ) ; } }
"Mix the given double into the provided long hash. <code> long mixDoubleBits ( long hash , double d ) { ",hash *= 31L ; if ( d == 0.0d ) return hash ; return hash + Double . doubleToLongBits ( d ) ; }
Returns the current elapsed time since the timer was started. Returns 0 if the timer is not running. <code> double peekAtTime ( ) { ,if ( ! timing ) { return 0. ; } long diff = System . currentTimeMillis ( ) - startTime ; double timeInSeconds = ( double ) diff / 1000.0 ; return timeInSeconds ; }
Find Cluster by Id <code> RemoteAmbariClusterEntity findById ( Long clusterId ) { ,"TypedQuery < RemoteAmbariClusterEntity > query = entityManagerProvider . get ( ) . createNamedQuery ( ""remoteAmbariClusterById"" , RemoteAmbariClusterEntity . class ) ; query . setParameter ( ""clusterId"" , clusterId ) ; return daoUtils . selectSingle ( query ) ; }"
"Method call from studentManager.java and student.java. <code> void listStudents ( IStudentLister lister , String code ) { ",lister . clearStudents ( ) ; StudentMap student = studentManager . findStudentsByUnit ( code ) ; for ( Integer number : student . keySet ( ) ) lister . addStudent ( student . get ( number ) ) ; }
"Display the PreferenceModel Editor Dialog Box. Dialog box is modal. <code> void showPreferenceDialog ( Frame owner , String dlgTitle , PreferenceModel model , Set < PreferenceEditor . PROPERTY > props ) { ","PreferenceDialog dlg ; dlg = new PreferenceDialog ( owner , dlgTitle , model , props ) ; dlg . showDlg ( ) ; }"
Gets input from player entered on command line. <code> String getInput ( ) { ,"System . out . print ( ""> "" ) ; String currentInput ; Scanner input = new Scanner ( System . in ) ; currentInput = input . nextLine ( ) ; return currentInput ; }"
Returns value of i modulo the number of edges in this DirectedEdgeStar (i.e. the remainder when i is divided by the number of edges) <code> int getIndex ( int i ) { ,int modi = i % outEdges . size ( ) ; if ( modi < 0 ) modi += outEdges . size ( ) ; return modi ; }
"Opens a server for a specified user. Usually, this constructor would be used when communicating with a remote server. <code> void closeServer ( PointerRef serverHandle ) { ","if ( serverHandle == null ) { throw new IllegalArgumentException ( ""Invalid server handle provided"" ) ; } PointerRef pServer = ( PointerRef ) serverHandle ; if ( ! PointerRef . isNull ( pServer ) ) { VecsAdapter . VmAfdCloseServer ( pServer ) ; } }"
"Returns a map of base service URLs keyed by service id. <code> Map < String , String > getBaseUrls ( ) { ","HashMap < String , String > urls = new HashMap < String , String > ( ) ; urls . put ( SVC_DAV , getDavBase ( ) ) ; urls . put ( SVC_DAV_PRINCIPAL , getDavUserPrincipalUrl ( ) ) ; return urls ; }"
"Get a user's profile list <code> Collection < String > getUserProfilesForUser ( UserInfoInterface userInfo , String username ) { ","Collection < String > retObj = AccessControlManager . getUserDataAccess ( ) . getUserProfilesForUser ( userInfo , username ) ; return retObj ; }"
"must be after addBegin <code> void appendText ( int ari , String text ) { ","List < XrefEntry > list = map . get ( ari ) ; if ( list == null ) { throw new RuntimeException ( ""Must be after addBegin (1)"" ) ; } XrefEntry xe = list . get ( list . size ( ) - 1 ) ; if ( xe . content == null ) { xe . content = text ; } else { xe . content += text ; } }"
Check if current version is previous to given. <code> Boolean isLess ( HaxeVersion otherVersion ) { ,double currentVersion = Double . parseDouble ( version ) ; double givenVersion = Double . parseDouble ( otherVersion . version ) ; return currentVersion < givenVersion ; }
"Given a list of words in one string in the form of ""(word1|word2|...|wordn)"", remove the word from the list if it is in the list. <code> String removeFromWordList ( String word , String wordList ) { ","String newWordList = wordList ; newWordList = newWordList . replaceAll ( ""|b"" + word + ""|b"" , """" ) ; newWordList = newWordList . replaceAll ( ""^||"" , """" ) ; newWordList = newWordList . replaceAll ( ""||||"" , ""|"" ) ; newWordList = newWordList . replaceAll ( ""||$"" , """" ) ; return newWordList ; }"
Return a simple string representation... <code> String toString ( ) { ,"switch ( type ) { case ( COMPLETELY_RANDOM ) : return ""Completely Random"" ; case ( RANDOM_CLOSE ) : return ""Random, Close (Num to search: "" + randomCloseNumber + "")"" ; case ( CLOSEST ) : return ""Closest"" ; } return ""Unknown SearchPattern"" ; }"
"Sets up the given document for the default partitioning. <code> void setupCDocument ( IDocument document , IPath location , LocationKind locationKind ) { ","IDocCommentOwner owner = getDocumentationCommentOwner ( location , locationKind ) ; setupCDocumentPartitioner ( document , fDocumentPartitioning , owner ) ; }"
Enable or disable current action from event. <code> boolean setEnabled ( AnActionEvent e ) { ,ImageComponentDecorator decorator = getImageComponentDecorator ( e ) ; Presentation presentation = e . getPresentation ( ) ; presentation . setEnabled ( decorator != null ) ; return presentation . isEnabled ( ) ; }
"Returns the response as a character stream decoded with the charset of the Content-Type header. If that header is either absent or lacks a charset, this will attempt to decode the response body as UTF-8. <code> Reader charStream ( ) { ","if ( reader == null ) { reader = new InputStreamReader ( byteStream ( ) , charset ( ) ) ; } return reader ; }"
Set up the audio track to contact the driver. <code> void initializeAudioTrack ( ) { ,"audioTrack = new AudioTrack ( AudioManager . STREAM_MUSIC , sampleRateInHz , AudioFormat . CHANNEL_OUT_MONO , AudioFormat . ENCODING_PCM_16BIT , sampleRateInHz * 2 , AudioTrack . MODE_STATIC ) ; audioTrack . setVolume ( AudioTrack . getMaxVolume ( ) ) ; }"
"Report a failed assertion due to a difference in the stored versus the published events. <code> void reportDifferenceInStoredVsPublished ( Collection < DomainEventMessage > storedEvents , Collection < EventMessage > publishedEvents , Throwable probableCause ) { ","StringBuilder sb = new StringBuilder ( ""The stored events do not match the published events."" ) ; appendEventOverview ( sb , storedEvents , publishedEvents , ""Stored events"" , ""Published events"" ) ; appendProbableCause ( probableCause , sb ) ; throw new AxonAssertionError ( sb . toString ( ) ) ; }"
get the scene root <code> BranchGroup getSceneRoot ( ) { ,if ( sceneRoots . size ( ) > transferableGraphicNumber ) { return ( BranchGroup ) sceneRoots . elementAt ( transferableGraphicNumber ) ; } else { return null ; } }
"A convenience method for getting ARGB pixels from an image. This tries to avoid the performance penalty of BufferedImage.getRGB unmanaging the image. <code> int [ ] getRGB ( BufferedImage image , int x , int y , int width , int height , int [ ] pixels ) { ","int type = image . getType ( ) ; if ( type == BufferedImage . TYPE_INT_ARGB || type == BufferedImage . TYPE_INT_RGB ) return ( int [ ] ) image . getRaster ( ) . getDataElements ( x , y , width , height , pixels ) ; return image . getRGB ( x , y , width , height , pixels , 0 , width ) ; }"
"Creates the secure symbolic link for tomcat l2 go repository. <code> void createSecureSymbolicLinkForTomcatL2GoRepository ( String pfad , String filenamePreffix , String filenameFormat ) { ","String secureFilename = createSecureFileName ( ) ; Runtime runCmd = Runtime . getRuntime ( ) ; String command = ""ln -s "" + pfad + ""/"" + filenamePreffix + ""."" + filenameFormat + "" "" + tomcatL2GoVideoRepository + ""/"" + secureFilename + ""."" + filenameFormat ; runCmd . exec ( command ) ; }"
Static method to get a Game by Arena <code> Game getGame ( Arena a ) { ,for ( Game g : GameList ) for ( Arena a2 : g . arenas ) if ( a . equals ( a2 ) ) return g ; return null ; }
Set the current location. <code> void setCurrentLocation ( Location currentLocation ) { ,"if ( currentLocation == null ) throw new NullPointerException ( ) ; Log . d ( TAG , ""current location. location="" + currentLocation . toString ( ) ) ; synchronized ( ARData . currentLocationLock ) { ARData . currentLocation = currentLocation ; } onLocationChanged ( currentLocation ) ; }"
"Adds the given public key as invalid SSH key to the given list. <code> String addInvalidKey ( List < Optional < AccountSshKey >> keys , String pub ) { ","AccountSshKey . Id keyId = new AccountSshKey . Id ( new Account . Id ( 1 ) , keys . size ( ) + 1 ) ; AccountSshKey key = new AccountSshKey ( keyId , pub ) ; key . setInvalid ( ) ; keys . add ( Optional . of ( key ) ) ; return AuthorizedKeys . INVALID_KEY_COMMENT_PREFIX + key . getSshPublicKey ( ) + "" "" ; }"
Destroy URL Rewrite Filter. <code> void destroyURLRewrite ( ) { ,URL_REWRITE_FILTER . destroy ( ) ; URL_REWRITER = null ; }
Return a string representation of the object <code> String toString ( ) { ,"String arrow = otherIsAncestor ? "" --> "" : "" <-- "" ; return """" + base + arrow + other + "" [type "" + Integer . toHexString ( type ) + ""]"" ; }"
Factory Method to create a DatePanel customized to show holidays. It takes care of all the initial setup. <code> DatePanel createDatePanel ( boolean showWeekNumbers ) { ,DatePanel retorno = new DatePanel ( showWeekNumbers ) ; configureDatePanel ( retorno ) ; return retorno ; }
Clean up expired entries in our cache. <code> void cleanCache ( ) { ,long invalidCacheTime = System . currentTimeMillis ( ) - CACHE_TIME ; for ( String uuid : cachedEntries . keySet ( ) ) { if ( cachedEntries . get ( uuid ) . getCacheTime ( ) <= invalidCacheTime ) cachedEntries . remove ( uuid ) ; } }
A list of ProcessType names. <code> java . util . List < ProcessType > getProcesses ( ) { ,if ( processes == null ) { processes = new java . util . ArrayList < ProcessType > ( ) ; } return processes ; }
Allocate space for a block of indices <code> int allocateSpace ( final int blockCount ) { ,int startBlock = _entries . size ( ) ; if ( blockCount > 0 ) { int limit = blockCount - 1 ; int index = startBlock + 1 ; for ( int k = 0 ; k < limit ; k ++ ) { _entries . add ( index ++ ) ; } _entries . add ( POIFSConstants . END_OF_CHAIN ) ; } return startBlock ; }
Return offset for bins of a given level. <code> int binOffset ( int level ) { ,assert ( level >= 0 && level < binOffsets . length ) ; return binOffsets [ level ] ; }
Get assessment from id string. <code> AssessmentIfc getAssessment ( String assessmentId ) { ,try { AssessmentService service = new AssessmentService ( ) ; return service . getAssessment ( assessmentId ) ; } catch ( Exception ex ) { throw new AssessmentServiceException ( ex ) ; } }
Retrieve the temporary directory where to store/load payloads <code> File getTmpDir ( ProbeTestRun testRun ) { ,"File tmpDir = new File ( configuration . getWorkspace ( ) + ""/tmp/"" + testRun . getVersion ( ) ) ; if ( ! tmpDir . exists ( ) ) { tmpDir . mkdirs ( ) ; } return tmpDir ; }"
Implements the SystrayService.addPopupMessageListener method. If activePopupHandler is still not available record the listener so we can add him later. <code> void addPopupMessageListener ( SystrayPopupMessageListener listener ) { ,if ( activePopupHandler != null ) activePopupHandler . addPopupMessageListener ( listener ) ; else { if ( earlyAddedListeners == null ) earlyAddedListeners = new ArrayList < SystrayPopupMessageListener > ( ) ; earlyAddedListeners . add ( listener ) ; } }
Returns a new working memory with rules loaded from the given namespaces. <code> WorkingMemory loadRules ( String ... namespaces ) { ,for ( String namespace : namespaces ) require . invoke ( Symbol . intern ( namespace ) ) ; return ( WorkingMemory ) makeSession . invoke ( namespaces ) ; }
Return whether the given resource is either equal to or a descendant of one of the given roots. <code> boolean isDescendantOfRoots ( IResource resource ) { ,for ( int l = 0 ; l < roots . length ; l ++ ) { IResource root = roots [ l ] ; if ( root . getFullPath ( ) . isPrefixOf ( resource . getFullPath ( ) ) ) { return true ; } } return false ; }
Returns the lines of an InputStream as a list of Strings. <code> List < String > readLines ( InputStream input ) { ,final InputStreamReader reader = new InputStreamReader ( input ) ; return readLines ( reader ) ; }
"Create a new Todo. <code> void createTodo ( final String listId , final Todo todo ) { ",Date now = Calendar . getInstance ( ) . getTime ( ) ; todo . setCreationDate ( now ) ; TodoList todoList = todoListsManager . findTodoList ( listId ) ; todo . setTodoList ( todoList ) ; todoList . getTodos ( ) . add ( todo ) ; todoDAO . saveTodo ( todo ) ; todoListsManager . updateTodoList ( todoList ) ; }
"Paints the wrapped icon with this AlphaIcon's transparency. <code> void paintIcon ( Component c , Graphics g , int x , int y ) { ","Graphics2D g2 = ( Graphics2D ) g . create ( ) ; g2 . setComposite ( AlphaComposite . SrcAtop . derive ( alpha ) ) ; icon . paintIcon ( c , g2 , x , y ) ; g2 . dispose ( ) ; }"
Adds a link to the Links property. <code> void addLink ( String link ) { ,if ( _links == null ) { _links = new LinkedList ( ) ; } _links . add ( link ) ; }
"Return the underlying Map from the JMS MapMessage instance. <code> Map < String , Object > getMapFromMessageBody ( MapMessage message ) { ","final HashMap < String , Object > map = new HashMap < String , Object > ( ) ; final ActiveMQMapMessage mapMessage = ( ActiveMQMapMessage ) message ; final Map < String , Object > contentMap = mapMessage . getContentMap ( ) ; if ( contentMap != null ) { map . putAll ( contentMap ) ; } return contentMap ; }"
"Builds a key for validators - used when caching validators. <code> String buildValidatorKey ( Class clazz , String context ) { ","StringBuilder sb = new StringBuilder ( clazz . getName ( ) ) ; sb . append ( ""/"" ) ; sb . append ( context ) ; return sb . toString ( ) ; }"
"Add the endpoints of the way to nodes, outerNodes <code> void addNodes ( Way way ) { ",addNodes ( way . firstNode ( ) ) ; addNodes ( way . lastNode ( ) ) ; }
"Get the contents of a Reader as a list of Strings, one entry per line. This method buffers the input internally, so there is no need to use a BufferedReader. <code> List readLines ( Reader input ) { ",BufferedReader reader = new BufferedReader ( input ) ; List list = new ArrayList ( ) ; String line = reader . readLine ( ) ; while ( line != null ) { list . add ( line ) ; line = reader . readLine ( ) ; } return list ; }
"Controls if the input value is a valid value for component color-chooser. <code> void controlColor ( Type type , String value ) { ",if ( ( type . getValueList ( ) != null ) && ( type . getValueList ( ) . get ( value ) == null ) && ( TagParser . parseColor ( value ) == null ) ) throw new ParserException ( ) ; else type . setValue ( value ) ; }
Returns a list with all the schemas. <code> List < String > getSchemas ( ) { ,List < String > schemas = new ArrayList < String > ( tablesBySchema . keySet ( ) ) ; Collections . sort ( schemas ) ; return schemas ; }
"Handle an exception which occurred during the publishing of a log record. <code> void handleWriteError ( String record , Throwable ex ) { ","if ( ! writeErroroccurred ) { Message msg = ERR_LOGGER_ERROR_WRITING_RECORD . get ( publisherConfigDN . toString ( ) , stackTraceToSingleLineString ( ex ) ) ; System . err . println ( msg ) ; writeErroroccurred = true ; } }"
"Sets the buffering mode of the Listener to record and return only the most recent (the last, the latest) AccelerationUpdate. <code> void setModeLastAccelerationUpdate ( ) { ",accelerationBufferMode = LAST_UPDATE ; if ( ! accelerationUpdates . isEmpty ( ) ) { Object temp = accelerationUpdates . lastElement ( ) ; accelerationUpdates . removeAllElements ( ) ; accelerationUpdates . addElement ( temp ) ; } }
Initialized all the tabs for a given window <code> void initializeWindow ( String windowId ) { ,"if ( ! useCache ( ) || initializedWindows . contains ( windowId ) ) { return ; } Window window = OBDal . getInstance ( ) . get ( Window . class , windowId ) ; for ( Tab tab : window . getADTabList ( ) ) { initializeTab ( tab ) ; } initializedWindows . add ( windowId ) ; }"
"A list of data points, each of which represents 15 minutes of activity. <code> java . util . List < SendDataPoint > getSendDataPoints ( ) { ",if ( sendDataPoints == null ) { sendDataPoints = new com . amazonaws . internal . ListWithAutoConstructFlag < SendDataPoint > ( ) ; sendDataPoints . setAutoConstruct ( true ) ; } return sendDataPoints ; }
"convert the char array into signed byte starting at cstart for length chars into b starting at bstart <code> void toByte ( char [ ] c , int cstart , byte [ ] b , int bstart , int length ) { ","int bi = bstart ; int ci = cstart ; for ( int i = 0 ; i < length ; i ++ , bi ++ , ci ++ ) { if ( c [ ci ] > 127 ) { b [ bi ] = ( byte ) ( c [ ci ] - 256 ) ; } else { b [ bi ] = ( byte ) ( c [ ci ] ) ; } } }"
"Long output format: &lt;name of opcode&gt; ""[""&lt;opcode number&gt;""]"" ""(""&lt;length of instruction&gt;"")"" <code> String toString ( boolean verbose ) { ","if ( verbose ) return getName ( ) + ""["" + opcode + ""]("" + length + "")"" ; else return getName ( ) ; }"
"Return root schema with schema owner as the given user. <code> SchemaPlus createRootSchema ( final String userName , final SchemaConfigInfoProvider provider ) { ","final String schemaUser = isImpersonationEnabled ? userName : ImpersonationUtil . getProcessUserName ( ) ; final SchemaConfig schemaConfig = SchemaConfig . newBuilder ( schemaUser , provider ) . build ( ) ; return createRootSchema ( schemaConfig ) ; }"
Used to identify which toolboxes this plugin tool should be listed in. <code> String [ ] getToolbox ( ) { ,"String [ ] ret = { ""CostTools"" } ; return ret ; }"
This method calculate the variance of a list of integers <code> double calculateVariance ( List < Integer > list ) { ,"double deviation = 0 ; double mean = calculateMean ( list ) ; for ( Integer val : list ) { deviation += Math . pow ( mean - val , 2 ) ; } return Math . pow ( Math . sqrt ( deviation / list . size ( ) ) , 2 ) ; }"
"Copies the first len bytes of array src into array dst with offset offset <code> void copyBytes ( byte [ ] src , byte [ ] dst , int offset , int len ) { ",for ( int k = 0 ; k < len ; k ++ ) dst [ offset + k ] = src [ k ] ; }
Sets the longitude associated with this address. <code> void setLongitude ( double longitude ) { ,mLongitude = longitude ; mHasLongitude = true ; }
"Calculates the amount of bytes, per second, that the specified file was processed at. <code> long calculateProcessingSpeed ( final File file , final long startTime , final long endTime ) { ",long duration = endTime - startTime ; duration /= 1000 ; long speed = file . length ( ) / duration ; return speed ; }
This will get the character from the name. <code> String getCharacter ( String name ) { ,String character = NAME_TO_CHARACTER . get ( name ) ; if ( character == null ) { character = name ; } return character ; }
get tags via fast settings <code> String [ ] getFastTags ( String sentence ) { ,"String [ ] tokens = sentence . split ( "" "" ) ; boolean [ ] styles = Utils . getStyles ( tokens ) ; String [ ] pos = new String [ styles . length ] ; for ( int i = 0 ; i < pos . length ; i ++ ) { pos [ i ] = tokens [ i ] + ""_"" ; pos [ i ] += styles [ i ] ? ""NNP"" : ""OTHER"" ; } return pos ; }"
hide the soft keyboard for the passed EditText <code> void hideSoftInput ( EditText edit ) { ,"if ( edit == null ) { return ; } InputMethodManager imm = getInputMethodManager ( edit ) ; if ( imm != null ) { imm . hideSoftInputFromWindow ( edit . getWindowToken ( ) , 0 ) ; } }"
Retrieves a Collection object consisting of all the org.opennms.netmgt.config.Threshold objects which make up the specified thresholding group. <code> Collection < Basethresholddef > getThresholds ( String groupName ) { ,Group group = getGroup ( groupName ) ; Collection < Basethresholddef > result = new ArrayList < Basethresholddef > ( ) ; result . addAll ( group . getThresholdCollection ( ) ) ; result . addAll ( group . getExpressionCollection ( ) ) ; return result ; }
Validate sorts for classes. <code> boolean validateSortsForClasses ( Class [ ] clazzes ) { ,"boolean isValid = true ; for ( SortOption sortOption : sortOptions ) { isValid = isValid && validateSortOptionForClasses ( sortOption , clazzes ) ; } return isValid ; }"
Check if this result set contains results for the specified validation level. <code> boolean containsValidationResultLayerForLevel ( @ Nonnull final EValidationLevel eValidationLevel ) { ,"if ( eValidationLevel == null ) throw new NullPointerException ( ""validationLevel"" ) ; for ( final ValidationPyramidResultLayer aValidationResultLayer : m_aValidationResultLayers ) if ( aValidationResultLayer . getValidationLevel ( ) . equals ( eValidationLevel ) ) return true ; return false ; }"
Convert an element into its string representation <code> String getString ( Element e ) { ,"StringBuffer b = new StringBuffer ( ) ; getString ( e , b ) ; return b . toString ( ) ; }"
Clear notification from notification area <code> void cancelNotification ( ) { ,"mNotifMgr . cancelAll ( ) ; mNotifBuilder = null ; cancelWithDelay ( txService , 2000 ) ; }"
"Informs all registered ResultListener that a new result has been removed. <code> void fireResultRemoved ( Result r , Result parent ) { ","for ( int i = resultListenerList . size ( ) ; -- i >= 0 ; ) { resultListenerList . get ( i ) . resultRemoved ( r , parent ) ; } }"
Calcula o volume total de uma lista de caixas <code> int volumeTotal ( List < Box > _lstBoxes ) { ,int volumeTotal = 0 ; if ( _lstBoxes . size ( ) > 0 ) { for ( Box box : _lstBoxes ) { volumeTotal += box . getVolume ( ) ; } return volumeTotal ; } return - 1 ; }
"Update the metrics source gauge for how many bytes were transferred during the last time window. <code> void updateBytesTransferred ( boolean updateWrite , long bytes ) { ",if ( updateWrite ) { instrumentation . updateBytesWrittenInLastSecond ( bytes ) ; } else { instrumentation . updateBytesReadInLastSecond ( bytes ) ; } }
"Returns a string list representation of this object (if the percent is null) then NaN will be output instead. Format is percent,distribution. <code> String toString ( ) { ",StringBuilder str = new StringBuilder ( ) ; if ( getPercent ( ) != null ) { str . append ( getPercent ( ) * 100.0d ) ; } else { str . append ( Double . NaN ) ; } str . append ( SEP ) ; str . append ( getDistribution ( ) . lowerName ( ) ) ; return str . toString ( ) ; }
"Sets the input layer for this neural network. <code> void setInputLayer ( final int numNeurons , final InputFunction inputFunction , final TransferFunction transferFunction ) { ","final Layer layer = getLayer ( numNeurons , inputFunction , transferFunction ) ; mNeuralNetwork . setInputNeurons ( layer . getNeurons ( ) ) ; mNeuralNetwork . addLayer ( 0 , layer ) ; }"
"Test for any completely empty container of either type Used, for example, in canExtractItem() logic <code> boolean isEmptyContainer ( ItemStack var4 ) { ",if ( var4 . getItem ( ) instanceof ItemCanisterGeneric ) return var4 . getItemDamage ( ) == ItemCanisterGeneric . EMPTY ; return FluidContainerRegistry . isEmptyContainer ( var4 ) ; }
Returns the Class name without the package (if any) <code> String getShortName ( Class c ) { ,String className = c . getName ( ) ; int firstChar = className . lastIndexOf ( '.' ) + 1 ; if ( firstChar > 0 ) { className = className . substring ( firstChar ) ; } return className ; }
To check whether the dimensions are empty/null <code> boolean checkNullForDims ( Object object ) { ,Integer [ ] dimensions = ( Integer [ ] ) object ; for ( Integer dimension : dimensions ) { if ( null != dimension ) { return false ; } } return true ; }
Finds all the links with a given target. <code> List < MigrationLink > findLinksTo ( int target ) { ,ArrayList < MigrationLink > mls = new ArrayList < MigrationLink > ( ) ; for ( MigrationLink ml : migrationLinks ) { if ( ml . target == target ) mls . add ( ml ) ; } return mls ; }
Test architecture exporter monitor message. <code> void testArchitectureExporterMonitorMessage ( ) { ,"final ArchitectureExporter architectureExporter = new ArchitectureExporter ( ) ; final String monitorMessage = architectureExporter . monitorMessage ( ) ; Assert . assertTrue ( ""Exporting architecture."" . equals ( monitorMessage ) ) ; }"
Get the password of the HTTPS proxy <code> String getHttpsPassword ( ) { ,ProxyPreference preference = getProxyDao ( ) . get ( ProxyKey . HTTPS_PASSWORD ) ; return preference != null ? preference . getValue ( ) : StringUtils . EMPTY ; }
"Method to scroll the chat log down by one ""page"" This basically means += VIEW_SIZE <code> void moveChatViewDown ( ActionEvent event ) { ",int messageLogSize = presentation . getMessageLogSize ( ) ; if ( messageLogSize < viewSize ) { return ; } position += viewSize ; if ( position > messageLogSize - 1 ) { position = messageLogSize - 1 ; } }
"Should be called by external activities/fragments after the logged in action completed <code> void onLoggedIn ( Activity activity , boolean finishActivity ) { ","activity . startActivity ( new Intent ( activity , MainActivity . class ) ) ; LoginUtils . sendLoggedInBroadcast ( activity ) ; if ( finishActivity ) { activity . finish ( ) ; } }"
Called when the static image finishes hiding to reset thumbnail and quick action icon values. <code> void onStaticImageHidden ( ) { ,"mQuickActionIconResourceId = 0 ; mQuickActionIconVisible = false ; mThumbnailUrl = """" ; mThumbnailVisible = false ; getIconSpriteControl ( ) . setIsVisible ( true ) ; mStaticImageVisibilityPercentage = 0.f ; }"
Get a formatted string of supporting buffer <code> String getSupportingBuffer ( ) { ,"String supportingBuffer = """" ; Enumeration < String > keys = bufferFactoryList . keys ( ) ; String key = """" ; while ( keys . hasMoreElements ( ) ) { key = keys . nextElement ( ) ; supportingBuffer += key + "" "" ; } supportingBuffer = supportingBuffer . trim ( ) ; return supportingBuffer ; }"
Finally print the current graph to a file. <code> void printGraphToFile ( ) { ,"gv . addln ( gv . end_graph ( ) ) ; gv . writeGraphToFile ( gv . getGraph ( gv . getDotSource ( ) , type ) , new File ( ""turn"" + turn ++ + ""."" + type ) ) ; gv = new GraphViz ( ) ; gv . addln ( gv . start_graph ( ) ) ; }"
Creates the Balana PDP. <code> void createPdp ( PDPConfig pdpConfig ) { ,"LOGGER . debug ( ""Creating PDP of type: {}"" , PDP . class . getName ( ) ) ; pdp = new PDP ( pdpConfig ) ; LOGGER . debug ( ""PDP creation successful."" ) ; }"
Returns the next entry in the settings file. <code> String getNextEntry ( BufferedReader reader ) { ,"String str = null ; try { str = reader . readLine ( ) ; } catch ( IOException e ) { Logger . __error ( e . getMessage ( ) , e ) ; return EOL ; } if ( str == null ) str = EOL ; else if ( str . charAt ( 0 ) == '*' || str . charAt ( 0 ) == ' ' ) return getNextEntry ( reader ) ; return str ; }"
Extracts the Content-Type of this Result value. <code> String contentType ( ) { ,"String h = header ( CONTENT_TYPE ) ; if ( h == null ) return null ; if ( h . contains ( "";"" ) ) { return h . substring ( 0 , h . indexOf ( "";"" ) ) . trim ( ) ; } else { return h . trim ( ) ; } }"
"Retrieves representation of an instance of com.leedarson.rest.services.QuestionbankService <code> String getFirstQuestion ( @ QueryParam ( ""questionType"" ) String questionType ) { ","List < DroidQuestionBank > result = questionBankFacade . getFirstQuestion ( questionType ) ; if ( result != null && ! result . isEmpty ( ) ) { return gson . toJson ( result , List . class ) ; } return """" ; }"
Return a short description of the throwable. <code> String shortDescription ( Throwable throwable ) { ,"String throwableType = null ; if ( throwable instanceof Exception ) { throwableType = ""Exception"" ; } else if ( throwable instanceof Error ) { throwableType = ""Error"" ; } else { throwableType = ""Throwable"" ; } return throwableType ; }"
Returns a string representation of this object; useful for testing and debugging. <code> String toString ( ) { ,"StringBuilder sb = new StringBuilder ( ) ; sb . append ( ""{"" ) ; if ( getArn ( ) != null ) sb . append ( ""Arn: "" + getArn ( ) ) ; sb . append ( ""}"" ) ; return sb . toString ( ) ; }"
"return the input block size. The largest message we can process is (key_size_in_bits + 3)/16, which in our world comes to key_size_in_bytes / 2. <code> int getInputBlockSize ( ) { ",int baseBlockSize = engine . getInputBlockSize ( ) ; if ( forEncryption ) { return ( baseBlockSize + 1 ) / 2 ; } else { return baseBlockSize ; } }
"Retrieves the mapped wrapper for a given Java Object, provided the wrapper was previously cached and has not been garbage collected. <code> Object getWrapperForObject ( ClassLoader cl , Object javaObject ) { ","Map < Object , Object > cache = m_javaWrapperCache . get ( cl ) ; if ( cache != null ) { return cache . get ( javaObject ) ; } return null ; }"
"Sets this Coordinates (x,y,z) values to that of other . <code> void setCoordinate ( Coordinate other ) { ",x = other . x ; y = other . y ; z = other . z ; }
Returns the body properly parsed depending on the content type. Might be a string or a json object parsed as a map. <code> Object getBody ( ) { ,"if ( isJson ( ) ) { JsonPath parsedResponse = parsedResponse ( ) ; if ( parsedResponse == null ) { return null ; } return parsedResponse . evaluate ( """" ) ; } return body ; }"
Sets the display surface while in a transaction. <code> void setSurfaceInTransactionLocked ( Surface surface ) { ,"if ( mCurrentSurface != surface ) { mCurrentSurface = surface ; SurfaceControl . setDisplaySurface ( mDisplayToken , surface ) ; } }"
Tests close with disabled WSTXFeature and with enabled WSTX handler. No coordination calls are expected. <code> void testCloseWithDisabledFeature ( ) { ,TestServiceBA client = getBAClientWithFeature ( false ) ; beginActivity ( ) ; client . increment ( ) ; closeActivity ( ) ; assertInvocations ( client . getBusinessActivityInvocations ( ) ) ; }
Invoked when the image is completely downloaded and available to the cache. <code> void unregisterDownloadedImage ( String fn ) { ,synchronized ( ImageFetcher . class ) { downloadedImages . remove ( fn ) ; } cache . verifyLimits ( ) ; }
"Sets component maximum width. Pass -1 to let component choose maximum width on its own. <code> C setMaximumWidth ( final C component , final int maximumWidth ) { ","Dimension ms = maximumSizeCache . get ( component ) ; if ( ms == null ) { ms = new Dimension ( maximumWidth , - 1 ) ; maximumSizeCache . put ( component , ms ) ; } else { ms . width = maximumWidth ; } return component ; }"
"Serialize an instance, restore it, and check for equality. <code> void testSerialization ( ) { ","TextTitle t = new TextTitle ( ""Title"" ) ; XYTitleAnnotation a1 = new XYTitleAnnotation ( 1.0 , 2.0 , t ) ; XYTitleAnnotation a2 = ( XYTitleAnnotation ) TestUtilities . serialised ( a1 ) ; assertEquals ( a1 , a2 ) ; }"
"Returns true if the strings are lower case equal <code> boolean lowerCaseMatch ( String string1 , String string2 ) { ","string2 = string2 . toLowerCase ( ) . replace ( "" "" , """" ) ; return string2 . equals ( string1 . toLowerCase ( ) . replace ( "" "" , """" ) ) ; }"
"Wait for custom command to return true. Default timeout 1000ms. <code> boolean waitForCommand ( Command command , int timeout ) { ",for ( int i = 0 ; i < timeout / 10 ; i ++ ) { try { if ( command . result ( ) ) return true ; } catch ( Exception e ) { } try { Thread . sleep ( 10 ) ; } catch ( InterruptedException e ) { } } return false ; }
"Exemple [1,4,6,2,4,6] : p=3,a=8 --> [1,4,6,8,2,4,6] <code> ArrayList < Integer > insererUnElementDansTableau ( ArrayList < Integer > tab , int p , int a ) { ","ArrayList < Integer > tmpTab = null ; if ( tab == null || p < 0 || p > tab . size ( ) ) { tmpTab = tab ; } else { tmpTab = new ArrayList < Integer > ( ) ; tmpTab . addAll ( tab ) ; tmpTab . add ( p , a ) ; } return tmpTab ; }"
"Retrieves the long at the specified byteOffset. <code> long getLongAt ( final int byteOffset , final int nativeSizeInBytes ) { ","switch ( nativeSizeInBytes ) { case 4 : return bb . getInt ( byteOffset ) & 0x00000000FFFFFFFFL ; case 8 : return bb . getLong ( byteOffset ) ; default : throw new InternalError ( ""invalid nativeSizeInBytes "" + nativeSizeInBytes ) ; } }"
Generates a string hex dump from a ByteBuffer <code> StringBuilder toHexDumpString ( ByteBuffer data ) { ,StringBuilder sb = new StringBuilder ( ) ; for ( int i = 0 ; i < data . position ( ) ; i ++ ) { byte c = data . get ( i ) ; if ( i > 0 ) { sb . append ( ' ' ) ; } sb . append ( toHexDumpString ( c ) ) ; } return sb ; }
"Calculates the compression loss. We expect currentValue to be expectedGrowthRatio baselineValue. The difference between these two quantities is the compression loss. <code> double compressionLoss ( double expectedGrowthRatio , double baselineValue , double currentValue , double standardDeviation ) { ","NormalDistribution dist = new NormalDistribution ( baselineValue * expectedGrowthRatio , standardDeviation ) ; return - Math . log ( dist . density ( currentValue ) ) ; }"
"add key-value pair to map, key need not null <code> boolean putMapNotNullKey ( Map < K , V > map , K key , V value ) { ","if ( map == null || key == null ) { return false ; } map . put ( key , value ) ; return true ; }"
Returns the sequence of tokens comprising the sentence. This assumes you've done the checking to makes sure the input string (the source side) isn't a PLF waiting to be parsed. <code> List < Token > getTokens ( ) { ,assert isLinearChain ( ) ; List < Token > tokens = new ArrayList < Token > ( ) ; for ( Node < Token > node : getLattice ( ) . getNodes ( ) ) if ( node . getOutgoingArcs ( ) . size ( ) > 0 ) tokens . add ( node . getOutgoingArcs ( ) . get ( 0 ) . getLabel ( ) ) ; return tokens ; }
"add the pad bytes to the passed in block, returning the number of bytes added. <code> int addPadding ( byte [ ] in , int inOff ) { ",int added = ( in . length - inOff ) ; in [ inOff ] = ( byte ) 0x80 ; inOff ++ ; while ( inOff < in . length ) { in [ inOff ] = ( byte ) 0 ; inOff ++ ; } return added ; }
Returns text converted to an integer value or throws an exception. This method is locale-aware (which doesn't mean much for integers). <code> Integer parseInteger ( String text ) { ,int def = 0 ; if ( text == null ) { return def ; } def = nf . parse ( text ) . intValue ( ) ; return def ; }
"DFS heuristic that limits search for mutant words to only include the indices of the string that are different <code> int [ ] getDifferentIndices ( String input , String end ) { ",int [ ] diffs = new int [ end . length ( ) ] ; for ( int i = 0 ; i < diffs . length ; i ++ ) { if ( input . charAt ( i ) != end . charAt ( i ) ) diffs [ i ] = 1 ; } return diffs ; }
"Stores how many objects are selected for use by the list tag <code> void setSelectedAmount ( String listName , int amount , HttpServletRequest request ) { ","String uniqueName = TagHelper . generateUniqueName ( listName ) ; String selectedName = ListTagUtil . makeSelectedAmountName ( uniqueName ) ; request . setAttribute ( selectedName , String . valueOf ( amount ) ) ; }"
"Determine if two character sequences contain the same characters. <code> boolean isSameSequence ( CharSequence cs1 , CharSequence cs2 ) { ","assert cs1 != null ; assert cs2 != null ; if ( cs1 . length ( ) != cs2 . length ( ) ) { return false ; } else { for ( int i = 0 , n = cs1 . length ( ) ; i < n ; i ++ ) { if ( cs1 . charAt ( i ) != cs2 . charAt ( i ) ) { return false ; } } return true ; } }"
"Add a dependency on a processor. <code> void addProcessorDep ( String proc , String versions , String semver , String min , String max ) { ",ProcessorDependency dep = new ProcessorDependency ( proc ) ; dep . setVersions ( versions ) ; dep . setSemver ( semver ) ; dep . setSemverMin ( min ) ; dep . setSemverMax ( max ) ; myProcDeps . add ( dep ) ; }
"Returns the current set of region metadata for this process, initializing it if it has not yet been explicitly initialized before. <code> RegionMetadata getRegionMetadata ( ) { ",RegionMetadata rval = regionMetadata ; if ( rval != null ) { return rval ; } synchronized ( RegionUtils . class ) { if ( regionMetadata == null ) { initialize ( ) ; } } return regionMetadata ; }
Derives a contract with new quantity from this contract. <code> Contract deriveWithQuantity ( double quantity ) { ,"ContractBuilder builder = new ContractBuilder ( stock , date ) ; return builder . type ( type ) . quantity ( quantity ) . price ( price ) . referencePrice ( referencePrice ) . referenceBroker ( referenceBroker ) . referenceClearingFee ( referenceClearingFee ) . referenceStampDuty ( referenceStampDuty ) . build ( ) ; }"
Returns the full url from the servlet request <code> String getFullURL ( HttpServletRequest request ) { ,StringBuffer requestURL = request . getRequestURL ( ) ; String queryString = request . getQueryString ( ) ; if ( queryString == null ) { return requestURL . toString ( ) ; } else { return requestURL . append ( '?' ) . append ( queryString ) . toString ( ) ; } }
"Compares current value with specified value for equality and, if they are equal, replaces current value. <code> T compareAndSetAndGet ( T newVal , T expVal ) { ","checkRemoved ( ) ; try { return CU . outTx ( internalCompareAndSetAndGet ( expVal , newVal ) , ctx ) ; } catch ( IgniteCheckedException e ) { throw U . convertException ( e ) ; } }"
Parses rules text into the map of signatures to rules. <code> Map parseRules ( String text ) { ,"Map rules = new HashMap ( ) ; if ( text != null ) { Matcher matBlocks = PAT_BLOCKS . matcher ( text ) ; while ( matBlocks . find ( ) ) { String signature = matBlocks . group ( 1 ) ; String props = matBlocks . group ( 2 ) ; rules . put ( signature , parseRule ( props ) ) ; } } return rules ; }"
Clean up after testing <code> void tearDown ( ) { ,if ( scene != null ) { scene . dispose ( ) ; } if ( frame != null ) { frame . dispose ( ) ; } }
"Sends 302 Temporary redirect to client. To be used when client MUST NOT cache the redirection. <code> void sendTemporaryRedirect ( final HttpServletResponse response , final String url ) { ","response . setStatus ( HttpServletResponse . SC_FOUND ) ; response . addHeader ( ""Location"" , url ) ; response . flushBuffer ( ) ; }"
"Whether we can split at reduceWork. For simplicity, let's require each work can have at most one child work. This may be relaxed by checking connectivity of the work graph after disconnect the current reduce work from its child <code> boolean canSplit ( SparkWork sparkWork ) { ",for ( BaseWork baseWork : sparkWork . getAllWorkUnsorted ( ) ) { if ( sparkWork . getChildren ( baseWork ) . size ( ) > 1 ) { return false ; } } return true ; }
Clear the DFS flags. <code> void clearDFS ( ) { ,for ( SpaceEffGraphNode n = firstNode ( ) ; n != null ; n = n . getNext ( ) ) { n . clearDfsVisited ( ) ; } }
"GET /update --> Update the email and the name for the user in the database having the passed id. <code> String updateUser ( long id , String email , String name ) { ","try { User user = userDao . findOne ( id ) ; user . setEmail ( email ) ; user . setName ( name ) ; userDao . save ( user ) ; } catch ( Exception ex ) { return ""Error updating the user: "" + ex . toString ( ) ; } return ""User succesfully updated!"" ; }"
Notify the monitor of the successful completion of a download process. <code> void notifyCompletion ( URL resource ) { ,"long now = System . currentTimeMillis ( ) ; long time = now - m_start ; int kBps = ( int ) ( m_expected / time ) ; m_out . println ( resource . toExternalForm ( ) + "" : "" + kBps + "" kBps.          "" ) ; }"
"Helper method to encapsulate exception handling. <code> AssetFileDescriptor openAssetFileDescriptor ( final ContentResolver resolver , final Uri uri ) { ","try { return resolver . openAssetFileDescriptor ( uri , ""r"" ) ; } catch ( FileNotFoundException e ) { Log . e ( TAG , ""Could not find a word list from the dictionary provider."" ) ; return null ; } }"
"Add a processor to the chain <code> ProcessorChain < IN , NEWOUT > chainWith ( final Processor < OUT , NEWOUT > p ) { ","BUNDLE . checkNotNull ( p , ""processing.nullProcessor"" ) ; final Processor < IN , NEWOUT > merger = new ProcessorMerger < IN , OUT , NEWOUT > ( processor , p ) ; return new ProcessorChain < IN , NEWOUT > ( merger ) ; }"
Gets the value of the advise property. <code> boolean isAdvise ( ) { ,if ( advise == null ) { return false ; } else { return advise ; } }
Searches for the least recently used Page <code> int findLRU ( ) { ,int max = array [ front ] . getRecUsed ( ) ; int maxIndex = front ; for ( int i = front + 1 ; i < numElems ; i ++ ) { if ( array [ i ] . getRecUsed ( ) > max ) { max = array [ i ] . getRecUsed ( ) ; maxIndex = i ; } } return maxIndex ; }
Returns a clone of the user object. This implementation clones any XML nodes or otherwise returns the same user object instance. <code> Object cloneValue ( ) { ,Object value = getValue ( ) ; if ( value instanceof Node ) { value = ( ( Node ) value ) . cloneNode ( true ) ; } return value ; }
"Gets an aggregate definition based on a given alert definition name. <code> AlertDefinition getAggregateDefinition ( long clusterId , String name ) { ",Long id = Long . valueOf ( clusterId ) ; if ( ! m_aggregateMap . containsKey ( id ) ) { return null ; } if ( ! m_aggregateMap . get ( id ) . containsKey ( name ) ) { return null ; } return m_aggregateMap . get ( id ) . get ( name ) ; }
Creates a simple Buffer that is not recycled (never will be) of the given size. <code> Buffer createMockBuffer ( int size ) { ,final Buffer mockBuffer = mock ( Buffer . class ) ; when ( mockBuffer . isBuffer ( ) ) . thenReturn ( true ) ; when ( mockBuffer . getSize ( ) ) . thenReturn ( size ) ; when ( mockBuffer . isRecycled ( ) ) . thenReturn ( false ) ; return mockBuffer ; }
Method that removes a child from the children set <code> boolean removeChild ( String child ) { ,if ( children == null ) { return false ; } return children . remove ( child ) ; }
Is the length of this duration equal to the duration passed in. <code> boolean isEqual ( ReadableDuration duration ) { ,if ( duration == null ) { duration = Duration . ZERO ; } return compareTo ( duration ) == 0 ; }
"Convert the byte array to an int starting from the given offset. <code> int byteArrayToInt ( byte [ ] b , int offset ) { ",int value = 0 ; for ( int i = 0 ; i < 4 ; i ++ ) { int shift = ( 4 - 1 - i ) * 8 ; value += ( b [ i + offset ] & 0x000000FF ) << shift ; } return value ; }
"Test flattening for Record within an Union within another Record Record R1 { fields: { Union [ Record R2, null ] } } <code> void testRecordWithinUnionWithinRecord ( ) { ","Schema originalSchema = readSchemaFromJsonFile ( ""recordWithinUnionWithinRecord_original.json"" ) ; Schema expectedSchema = readSchemaFromJsonFile ( ""recordWithinUnionWithinRecord_flattened.json"" ) ; Assert . assertEquals ( new AvroFlattener ( ) . flatten ( originalSchema , false ) , expectedSchema ) ; }"
Checks if given node is a IGFS node. <code> boolean igfsNode ( ClusterNode node ) { ,"assert node != null ; IgfsAttributes [ ] igfs = node . attribute ( ATTR_IGFS ) ; if ( igfs != null ) for ( IgfsAttributes attrs : igfs ) if ( F . eq ( cfg . getName ( ) , attrs . igfsName ( ) ) ) return true ; return false ; }"
Gets the value of the datasourceIndex property. <code> BigInteger getDatasourceIndex ( ) { ,"if ( datasourceIndex == null ) { return new BigInteger ( ""0"" ) ; } else { return datasourceIndex ; } }"
Add a content modification. <code> T addContentModification ( final ContentModification modification ) { ,if ( itemFilter . accepts ( modification . getItem ( ) ) ) { internalAddModification ( modification ) ; } return returnThis ( ) ; }
Check whether this CachedIntrospectionResults class is configured to accept the given ClassLoader. <code> boolean isClassLoaderAccepted ( ClassLoader classLoader ) { ,"for ( ClassLoader acceptedLoader : acceptedClassLoaders ) { if ( isUnderneathClassLoader ( classLoader , acceptedLoader ) ) { return true ; } } return false ; }"
"Returns the customary display name in the given language for the given territory the phone number is from. <code> String getCountryNameForNumber ( PhoneNumber number , Locale language ) { ","String regionCode = phoneUtil . getRegionCodeForNumber ( number ) ; return ( regionCode == null || regionCode . equals ( ""ZZ"" ) ) ? """" : new Locale ( """" , regionCode ) . getDisplayCountry ( language ) ; }"
Returns a short string representation. <code> String toString ( ) { ,"switch ( value ( ) ) { case _COMPLETED_YES : return ""completed"" ; case _COMPLETED_NO : return ""not completed"" ; case _COMPLETED_MAYBE : return ""maybe completed"" ; default : return ""invalid completion status instance"" ; } }"
Activates the treetraversing-routine that builds the path given by DFS. <code> ArrayList buildRoute ( Node _root ) { ,ArrayList route = new ArrayList ( ) ; _root . visitBuildRoute ( route ) ; return route ; }
"Sets the current scheduler. If the old scheduler is the GUIScheduler, it is interrupted and notified about the changed scheduler. <code> void setCurrentScheduler ( TotalScheduler scheduler ) { ",if ( random != null && scheduler instanceof UsesRandomSeed ) { ( ( UsesRandomSeed ) scheduler ) . setRandom ( random ) ; } TotalSchedulingStrategy oldscheduler = curScheduler ; curScheduler = scheduler ; schedulerUpdated ( oldscheduler ) ; }
The method determines if the resource can be converted to a class. <code> boolean isClass ( String key ) { ,if ( gotResource ( key ) ) { String value = getString ( key ) ; try { Class . forName ( value ) ; return true ; } catch ( ClassNotFoundException e ) { return false ; } } return false ; }
"Returns the full identifier of this function, as known by the factories. <code> URI getIdentifier ( ) { ",if ( earlyException != null ) throw earlyException ; return identifier ; }
level 1 is used for interactive tasks. <code> void Level1Interaction ( String data ) { ,"data = performTranslation ( data ) ; routeLogsToGUIAndFile ( LogLevel . INTERACTION , data ) ; }"
"Set Editable Quantity and Price <code> void setEditable ( boolean isModifyPrice , boolean isDrafted ) { ","table . setColumnClass ( POSITION_QTYORDERED , BigDecimal . class , ! isDrafted ) ; table . setColumnClass ( POSITION_PRICE , BigDecimal . class , ! ( isModifyPrice && isDrafted ) ) ; }"
Checks that the standard 220 reply is returned following the initiated connection <code> void validateConnection ( ) { ,"String reply = readReply ( ) ; validateReply ( reply , ""220"" ) ; }"
Gets the item IDs of the items present in the inventory <code> int [ ] getItemIds ( ) { ,try { return inventoryWidget . getItemIds ( ) ; } catch ( NullPointerException e ) { return new int [ ] { } ; } }
Set the interpolation order. <code> void setOrder ( int order ) { ,"if ( ( order != 0 ) && ( order != 1 ) && ( order != 3 ) ) { throw new IllegalArgumentException ( ""Interpolation.setOrder: "" + ""The order "" + order + "" is not valid."" ) ; } _order = order ; }"
"Returns the current character <code> char getCurrentCharacter ( int current , char [ ] cc , PdfChunk [ ] ck ) { ","if ( ck == null ) { return cc [ current ] ; } return ( char ) ck [ Math . min ( current , ck . length - 1 ) ] . getUnicodeEquivalent ( cc [ current ] ) ; }"
Returns a string representation of this object; useful for testing and debugging. <code> String toString ( ) { ,"StringBuilder sb = new StringBuilder ( ) ; sb . append ( ""{"" ) ; if ( getThingName ( ) != null ) sb . append ( ""ThingName: "" + getThingName ( ) + "","" ) ; if ( getAttributes ( ) != null ) sb . append ( ""Attributes: "" + getAttributes ( ) ) ; sb . append ( ""}"" ) ; return sb . toString ( ) ; }"
"Check if everything is sets properly (meaning, everythin's != 0). <code> void testEverythingIsSet ( ) { ","assertNotEquals ( 0 , gameState . getMoney ( ) ) ; assertNotEquals ( 0 , gameState . getBaseNetSpacing ( ) ) ; assertNotEquals ( 0 , gameState . getToolViewWidth ( ) ) ; }"
"Rename the file with oldname to newname. If a file with newname already exists, it is deleted before the renaming operation proceeds. If a file with oldname does not exist, no file will exist after the operation. <code> boolean renameOverwrite ( String oldname , String newname ) { ",boolean deleted = delete ( newname ) ; if ( exists ( oldname ) ) { File file = new File ( oldname ) ; return file . renameTo ( new File ( newname ) ) ; } return deleted ; }
"Asks the User to select an Object from a given array of Objects. <code> Object chooseObject ( String message , String messageTitle , Object [ ] objects , Object initialObject ) { ","Object input = JOptionPane . showInputDialog ( null , message , messageTitle , JOptionPane . INFORMATION_MESSAGE , null , objects , initialObject ) ; if ( input == null ) throw new Exception ( ""Selection aborted"" ) ; return input ; }"
"Set the offset of the local timezone, ignoring the default provided by the OS. Mainly useful for testing. <code> void overrideLocalTimezoneOffset ( int millis ) { ",timezoneOffset = millis ; timezoneOverriden = true ; }
"Checks the validity of a version number (the specification version numbers, three dot separated integers between 0 and 99). Throws a ServiceException if the version number is not valid. <code> void checkVersionNumber ( String v , String locator ) { ","if ( ! v . matches ( ""[0-9]{1,2}|.[0-9]{1,2}|.[0-9]{1,2}"" ) ) { String msg = v + "" is an invalid version number"" ; throw new ServiceException ( msg , ""VersionNegotiationFailed"" , locator ) ; } }"
Tests that a valid ASCII-based message is correctly found as valid when there is only one public key associated to the validator. <code> void testAsciiValidMessageOneKey ( ) { ,"validator = new ChatMessageValidator ( buildPubkeyList ( 0 , 1 ) ) ; ChatMessage message = messageFixtures . get ( 0 ) ; assertTrue ( validator . validate ( message ) ) ; }"
Returns an instance of the Plug & Play class Thread. <code> PCSCPnPThread getInstance ( CardTerminals cardTerminals ) { ,if ( null == m_instance ) m_instance = new PCSCPnPThread ( cardTerminals ) ; return m_instance ; }
Computes the standard deviation of a series of values. <code> long standardDeviation ( long [ ] values ) { ,long sd = Double . valueOf ( Math . sqrt ( variance ( values ) ) ) . longValue ( ) ; return sd ; }
"Called after another evolution cycle has been executed. <code> boolean nextCycle ( Population a_pop , List < String > a_messages ) { ","long currentMillis = System . currentTimeMillis ( ) ; if ( currentMillis - m_startMillis >= m_seconds * 1000 ) { a_messages . add ( m_seconds + "" seconds maximum runtime were reached."" ) ; return false ; } else { return true ; } }"
Verifies ability to handle simple integer multiplications over several iterations <code> void testSimpleIntegerMultiply ( ) { ,"String [ ] column = new String [ ] { ""1"" , ""2"" , ""3"" , ""4"" } ; BigMoney testObject = MoneyUtils . parse ( ""USD 10.00"" ) ; for ( int i = 0 ; i < column . length ; i ++ ) { testObject = testObject . multipliedBy ( new BigDecimal ( column [ i ] ) ) ; } assertThat ( testObject . toString ( ) ) . isEqualTo ( ""USD 240.00"" ) ; }"
Starts the wheel animation. <code> void startAnimation ( ) { ,showWheel ( ) ; timer . scheduleRepeating ( 100 ) ; }
"Returns an object from the cache. <code> Object getCachedObject ( Class < ? > owner , String key ) { ",key = owner . getName ( ) . concat ( key ) ; return OpenCms . getMemoryMonitor ( ) . getCachedMemObject ( key ) ; }
"Serialize an instance, restore it, and check for equality. <code> void testSerialization ( ) { ","CategoryLabelEntity e1 = new CategoryLabelEntity ( ""A"" , new Rectangle2D . Double ( 1.0 , 2.0 , 3.0 , 4.0 ) , ""ToolTip"" , ""URL"" ) ; CategoryLabelEntity e2 = ( CategoryLabelEntity ) TestUtilities . serialised ( e1 ) ; assertEquals ( e1 , e2 ) ; }"
"Assuming noteReference() is all taken care of, build an uplevel reference. This must be called in a context which is local to the client of the uplevel reference. <code> Expression makeLocalReference ( Environment env , Context ctx ) { ","if ( ctx . field . getClassDefinition ( ) != client ) { throw new CompilerError ( ""makeLocalReference"" ) ; } if ( localArgumentAvailable ( env , ctx ) ) { return new IdentifierExpression ( 0 , localArgument ) ; } else { return makeFieldReference ( env , ctx ) ; } }"
"always return localdata for partition region <code> Region < K , V > getRegion ( String name ) { ","Region < K , V > r = CacheFactory . getAnyInstance ( ) . getRegion ( name ) ; if ( PartitionRegionHelper . isPartitionedRegion ( r ) ) { r = PartitionRegionHelper . getLocalData ( r ) ; } return r ; }"
"This method sends notification message to mobile app through the openHAB Cloud service <code> void sendNotification ( String userId , String message , String icon , String severity ) { ","logger . debug ( ""Sending message '{}' to user id {}"" , message , userId ) ; cloudClient . sendNotification ( userId , message , icon , severity ) ; }"
Returns jcodemodel class definition for given element. <code> JDefinedClass getClass ( @ Nonnull final TypeElement element ) { ,"final ErrorTypePolicy policy = new ErrorTypePolicy ( ErrorTypePolicy . EAction . THROW_EXCEPTION , true ) ; return getClass ( element , policy ) ; }"
"Remove leading double slash, and inherit protocol scheme <code> String removeLeadingDoubleSlash ( String url , String scheme ) { ","if ( url != null && url . startsWith ( ""//"" ) ) { url = url . substring ( 2 ) ; if ( scheme != null ) { if ( scheme . endsWith ( ""://"" ) ) { url = scheme + url ; } else { AppLog . e ( T . UTILS , ""Invalid scheme used: "" + scheme ) ; } } } return url ; }"
Returns a string representation of the hand <code> String toString ( ) { ,"String str = ""["" ; for ( int i = 0 ; i < cards . length - 1 ; i ++ ) str += cards [ i ] . toString ( ) + "","" ; str += cards [ cards . length - 1 ] . toString ( ) + ""]"" ; return str ; }"
This method will check if it still stock of the item <code> void processAvailableProduct ( OutputMachine outputMachine ) { ,checkAvailableProduct ( getItem ( outputMachine ) ) ; vendingMachineState = VendingMachineState . INSERTED_MONEY ; runStateMachineProcesses ( outputMachine ) ; }
"Checks if two date objects are on the same day ignoring time. <code> boolean isSameDay ( Date date1 , Date date2 ) { ","if ( date1 == null || date2 == null ) { throw new IllegalArgumentException ( ""The date must not be null"" ) ; } Calendar cal1 = Calendar . getInstance ( ) ; cal1 . setTime ( date1 ) ; Calendar cal2 = Calendar . getInstance ( ) ; cal2 . setTime ( date2 ) ; return isSameDay ( cal1 , cal2 ) ; }"
Prints a statement into a string. <code> String toString ( @ Nonnull final IJStatement aStatement ) { ,"JCValueEnforcer . notNull ( aStatement , ""Statement"" ) ; final StringWriter aSW = new StringWriter ( ) ; final JFormatter formatter = new JFormatter ( aSW ) ; aStatement . state ( formatter ) ; return aSW . toString ( ) ; }"
Convert a relationship list to a List of relations. <code> List < PSAaRelationship > fromRelList ( PSAaRelationshipList relList ) { ,List < PSAaRelationship > relations = new ArrayList < PSAaRelationship > ( ) ; Iterator < PSAaRelationship > itr = relList . iterator ( ) ; while ( itr . hasNext ( ) ) { relations . add ( itr . next ( ) ) ; } return relations ; }
Parse a time value. <code> Date parseTime ( String value ) { ,Date result = null ; if ( value != null && value . length ( ) != 0 ) { try { result = getTimeFormat ( ) . parse ( value ) ; } catch ( ParseException ex ) { } } return result ; }
The description of the policy attributes associated with the LoadBalancer policies defined by the Elastic Load Balancing service. <code> java . util . List < PolicyAttributeTypeDescription > getPolicyAttributeTypeDescriptions ( ) { ,if ( policyAttributeTypeDescriptions == null ) { policyAttributeTypeDescriptions = new java . util . ArrayList < PolicyAttributeTypeDescription > ( ) ; } return policyAttributeTypeDescriptions ; }
Return the action external status from a callback URL. <code> String getExternalStatus ( String callback ) { ,"try { return URLDecoder . decode ( getParam ( ParamChecker . notEmpty ( callback , ""callback"" ) , STATUS_PARAM ) , ""UTF-8"" ) ; } catch ( UnsupportedEncodingException ex ) { throw new RuntimeException ( ex ) ; } }"
Multiply matrix4x4 by matrix. <code> void multiplyMatrix4x4ByMatrix ( MatrixF4x4 matrixf ) { ,"float [ ] bufferMatrix = { 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 } ; float [ ] matrix = matrixf . getMatrix ( ) ; multiplyMatrix ( matrix , 0 , bufferMatrix , 0 ) ; matrixf . setMatrix ( bufferMatrix ) ; }"
"Returns an array with the absolute filenames of directories that match an Ant pattern using the workspace as the base directory. <code> String [ ] findAbsoluteDirs ( final File workspaceRoot , String pattern ) { ","String [ ] relative = findDirs ( workspaceRoot , pattern ) ; if ( relative . length == 0 ) { return relative ; } String [ ] absolute = new String [ relative . length ] ; for ( int i = 0 ; i < relative . length ; ++ i ) { absolute [ i ] = new File ( workspaceRoot , relative [ i ] ) . getAbsolutePath ( ) ; } return absolute ; }"
Returns true if the required LocalRule parameters have all been set. Returns false otherwise. <code> boolean isComplete ( ) { ,if ( ( m_protocol != null ) && ( m_inboundIface != null ) && ( m_outboundIface != null ) && ( m_address != null ) && ( m_inPort != 0 ) && ( m_outPort != 0 ) ) { return true ; } return false ; }
Retrieves static instance of DALAdminInterface class <code> DALAdminInterface getInstance ( ) { ,"Log . d ( TAG , ""DALAdminInterface.getInstance()"" ) ; if ( instance == null ) instance = new DALAdminInterface ( ) ; return instance ; }"
Return the port on which eventd listens for UDP data. <code> int getUDPPort ( ) { ,getReadLock ( ) . lock ( ) ; try { return m_config . getUDPPort ( ) ; } finally { getReadLock ( ) . unlock ( ) ; } }
"Connects this instance to the given instances using role ""y"". If the given collection of instances is null, nothing happens. <code> void addYs ( Collection < Double > ys ) { ",if ( ys == null ) return ; for ( Double instance : ys ) addY ( instance ) ; }
Find an already defined JavaClass. <code> JavaClass findClass ( String className ) { ,if ( loadedClasses . containsKey ( className ) ) { return ( JavaClass ) loadedClasses . get ( className ) ; } else { return null ; } }
Return the Hobby instance in the database with name 'hobbyName' or null if not found. <code> Hobby findHobby ( String hobbyName ) { ,for ( Hobby hobby : allHobbies ) { if ( hobbyName . equals ( hobby . getName ( ) ) ) { return hobby ; } } return null ; }
Get gist with null user <code> void createGistNullUser ( ) { ,"Gist gist = new Gist ( ) ; gist . setUser ( null ) ; gistService . createGist ( gist ) ; verify ( gitHubClient ) . post ( ""/gists"" , gist , Gist . class ) ; }"
Deletes the given team <code> void deleteResourceTeam ( int teamId ) { ,"em . createNamedQuery ( ""ResourceTeamMember.deleteByResourceTeamId"" ) . setParameter ( ""resourceTeamId"" , teamId ) . executeUpdate ( ) ; em . remove ( em . find ( ResourceTeam . class , teamId ) ) ; }"
Deprecated - Program runs (as yet) without loggers. See setStdErrToFile & msgbox <code> void configureLogger ( ) { ,"logger = Logger . getLogger ( ""mainLogger"" ) ; Appender_msgbox app_msgb = new Appender_msgbox ( ) ; logger . addAppender ( app_msgb ) ; }"
"Sets the sample for the first two bands at the given (x,y) location. <code> void setSamples ( int x , int y , float s0 , float s1 ) { ","int index = ( x + ( y * width ) ) * 4 ; buf . put ( index + 0 , s0 ) ; buf . put ( index + 1 , s1 ) ; cacheValid = false ; }"
called when the script is unloaded or reloaded <code> void removeAllAddedByScript ( ) { ,for ( String rule : rules ) { try { ruleProvider . removeRule ( rule ) ; } catch ( Exception ex ) { } } rules . clear ( ) ; }
"Gets an hex string in the format ""&lt;HHHH&gt;"". <code> String toHex ( int n ) { ","if ( n < 0x10000 ) return ""<"" + toHex4 ( n ) + "">"" ; n -= 0x10000 ; int high = n / 0x400 + 0xd800 ; int low = n % 0x400 + 0xdc00 ; return ""[<"" + toHex4 ( high ) + toHex4 ( low ) + "">]"" ; }"
Method to notify that the supplied binding has changed <code> void bindingChanged ( Binding binding ) { ,Iterator < IBindingListViewer > iterator = changeListeners . iterator ( ) ; while ( iterator . hasNext ( ) ) iterator . next ( ) . updateBinding ( binding ) ; }
"Convert a numeric array-like to a int[]. <code> int [ ] toPrimitiveIntegerArray ( A array , NumberArrayAdapter < ? , ? super A > adapter ) { ","int [ ] ret = new int [ adapter . size ( array ) ] ; for ( int i = 0 ; i < ret . length ; i ++ ) { ret [ i ] = adapter . getInteger ( array , i ) ; } return ret ; }"
"The source of the document (As a map). <code> Map < String , Object > sourceAsMap ( ) { ","if ( source == null ) { return null ; } if ( sourceAsMap != null ) { return sourceAsMap ; } sourceAsMap = SourceLookup . sourceAsMap ( source . bytes ( ) , source . offset ( ) , source . length ( ) ) ; return sourceAsMap ; }"
Get the index of the last bit that is set. <code> int getLastSetBit ( ) { ,int i = ( data . length << ADDRESS_BITS ) - 1 ; while ( i >= 0 ) { if ( get ( i ) ) { return i ; } i -- ; } return - 1 ; }
Convert note to document <code> Document noteToDocument ( Note note ) { ,"Gson gson = new GsonBuilder ( ) . create ( ) ; String json = gson . toJson ( note ) ; Document doc = Document . parse ( json ) ; doc . put ( ""_id"" , note . getId ( ) ) ; return doc ; }"
Inject new values and update the submit button. <code> void afterPhase ( PhaseEvent event ) { ,"Application application = FacesContext . getCurrentInstance ( ) . getApplication ( ) ; AddressFormProcessor process = ( ( AddressBean ) application . createValueBinding ( ""#{address}"" ) . getValue ( FacesContext . getCurrentInstance ( ) ) ) . getAddressFormProcessor ( ) ; process . inject ( ) ; process . updateSubmitButton ( ) ; }"
Get the base URI for the wsdl file. <code> String getBaseURI ( ) { ,try { URI uri = new URI ( _wsdlName ) ; return uri . toString ( ) ; } catch ( URISyntaxException e ) { return null ; } }
"Start the original activity, and finish the precondition activity. <code> void startOriginalActivityAndFinish ( Activity preconditionActivity ) { ",preconditionActivity . startActivity ( ( Intent ) preconditionActivity . getIntent ( ) . getParcelableExtra ( EXTRA_WRAPPED_INTENT ) ) ; preconditionActivity . finish ( ) ; }
Add the warnings and errors of one validationResult to this one. <code> void addAll ( SystemValidationResult validationResult ) { ,"addAll ( warnings , validationResult . getWarnings ( ) ) ; addAll ( errors , validationResult . getErrors ( ) ) ; }"
The identification object should default the timestamp to the current time when none is specified. <code> void validateTimestampValue ( ) { ,"GregorianCalendar calendar = new GregorianCalendar ( ) ; assertTrue ( ""difference between default timestamp and now is greater than 1 seconds"" , ( 1L * 1000 ) > ( calendar . getTime ( ) . getTime ( ) - test . getTimestamp ( ) ) ) ; }"
"Gets an array parameter constructor as a String, which then can be passed to the execute() method. <code> String getArrayConstructor ( String javascriptObjectType , Object [ ] ary ) { ","String fn = getArrayFunction ( ""new "" + javascriptObjectType , ary ) ; return fn ; }"
"Send a replayCommit request. <code> void replayCommit ( final String serviceURI , final CoordinationContextType coordinationContext ) { ","final String messageId = MessageId . getMessageId ( ) ; final MAP map = AddressingHelper . createRequestContext ( serviceURI , messageId ) ; SyncParticipantClient . getClient ( ) . sendReplayCommit ( coordinationContext , map ) ; }"
"Returns the Box at the specified index, or null on error. <code> Box getBox ( int index ) { ","long nativeBox = nativeGetBox ( mNativePixa , index ) ; if ( nativeBox == 0 ) { return null ; } return new Box ( nativeBox ) ; }"
Gets the clock difference in HTML string. <code> String toString ( ) { ,if ( - 1000 < diff && diff < 1000 ) return Messages . ClockDifference_InSync ( ) ; long abs = Math . abs ( diff ) ; String s = Util . getTimeSpanString ( abs ) ; if ( diff < 0 ) s = Messages . ClockDifference_Ahead ( s ) ; else s = Messages . ClockDifference_Behind ( s ) ; return s ; }
"Get the editor that is currently being used, if it is a text editor. <code> ITextEditor getCurrentTextEditor ( ) { ",IEditorPart editor = getCurrentEditor ( ) ; if ( editor instanceof ITextEditor ) { return ( ITextEditor ) editor ; } return null ; }
Range check a child index. <code> boolean rangeCheckChildIndex ( final int index ) { ,if ( index < 0 || index > getKeys ( ) . size ( ) + 1 ) throw new IndexOutOfBoundsException ( ) ; return true ; }
Build the minimal automaton representing the days of a week. <code> void testMinimalDFABuilder2 ( ) { ,FSMBuilder builder = new MinimalFSMBuilder ( IConstants . FSM_DFA ) ; builder . create ( IConstants . VIETNAMESE_LEXICON ) ; builder . dispose ( ) ; }
Removing an existing object should succeed. <code> void testRemoveExistingObject ( ) { ,"instance . addObject ( OBJ_KEY , toStream ( OBJ_CONTENT ) ) ; instance . removeObject ( OBJ_KEY ) ; }"
Get the work currently associated with the transaction. <code> Work getWork ( Transaction tx ) { ,Stack < Work > workers ; synchronized ( _transactions ) { workers = _transactions . get ( tx ) ; } if ( workers != null ) { synchronized ( workers ) { if ( ! workers . empty ( ) ) return workers . peek ( ) ; } } return null ; }
Set the name of this marker. <code> void setName ( String s ) { ,"if ( s == null ) { throw new IllegalArgumentException ( ""param is null"" ) ; } name = s ; }"
"Method formats content-type and charset for use as HTTP header value <code> String getFormattedContentType ( final String contentType , final String charset ) { ","String charsetFormatted = StringUtil . isEmpty ( charset ) ? """" : ""; charset="" + charset ; return contentType + charsetFormatted ; }"
Set the name of the query from which this Blast entry comes from. <code> void setQueryName ( String qName ) { ,_queryName = qName ; _repr = null ; }
Returns cached bytes that are also reset. <code> BytesStreamOutput cachedBytes ( ) { ,bytes . reset ( ) ; return bytes ; }
"Method used within JSP pages to properly indent elements within a hierarchy table. The second parameter is used to determine whether or not to display any arrow graphics. <code> int getIndentPixel ( int indentLevel_ , boolean hasChildren_ ) { ",int indentPixelValue = 1 + ( INDENT_WIDTH * indentLevel_ ) ; if ( ! hasChildren_ ) indentPixelValue = indentPixelValue + NOCHILD_INDENT ; return indentPixelValue ; }
Construct an identity transformer. <code> Transformer getTransformer ( ) { ,"try { return tf . newTransformer ( ) ; } catch ( TransformerConfigurationException e ) { throw new Error ( ""XSL Configuration Error"" , e ) ; } }"
"Serialize an instance, restore it, and check for equality. <code> void testSerialization ( ) { ","KeyedObjects ko1 = new KeyedObjects ( ) ; ko1 . addObject ( ""Key 1"" , ""Object 1"" ) ; ko1 . addObject ( ""Key 2"" , null ) ; ko1 . addObject ( ""Key 3"" , ""Object 2"" ) ; KeyedObjects ko2 = ( KeyedObjects ) TestUtilities . serialised ( ko1 ) ; assertEquals ( ko1 , ko2 ) ; }"
Page events for user <code> void pageUserEvents ( ) { ,"PageIterator < Event > iterator = eventService . pageUserEvents ( ""user"" ) ; assertNotNull ( iterator ) ; assertTrue ( iterator . hasNext ( ) ) ; assertEquals ( Utils . page ( ""/users/user/events"" ) , iterator . getRequest ( ) . generateUri ( ) ) ; }"
"Test of getX method, of class Point. <code> void testGetXY ( ) { ","Point p = new Point ( 10 , 20 ) ; assertEquals ( 10.0 , p . getX ( ) , 0.0 ) ; assertEquals ( 20.0 , p . getY ( ) , 0.0 ) ; }"
Set whether or not ProtocolLib should determine if a new version has been released. <code> void setAutoNotify ( boolean value ) { ,"setConfig ( updater , UPDATER_NOTIFY , value ) ; modCount ++ ; }"
Check for more attachment. <code> boolean hasNext ( ) { ,cacheStreamedAttachments ( ) ; if ( closed ) { return false ; } int v = stream . read ( ) ; if ( v == - 1 ) { return false ; } stream . unread ( v ) ; return true ; }
"Strips leading null bytes from a byte array, returning a new copy. As a special case, if the input array consists entirely of null bytes, then an array with a single null element will be returned. <code> byte [ ] removeLeadingNullBytes ( byte [ ] inArray ) { ",int offset = 0 ; while ( offset < inArray . length & inArray [ offset ] == 0 ) { offset += 1 ; } byte [ ] result = new byte [ inArray . length - offset ] ; for ( int i = offset ; i < inArray . length ; i ++ ) { result [ i - offset ] = inArray [ i ] ; } return result ; }
Updates each created player by this class and immediately draws it. This method should only be called if you want to update and render on the same thread. <code> void updateAndDraw ( ) { ,"if ( ! initialized ) throw new SpriterException ( ""Call init() before updating!"" ) ; for ( int i = 0 ; i < players . size ( ) ; i ++ ) { players . get ( i ) . update ( ) ; drawer . loader = entityToLoader . get ( players . get ( i ) . getEntity ( ) ) ; drawer . draw ( players . get ( i ) ) ; } }"
"Merge the specified Velocity template with the given model into a String. When using this method to prepare a text for a mail to be sent with Spring's mail support, consider wrapping VelocityException in MailPreparationException. <code> String mergeTemplateIntoString ( VelocityEngine velocityEngine , String templateLocation , Map < String , Object > model ) { ","StringWriter result = new StringWriter ( ) ; mergeTemplate ( velocityEngine , templateLocation , model , result ) ; return result . toString ( ) ; }"
/user/delete/person?id=[id] -> delete the person user having the passed id. <code> String deletePerson ( long id ) { ,"try { personRepository . delete ( new Person ( id ) ) ; } catch ( Exception ex ) { return ""Error deleting the user:"" + ex . toString ( ) ; } return ""User succesfully deleted!"" ; }"
"do HTTP POST operation for the given URL <code> org . wso2 . carbon . automation . test . utils . http . client . HttpResponse doPost ( String url , Map < String , String > headers , List < NameValuePair > urlParameters ) { ","CloseableHttpClient httpClient = getHttpsClient ( ) ; HttpResponse response = sendPOSTMessage ( httpClient , url , headers , urlParameters ) ; return constructResponse ( response ) ; }"
"Returns the first value of a string property. <code> String getStringProperty ( Properties properties , String name ) { ",PropertyData < ? > property = properties . getProperties ( ) . get ( name ) ; if ( ! ( property instanceof PropertyString ) ) { return null ; } return ( ( PropertyString ) property ) . getFirstValue ( ) ; }
Returns the second byte array. <code> byte [ ] getTmpByteArray2 ( int size ) { ,byte [ ] tmp ; if ( tmpByteArray2 == null || ( tmp = tmpByteArray2 . get ( ) ) == null || tmp . length < size ) { tmp = new byte [ size ] ; tmpByteArray2 = new SoftReference < byte [ ] > ( tmp ) ; } return tmp ; }
search Patron Account by phone number <code> ArrayList < PatronAccount > searchPatronByTel ( String telNum ) { ,ArrayList < PatronAccount > resultList = new ArrayList < PatronAccount > ( ) ; return resultList ; }
Singleton class to initialize the DBConenctor class <code> DBConnector getInstance ( ) { ,if ( db_Instance == null ) { synchronized ( DBConnector . class ) { db_Instance = new DBConnector ( ) ; } } return db_Instance ; }
"Returns a map of collected package names to root paths. <code> ImmutableMap < PackageIdentifier , Path > collectPackageRoots ( Collection < Package > packages ) { ","ImmutableMap . Builder < PackageIdentifier , Path > packageRoots = ImmutableMap . builder ( ) ; for ( Package pkg : packages ) { packageRoots . put ( pkg . getPackageIdentifier ( ) , pkg . getSourceRoot ( ) ) ; } return packageRoots . build ( ) ; }"
"Finds a team by its normalized name <code> ResponseEntity < TeamResource > findByNormalizedNameForClient ( @ RequestParam ( value = ""normalizedName"" , required = false ) String normalizedName , @ PageableDefault ( size = 1 ) Pageable pageable , @ PathVariable ( ""clientId"" ) Long clientId ) { ","Team toFind = teamService . findByNormalizedNameAndClientId ( normalizedName , clientId ) ; if ( toFind != null ) { return new ResponseEntity < > ( teamResourceAssembler . toResource ( toFind ) , HttpStatus . OK ) ; } else { return new ResponseEntity < > ( HttpStatus . NO_CONTENT ) ; } }"
"Test of terminate method, of class JRubyEngine. <code> void testTerminate ( ) { ","logger1 . info ( ""terminate"" ) ; BSFManager manager = new BSFManager ( ) ; JRubyEngine instance = new JRubyEngine ( ) ; instance . initialize ( manager , ""jruby"" , null ) ; instance . terminate ( ) ; }"
Generate list of crumbs. <code> List < Crumb > generateCrumbs ( ) { ,while ( numberOfCrumbs > 0 ) { generateCrumb ( maxLevel ) ; } return crumbs ; }
Gets the value of the extrusionH property. <code> long getExtrusionH ( ) { ,if ( extrusionH == null ) { return 0L ; } else { return extrusionH ; } }
Indicates whether there are more combinations to be returned or not. <code> boolean hasNext ( ) { ,for ( int i = no - 1 ; i >= 0 ; i -- ) { if ( indexes [ i ] < objects [ i ] . length - 1 ) { return true ; } } return false ; }
check if connector is enabled and checks authentication. <code> boolean checkConnector ( final HttpServletRequest request ) { ,"if ( ! configuration . enabled ( ) || ! configuration . checkAuthentication ( request ) ) { throw new ConnectorException ( Constants . Errors . CKFINDER_CONNECTOR_ERROR_CONNECTOR_DISABLED , false ) ; } return true ; }"
"Get the UNC name associated with a particular drive letter. If isNetworkDrive() returns false for this drive letter, returns null. <code> String getUNCName ( String driveLetter ) { ","driveLetter = getDriveLetter ( driveLetter ) ; if ( driveLetter == null ) return null ; String drivePath = getDrivePath ( driveLetter ) ; String result = ( String ) networkDrives . get ( drivePath ) ; logger . finer ( ""getUNCName("" + driveLetter + "") = '"" + result + ""'"" ) ; return result ; }"
"Adds the key to the read top-key. <code> void addGet ( Object key , boolean remote ) { ","if ( ! isEnabled ( ) ) { return ; } syncOffer ( remote ? Stat . REMOTE_GET : Stat . LOCAL_GET , key ) ; }"
These operations critically rely on the fact that we unpack the array in the order we packed it! <code> byte [ ] getGlobalTransactionId ( ) { ,"if ( _theXid != null ) { byte b [ ] = new byte [ _theXid . gtrid_length ] ; System . arraycopy ( _theXid . data , 0 , b , 0 , b . length ) ; return b ; } else return null ; }"
DockerRun can fetch environment vars from empty list. <code> void fetchesEnvVarsFromEmptyList ( ) { ,"final Profile profile = new Profile . Fixed ( new XMLDocument ( ""<p><entry key='ooo'><entry key='env'/></entry></p>"" ) ) ; MatcherAssert . assertThat ( new DockerRun ( profile , ""/p/entry[@key='ooo']"" ) . envs ( new ArrayMap < String , String > ( ) ) , Matchers . startsWith ( ""(  "" ) ) ; }"
Gets the RTP header length <code> int getPayloadLength ( ) { ,if ( packet_len >= 12 ) return packet_len - getHeaderLength ( ) ; else return 0 ; }
Log a message at level WARN to all available/enabled logs. <code> void auditWarn ( String msg ) { ,defaultLog . warn ( msg ) ; if ( traceOn ) { traceLog . warn ( msg ) ; } }
Retrieves the state label associated with this split data. Note: invoking this operation is illegal if no state label has previously been set. <code> D getStateLabel ( ) { ,assert hasStateLabel ( ) ; return stateLabel ; }
"Adapts a VirtExOrder to a LimitOrder <code> LimitOrder adaptOrder ( BigDecimal amount , BigDecimal price , String currency , String orderTypeString , String id ) { ","OrderType orderType = orderTypeString . equalsIgnoreCase ( ""bid"" ) ? OrderType . BID : OrderType . ASK ; String tradableIdentifier = Currencies . BTC ; BigMoney limitPrice = MoneyUtils . parse ( currency + "" "" + price ) ; return new LimitOrder ( orderType , amount , tradableIdentifier , currency , id , null , limitPrice ) ; }"
Overridden hashCode() This method is adopted from hashCode() method in the course text book Effective Java 2nd edition to return the hash code of the entry phone number <code> int hashCode ( ) { ,int hash = 17 ; hash = 31 * hash + areaCode . hashCode ( ) ; hash = 31 * hash + prefix . hashCode ( ) ; hash = 31 * hash + number . hashCode ( ) ; return hash ; }
"Creates a view and installs event emitters on it. <code> T createView ( ThemedReactContext reactContext , JSResponderHandler jsResponderHandler ) { ","T view = createViewInstance ( reactContext ) ; addEventEmitters ( reactContext , view ) ; if ( view instanceof ReactInterceptingViewGroup ) { ( ( ReactInterceptingViewGroup ) view ) . setOnInterceptTouchEventListener ( jsResponderHandler ) ; } return view ; }"
Gets a String from a Memento <code> String getString ( String key ) { ,final IMemento mem = getAttribute ( key ) ; return mem . getString ( ATTR_VALUE ) ; }
"Contacts a region server and waits up to hbase.hbck.close.timeout ms (default 120s) to close the region. This bypasses the active hmaster. <code> void closeRegionSilentlyAndWait ( Connection connection , ServerName server , HRegionInfo region ) { ","long timeout = connection . getConfiguration ( ) . getLong ( ""hbase.hbck.close.timeout"" , 120000 ) ; ServerManager . closeRegionSilentlyAndWait ( ( ClusterConnection ) connection , server , region , timeout ) ; }"
Returns a string representation of this object; useful for testing and debugging. <code> String toString ( ) { ,"StringBuilder sb = new StringBuilder ( ) ; sb . append ( ""{"" ) ; if ( getData ( ) != null ) sb . append ( ""Data: "" + getData ( ) ) ; sb . append ( ""}"" ) ; return sb . toString ( ) ; }"
Returns a string representation of this object; useful for testing and debugging. <code> String toString ( ) { ,"StringBuilder sb = new StringBuilder ( ) ; sb . append ( ""{"" ) ; if ( getIndexField ( ) != null ) sb . append ( ""IndexField: "" + getIndexField ( ) ) ; sb . append ( ""}"" ) ; return sb . toString ( ) ; }"
Convert a token into its String representation. <code> String toString ( Token t ) { ,if ( t . getKind ( ) . hasPayload ( ) ) { return t . stringValue ( ) ; } else { return new String ( t . kind . getTokenChars ( ) ) ; } }
Message is considered valid only when it has Wigzo ID and its type is determined <code> boolean isValid ( ) { ,"String id = data . getString ( ""c.i"" ) ; return ! isUnknown ( ) && id != null && id . length ( ) == 24 ; }"
Deletes the file and if it's a directory deletes also any content in it <code> boolean deleteRecursively ( File file ) { ,if ( file . isDirectory ( ) ) { deleteContents ( file ) ; } return file . delete ( ) ; }
"Get index of object in array. <code> int indexOf ( @ NonNull T [ ] array , @ Nullable T object ) { ",for ( int i = 0 ; i < array . length ; i ++ ) { if ( array [ i ] == object ) return i ; } return - 1 ; }
"GET API END POINTS TO HANDELE REQUESTS FROM ADMIN <code> ResponseEntity < List < SentDocument >> getReceivedDocsPatient ( Model model , @ PathVariable ( ""patientID"" ) long patientID ) { ","LOGGER . debug ( ""processing request to get received documents ..."" ) ; List < SentDocument > received = userServiceInterface . getSentDocumentsByPatientID ( patientID ) ; return new ResponseEntity < List < SentDocument >> ( received , HttpStatus . OK ) ; }"
Encode url using default encoding and unchecked exception <code> String encodeWithEncoder ( String url ) { ,"try { return URLEncoder . encode ( url , IO . encoding ( ) ) ; } catch ( UnsupportedEncodingException e ) { throw new AssertionError ( IO . encoding ( ) + "" should be supported!"" , e ) ; } }"
"Circuit listener Each time the circuit changes, test if there is a VHDL component If yes, start the VHDL simulator, and if not, stop it <code> void circuitChanged ( CircuitEvent event ) { ",if ( hasVhdlComponent ( getProject ( ) ) ) start ( ) ; else stop ( ) ; }
Returns an array containing all the columns of the entity The columns are sorted by ordinal position (the original database order). <code> Attribute [ ] getAttributesArray ( ) { ,Attribute [ ] cols = ( Attribute [ ] ) ( attributes . values ( ) . toArray ( new Attribute [ attributes . size ( ) ] ) ) ; Arrays . sort ( cols ) ; return cols ; }
"Metoda dodaje pretnju u listu pretnji ove strategije <code> void dodajPretnju ( SwotStrat pretnja , int atraktivnost ) { ","SwotStrat s = new SwotStrat ( pretnja . getNaziv ( ) , pretnja . getPonder ( ) , atraktivnost ) ; pretnje . add ( s ) ; }"
"Set UUID field record value <code> void setUUIDValue ( String columnName , UUID value ) { ",if ( values == null ) values = new ArrayList < DatabaseRecord > ( ) ; DatabaseRecord record = new DesktopRecord ( ) ; record . setName ( columnName ) ; record . setValue ( value . toString ( ) ) ; record . setChange ( true ) ; values . add ( record ) ; }
Clicks the Cancel button when entering a folder name. Re-uses objects from AssignmentAddSubmission.java <code> void clickButtonCancelFolderName ( ) { ,AssignmentAddSubmission clickButton = new AssignmentAddSubmission ( driver ) ; clickButton . clickButtonCancelFolderName ( ) ; }
Returns an German language profile <code> KnobDialogProfile createGermanProfile ( ) { ,"KnobDialogProfile profile = new KnobDialogProfile ( ) ; profile . setMessage ( ""Bitte geben Sie eine [type] im Bereich [range] ein:"" ) ; profile . setInteger ( ""Ganzzahl"" ) ; profile . setDecimal ( ""Gleitkommazahl"" ) ; profile . setTitle ( ""Eingabemaske"" ) ; return profile ; }"
"If there is a type attribute for the element node, return its value, otherwise return ""scalar"". <code> String getTypeAttribute ( Node node ) { ","NamedNodeMap attributes = node . getAttributes ( ) ; if ( attributes != null ) { for ( int i = 0 ; i < attributes . getLength ( ) ; i ++ ) { Node current = attributes . item ( i ) ; if ( ""type"" . equals ( current . getNodeName ( ) ) ) { return current . getNodeValue ( ) ; } } } return ""scalar"" ; }"
Returns the message client that the message is intended to. <code> MessageClient getMessageClient ( Message message ) { ,if ( lastMessageClient != null && message . getClientId ( ) . equals ( lastMessageClient . getClientId ( ) ) ) { return lastMessageClient ; } else { lastMessageClient = client . getMessageClient ( ( String ) message . getClientId ( ) ) ; return lastMessageClient ; } }
Obtiene un usuario por su nombre <code> User getUserByLegajo ( String legajo ) { ,"try { return ar . com . tsoluciones . arcom . security . services . UserService . getUserByLegajo ( legajo ) ; } catch ( HibernateException e ) { throw new InternalErrorException ( ""Error al intentar otener el objeto User"" , e ) ; } }"
Executes an ant task <code> void runTask ( String task ) { ,"if ( project == null ) throw new Exception ( ""NoProjectLoaded"" ) ; if ( task == null ) task = project . getDefaultTarget ( ) ; try { project . executeTarget ( task ) ; } catch ( final BuildException e ) { logger . error ( e . getMessage ( ) , e ) ; } }"
"Returns the default dialog spacing, in pixels <code> Point getSpacing ( ) { ",initializeConstants ( ) ; return dialogSpacing ; }
FieldTypeSignature ::= ClassTypeSignature | ArrayTypeSignature | TypeVariableSignature. <code> void genFieldTypeSignature ( ITypeBinding type ) { ,if ( type . isArray ( ) ) { sb . append ( '[' ) ; genTypeSignature ( type . getComponentType ( ) ) ; } else if ( type . isTypeVariable ( ) ) { genTypeVariableSignature ( type ) ; } else { genClassTypeSignature ( type ) ; } }
This method should clear the states of the current instance. <code> void gameReset ( ) { ,gameState = null ; for ( GameListener UIWindow : UIWindows ) { UIWindow . resetGame ( ) ; } }
Convert a JSONArray into a SLARegistrationBean list. <code> List < SLARegistrationBean > fromJSONArray ( JSONArray array ) { ,List < SLARegistrationBean > list = new ArrayList < SLARegistrationBean > ( ) ; for ( Object obj : array ) { list . add ( new SLARegistrationBean ( ( JSONObject ) obj ) ) ; } return list ; }
The next Option created can have num argument values. <code> OptionBuilder hasArgs ( int num ) { ,instance . numberOfArgs = num ; return instance ; }
"Are the choices deterministic? (i.e. a single probability 1.0 transition) (will also return true for a continuous-time model matching this definition, since TransitionList does not know about model type) <code> boolean isDeterministic ( ) { ",if ( numTransitions == 1 ) { Expression e = getChoice ( 0 ) . getProbability ( 0 ) ; if ( Expression . isDouble ( e ) ) { return ( Double ) ( ( ExpressionLiteral ) e ) . getValue ( ) == 1.0 ; } } return false ; }
Parses a string containing a cognometric grouped password <code> CognometricGroupedPassword parseCognometricGroupedPassword ( String pwd ) { ,"CognometricGroupedPassword pw = new CognometricGroupedPassword ( ) ; for ( String cp : pwd . split ( "";"" ) ) { pw . addElement ( arrayStringToInt ( cp . split ( "","" ) ) ) ; } return pw ; }"
Returns first page in paging range. <code> int getStartPage ( ) { ,int startPage = 1 ; if ( currentPage > PAGE_OFFSET ) { startPage = currentPage - PAGE_OFFSET ; } if ( ( getNumberOfPages ( ) - startPage ) < PAGE_TOTAL_OFFSET ) { startPage = getNumberOfPages ( ) - PAGE_TOTAL_OFFSET ; } if ( startPage <= 0 ) { startPage = 1 ; } return startPage ; }
"Generates the HTML page that is returned to the user when the given location doesn't exist in the database. <code> String generateOutputNotFound ( String lang , String callno , String owner ) { ","logger . debug ( ""Generate output not found."" ) ; return loader . loadTemplateNotFound ( lang , callno , owner ) ; }"
Select methods returning objects that are of a given type or of a sub-type of given type <code> Filter < Method > methodsReturning ( final Class < ? > type ) { ,"notNull ( ""Method return type"" , type ) ; return new Filter < Method > ( ) { @ Override public boolean accept ( Method object ) { return type . isAssignableFrom ( object . getReturnType ( ) ) ; } } ; }"
"A helper method to get a String[] out of a fieldArray <code> String [ ] getDefinedFonts ( Context ctx , Field [ ] fields ) { ","ArrayList < String > fieldArray = new ArrayList < String > ( ) ; for ( Field field : fields ) { if ( field . getName ( ) . contains ( ""define_font_"" ) ) { fieldArray . add ( getStringResourceByName ( ctx , field . getName ( ) ) ) ; } } return fieldArray . toArray ( new String [ fieldArray . size ( ) ] ) ; }"
Attaches a new scene to render in this ViewPort. <code> void attachScene ( Spatial scene ) { ,"if ( scene == null ) { throw new IllegalArgumentException ( ""Scene cannot be null."" ) ; } sceneList . add ( scene ) ; if ( scene instanceof Geometry ) { scene . forceRefresh ( true , false , true ) ; } }"
Returns the size of substring that does not contain ane trailing spaces <code> int rTrimSize ( String s ) { ,int i = s . length ( ) ; while ( i > 0 ) { i -- ; if ( s . charAt ( i ) != ' ' ) { return i + 1 ; } } return 0 ; }
"Returns the value annotated object for the specified annotation key. The annotated value is expected to be String that can be parsed as double. If parsing fails, the returned value will be 1.0. <code> double getAnnotatedValue ( Annotated annotated , String key ) { ",double value ; try { value = Double . parseDouble ( annotated . annotations ( ) . value ( key ) ) ; } catch ( NumberFormatException e ) { value = 1.0 ; } return value ; }
gets ToDo data from DataBase <code> ToDo getToDoById ( long toDoId ) { ,"ToDo toDo = ( ToDo ) getSession ( ) . get ( ToDo . class , toDoId ) ; return toDo ; }"
Returns a string representation of this object; useful for testing and debugging. <code> String toString ( ) { ,"StringBuilder sb = new StringBuilder ( ) ; sb . append ( ""{"" ) ; if ( getVpnConnection ( ) != null ) sb . append ( ""VpnConnection: "" + getVpnConnection ( ) ) ; sb . append ( ""}"" ) ; return sb . toString ( ) ; }"
Create the JSON factory <code> JsonFactory getFactory ( ) { ,JsonFactory jsonFactory = new JsonFactory ( ) ; jsonFactory . disable ( JsonGenerator . Feature . AUTO_CLOSE_TARGET ) ; jsonFactory . disable ( JsonParser . Feature . AUTO_CLOSE_SOURCE ) ; return jsonFactory ; }
"Call this after calling client.execute in order to execute proxy authentication if needed. <code> void autenticateProxyIfNeeded ( HttpResponse iGetResultCode , HttpClientContext localContext ) { ","if ( localContext == null ) localContext = HttpClientContext . create ( ) ; ProxyInfoProvider . authenticateConnectionIfNeeded ( iGetResultCode , localContext , client ) ; }"
"computeAncestry, starting with children and going back to parents <code> List < Class < ? >> computeAncestry ( Class < ? > c ) { ","final List < Class < ? >> result = new ArrayList < Class < ? >> ( ) ; result . add ( Object . class ) ; computeAncestry ( c , result ) ; Collections . reverse ( result ) ; return unmodifiableList ( new ArrayList < Class < ? >> ( result ) ) ; }"
"Assign value to string if the string is null or null string or nothing <code> void setValue ( String string , String value ) { ","if ( string == null ) { string = value ; return ; } if ( string . length ( ) == 0 ) { string = value ; return ; } if ( string . equals ( ""null"" ) ) { string = value ; return ; } return ; }"
"According to the ""column"" query ""column"" number. <code> int countColumn ( String columnName ) { ","StringBuilder sqlBuild = new StringBuilder ( ""SELECT COUNT("" ) . append ( columnName ) . append ( "") FROM "" ) . append ( getTableName ( ) ) ; return count ( sqlBuild . toString ( ) ) ; }"
"Test of containsValue method, of class HeadersMap. <code> void testContainsValue ( ) { ","List values = new ArrayList ( ) ; values . add ( ""bar"" ) ; values . add ( ""bop"" ) ; map . put ( ""foo"" , values ) ; assertTrue ( map . containsValue ( values ) ) ; map . clear ( ) ; assertTrue ( ! map . containsValue ( values ) ) ; }"
"Runs servlet-setup wizard on specified project <code> void servletSetup ( String projectName , String webFacetVersion ) { ","ProjectExplorer pe = new ProjectExplorer ( ) ; pe . selectProjects ( projectName ) ; WizardDialog wd = getWizardDialog ( ""servlet-setup"" , ""(Servlet: Setup).*"" ) ; new LabeledCombo ( ""Servlet Version:"" ) . setSelection ( webFacetVersion ) ; wd . finish ( TimePeriod . getCustom ( 600 ) ) ; }"
"Creates an integer array filled with random values. <code> int [ ] randomIntArray ( int length , int n ) { ",int [ ] a = new int [ length ] ; for ( int i = 0 ; i < a . length ; i ++ ) { a [ i ] = generator . nextInt ( n ) ; } return a ; }
This method sets the common parameters. <code> void preparePKCS12TokenAndKey ( ) { ,"String pkcs12TokenFile = getPathFromResource ( ""/user_a_rsa.p12"" ) ; signingToken = new Pkcs12SignatureToken ( ""password"" , pkcs12TokenFile ) ; privateKey = signingToken . getKeys ( ) . get ( 0 ) ; }"
Slow method to import all currently highlighted primitives into this instance <code> void findAllHighlighted ( ) { ,DataSet ds = Main . main . getCurrentDataSet ( ) ; if ( ds != null ) { highlightedPrimitives . addAll ( ds . allNonDeletedPrimitives ( ) ) ; } }
"Returns the Euclidian distance between two double arrays. <code> double getDistance ( double [ ] point1 , double [ ] point2 ) { ","if ( point1 == null || point2 == null || point1 . length != point2 . length ) { return Double . MAX_VALUE ; } double dist = IntStream . range ( 0 , point1 . length ) . mapToDouble ( i -> Math . pow ( point1 [ i ] - point2 [ i ] , 2 ) ) . sum ( ) ; return Math . sqrt ( dist ) ; }"
Add a port. Currently only a single port is being used. <code> void addPort ( String p ) { ,if ( p == null ) return ; if ( ! m_ports . contains ( p ) ) { m_ports . add ( p ) ; } }
Gets the value of the fadeDir property. <code> int getFadeDir ( ) { ,if ( fadeDir == null ) { return 5400000 ; } else { return fadeDir ; } }
Get the source for the given data point <code> String getSourceString ( DataPoint inPoint ) { ,String str = null ; for ( int i = 0 ; i < _cacherList . length && ( str == null ) ; i ++ ) { GpxCacher cacher = _cacherList [ i ] ; if ( cacher != null ) { str = cacher . getSourceString ( inPoint ) ; } } return str ; }
"Append a new ""do function"" operation to the sequence <code> void addFunction ( int idhighbyte , int idmiddlebyte , int idlowbyte , int function , int flag , int command1 , int command2 ) { ","if ( index >= MAXINDEX ) { throw new IllegalArgumentException ( ""Sequence too long"" ) ; } cmds [ index ] = new Function ( idhighbyte , idmiddlebyte , idlowbyte , function , flag , command1 , command2 ) ; index ++ ; }"
"Connects the given model to the given log (needed for log replay). <code> PetriNetResult connectModelWithLog ( PetriNet model , LogReader log ) { ","PetriNetResult result = new PetriNetResult ( model ) ; PetriNetLogReaderConnectionPlugin conn = new PetriNetLogReaderConnectionPlugin ( ) ; MainUI . getInstance ( ) . connectResultWithLog ( result , log , conn , true , true ) ; return result ; }"
"Get the ID of the motor. One of 'A', 'B' or 'C'. <code> char getId ( ) { ",char port = 'A' ; switch ( id ) { case 0 : port = 'A' ; break ; case 1 : port = 'B' ; break ; case 2 : port = 'C' ; break ; } return port ; }
"access a parameter from a parameter map <code> Double getDoubleParameter ( String key , double defaultValue ) { ","String val = getParameter ( key ) ; if ( val == null || """" . equals ( val ) ) return defaultValue ; return new Double ( val ) ; }"
Parses a block command like foreach/if. <code> TokenList parseBlock ( String command ) { ,"if ( command . trim ( ) . startsWith ( ""foreach"" ) ) return seekTokenSource ( ""end"" ) ; throw new RuntimeException ( ""Can't parse block for unexpected command: "" + command ) ; }"
Creates a new configuration based on default values <code> Configuration defaultConfiguration ( ) { ,Defaults defaults = getEffectiveDefaults ( ) ; return Configuration . builder ( ) . jsonProvider ( defaults . jsonProvider ( ) ) . options ( defaults . options ( ) ) . build ( ) ; }
Set Twitter Oauth Token Secret <code> void setTwitterOauthTokenSecret ( String tokenSecret ) { ,"Editor editor = mSharedPrefs . edit ( ) ; editor . putString ( ConstantValues . PREFERENCE_TWITTER_OAUTH_TOKEN_SECRET , tokenSecret ) ; editor . commit ( ) ; }"
If the definition of toString is not from java.lang.Object or any class in the java.util. package then we consider it a custom implementation in which case we'll use it instead of introspecting the class. <code> boolean hasCustomToStringMethod ( Class c ) { ,"try { Method toStringMethod = c . getMethod ( ""toString"" , null ) ; Class declaringClass = toStringMethod . getDeclaringClass ( ) ; if ( declaringClass != Object . class && ! declaringClass . getName ( ) . startsWith ( ""java.util"" ) ) { return true ; } } catch ( Throwable t ) { } return false ; }"
Add this state to L[pair_index] <code> void addTo_L ( int pair_index ) { ,"_acceptance . getAcceptance_L ( pair_index ) . set ( _state_index ) ; _acceptance . getAcceptance_U ( pair_index ) . set ( _state_index , false ) ; }"
"Given an OMText node, create it's corresponding element. <code> OMElement makeXopElement ( OMText data ) { ","OMFactory factory = data . getOMFactory ( ) ; OMElement xop = factory . createOMElement ( XOP_INCLUDE , null ) ; xop . addAttribute ( ""href"" , data . getContentID ( ) , null ) ; return xop ; }"
Saves the current state of the crawler to the specified output stream. <code> void saveState ( OutputStream out ) { ,"if ( frontier == null ) { throw new IllegalStateException ( ""No state to save."" ) ; } try ( ObjectOutputStream objectOutputStream = new ObjectOutputStream ( out ) ) { objectOutputStream . writeObject ( frontier ) ; } }"
Generate a hash code <code> int hashCode ( ) { ,int h = 0 ; for ( int s = 0 ; s < segments . size ( ) ; s ++ ) { FastStringBuffer sb = ( ( FastStringBuffer ) segments . get ( s ) ) ; for ( int i = 0 ; i < sb . length ( ) ; i ++ ) { h = 31 * h + charAt ( i ) ; } } return h ; }
"Retrieve all videos with a certain tag. <code> Response getVideosByTag ( @ PathParam ( ""tag"" ) String tag ) { ",Iterable < VideoByTag > videos = videoDAO . getVideosByTag ( tag ) ; List < VideoByTag > allVideos = Lists . newArrayList ( videos ) ; return Response . ok ( jsonMapper . writeValueAsString ( allVideos ) ) . build ( ) ; }
"Create the scatter plot data. <code> ScatterPlotData newScatterPlotData ( final Data xData , final Data yData ) { ","checkNotNull ( xData , ""x data cannot be null."" ) ; checkNotNull ( yData , ""y data cannot be null."" ) ; checkArgument ( xData . getSize ( ) == yData . getSize ( ) , ""x and y data do not have the same number of elements"" ) ; return new PlotImpl ( xData , yData ) ; }"
"Creates a Gravatar thumbnail url from the specified email address. <code> String getGravatarIdenticonUrl ( String email , int width ) { ","if ( width <= 0 ) { width = 50 ; } String emailHash = StringUtils . getMD5 ( email ) ; String url = MessageFormat . format ( ""https://www.gravatar.com/avatar/{0}?s={1,number,0}&d=identicon"" , emailHash , width ) ; return url ; }"
Load the locale settings from the configuration <code> void loadLocale ( ) { ,"final ConfigGroup i18nConfig = Configuration . getConfigGroup ( ""i18n"" ) ; if ( i18nConfig . get ( ""set_locale"" ) . toLowerCase ( ) . equals ( ""true"" ) ) { Locale . setDefault ( new Locale ( i18nConfig . get ( ""language_code"" ) , i18nConfig . get ( ""country_code"" ) ) ) ; } }"
Lazily creates the scaling requirements for the OpenShift container provider <code> OpenShiftScalingRequirements openShiftScaling ( ) { ,if ( openShiftScalingRequirements == null ) { openShiftScalingRequirements = new OpenShiftScalingRequirements ( ) ; } return getOpenShiftScalingRequirements ( ) ; }
Returns class probabilities for a weighted instance. <code> double [ ] distributionForInstance ( Instance instance ) { ,"double [ ] doubles = new double [ instance . numClasses ( ) ] ; for ( int i = 0 ; i < doubles . length ; i ++ ) { doubles [ i ] = getProbs ( i , instance , 1 ) ; } return doubles ; }"
Get the current output of the 5V rail <code> double getCurrent5V ( ) { ,ByteBuffer status = ByteBuffer . allocateDirect ( 4 ) ; status . order ( ByteOrder . LITTLE_ENDIAN ) ; double retVal = PowerJNI . getUserCurrent5V ( status . asIntBuffer ( ) ) ; HALUtil . checkStatus ( status . asIntBuffer ( ) ) ; return retVal ; }
Returns the registered extension for the given MIME type. Note that some MIME types map to multiple extensions. This call will return the most common extension for the given MIME type. <code> String guessExtensionFromMimeType ( String mimeType ) { ,if ( mimeType == null || mimeType . isEmpty ( ) ) { return null ; } return getExtensionsFromMimeType ( mimeType ) . get ( 0 ) ; }
"Metodo que permite escribir un mensaje al usuario Email enviado que pasa por el servidor . <code> void sendMailItem ( String to , String subject , String message ) { ","MailItem item = new MailItem ( user , to , subject , message ) ; server . post ( item ) ; }"
Get a value used as an introduction to the article <code> String getIntroduction ( ) { ,"if ( introduction != null ) return introduction ; if ( content == null ) return null ; return content . split ( ""<!--more-->"" ) [ 0 ] ; }"
Returns the size of the given array. <code> int sizeOf ( Object array ) { ,"if ( array == null ) throw new NullPointerException ( ""The given array should not be null"" ) ; validateIsArray ( array ) ; return getLength ( array ) ; }"
"Finds the weapon index that uses specified ammo <code> int getWeaponFromAmmoIndex ( SmartBot bot , int am ) { ",for ( int i = 0 ; i < WeaponConfig . ammoTable . length ; i ++ ) { if ( WeaponConfig . ammoTable [ i ] == am ) return i ; } return - 1 ; }
"Adds more minutes onto the minutes in the specified date. <code> Date addMinutes ( Date date , int count ) { ","Date d = null ; if ( date != null ) { if ( count != 0 ) { Calendar cal = Calendar . getInstance ( ) ; cal . setTime ( date ) ; cal . add ( Calendar . MINUTE , count ) ; d = cal . getTime ( ) ; } else { d = ( Date ) date . clone ( ) ; } } return d ; }"
"Read bytes from an input stream and write them to an output stream. <code> void writeTo ( InputStream in , OutputStream out ) { ","int read ; final byte [ ] data = new byte [ BUFFER_SIZE ] ; while ( ( read = in . read ( data ) ) != - 1 ) { out . write ( data , 0 , read ) ; } }"
Return a List with all values in this Binary Search Tree that are greater than the parameter value. value != null <code> List < E > getAllGreaterThan ( E value ) { ,if ( value == null ) throw new IllegalArgumentException ( ) ; List < E > greater = new ArrayList < E > ( ) ; for ( int i = 0 ; i < size && get ( i ) . compareTo ( value ) > 0 ; i ++ ) greater . add ( get ( i ) ) ; return greater ; }
"Method to search for any words that might appear in the question answer object. All FIELDS!!! This includes the category, question, and the answer itself. <code> ArrayList < QuestionAnswer > searchQuestionAnswers ( String the_phrase ) { ",ArrayList < QuestionAnswer > questions = new ArrayList < QuestionAnswer > ( ) ; for ( QuestionAnswer curr : my_data ) { if ( curr . getAll ( ) . toLowerCase ( ) . contains ( the_phrase . toLowerCase ( ) ) ) { questions . add ( curr ) ; } } return questions ; }
"Called when a job completes. Mark the job as finished and push a status event. <code> void jobFinishedNotification ( String scriptId , JobStats stats ) { ","JobInfo jobInfo = collectStats ( scriptId , stats ) ; jobInfoList . add ( jobInfo ) ; pushEvent ( scriptId , WorkflowEvent . EVENT_TYPE . JOB_FINISHED , jobInfo ) ; }"
"Retrieves a string parameter value from an annotation. <code> String extractAnnotationStringValue ( Elements elementUtils , AnnotationMirror annotation , CharSequence paramName ) { ","final AnnotationValue av = extractAnnotationPropertyValue ( elementUtils , annotation , paramName ) ; if ( av != null && av . getValue ( ) != null ) { return av . getValue ( ) . toString ( ) ; } return null ; }"
no exception in creating csvParser with emtpy stream <code> void testEmptyStream ( ) { ,"String csv = """" ; StringReader sr = new StringReader ( csv ) ; CSVParser jp = null ; try { jp = new CSVParser ( sr , null ) ; Assert . assertEquals ( ""There should not be any rows."" , false , jp . iterator ( ) . hasNext ( ) ) ; } finally { if ( null != jp ) jp . close ( ) ; sr . close ( ) ; } }"
Overridden to ensure that equal instances have equal hash codes. <code> int hashCode ( ) { ,int hash = 17 ; hash = ( 37 * hash ) + kind . hashCode ( ) ; hash = ( 37 * hash ) + depth ; return hash ; }
Returns the mnemonic keycode int of the resource for the specified key. <code> int getMnemonicInt ( String key ) { ,"String m = getText ( key + "".mnemonic"" ) ; int mnemonic = m . charAt ( 0 ) ; if ( mnemonic >= 'a' && mnemonic <= 'z' ) { mnemonic -= ( 'a' - 'A' ) ; } return mnemonic ; }"
Returns whether the passed in shape is a matrix <code> boolean isMatrix ( int [ ] shape ) { ,if ( shape . length != 2 ) return false ; return ! isVector ( shape ) ; }
"Given a URI as an asset and the server name and port (as server:port), returns a URL that can be used to download the asset. <code> URL getAssetURL ( String uri , String serverNameAndPort ) { ","AssetURI assetURI = AssetURI . uriFactory ( uri ) ; if ( assetURI == null ) { logger . warning ( ""Unable to find AssetURI object for "" + uri ) ; return new URL ( uri ) ; } assetURI . setServerHostAndPort ( serverNameAndPort ) ; return assetURI . toURL ( ) ; }"
"Converts an entity to a DBObject <code> void toDBObject ( final Object containingObject , final MappedField mf , final DBObject dbObj , final MapperOptions opts ) { ","final Object fieldValue = mf . getFieldValue ( containingObject ) ; final TypeConverter enc = getEncoder ( fieldValue , mf ) ; final Object encoded = enc . encode ( fieldValue , mf ) ; if ( encoded != null || opts . isStoreNulls ( ) ) { dbObj . put ( mf . getNameToStore ( ) , encoded ) ; } }"
Sets the values of all buttons for this SensorRead object. <code> void setButtons ( int [ ] values ) { ,"if ( numButtons == 0 ) throw new ArrayIndexOutOfBoundsException ( J3dI18N . getString ( ""SensorRead1"" ) ) ; else if ( values . length < numButtons ) throw new ArrayIndexOutOfBoundsException ( J3dI18N . getString ( ""SensorRead0"" ) ) ; System . arraycopy ( values , 0 , buttonValues , 0 , numButtons ) ; }"
"Write a Collection of doubles to a PrintWriter <code> void writeVector ( PrintWriter writer , Collection < ? > vector ) { ",writer . println ( vector . size ( ) ) ; for ( Object v : vector ) { writer . println ( v ) ; } }
Tests that an id is created for a fixture. <code> void getId ( ) { ,Fixture f = new Fixture ( Geometry . createCircle ( 1.0 ) ) ; TestCase . assertNotNull ( f . getId ( ) ) ; }
"Returns the value at the specified key. <code> int getInt ( String key , int defaultValue ) { ",try { return ( int ) table . getNumber ( key ) ; } catch ( NoSuchElementException ex ) { return defaultValue ; } }
"Fast space padding method. <code> void spacePad ( StringBuffer sbuf , int length ) { ",while ( length >= 32 ) { sbuf . append ( SPACES [ 5 ] ) ; length -= 32 ; } for ( int i = 4 ; i >= 0 ; i -- ) { if ( ( length & ( 1 << i ) ) != 0 ) { sbuf . append ( SPACES [ i ] ) ; } } }
Set something to the fields of the game state and checks if the values have been set correctly. <code> void testGetterSetter ( ) { ,"gameState . setMoney ( 5789 ) ; gameState . setBaseNetSpacing ( 245 ) ; gameState . setToolViewWidth ( 825 ) ; assertEquals ( 5789 , gameState . getMoney ( ) ) ; assertEquals ( 245 , gameState . getBaseNetSpacing ( ) ) ; assertEquals ( 825 , gameState . getToolViewWidth ( ) ) ; }"
"Get an instance of a named CertPathBuilder, from the first provider that implements it. <code> CertPathBuilder getInstance ( String algorithm ) { ","Provider [ ] p = Security . getProviders ( ) ; for ( int i = 0 ; i < p . length ; i ++ ) { try { return getInstance ( algorithm , p [ i ] ) ; } catch ( NoSuchAlgorithmException e ) { } } throw new NoSuchAlgorithmException ( algorithm ) ; }"
Adds the coordinates to the current position and returns the newly calculated location. <code> GeoPosition addPosition ( GeoPosition pos ) { ,GeoPosition newPosition = new GeoPosition ( ) ; newPosition . setX ( getX ( ) + pos . getX ( ) ) ; newPosition . setY ( getY ( ) + pos . getY ( ) ) ; newPosition . setZ ( getZ ( ) + pos . getZ ( ) ) ; newPosition . setOrientation ( getOrientation ( ) ) ; return newPosition ; }
Inserts files into ZIP file. <code> File insertIntoZip ( File tmpDir ) { ,"File jar = File . createTempFile ( ""skinresourcepack"" , "".jar"" ) ; ZipOutputStream out = new ZipOutputStream ( new FileOutputStream ( jar ) ) ; zipDir ( tmpDir . getAbsolutePath ( ) , out ) ; out . close ( ) ; return jar ; }"
"Convert a field value on a String <code> String getFieldValueAsString ( String pFieldName , ValuesContainer pDomainContainer ) { ","final Context lContext = Context . getEmptyContext ( ) ; lContext . put ( VALUES_CONTAINER_4_CHOICE_FIELD , pDomainContainer ) ; return accesses . get ( pFieldName ) . getFieldValueAsString ( pDomainContainer , lContext ) ; }"
Get the current site name. <code> String getCurrentSiteName ( ) { ,AgentFacade facade = new AgentFacade ( ) ; boolean accessViaUrl = facade . isAccessViaUrl ( ) ; return helper . getCurrentSiteName ( accessViaUrl ) ; }
"Creates a new selection from the given start and length. <code> Selection createFromStartLength ( int s , int l ) { ",Assert . isTrue ( s >= 0 && l >= 0 ) ; Selection result = new Selection ( ) ; result . fStart = s ; result . fLength = l ; result . fExclusiveEnd = s + l ; return result ; }
Changes the current visibility warning threshold setting. <code> void setVisibilityWarningThreshold ( final int value ) { ,"Preconditions . checkArgument ( value >= 0 , ""IE00893: Threshold argument must not be negative"" ) ; if ( value == getVisibilityWarningTreshold ( ) ) { return ; } if ( m_type == null ) { m_visibilityWarningThreshold = value ; } else { m_type . setVisibilityWarningThreshold ( value ) ; } }"
"remove chars from a string <code> String removeChars ( final String string , final char ... delimiters ) { ","char [ ] [ ] comps = CharScanner . splitByCharsNoneEmpty ( FastStringUtils . toCharArray ( string ) , delimiters ) ; return new String ( Chr . add ( comps ) ) ; }"
Compares the time of two events. This method is used when sorting the list of events maintained by the EventQueue class. <code> int compareTo ( Object o ) { ,Event e = ( Event ) o ; return ( int ) ( time - e . time ) ; }
"A convenience function for converting a date expressed in minutes, days, and hours into a millisecond time stamp. <code> long componentTimeToTimestamp ( int year , int month , int day , int hour , int minute ) { ","Calendar c = Calendar . getInstance ( ) ; c . set ( Calendar . YEAR , year ) ; c . set ( Calendar . MONTH , month ) ; c . set ( Calendar . DAY_OF_MONTH , day ) ; c . set ( Calendar . HOUR , hour ) ; c . set ( Calendar . MINUTE , minute ) ; c . set ( Calendar . SECOND , 0 ) ; c . set ( Calendar . MILLISECOND , 0 ) ; return c . getTimeInMillis ( ) ; }"
Remove up to the requested amount of charge and returns the amount removed. <code> double removeCharge ( double request ) { ,if ( charge >= request ) { charge -= request ; lastTickDraw += request ; return request ; } double ret = charge ; charge = 0.0 ; lastTickDraw += ret ; return ret ; }
"generates randomly N distinct integers from 0 to Max. <code> int [ ] generateClustered ( int N , int Max ) { ","int [ ] array = new int [ N ] ; fillClustered ( array , 0 , N , 0 , Max ) ; return array ; }"
Load SQL for Reference List <code> String loadSQLList ( ) { ,"StringBuffer sql = new StringBuffer ( ""SELECT rl.Value, rl.Name FROM AD_Ref_List rl "" ) ; sql . append ( ""WHERE rl.AD_Reference_ID = "" ) . append ( m_field . AD_Reference_Value_ID ) ; sql . append ( "" "" ) . append ( getValRule ( ) ) ; return sql . toString ( ) ; }"
Returns the highest zoom-level number from the scaleList. <code> int getMaxZoomLevel ( ) { ,double [ ] scaleList = getScaleList ( ) ; int maxZoomLevel = scaleList . length - 1 ; while ( Double . isNaN ( scaleList [ maxZoomLevel ] ) && ( maxZoomLevel >= 0 ) ) { maxZoomLevel -- ; } return maxZoomLevel ; }
"Returns the appropriate Descriptor for the given types. Returns uppermost the ranked adapter factory descriptor with the highest ranking. If no ranked adapter factory descriptor found, delegates to the delegate registry. <code> Descriptor getDescriptor ( Collection < ? > types ) { ",ComposedAdapterFactory . Descriptor ret = getRankedDescriptor ( types ) ; if ( ret == null ) { ret = delegatedGetDescriptor ( types ) ; } return ret ; }
send message to server without encryption <code> void sendSystemData ( String msg ) { ,try { streamOut . writeUTF ( msg ) ; streamOut . flush ( ) ; } catch ( IOException e ) { logOut ( ) ; } }
"Constructs a bioassay name. This is useful when writing out data to a file. <code> String constructBioAssayName ( ExpressionDataMatrix < ? > matrix , int assayColumnIndex ) { ","BioMaterial bioMaterialForColumn = matrix . getBioMaterialForColumn ( assayColumnIndex ) ; Collection < BioAssay > bioAssaysForColumn = matrix . getBioAssaysForColumn ( assayColumnIndex ) ; return constructBioAssayName ( bioMaterialForColumn , bioAssaysForColumn ) ; }"
"Asserts that two doubles are equal concerning a delta. If they are not an AssertionFailedError is thrown with the given message. If the expected value is infinity then the delta value is ignored. <code> void assertEquals ( String message , double expected , double actual , double delta ) { ","if ( Double . compare ( expected , actual ) == 0 ) { return ; } if ( ! ( Math . abs ( expected - actual ) <= delta ) ) { failNotEquals ( message , new Double ( expected ) , new Double ( actual ) ) ; } }"
"Call this method to register an entity-specific delegate for a particular entity name. <code> void addDelegateForEntityNamed ( IERXRestEntityDelegate entityDelegate , String entityName ) { ","_entityDelegates . setObjectForKey ( entityDelegate , entityName ) ; _entityAliases . setObjectForKey ( entityName , entityDelegate . entityAliasForEntityNamed ( entityName ) ) ; }"
"This function tells the LCD (x0,y0) to (x1,y1) area to draw into. The next data bytes written to the LCD will be 12 bit color information <code> void setArea ( int x0 , int y0 , int x1 , int y1 ) { ",lcdCommand ( PASET ) ; lcdData ( x0 ) ; lcdData ( x1 ) ; lcdCommand ( CASET ) ; lcdData ( y0 ) ; lcdData ( y1 ) ; lcdCommand ( RAMWR ) ; }
Gets the value of the valueIsXMLEntity property. <code> boolean isValueIsXMLEntity ( ) { ,if ( valueIsXMLEntity == null ) { return false ; } else { return valueIsXMLEntity ; } }
Read the next nb bits and return an Signed Long . <code> long bits2SInt ( int nb ) { ,"long result = bits2UInt ( nb ) ; if ( getBit ( result , nb ) ) { result = setBit ( result , nb , false ) ; result = ~ result & LONG_BITMASK ; result = result + 1 ; } return result ; }"
Creates a series for testing. <code> XYSeries createSeries2 ( ) { ,"XYSeries series2 = new XYSeries ( ""Series 2"" , true , false ) ; series2 . add ( 2.0 , 2.0 ) ; series2 . add ( 3.0 , 2.0 ) ; series2 . add ( 4.0 , 2.0 ) ; series2 . add ( 5.0 , 2.0 ) ; series2 . add ( 6.0 , 2.0 ) ; return series2 ; }"
Provide the short name for the scale. <code> String getShortScaleID ( int scale ) { ,"switch ( scale ) { case Z : return ( ""Z"" ) ; case N : return ( ""N"" ) ; case TT : return ( ""TT"" ) ; case HO : return ( ""HO"" ) ; case S : return ( ""S"" ) ; case O : return ( ""O"" ) ; case G : return ( ""G"" ) ; case UK_N : return ( ""UK-N"" ) ; case UK_OO : return ( ""UK-OO"" ) ; case UK_O : return ( ""UK-O"" ) ; default : return ( ""???"" ) ; } }"
"Returns whether the broadcast is an emergency (PWS) message type, including test messages, but excluding lower priority Amber alert broadcasts. <code> boolean isEmergencyAlertMessage ( ) { ",int id = mMessageIdentifier ; return SmsCbHeader . isEmergencyMessage ( id ) && id != SmsCbConstants . MESSAGE_ID_CMAS_ALERT_CHILD_ABDUCTION_EMERGENCY ; }
Creates a new Period instance that matches exactly the month that includes the specified time stamp. <code> Period createMonthPeriod ( long timestamp ) { ,"MutableDateTime mdt = new MutableDateTime ( timestamp ) ; return createPeriod ( toMonthStart ( mdt ) . getMillis ( ) , toMonthEnd ( mdt ) . getMillis ( ) ) ; }"
"Sets the term integer identifier for the given query term. <code> void setTermProperty ( String term , int code ) { ","QueryTermProperties properties = ( QueryTermProperties ) termProperties . get ( term ) ; if ( properties == null ) { termProperties . put ( term , new QueryTermProperties ( code ) ) ; } else { properties . termCode = code ; } }"
"This method copies the currently detected Beacon instances from the cache. Used to pass the list of the beacons in an intent, since the Beacon class is Parcelable and additional information is not important. <code> ArrayList < Beacon > getCachedBeacons ( ) { ",ArrayList < Beacon > beaconList = new ArrayList < Beacon > ( ) ; for ( DetectedBeacon element : mCachedBeacons ) { beaconList . add ( element . getBeacon ( ) ) ; } return beaconList ; }
gets Assignment data from DataBase <code> Assignment getAssignmentsById ( long assignmentId ) { ,"Assignment assignment = ( Assignment ) getSession ( ) . get ( Assignment . class , assignmentId ) ; return assignment ; }"
Attempt to separate attached pronouns from the given verb. <code> StrippedVerb separatePronouns ( String verb ) { ,"StrippedVerb result ; result = stripSuffix ( verb , pOneAttachedPronoun ) ; if ( result != null && normalizeStrippedVerb ( result ) ) { return result ; } result = stripSuffix ( verb , pTwoAttachedPronouns ) ; if ( result != null && normalizeStrippedVerb ( result ) ) { return result ; } return null ; }"
"Parses libraries from ""pkg-config --libs-only-l"" input. <code> String [ ] parseLibs2 ( String s ) { ","if ( s != null ) { String libStr = s ; if ( libStr . startsWith ( ""-l"" ) ) { libStr = libStr . replaceFirst ( ""-l"" , """" ) ; } libStr = libStr . replace ( "" -l"" , "" "" ) ; String [ ] libs = libStr . split ( "" "" ) ; return libs ; } return null ; }"
Add a list of forecasts to this model <code> void setForecasts ( ArrayList < SingleForecast > inList ) { ,_forecastList . clear ( ) ; if ( inList != null && inList . size ( ) > 0 ) { _forecastList . addAll ( inList ) ; } }
Returns the string representation of this dimension. <code> String toString ( ) { ,final StringBuilder buf = new StringBuilder ( 40 ) ; for ( int i = 0 ; i < _factors . length ; i ++ ) { buf . append ( _factors [ i ] ) . append ( '.' ) ; } if ( buf . length ( ) != 0 ) { buf . setLength ( buf . length ( ) - 1 ) ; } return buf . toString ( ) ; }
"Searches for the first occurence of the given argument, beginning the search at index, and testing for equality using the equals method. <code> int indexOf ( int elem , int index ) { ",for ( int i = index ; i < m_firstFree ; i ++ ) { if ( m_map [ i ] == elem ) return i ; } return java . lang . Integer . MIN_VALUE ; }
Tests are written for US-Locale <code> void setUp ( ) { ,oldLocale = Locale . getDefault ( ) ; Locale . setDefault ( Locale . US ) ; }
Checks if a given Throwable instance corresponds to an exception declared by this StubStrategy's method. <code> boolean isDeclaredException ( Throwable t ) { ,Iterator < Class < ? >> iterator = exceptionList . iterator ( ) ; while ( iterator . hasNext ( ) ) { if ( ( ( Class < ? > ) iterator . next ( ) ) . isInstance ( t ) ) { return true ; } } return false ; }
"The process IO needs to be handled in order to not block the process. <code> void handleProcessIOAsynch ( Process p , StringBuffer inputBuffer , StringBuffer errorBuffer ) { ","InputStream in = p . getInputStream ( ) ; InputStream error = p . getErrorStream ( ) ; if ( in != null ) { new ProcessStreamHandler ( in , inputBuffer , getLaunchName ( ) ) . start ( ) ; } if ( error != null ) { new ProcessStreamHandler ( error , errorBuffer , getLaunchName ( ) ) . start ( ) ; } }"
Unwrap double for call <code> double unboxAsDouble ( Object obj ) { ,if ( ( obj == null ) || ( ! ( obj instanceof Double ) && ! ( obj instanceof Float ) ) ) { throwIllegalArgumentException ( ) ; } return ( ( Number ) obj ) . doubleValue ( ) ; }
Gets tag title from the specified URI. <code> String getTagTitle ( final String requestURI ) { ,"final String path = requestURI . substring ( ( Latkes . getContextPath ( ) + ""/tags/"" ) . length ( ) ) ; if ( path . contains ( ""/"" ) ) { return path . substring ( 0 , path . indexOf ( ""/"" ) ) ; } else { return path . substring ( 0 ) ; } }"
"generate flow category info <code> Collection < FlowAppMenu > generateCategoriesInfo ( UserInfoInterface userInfo , int anAppID ) { ","FlowApplications appInfo = BeanFactory . getFlowApplicationsBean ( ) ; FlowMenu menu = appInfo . getAllApplicationOnlineMenu ( userInfo , anAppID , FlowRolesTO . CREATE_PRIV ) ; Collection < FlowAppMenu > categories = menu . getAppMenuList ( ) ; return categories ; }"
Writes an unsigned 32 bit value to the stream. <code> void writeU32 ( long val ) { ,"check ( val , 32 ) ; need ( 4 ) ; array [ pos ++ ] = ( byte ) ( ( val >>> 24 ) & 0xFF ) ; array [ pos ++ ] = ( byte ) ( ( val >>> 16 ) & 0xFF ) ; array [ pos ++ ] = ( byte ) ( ( val >>> 8 ) & 0xFF ) ; array [ pos ++ ] = ( byte ) ( val & 0xFF ) ; }"
Sets the containedFeatureList given by propNode. <code> void setContainedFeatures ( ) { ,containedFeatureList . clear ( ) ; setContainedFeatures ( propNode ) ; }
"produces a normalized date time, using zero for the time fields if none were provided. <code> DateTimeValue toDateTime ( ) { ","normalize ( ) ; return new DateTimeValueImpl ( year , month , day , hour , minute , second ) ; }"
Schedule refresh after one minute in case there is a value change between initial load and server startup <code> void scheduleFirstRefresh ( ) { ,"logger . info ( ""Scheduling one datapoint reload job in 60 seconds"" ) ; delayedExecutor . schedule ( new TimerTask ( ) { @ Override public void run ( ) { logger . debug ( ""Initial Homematic datapoints reload"" ) ; context . getStateHolder ( ) . reloadDatapoints ( ) ; } } , 60000 ) ; }"
"Set system property to value. If SecurityManager denies property modification, silently ignore property change. if value is null, property won't be set. <code> void setProperty ( String property , Object value ) { ","try { Properties prop = System . getProperties ( ) ; if ( value != null ) { prop . put ( property , value ) ; } } catch ( SecurityException ex ) { setProperty ( property , value ) ; } }"
Query service through checker. <code> CheckResult queryServiceForNewVersion ( ) { ,CheckResult result ; Checker checker = new Checker ( ) ; if ( showProgressDialog ) openProgressDialog ( ) ; try { result = checker . checkForUpdates ( currentVersion ) ; } finally { if ( showProgressDialog ) hideProgressDialog ( ) ; } return result ; }
Report summary that will help to diagnose the problem Currently includes: - standard input produced by the process under test - standard output - exit code Note: the command line is printed by the ProcessTools <code> void reportDiagnosticSummary ( ) { ,"String msg = "" stdout: ["" + stdout + ""]; "" + "" stderr: ["" + stderr + ""] "" + "" exitValue = "" + getExitValue ( ) + "" "" ; System . err . println ( msg ) ; }"
Copies the data into a new array of at least capacity size. <code> void provideCapacity ( final int capacity ) { ,"if ( c . length >= capacity ) { return ; } int newcapacity = ( ( capacity * 3 ) >> 1 ) + 1 ; char [ ] newc = new char [ newcapacity ] ; System . arraycopy ( c , 0 , newc , 0 , length ) ; c = newc ; }"
Converts a java.util.Date into an instance of XMLGregorianCalendar <code> XMLGregorianCalendar asXMLGregorianCalendar ( java . util . Date date ) { ,if ( date == null ) { return null ; } else { GregorianCalendar gc = new GregorianCalendar ( ) ; gc . setTimeInMillis ( date . getTime ( ) ) ; return df . newXMLGregorianCalendar ( gc ) ; } }
"Internal: response status after invocation, and in case or error attempt to read the exception sent by the server. <code> void verifyStatus ( HttpResponse response ) { ","StatusLine statusLine = response . getStatusLine ( ) ; if ( statusLine . getStatusCode ( ) != HttpStatus . SC_OK ) { try { throwKnownError ( response , statusLine ) ; } finally { EntityUtils . consumeQuietly ( response . getEntity ( ) ) ; } } }"
"Test: Regex, delimiter = "";"", ""!;"" appears in the field. <code> void testRegex3 ( ) { ","String [ ] expectedResult = { ""Sean!"" , ""Flatley"" } ; test ( ""Regex Test 3"" , ""Sean!;Flatley"" , true , "";"" , null , expectedResult ) ; }"
Vert.x turns byte[] into a B64 encoded string. Reverse it. <code> byte [ ] getBytes ( int index ) { ,String b64String = rows . get ( row ) . getString ( index ) ; return Base64 . getDecoder ( ) . decode ( b64String ) ; }
Create a words tokenizer using the default regular expression which is white spaces and SP characters. <code> SCRegExpTokenizer getInstance ( final AFilter filter ) { ,if ( tokenizer == null ) { tokenizer = new SCRegExpTokenizer ( filter ) ; } return tokenizer ; }
"The SpagoBIOfficeDocumentInternalEngine cannot manage subobjects so this method must not be invoked. <code> void executeSubObject ( RequestContainer requestContainer , BIObject obj , SourceBean response , Object subObjectInfo ) { ","logger . error ( ""SpagoBIOfficeDocumentInternalEngine cannot exec subobjects"" ) ; throw new EMFUserError ( EMFErrorSeverity . ERROR , ""101"" , messageBundle ) ; }"
Call this to use a different subclass of LocationUtils throughout the program. This can be used by embedders in addition to tests. <code> void setFactory ( Factory factory ) { ,sFactory = factory ; sInstance = null ; }
Checks that this class implements PublicCloneable. <code> void testPublicCloneable ( ) { ,"XYImageAnnotation a1 = new XYImageAnnotation ( 10.0 , 20.0 , JFreeChart . INFO . getLogo ( ) ) ; assertTrue ( a1 instanceof PublicCloneable ) ; }"
"This method purges specifics and ranges from definitions that don't match the attributes specified in the event (the updateDef) <code> void purgeOtherDefs ( final MergeableDefinition updatedDef , MergeableDefinition eventDefinition ) { ",for ( MergeableDefinition def : getDefinitions ( ) ) { if ( updatedDef != null && def . getConfigDef ( ) == updatedDef . getConfigDef ( ) ) continue ; def . removeRanges ( eventDefinition ) ; } removeEmptyDefinitions ( ) ; }
Get the number of users. <code> long getNumberOfUsers ( ) { ,"Query query = em . createNamedQuery ( ""User.getNumberOfUsers"" ) ; return ( Long ) query . getSingleResult ( ) ; }"
"Run mapreduce job using HAWQInputFormat locally. <code> int runMapReduceLocally ( Path metadataFile , Path outputFolder , Class < ? extends Mapper > mapperClass ) { ","MapReduceLocalDriver driver = new MapReduceLocalDriver ( ) ; if ( mapperClass == null ) return driver . run ( new String [ ] { metadataFile . toString ( ) , outputFolder . toString ( ) } ) ; else return driver . run ( new String [ ] { metadataFile . toString ( ) , outputFolder . toString ( ) , mapperClass . getName ( ) } ) ; }"
method sets a relative direction used to move the robot. <code> void setMovingDirection ( int moving_direction ) { ,"if ( moving_direction < 1 || moving_direction > 4 ) throw ( new IllegalArgumentException ( ""invalid moving_direction. possible directions MOVE_AHEAD, "" + ""MOVE_BACK, MOVE_LEFT, MOVE_RIGHT "" ) ) ; moving_direction_ = moving_direction ; }"
Return the specified URL or path string with the fragment part removed. If the string does not contain a fragment then return the string unchanged. <code> String trimFragment ( String url ) { ,"if ( url == null || url . length ( ) < 1 ) return url ; int index = url . indexOf ( '#' ) ; if ( index >= 0 ) return url . substring ( 0 , index ) ; else return url ; }"
"Return true if inserting a character in str1 gets str2 str1 is 1 shorter than str2 Removal is identical, with reversed parameters <code> boolean insertEdit ( char [ ] str1 , char [ ] str2 ) { ","int i = 0 , j = 0 ; while ( i < str1 . length && j < str2 . length ) { if ( str1 [ i ] != str2 [ j ] ) { if ( i != j ) return false ; j ++ ; } else { j ++ ; i ++ ; } } return true ; }"
Waits for a connection from the server and then sets the timeout when the connection is made. <code> void acceptConnection ( ) { ,if ( acceptedSock == null ) { acceptedSock = sock . accept ( ) ; acceptedSock . setSoTimeout ( sock . getSoTimeout ( ) ) ; } }
Returns the accessor class reference for this element. Note: this call is only valid when the element is using the Eclipse NLS mechanism. <code> AccessorClassReference getAccessorClassReference ( ) { ,Assert . isTrue ( fIsEclipseNLS ) ; return fAccessorClassReference ; }
Atomically decrements by one the element at index i. <code> long decrementAndGet ( int i ) { ,"while ( true ) { long current = get ( i ) ; long next = current - 1 ; if ( compareAndSet ( i , current , next ) ) return next ; } }"
Computes the key that identifies this Hudson among other Hudsons that the user has a credential for. <code> String getPropertyKey ( ) { ,"String url = Jenkins . getActiveInstance ( ) . getRootUrl ( ) ; if ( url != null ) return url ; return Secret . fromString ( ""key"" ) . getEncryptedValue ( ) ; }"
Preprocess the specified line. <code> String processLine ( String line ) { ,for ( LineProcessor proc : lineProcessors ) { line = proc . process ( line ) ; if ( line == null ) return null ; } return line ; }
"This method will be invoked when the current page is scrolled, either as part of a programmatically initiated smooth scroll or a user initiated touch scroll. <code> void onPageScrolled ( int position , float positionOffset , int positionOffsetPixels ) { ","if ( mTotalSlides == 0 ) { return ; } int n = position % mTotalSlides + 1 ; update ( mCurrentSlide = n , mTotalSlides ) ; }"
Test if this File is a valid components package directory. <code> boolean validComponentsPackage ( File dir ) { ,"if ( ( dir != null ) && ( dir . isDirectory ( ) ) ) { File webinf = new File ( dir , ""WEB-INF"" ) ; if ( ( webinf != null ) && ( webinf . isDirectory ( ) ) ) { File xml = new File ( webinf , ""components.xml"" ) ; if ( ( xml != null ) && ( xml . isFile ( ) ) ) { return true ; } } } return false ; }"
"Helper function to get a view <code> View inflateFromId ( Context context , int id ) { ","LayoutInflater vi = ( LayoutInflater ) context . getSystemService ( Context . LAYOUT_INFLATER_SERVICE ) ; return vi . inflate ( id , null ) ; }"
"Converts a height from Feet & inches into meters portion of a height (2.43) <code> Integer getMeters ( Integer Feet , Integer Inches ) { ",Float totalInches = ( float ) ( Inches + Feet * 12 ) ; return ( int ) Math . floor ( totalInches * 0.0254f ) ; }
get accessToken (key) Creates a unique AccessKey for the session The goal here is to have a unique Key and Secret for the Session which the App or User can own for the session. Everything builds up to this. <code> String getAccessKey ( ) { ,UUID uId = UUID . randomUUID ( ) ; return uId . toString ( ) ; }
Gets the font used in a particular formatting run. <code> short getFontOfFormattingRun ( int index ) { ,UnicodeString . FormatRun r = string . getFormatRun ( index ) ; return r . getFontIndex ( ) ; }
Sends the files that this server is hosting to the server. <code> void sendAvailableFilesToServer ( ) { ,"Set < String > localFiles = fileMap . getAvailableFilenames ( ) ; ConnectionUtils . sendFileList ( connectionToServer , localFiles ) ; }"
Finishes and stores the exit value for the process. <code> void waitFor ( ) { ,"try { exitVal = p . waitFor ( ) ; done = true ; } catch ( InterruptedException ex ) { outputComponent . println ( ""*** Interrupted*** "" ) ; } }"
"+ Returns the visible component that contains the specified point, + or null if no visible component contains the point. The x and y + coordinates of the point are relative to the origin of this container. + <code> Component findComponentAt ( int x , int y ) { ","if ( ! isRecursivelyVisible ( ) ) return null ; return ( getComponentAt ( x , y , true ) ) ; }"
"Find the _Fields constant that matches fieldId, or null if its not found. <code> _Fields findByThriftId ( int fieldId ) { ",switch ( fieldId ) { case 1 : return TASK_START ; case 2 : return TASK_END ; default : return null ; } }
Stops the current trace. You can still add items to the trace context after the trace is stopped but nothing else will be timed. <code> void stopTrace ( ) { ,"Map < MultiKey < String > , Object > map = traceInfo . get ( ) ; sw . stop ( ) ; map . put ( keyOf ( Tracer . class , TRACE_END_TIME_UTC ) , Instant . now ( ) . toString ( ) ) ; map . put ( keyOf ( Tracer . class , TRACE_SW_SUMMARY ) , sw . getTotalTimeMillis ( ) ) ; }"
"Return optionOne if it does not equal criteria, else return optionTwo <code> T ifNot ( T criteria , T optionOne , T optionTwo ) { ",if ( ! criteria . equals ( optionOne ) ) { return optionOne ; } return optionTwo ; }
takes the input of stop area id and checks its existence. <code> boolean checkStopAreaExistence ( int sa_id ) { ,ReadFile rf = new ReadFile ( ) ; rf . readStopAreaFile ( ) ; int i = 0 ; boolean flag = false ; for ( i = 0 ; i < rf . ListForStopAreaFile . size ( ) ; i ++ ) { if ( sa_id == rf . ListForStopAreaFile . get ( i ) . getStopAreaID ( ) ) { flag = true ; } } return flag ; }
Adds a user for which this recommendation holds <code> void addUser ( String aUser ) { ,if ( users == null ) { users = new TreeSet < String > ( ) ; } users . add ( aUser ) ; }
"Set the global tile ID at a specified location <code> void setTileID ( final int x , final int y , final int tile ) { ",if ( tile == 0 ) { data [ x ] [ y ] [ 0 ] = - 1 ; data [ x ] [ y ] [ 1 ] = 0 ; data [ x ] [ y ] [ 2 ] = 0 ; } else { final CloneTileSet set = map . findTileSet ( tile ) ; data [ x ] [ y ] [ 0 ] = set . index ; data [ x ] [ y ] [ 1 ] = tile - set . firstGID ; data [ x ] [ y ] [ 2 ] = tile ; } }
Get the associated extension value. <code> Object getExtensionValue ( MnemonicExtensionIdentifier extensionIdentifier ) { ,"Preconditions . checkArgument ( extensionIdentifier . canGet ( ) , ""Cannot get extension: %s"" , extensionIdentifier ) ; return extensionLoader . apply ( extensionIdentifier ) ; }"
Concatenates the values of all the nodes in nodeList <code> String concatenateNodes ( NodeList nodeList ) { ,StringBuffer concatenatedTextNodes = new StringBuffer ( ) ; for ( int nLoop = 0 ; nLoop < nodeList . getLength ( ) ; ++ nLoop ) { concatenatedTextNodes . append ( nodeList . item ( nLoop ) . getNodeValue ( ) ) ; } return concatenatedTextNodes . toString ( ) ; }
This method is useful for configuration parameters that have sub-nodes. <code> Node getConfigParamNode ( Object key ) { ,"String skey = key . toString ( ) ; try { return ( Node ) evaluateXPath ( skey , XPathConstants . NODE ) ; } catch ( XPathExpressionException e ) { System . err . println ( ""Info dump:  key == "" + skey ) ; e . printStackTrace ( ) ; } return null ; }"
Returns the value of the field with the given name. <code> int getInt ( String fieldName ) { ,Field field = getField ( fieldName ) ; try { return field . getInt ( fInstance ) ; } catch ( IllegalArgumentException e ) { fail ( ) ; } catch ( IllegalAccessException e ) { fail ( ) ; } return 0 ; }
Creates a new Instance <code> DecodingUserDetailsService newInstance ( GeoServerUserGroupService service ) { ,DecodingUserDetailsService decodingService = new DecodingUserDetailsService ( ) ; decodingService . setGeoserverUserGroupService ( service ) ; return decodingService ; }
"Retain the positions completely contained in the given range. <code> void retainPositions ( int offset , int length ) { ","for ( int i = 0 , n = fRemovedPositions . size ( ) ; i < n ; i ++ ) { HighlightedPosition position = fRemovedPositions . get ( i ) ; if ( position != null && position . isContained ( offset , length ) ) { fRemovedPositions . set ( i , null ) ; fNOfRemovedPositions -- ; } } }"
"Generates an instance of Horizontal line that contains Point(0,0) A=0, B=1, C=0 <code> Line getHorizontal ( Point p ) { ","double A = 0 , B = 1 , C ; C = Point . round ( ( - 1.0 ) * A * p . getLongitude ( ) - B * p . getLatitude ( ) , App . COORDINATE_PRECISION ) ; return new Line ( A , B , C ) ; }"
Get a DataSource from Local store <code> DataSource lookUp ( String name ) { ,"if ( name == null || """" . equals ( name ) ) { throw new SynapseCommonsException ( ""Name of the datasource to be looked up is empty or"" + ""null"" , log ) ; } return dataSources . get ( name ) ; }"
"Gets the DBCollection for the 'consult' collection using the given MongoClient. <code> DBCollection getCollection ( MongoClient mongoClient , String collectionName ) { ",DB db = mongoClient . getDB ( OPENSHIFT_APP_NAME ) ; return db . getCollection ( collectionName ) ; }
"Add the file to action output cache entry. Put the file to cache if necessary. <code> void addToActionOutput ( Path file , String execPathString , CacheEntry . Builder actionOutput ) { ","if ( file . isDirectory ( ) ) { throw new UnsupportedOperationException ( ""Storing a directory is not yet supported."" ) ; } String contentKey = putFileIfNotExist ( file ) ; actionOutput . addFilesBuilder ( ) . setPath ( execPathString ) . setContentKey ( contentKey ) . setExecutable ( file . isExecutable ( ) ) ; }"
Creates a table cell to wrap the given rendering element <code> AccountingLineTableCell createTableCellForNonTableJoining ( RenderableElement element ) { ,AccountingLineTableCell cell = new AccountingLineTableCell ( ) ; cell . addRenderableElement ( element ) ; cell . setRowSpan ( getRequestedRowCount ( ) ) ; return cell ; }
Set the motor speed. <code> void setSpeed ( int speed ) { ,"if ( speed < - 100 || speed > 100 ) { Logger . getInstance ( ) . error ( ""Invalid motor speed value: "" + speed ) ; return ; } propellerServo . setDegree ( ( int ) ( PROPELLER_MAX_DEGREE * speed / 100.0f ) ) ; }"
handles default /assignment or /assignment/list request <code> ModelAndView AssignmentDefault ( ) { ,"logger . info ( ""default"" ) ; Map < String , Object > model = new HashMap < String , Object > ( ) ; List < Assignment > AssignmentList = AssignmentBO . selectAll ( ) ; model . put ( ""Assignments"" , AssignmentList ) ; return new ModelAndView ( ""AssignmentList"" , model ) ; }"
Mark that entry filtered. <code> void markFiltered ( ) { ,flags |= FILTERED_ENTRY ; depInfo = null ; }
"Converts the specified Java object into IBM i format in the specified byte array. <code> int toBytes ( Object javaValue , byte [ ] as400Value , int offset ) { ","BinaryConverter . doubleToByteArray ( ( ( Double ) javaValue ) . doubleValue ( ) , as400Value , offset ) ; return SIZE ; }"
Utility method to ensure messages get created in a uniform way in all converters <code> ManagedMessage createMessage ( ) { ,if ( msgCreator != null ) return msgCreator . createMessage ( ) ; else return MessageFactory . getInstance ( ) . createMessage ( ) ; }
Remove the Application Policy <code> void removeApplicationPolicy ( String name ) { ,"SecurityManager sm = System . getSecurityManager ( ) ; if ( sm != null ) { sm . checkPermission ( new RuntimePermission ( SecurityConfiguration . class . getName ( ) + "".removeApplicationPolicy"" ) ) ; } appPolicies . remove ( name ) ; }"
"First policy is the owner's policy <code> int getOwnerPolicy ( Map < String , Integer [ ] > scenarios , String scenarioId ) { ",Integer [ ] scenarioVals = scenarios . get ( scenarioId ) ; return scenarioVals [ 1 ] ; }
"Converts the given collection to an array, filling the input array which is then returned. Added because the .toArray() method in leJOS's ArrayList appears to be broken. <code> T [ ] toArray ( Collection < E > _list , T [ ] dest ) { ","int j = 0 ; int max = dest . length ; for ( E element : _list ) { if ( j >= max ) { throw new UnsupportedOperationException ( ""Array is too small and expanding is not supported."" ) ; } dest [ j ++ ] = ( T ) element ; } return dest ; }"
"Adds an edge from the source vertex to the destination vertex (source -> destination). <code> void addEdge ( int sourceVertex , int destVertex ) { ",check ( sourceVertex ) ; check ( destVertex ) ; adj [ sourceVertex ] . add ( destVertex ) ; edges ++ ; }
test of the setUserName() method <code> void testSetUserName ( ) { ,"User testUser = new User ( ) ; testUser . setUserName ( userName + ""test"" ) ; assertEquals ( ""setUsername is equal"" , testUser . getUserName ( ) , userName + ""test"" ) ; }"
Check whether the given item is associated with one or more genres. <code> boolean hasGenres ( int item_id ) { ,if ( genres . get ( item_id ) == null ) return false ; return genres . get ( item_id ) . length > 0 ; }
Waits for sync's backend to be initialized. <code> void waitForBackendInitialized ( ) { ,"CriteriaHelper . pollUiThread ( new Criteria ( ""Timed out waiting for sync's backend to initialize."" ) { @ Override public boolean isSatisfied ( ) { return ProfileSyncService . get ( ) . isBackendInitialized ( ) ; } } , TIMEOUT_MS , INTERVAL_MS ) ; }"
Returns a list of alternative names for the given PostScript name. <code> Set < String > getPostScriptNames ( String postScriptName ) { ,"Set < String > names = new HashSet < String > ( ) ; names . add ( postScriptName ) ; names . add ( postScriptName . replaceAll ( ""-"" , """" ) ) ; return names ; }"
Restore the PrintJob's PrintService to what it was originally. <code> void restoreServiceReference ( ) { ,"try { thePrintJob . setPrintService ( delegate ) ; } catch ( PrinterException e ) { AuditLog . logError ( LOGGER , e , ""Restore Print Service"" ) ; } }"
Send data to HTTP queue for processing. <code> void sendBodyForHttp ( String outputString ) { ,FluentProducerTemplate fluentProducerTemplate = new DefaultFluentProducerTemplate ( camelContext ) ; fluentProducerTemplate . to ( RecapConstants . DATADUMP_HTTP_Q ) . withBody ( outputString ) ; fluentProducerTemplate . send ( ) ; }
"Get the security property boolean for the given property. It also checks for the older ""ws-"" property values. If none is configured, then the defaultValue parameter is returned. <code> boolean getSecurityPropertyBoolean ( String property , Message message , boolean defaultValue ) { ","Object value = message . getContextualProperty ( property ) ; if ( value == null ) { value = message . getContextualProperty ( ""ws-"" + property ) ; } if ( value != null ) { return PropertyUtils . isTrue ( value ) ; } return defaultValue ; }"
This method decrements the current step. <code> boolean prevStep ( ) { ,if ( getCurrentSimulation ( ) == null ) { return false ; } if ( getCurrentSimulation ( ) . prevStep ( ) ) { return true ; } else if ( prevSimulation ( ) ) { while ( getCurrentSimulation ( ) . nextStep ( ) ) ; return true ; } return false ; }
Tests that the handler properly returns a COMPLETED result if the assertion is in the session. <code> void testPrincipalNoResolve ( ) { ,"CasHandler handler = createHandler ( ) ; HandlerResult result = handler . getNormalizedToken ( createServletRequest ( true ) , mock ( HttpServletResponse . class ) , new ProxyFilterChain ( null ) , false ) ; assertEquals ( HandlerResult . Status . COMPLETED , result . getStatus ( ) ) ; }"
Sets the active level of the dimmer. Updates the alpha value based on the level. <code> void setActiveLevel ( float level ) { ,mAlphaFloat = ( mDimmedLevel + level * ( mActiveLevel - mDimmedLevel ) ) ; mAlpha = ( int ) ( 255 * mAlphaFloat ) ; mPaint . setAlpha ( mAlpha ) ; }
"binds events to the start button. by pressing the start button, the game is initialized and the timeline execution is started. <code> void bindStartButtonEvents ( ) { ",startButton . setOnAction ( new EventHandler < ActionEvent > ( ) { @ Override public void handle ( final ActionEvent evt ) { initializeGame ( ) ; model . getGameStopped ( ) . set ( false ) ; heartbeat . playFromStart ( ) ; } } ) ; }
"Method to Receive message text From Network . <code> void receiveMessage ( final int port , final int numMessags , final Runnable task ) { ","mTask . runAsynTask ( new Runnable ( ) { public void run ( ) { receiveText ( port , numMessags , task ) ; } } ) ; }"
Test for isMultiValued() method. <code> void testIsMultiValued ( ) { ,"SpellCheckedMetadata meta = new SpellCheckedMetadata ( ) ; assertFalse ( meta . isMultiValued ( ""key"" ) ) ; meta . add ( ""key"" , ""value1"" ) ; assertFalse ( meta . isMultiValued ( ""key"" ) ) ; meta . add ( ""key"" , ""value2"" ) ; assertTrue ( meta . isMultiValued ( ""key"" ) ) ; }"
Write a 32 bit integer to the stream in Little Endian format. <code> void writeIntLittle ( int n ) { ,writeByte ( n ) ; writeByte ( n >> 8 ) ; writeByte ( n >> 16 ) ; writeByte ( n >> 24 ) ; }
Make sure that flush doesn't throw an exception after close is called <code> void testFlushAfterClose ( ) { ,temporaryFileBackedOutputStream . write ( TEST_BYTE_ARRAY ) ; temporaryFileBackedOutputStream . close ( ) ; temporaryFileBackedOutputStream . flush ( ) ; }
"Linear probing of the table to find the first empty slot - look at hashKey, hashKey+1, hashKey+2... until empty spot <code> int probeLinear ( int hashKey ) { ",while ( table [ hashKey ] . occupied == true ) hashKey = ( hashKey + 1 ) % capacity ; return hashKey ; }
Get all declare keywords. <code> Iterable < String > getAllKeywords ( ) { ,List < String > all = new ArrayList < String > ( ) ; all . addAll ( keywordCollection . get ( KeywordGroup . Declare ) ) ; all . addAll ( keywordCollection . get ( KeywordGroup . Other ) ) ; return all ; }
Transform JSON to list of ProductPropertyJSO <code> List < ProductPropertyJSO > transformArrayProductProperty ( String json ) { ,JsArray < ProductPropertyJSO > array = ProductPropertyJSO . fromJSONArray ( json ) ; List < ProductPropertyJSO > products = new ArrayList < ProductPropertyJSO > ( ) ; for ( int i = 0 ; i < array . length ( ) ; i ++ ) { products . add ( array . get ( i ) ) ; } return products ; }
Used to adjust the merged cells following a column removal <code> void removeColumn ( int col ) { ,SheetRangeImpl sr = null ; Iterator i = ranges . iterator ( ) ; while ( i . hasNext ( ) ) { sr = ( SheetRangeImpl ) i . next ( ) ; if ( sr . getTopLeft ( ) . getColumn ( ) == col && sr . getBottomRight ( ) . getColumn ( ) == col ) { i . remove ( ) ; } else { sr . removeColumn ( col ) ; } } }
Imperative implementation that returns the length hailstone moves for a given number. <code> long hailstoneLengthImp ( long n ) { ,long moves = 0 ; while ( n != 1 ) { assert n > 1 ; if ( isEven ( n ) ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ++ moves ; } return moves ; }
"Determines whether a given node is a proximity node. <code> boolean isProximityNode ( final AbstractZyGraph < ? , ? > graph , final Node node ) { ","Preconditions . checkNotNull ( graph , ""Graph argument can not be null"" ) ; Preconditions . checkNotNull ( node , ""Node argument can not be null"" ) ; return graph . getGraph ( ) . getRealizer ( node ) instanceof ZyProximityNodeRealizer < ? > ; }"
Returning a new UserContext instance for the given already-authenticated user. A new placeholder account will be created for any user that does not already exist within the database. <code> UserContext getUserContext ( org . glyptodon . guacamole . net . auth . AuthenticatedUser authenticatedUser ) { ,ModeledUser user = userService . retrieveUser ( authenticatedUser ) ; if ( user == null ) return null ; UserContext context = userContextProvider . get ( ) ; context . init ( user . getCurrentUser ( ) ) ; return context ; }
"Seta a value into an object. <code> void setProperty ( Object bean , String property , Object value ) { ","HashMap setters = getPropertySetters ( bean ) ; String adjParamName = property . toLowerCase ( ) ; Method method = ( Method ) setters . get ( adjParamName ) ; if ( method != null ) { mapPropertyValueToMethod ( bean , method , value ) ; } }"
Take a class name and return the equivalent file name Ex. org.owasp.webgoat becomes org/owasp/webgoat.java <code> String getSourceFile ( String className ) { ,"StringBuilder sb = new StringBuilder ( ) ; sb . append ( className . replace ( ""."" , ""/"" ) ) ; sb . append ( "".java"" ) ; return sb . toString ( ) ; }"
Parse the MIOutput generate after posting the command. <code> MIInfo getMIInfo ( ) { ,"MIInfo info = null ; MIOutput out = getMIOutput ( ) ; if ( out != null ) { info = new MIInfo ( out ) ; if ( info . isError ( ) ) { throwMIException ( info , out ) ; } } return info ; }"
"Returns whether the property name and value constitute a valid HTTPS application property. The property is valid if it is a valid application property and its name begins with 'iothub-app-'. <code> boolean isValidHttpsAppProperty ( String name , String value ) { ","String lowercaseName = name . toLowerCase ( ) ; if ( MessageProperty . isValidAppProperty ( name , value ) && lowercaseName . startsWith ( HTTPS_APP_PROPERTY_PREFIX ) ) { return true ; } return false ; }"
Returns a job configuration preconfigured to run against the Hadoop managed by the testcase. <code> JobConf createJobConf ( ) { ,"if ( localMR ) { JobConf conf = new JobConf ( ) ; conf . set ( MRConfig . FRAMEWORK_NAME , MRConfig . LOCAL_FRAMEWORK_NAME ) ; return conf ; } else { return mrCluster . createJobConf ( ) ; } }"
"Test of add method, of class HBaseMessageMapper. <code> void testAdd ( ) { ","LOG . info ( ""add"" ) ; long msgCount = messageMapper . countMessagesInMailbox ( MBOXES . get ( 1 ) ) ; LOG . info ( msgCount + "" "" + MESSAGE_NO . size ( ) ) ; assertEquals ( MESSAGE_NO . size ( ) , msgCount ) ; }"
"Schedules the Activity corresponding to the afterKey to be run immediately after the completion of the Activity corresponding to the beforeKey. This method has no scheduling effect on the Activity corresponding to the before key. <code> Activity runAfter ( String beforeKey , String afterKey ) { ","Activity before = get ( beforeKey ) ; Activity after = get ( afterKey ) ; if ( before != null && after != null ) ActivityManager . scheduleAfter ( before , after ) ; return after ; }"
"Given a VIN, get the vehicle with that VIN. <code> VehicleSimView getVehicleFromVIN ( int vin ) { ",WeakReference < VehicleSimView > wr = vinToVehicle . get ( vin ) ; if ( wr == null ) { return null ; } VehicleSimView v = wr . get ( ) ; if ( v == null ) { vinToVehicle . remove ( vin ) ; } return v ; }
"Returns a tweened angle based on the given angles, weight and the spin. <code> float tweenAngle ( float a , float b , float t , int spin ) { ","if ( spin > 0 ) { if ( b - a < 0 ) b += 360 ; } else if ( spin < 0 ) { if ( b - a > 0 ) b -= 360 ; } else return a ; return tween ( a , b , t ) ; }"
Utility method to build a ChoiceBox list with single values. <code> List < GpmChoiceBoxValue > buildFromStrings ( List < String > pValues ) { ,"List < GpmChoiceBoxValue > lValues = new ArrayList < GpmChoiceBoxValue > ( ) ; for ( String lValue : pValues ) { lValues . add ( new GpmChoiceBoxValue ( lValue , lValue ) ) ; } return lValues ; }"
"Perform a smart pool search <code> ARRAY searchPool ( OConnection conn , String query ) { ","Map result = Pool . search ( ( Connection ) conn , query , new HashMap ( ) ) ; List raw_pools = ( List ) result . get ( ""result"" ) ; OPool [ ] ret = new OPool [ raw_pools . size ( ) ] ; for ( int i = 0 ; i < raw_pools . size ( ) ; i ++ ) { ret [ i ] = toSQLObj ( ( Pool ) raw_pools . get ( i ) ) ; } return getARRAY ( ""NIPAP_POOL_TBL"" , ( Object ) ret ) ; }"
Creates the Etcd node quorum string. <code> String createEtcdQuorumString ( List < String > etcdIps ) { ,"StringBuilder sb = new StringBuilder ( ) ; for ( int i = 0 ; i < etcdIps . size ( ) ; i ++ ) { sb . append ( etcdIps . get ( i ) ) ; if ( i != etcdIps . size ( ) - 1 ) { sb . append ( "","" ) ; } } return sb . toString ( ) ; }"
Indicates if more items are available through next() operations. <code> boolean hasNext ( ) { ,verifyResources ( ) ; return position < scoredTerms . length ; }
"Removes this RowDataListener from the internal list. If the RowDataListener is not on the list, nothing is done. <code> void removeRowDataListener ( RowDataListener listener ) { ","if ( listener == null ) throw new NullPointerException ( ""listener"" ) ; rowListeners_ . removeElement ( listener ) ; }"
Updates the file monitor. <code> void updateFileMonitor ( ) { ,"if ( fileMonitor == null ) { LOGGER . debug ( ""File monitor updated in UI mode, ignoring"" ) ; } else { fileMonitor . stop ( ) ; fileMonitor . removeFile ( monitoredDir ) ; LOGGER . info ( String . format ( ""Stopped Monitoring location %s"" , monitoredDir ) ) ; startFileMonitor ( ) ; } }"
Test importing of mrna_test file. <code> void testImportmRnaData1BulkLoadOff ( ) { ,MySQLbulkLoader . bulkLoadOff ( ) ; runImportRnaData1 ( ) ; MySQLbulkLoader . bulkLoadOn ( ) ; }
Determine if messages sent to this server and recorded on this TapStream have been canceled. <code> boolean isCancelled ( ) { ,for ( TapOperation op : ops ) { if ( ! op . isCancelled ( ) ) { return false ; } } return true ; }
Generates a random Captcha <code> CaptchaInfoBean generateRandomCaptcha ( ) { ,CaptchaUtil . cleanOldCaptchas ( ) ; return CaptchaUtil . generateCaptchaImage ( ) ; }
Gets a classloader for the given codebase and with the current context classloader as parent. <code> ClassLoader getClassLoader ( String codebase ) { ,RMIClassLoaderSpi spi = getProviderInstance ( ) ; if ( spi == null ) spi = getDefaultProviderInstance ( ) ; return spi . getClassLoader ( codebase ) ; }
Returns the text from a file. <code> String getText ( String path ) { ,"if ( ! isArchive ) { return new String ( Stream . readByteStream ( baseDir + path ) , ""UTF8"" ) ; } return new String ( sevenZip . getData ( baseDir + path ) , ""UTF8"" ) ; }"
Demonstrate the old for loop to find first Article object that has Java as a tag. <code> Article getFirstJavaArticle ( List < Article > articles ) { ,"for ( Article article : articles ) { if ( article . getTags ( ) . contains ( ""Java"" ) ) { return article ; } } return null ; }"
"Check if a sorted itemset is contained in another <code> boolean includedIn ( int [ ] itemset1 , int [ ] itemset2 ) { ",int count = 0 ; for ( int i = 0 ; i < itemset2 . length ; i ++ ) { if ( itemset2 [ i ] == itemset1 [ count ] ) { count ++ ; if ( count == itemset1 . length ) { return true ; } } } return false ; }
"Returns the number of minutes ago between the start time and the end time. <code> int minutesAgo ( Date date , long endTime , boolean roundup ) { ",long diff = endTime - date . getTime ( ) ; int mins = ( int ) ( diff / MIN ) ; if ( roundup && ( diff % MIN ) >= 30 ) { mins ++ ; } return mins ; }
Data access object for entity Instituicao <code> InstituicaoDAO getInstituicaoDAO ( ) { ,InstituicaoDAO dao = new InstituicaoDAOHibernate ( ) ; dao . setSession ( HibernateUtil . getFactory ( ) . getCurrentSession ( ) ) ; return dao ; }
Determines if a method has a valid name and signature for a Java Bean setter. <code> boolean isValidSetter ( Method method ) { ,"if ( method . getName ( ) . startsWith ( ""set"" ) && method . getName ( ) . length ( ) > 3 && method . getParameterTypes ( ) . length == 1 && method . getReturnType ( ) . getName ( ) . equals ( ""void"" ) ) { return true ; } return false ; }"
"Returns the typed value, serialized to a ByteBuffer. <code> ByteBuffer getByteBuffer ( ) { ",switch ( type ) { case STRING : return AsciiType . instance . fromString ( text ) ; case INTEGER : return IntegerType . instance . fromString ( text ) ; case UUID : return LexicalUUIDType . instance . fromString ( text ) ; case FLOAT : return FloatType . instance . fromString ( text ) ; } return null ; }
"check to see if a given node element at a given depth can be rendered <code> boolean canRender ( NavNode node , int depth ) { ","if ( guard != null ) { return guard . canRender ( node , depth ) ; } return true ; }"
Get the index of an attribute in the attribute array <code> int getAttributeIndex ( String name ) { ,"for ( int t = 0 ; t < attributes . size ( ) ; t ++ ) { if ( name . equals ( ( ( XMLAttribute ) ( attributes . elementAt ( t ) ) ) . name ) ) return t ; } throw new NoSuchElementException ( ""Could not find XML attribute named "" + name ) ; }"
Reads the whole file. Returns the list of lines. <code> List < String > readWhole ( File file ) { ,BufferedReader in = new BufferedReader ( new FileReader ( file ) ) ; try { return readWhole ( in ) ; } finally { in . close ( ) ; } }
Tests if we receive a confirmation when we attempt to open a file that it doesn't exist. <code> void fileConfirmationWhenFileDoesNotExist ( ) { ,"stub . setFileName ( ""RandomName.txt"" ) ; presenter . start ( ) ; presenter . fileNameChanged ( ) ; presenter . confirmed ( ) ; assertFalse ( loader . isLoaded ( ) ) ; assertEquals ( 1 , stub . getMessagesSent ( ) ) ; }"
"Function to change password <code> JSONObject chgPass ( String newpas , String email ) { ","List params = new ArrayList ( ) ; params . add ( new BasicNameValuePair ( ""tag"" , chgpass_tag ) ) ; params . add ( new BasicNameValuePair ( ""newpas"" , newpas ) ) ; params . add ( new BasicNameValuePair ( ""email"" , email ) ) ; JSONObject json = jsonParser . getJSONFromUrl ( chgpassURL , params ) ; return json ; }"
Dispatches success to all of the callbacks registered with this list. This may only be called once. <code> void onSuccess ( T result ) { ,checkState ( ) ; for ( Callback < T > cb : callbacks ) { cb . onSuccess ( result ) ; } callbacks = null ; }
Adds the to scan task. <code> void addToScanTask ( String event ) { ,if ( ! scanSet . contains ( event ) ) { scanSet . add ( event ) ; task . addLogFile ( event ) ; } }
Write the 8-bit byte to the binary output stream. <code> void writeByte ( int x ) { ,assert x >= 0 && x < 256 ; if ( N == 0 ) { try { out . write ( x ) ; } catch ( IOException e ) { e . printStackTrace ( ) ; } return ; } for ( int i = 0 ; i < 8 ; i ++ ) { boolean bit = ( ( x >>> ( 8 - i - 1 ) ) & 1 ) == 1 ; writeBit ( bit ) ; } }
"Returns true if all mbrs are elements of this view, false otherwise <code> boolean containsMembers ( Address ... mbrs ) { ",if ( mbrs == null || members == null ) return false ; for ( Address mbr : mbrs ) { if ( ! containsMember ( mbr ) ) return false ; } return true ; }
Add Value to Counter <code> void addValue ( BigDecimal bd ) { ,if ( bd != null ) { m_sum = m_sum . add ( bd ) ; m_count ++ ; if ( m_min == null ) m_min = bd ; m_min = m_min . min ( bd ) ; if ( m_max == null ) m_max = bd ; m_max = m_max . max ( bd ) ; m_sumSquare = m_sumSquare . add ( bd . multiply ( bd ) ) ; } m_totalCount ++ ; }
"Called while a drag operation is ongoing, when the mouse pointer has exited the operable part of the drop site for the DropTarget registered with this listener. <code> void dragExit ( final DropTargetEvent dte ) { ",transferData = null ; position = null ; flavor = null ; }
Get the unique instance for this class <code> WebTestsUtil getUtil ( ClassLoader cLoader ) { ,if ( util == null ) { util = new WebTestsUtil ( ) ; WebCheckMgrImpl . addVerifierEventsListener ( util ) ; cl = cLoader ; } return util ; }
"Implement the Parcelable interface <code> void writeToParcel ( Parcel dest , int flags ) { ","if ( DBG ) log ( ""writeToParcel(Parcel, int): "" + toString ( ) ) ; dest . writeInt ( mMcc ) ; dest . writeInt ( mMnc ) ; dest . writeInt ( mLac ) ; dest . writeInt ( mCid ) ; }"
"An ""enter tags"" model and view handles user data entry of multiple tags <code> ModelAndView < EnterTagsModel , EnterTagsView > newEnterTagsMaV ( String panelName , List < String > tags ) { ","EnterTagsModel model = new EnterTagsModel ( panelName , tags ) ; EnterTagsView view = new EnterTagsView ( model ) ; return new ModelAndView < > ( model , view ) ; }"
Generate an index of the available records in this grib2 file. <code> JsonArray jsonIndex ( ) { ,"JsonArrayBuilder a = Json . createArrayBuilder ( ) ; forEachRecord ( ( index , r ) -> a . add ( toJson ( index , r ) ) ) ; return a . build ( ) ; }"
Returns the build number of the running JDK if it's a RE build It will return 0 if it's an internal build. <code> int jdkBuildNumber ( ) { ,if ( ! versionsInitialized ) { initVersions ( ) ; } return jdk_build_number ; }
Set the property value by parsing a given String. May raise java.lang.IllegalArgumentException if either the String is badly formatted or if this kind of property can't be expressed as text. <code> void setAsText ( final String text ) { ,"if ( text == null ) { setValue ( null ) ; return ; } for ( int i = 0 ; i < availableTypeNames . length ; i ++ ) { if ( ObjectUtilities . equal ( availableTypeNames [ i ] , text ) ) { setValue ( availableTypes [ i ] ) ; return ; } } setValue ( null ) ; }"
Compute the checksum of a tar entry header. <code> long computeCheckSum ( byte [ ] buf ) { ,long sum = 0 ; for ( int i = 0 ; i < buf . length ; ++ i ) { sum += BYTE_MASK & buf [ i ] ; } return sum ; }
Gets pokemon by pokemon id. <code> List < Pokemon > getPokemonByPokemonId ( final PokemonIdOuterClass . PokemonId id ) { ,return Stream . of ( pokemons ) . filter ( new Predicate < Pokemon > ( ) { @ Override public boolean test ( Pokemon pokemon ) { return pokemon . getPokemonId ( ) . equals ( id ) ; } } ) . collect ( Collectors . < Pokemon > toList ( ) ) ; }
Forwards pauseApp to the MIDlet. <code> void pauseApp ( ) { ,synchronized ( midletLock ) { if ( midlet == null ) { return ; } midlet . pauseApp ( ) ; } }
Either TEXT or GPDBWritable. Call the appropiate read method <code> void doRead ( ) { ,assignSplits ( ) ; if ( isTextFormat ) readTextFormat ( ) ; else readGPDBWritableFormat ( ) ; }
Checks if key is pressed or mouse is moved etc. <code> void checkInput ( ) { ,if ( Keyboard . next ( ) && Keyboard . getEventKeyState ( ) ) { if ( Keyboard . getEventKey ( ) == Keyboard . KEY_ESCAPE ) closeRequested = true ; } if ( Display . isCloseRequested ( ) ) { closeRequested = true ; } }
"Selects an item in the list and then checks the action bar title <code> void selectListItemAndCheckActionbarTitle ( int item , int listResourceId , String actionbarTitle ) { ","EspressoTestUtils . clickAdapterViewItem ( item , listResourceId ) ; onView ( allOf ( instanceOf ( TextView . class ) , withParent ( withId ( R . id . default_toolbar ) ) ) ) . check ( matches ( withText ( actionbarTitle ) ) ) ; }"
Generate sub query definition for such a sub query which is applied to each row of parent query. <code> int [ ] getSpecialSubQueryInfo ( int count ) { ,int [ ] subQueryInfo = new int [ count * 2 ] ; for ( int i = 0 ; i < count ; i ++ ) { subQueryInfo [ 2 * i ] = i ; subQueryInfo [ 2 * i + 1 ] = i + 1 ; } return subQueryInfo ; }
"Returns the handler used for creating Beans off XML elements with the given namespace and local name. <code> NodeParser getParser ( ParseContext context , String namespaceURI , String localName ) { ","BeanDef beanDef = getBeanDef ( namespaceURI , localName ) ; if ( beanDef != null ) return createBeanParser ( context , beanDef ) ; return null ; }"
called from outside after the complete end of defrag <code> void updateTableIndexRoots ( ) { ,"HsqlArrayList allTables = database . schemaManager . getAllTables ( ) ; for ( int i = 0 , size = allTables . size ( ) ; i < size ; i ++ ) { Table t = ( Table ) allTables . get ( i ) ; if ( t . getTableType ( ) == Table . CACHED_TABLE ) { int [ ] rootsArray = rootsList [ i ] ; t . setIndexRoots ( rootsArray ) ; } } }"
Go to previous track for current picker <code> void prevTrack ( boolean browsing ) { ,"mIsBrowsing = browsing ; mFirstPlay = false ; mNavigator . browseAdjacentTrack ( SongPicker . DIRECTION_BACKWARD , false ) ; if ( ! mIsBrowsing && isPlaying ( ) ) { play ( ) ; } }"
"Sets minimum and maximum size limits for the window. If the window is full screen or not resizable, these limits are ignored. The default for all four parameters is -1, which means unrestricted. <code> void setWindowSizeLimits ( int minWidth , int minHeight , int maxWidth , int maxHeight ) { ",windowMinWidth = minWidth ; windowMinHeight = minHeight ; windowMaxWidth = maxWidth ; windowMaxHeight = maxHeight ; }
"Find a channel by id. If it doesn't exist, it is created. <code> DmxChannel getChannel ( int channelId ) { ",for ( DmxChannel c : channels ) { if ( c . getChannelId ( ) == channelId ) { return c ; } } DmxChannel c = new DmxChannel ( channelId ) ; addChannel ( c ) ; return c ; }
This method return UserTransaction instance <code> UserTransaction getTransaction ( ) { ,"UserTransaction userTransaction = null ; try { InitialContext init = new InitialContext ( ) ; userTransaction = ( UserTransaction ) init . lookup ( ""javax.transaction.UserTransaction"" ) ; } catch ( Exception e ) { e . printStackTrace ( ) ; } return userTransaction ; }"
"Checks that the declaration is marked ""native"" and has a Ceylon implementation meant for the specified backend <code> boolean isForBackend ( Declaration decl , Backend backend ) { ",Backends bs = decl . getNativeBackends ( ) ; return bs . none ( ) || bs . supports ( backend ) ; }
Check to ensure that this class implements PublicCloneable. <code> void testPublicCloneable ( ) { ,CustomXYToolTipGenerator g1 = new CustomXYToolTipGenerator ( ) ; assertTrue ( g1 instanceof PublicCloneable ) ; }
Seek the scanner at the first KeyValue of last row <code> boolean seekToLastRow ( ) { ,Cell higherCell = segment . isEmpty ( ) ? null : segment . last ( ) ; if ( higherCell == null ) { return false ; } Cell firstCellOnLastRow = CellUtil . createFirstOnRow ( higherCell ) ; if ( seek ( firstCellOnLastRow ) ) { return true ; } else { return seekToPreviousRow ( higherCell ) ; } }
Returns the width of the specified character. <code> int charWidth ( int ch ) { ,"char [ ] chars = Character . toChars ( ch ) ; return charsWidth ( chars , 0 , chars . length ) ; }"
"Utility method for generating random double values in the range specified by the low and high attributes. Used during the storeIventory initialization. <code> double getRandomDouble ( double low , double high ) { ",double rand = random . nextDouble ( ) ; double x = rand * ( high - low ) ; return x + low ; }
"De-serializes and constructs user-specified Avro return type from byte array <code> T deserializeAvroRecordFromByteArray ( byte [ ] bytes , Class < T > clazz ) { ","final SpecificDatumReader < T > reader = new SpecificDatumReader ( clazz ) ; final BinaryDecoder decoder = DecoderFactory . get ( ) . binaryDecoder ( bytes , null ) ; return reader . read ( null , decoder ) ; }"
Hit this definition and check the threshold <code> boolean shouldShowMessage ( ) { ,if ( _active ) { boolean overThreshold = ( _hitCount >= _threshold ) ; if ( ! overThreshold ) { _hitCount ++ ; } else { _active = false ; } return overThreshold ; } return false ; }
"This method only uses the default Commons HttpClient implementation when the URL object represents a HTTP resource. The URL object could also represent a file or some JNDI resource. In that case, the default Java implementation is used. <code> String URLtoString ( URL url ) { ",PortalSocketPermission . checkConnect ( url ) ; return getHttp ( ) . URLtoString ( url ) ; }
"map to java object <code> T mapToBean ( Class < T > clazz , Map map ) { ","T t = null ; try { t = clazz . newInstance ( ) ; mapToBean ( t , map ) ; } catch ( InstantiationException e ) { LOGGER . error ( e . getMessage ( ) , e ) ; } catch ( IllegalAccessException e ) { LOGGER . error ( e . getMessage ( ) , e ) ; } return t ; }"
Gets all selected Objects. <code> List < Object > getSelectedObjects ( ISelection theSelection ) { ,List < Object > result = null ; if ( ( theSelection != null ) && ! theSelection . isEmpty ( ) ) { if ( theSelection instanceof IStructuredSelection ) { result = new ArrayList ( ( ( IStructuredSelection ) theSelection ) . toList ( ) ) ; } } return ( result == null ) ? Collections . EMPTY_LIST : result ; }
Checks that the given class is visible to the LogManager. <code> void testLogManagerModifiers ( final Class < ? > c ) { ,assertTrue ( Modifier . isPublic ( c . getModifiers ( ) ) ) ; assertTrue ( Modifier . isPublic ( c . getConstructor ( ) . getModifiers ( ) ) ) ; }
Url-encodes data to make it safe for HTTP transport <code> String urlEncode ( String s ) { ,"if ( s == null ) return s ; try { return URLEncoder . encode ( s , ""UTF-8"" ) ; } catch ( UnsupportedEncodingException uee ) { return s ; } }"
"This is call if a single colum of the table is changed. <code> void writeExpression ( int columnIdx , Expression valueExpression ) { ","int idx = matrix [ columnIdx ] ; if ( idx >= 0 ) expressions . set ( idx , valueExpression ) ; }"
add a discovery from decoy data <code> void addFalseDiscovery ( double score ) { ,int index = FDRUtilities . asBin ( score ) ; m_FalseBin [ index ] ++ ; setDirty ( true ) ; }
sets if the original int meta class is used <code> void setOrigInt ( boolean v ) { ,origInt = v ; origIntRes = withoutCustomHandle && origInt ; }
Return true if the driver appears to be JDBC 4.0 compliant. <code> boolean isJdbc4ValidationSupported ( final Connection connection ) { ,"if ( ! isValidChecked ) { try { connection . isValid ( 5 ) ; } catch ( Throwable e ) { isValidSupported = false ; LOGGER . debug ( ""{} - JDBC4 Connection.isValid() not supported"" , poolName ) ; } isValidChecked = true ; } return isValidSupported ; }"
"Attempts to retrieve the user specified photo path. If nothing is found, defaults to ../Upload/Csv <code> String getCsvFilePath ( ) { ","String path ; try { path = ConfigFactory . load ( ) . getString ( ""csv.path"" ) ; if ( ! path . endsWith ( File . separator ) ) path += File . separator ; return path ; } catch ( Exception ex ) { path = ""../Upload/Csv"" ; return path ; } }"
"Checks whether the extension of the filename is that specified. This method obtains the extension as the textual part of the filename after the last dot. There must be no directory separator after the dot. The extension check is case-sensitive on all platforms. <code> boolean isExtension ( String filename , String extension ) { ",if ( filename == null ) { return false ; } if ( extension == null || extension . length ( ) == 0 ) { return indexOfExtension ( filename ) == - 1 ; } String fileExt = getExtension ( filename ) ; return fileExt . equals ( extension ) ; }
"Copy only date information to a new calendar. <code> void copyDateTo ( Calendar from , Calendar to ) { ","int year = getYear ( from ) ; int month = getMonth ( from ) ; int day = getDay ( from ) ; to . clear ( ) ; to . set ( year , month , day ) ; to . getTimeInMillis ( ) ; }"
"Checks, if this rule applies to the given library name. <code> boolean appliesTo ( @ NotNull String libraryName ) { ","try { return "".*"" . equals ( myRuleRegex ) || ( ! StringUtil . isEmptyOrSpaces ( myRuleRegex ) && libraryName . matches ( myRuleRegex ) ) ; } catch ( PatternSyntaxException ignored ) { } return false ; }"
Tests that a null context results in an NPE as per EL Javadoc. <code> void testGetValue01 ( ) { ,"ArrayELResolver resolver = new ArrayELResolver ( ) ; resolver . getValue ( null , new Object ( ) , new Object ( ) ) ; }"
Get the Thesaurus to be used. <code> boolean GetThes ( ) { ,if ( mxLinguSvcMgr != null ) mxThes = mxLinguSvcMgr . getThesaurus ( ) ; return mxThes != null ; }
Return a string representation of this NTPrincipal. <code> String toString ( ) { ,"java . text . MessageFormat form = new java . text . MessageFormat ( sun . security . util . ResourcesMgr . getString ( ""NTUserPrincipal.name"" , ""sun.security.util.AuthResources"" ) ) ; Object [ ] source = { name } ; return form . format ( source ) ; }"
Check if the list is empty. <code> boolean isEmpty ( ) { ,if ( itsHead == null ) { return true ; } assert itsSize > 0 ; return false ; }
Sets the last Item in this WordRelation to the given word. <code> void setLastWord ( String word ) { ,"Item lastItem = relation . getTail ( ) ; FeatureSet featureSet = lastItem . getFeatures ( ) ; featureSet . setString ( ""name"" , word ) ; }"
Returns a string representation of this object; useful for testing and debugging. <code> String toString ( ) { ,"StringBuilder sb = new StringBuilder ( ) ; sb . append ( ""{"" ) ; if ( verificationStatus != null ) sb . append ( ""VerificationStatus: "" + verificationStatus + "", "" ) ; if ( verificationToken != null ) sb . append ( ""VerificationToken: "" + verificationToken + "", "" ) ; sb . append ( ""}"" ) ; return sb . toString ( ) ; }"
"Reply call from server. <code> int replyToCoordinatingServer ( int articleId , Article article , ConsistencyType type ) { ","final String method = CLASS_NAME + "".replyToCoordinatingServer()"" ; LogUtil . log ( method , ""Server:"" + Server . getServerId ( ) + "" "" + ""Replying "" + article + "" to article id: "" + articleId + "" in coordinating server"" ) ; return writeReply ( articleId , article , type ) ; }"
"Specifies the number of seconds, after the reception of the STS header field <code> String getMaxAge ( ) { ","final StringBuilder header = new StringBuilder ( ""max-age="" + maxAge ) ; if ( includeSubDomains ) { header . append ( ""; includeSubdomains"" ) ; } return header . toString ( ) ; }"
"Returns the bounds of the given item, or null if it is not a valid type of item. <code> Rectangle getBounds ( Item item ) { ",if ( item instanceof TreeItem ) return ( ( TreeItem ) item ) . getBounds ( ) ; if ( item instanceof TableItem ) return ( ( TableItem ) item ) . getBounds ( 0 ) ; return null ; }
"Test of closeClient method, of class Client. <code> void testCloseClient ( ) { ","Client client = new Client ( ) ; client . setCloseClient ( false ) ; client . setClientSocket ( new Socket ( ) ) ; client . closeClient ( ) ; assertEquals ( true , client . isCloseClient ( ) ) ; assertEquals ( true , client . getClientSocket ( ) . isClosed ( ) ) ; }"
Returns the CredentialsStorageService obtained from the bundle context. <code> CredentialsStorageService getCredentialsStorageService ( ) { ,"if ( credentialsStorageService == null ) { credentialsStorageService = ServiceUtils . getService ( bundleContext , CredentialsStorageService . class ) ; } return credentialsStorageService ; }"
Get the full file model object for an absolute name. <code> FullFileModel getFileModel ( String absoluteName ) { ,"File file = new File ( absoluteName ) ; String name = resolveName ( absoluteName ) ; return getFileModel ( name , file ) ; }"
Return this point as a string. <code> String toString ( ) { ,"StringBuffer buffer = new StringBuffer ( ) ; buffer . append ( ""("" ) ; for ( Double element : values ) { buffer . append ( "" "" + element ) ; } buffer . append ( "")"" ) ; return buffer . toString ( ) ; }"
Gets an application property value. <code> String getApplicationProperty ( String parameterName ) { ,String val = initParameters . getProperty ( parameterName ) ; if ( val != null ) { return val ; } val = initParameters . getProperty ( parameterName . toLowerCase ( ) ) ; return val ; }
This test shows that the heavy field is not instantiated until the method getHeavy is called <code> void testGetHeavy ( ) { ,"assertNull ( getInternalHeavyValue ( ) ) ; assertNotNull ( getHeavy ( ) ) ; assertNotNull ( getInternalHeavyValue ( ) ) ; assertSame ( getHeavy ( ) , getInternalHeavyValue ( ) ) ; }"
"Puts the enum indicating the source of the token into a Bundle. <code> void putSource ( Bundle bundle , AccessTokenSource value ) { ","Validate . notNull ( bundle , ""bundle"" ) ; bundle . putSerializable ( TOKEN_SOURCE_KEY , value ) ; }"
"Writes tag and const_value_index in element_value. <code> void constValueIndex ( int tag , int index ) { ",output . write ( tag ) ; write16bit ( index ) ; }
"Implements InputStream.read(int) in terms of InputStream.read(byte[], int, int). InputStream assumes that you implement InputStream.read(int) and provides default implementations of the others, but often the opposite is more efficient. <code> int readSingleByte ( InputStream in ) { ","byte [ ] buffer = new byte [ 1 ] ; int result = in . read ( buffer , 0 , 1 ) ; return ( result != - 1 ) ? buffer [ 0 ] & 0xff : - 1 ; }"
"handles delete user, and redirect to user default <code> String deleteUser ( @ RequestParam ( value = ""id"" , defaultValue = """" , required = true ) int id ) { ","logger . info ( ""delete "" + id ) ; userBO . deleteById ( id ) ; return ""redirect:/user"" ; }"
Recharge the lamp by feeding it with a demon <code> void feedDemon ( RecyclableDemon demon ) { ,if ( demon . isRecycled ( ) ) { return ; } demon . recycle ( ) ; rubs = 0 ; demons ++ ; }
Prefix features with U- (for unigram) features or B- (for bigram) features <code> String ubPrefixFeatureString ( String feat ) { ,"if ( feat . endsWith ( ""|C"" ) ) { return ""U-"" + feat ; } else if ( feat . endsWith ( ""|CpC"" ) ) { return ""B-"" + feat ; } else { return feat ; } }"
Returns true if str contains a script. <code> boolean containsScript ( String str ) { ,if ( str . length ( ) > 0 ) { for ( String scriptPrefix : SCRIPT_PREFIXES ) { if ( str . contains ( scriptPrefix ) ) { return true ; } } } return false ; }
"Make a new command (builder). <code> ICommand newCommand ( IProject project , String builderName ) { ",ICommand cmd = project . getDescription ( ) . newCommand ( ) ; cmd . setBuilderName ( builderName ) ; return cmd ; }
Convenience method. Returns the value of the query parameter with the given name. If it doesn't exist then null is returned. <code> String getQueryParam ( String name ) { ,if ( queryParams != null ) { return queryParams . get ( name ) ; } return null ; }
Normalize the title of a DCValue. <code> String normalizeTitle ( DCValue value ) { ,"if ( ! ""title"" . equals ( element ) ) { return value . value ; } return OrderFormat . makeSortString ( value . value , value . language , OrderFormat . TITLE ) ; }"
Fetches methods with specified annotation. <code> Set < Method > getMethodsAnnotatedWith ( Class < ? extends Annotation > type ) { ,Set < Method > result = new HashSet < > ( ) ; Set < Method > methods = null ; for ( Reflections reflection : reflections ) { methods = reflection . getMethodsAnnotatedWith ( type ) ; if ( methods == null ) { continue ; } result . addAll ( methods ) ; } return result ; }
"returns the distance between the two points <code> int distanceBetween ( final int a , final int b ) { ",if ( a > b ) { return a - b ; } else { return b - a ; } }
"Get an instance. The location of the master password file is provided via ""encrypt.key.loc"". <code> PasswordManager getInstance ( State state ) { ","try { return CACHED_INSTANCES . get ( new AbstractMap . SimpleEntry < Optional < String > , Boolean > ( getMasterPassword ( state ) , shouldUseStrongEncryptor ( state ) ) ) ; } catch ( ExecutionException e ) { throw new RuntimeException ( ""Unable to get an instance of PasswordManager"" , e ) ; } }"
listStar(args) is like Common Lisp (apply #'list args) <code> Object listStar ( Object args ) { ,"if ( rest ( args ) == null ) return first ( args ) ; else return cons ( first ( args ) , listStar ( rest ( args ) ) ) ; }"
"Finds the vlan device among all interfaces, either by the network name or by vlan-id <code> VdsNetworkInterface getVlanDevice ( List < VdsNetworkInterface > nics , VdsNetworkInterface baseNic , Network network ) { ","for ( VdsNetworkInterface n : nics ) { if ( ( baseNic . getName ( ) . equals ( n . getBaseInterface ( ) ) && ObjectUtils . objectsEqual ( n . getVlanId ( ) , network . getVlanId ( ) ) ) || StringUtils . equals ( n . getNetworkName ( ) , network . getName ( ) ) ) { return n ; } } return null ; }"
Adds the given notification to the list of unread notifications and notifies interested listeners. <code> void addNotification ( UINotification notification ) { ,UINotificationGroup group = notification . getGroup ( ) ; if ( ! notificationGroups . contains ( group ) ) notificationGroups . add ( group ) ; group . addNotification ( notification ) ; fireNotificationEvent ( notification ) ; }
Generates a new project name for DatastoreOS3.PROJECT1 variable. <code> void generateProjectName ( ) { ,"long seed = System . currentTimeMillis ( ) ; PROJECT1 = ""project-name01-"" + seed ; PROJECT1_DISPLAYED_NAME = ""displayedName-"" + seed ; }"
Process the annotations for the listeners. <code> void loadApplicationListenerAnnotations ( Context context ) { ,"String [ ] applicationListeners = context . findApplicationListeners ( ) ; for ( int i = 0 ; i < applicationListeners . length ; i ++ ) { loadClassAnnotation ( context , applicationListeners [ i ] ) ; } }"
Sets the port number of the target host of this datagram packet. <code> void setPort ( int aPort ) { ,"if ( aPort < 0 || aPort > 65535 ) { throw new IllegalArgumentException ( ""Port out of range: "" + aPort ) ; } port = aPort ; }"
Basically returns a bound data set or null <code> List getDataSet ( ) { ,List data = ( List ) context . getRequest ( ) . getAttribute ( getDataSetName ( ) ) ; if ( data == null ) { setupDataSet ( ) ; } return ( List ) context . getRequest ( ) . getAttribute ( getDataSetName ( ) ) ; }
Converts Joda's DateTime format into Google's DateTime format. <code> DateTime toGoogleDateTime ( org . joda . time . DateTime jodaDateTime ) { ,DateTime googleDateTime = DateTime . parseRfc3339 ( jodaDateTime . toString ( ) ) ; return googleDateTime ; }
"writeValueTag() writes an image file directory (IFD) entry whose value fits into the Value Offset. See Section 2 (page 15) of the TIFF spec for more details. <code> void writeValueTag ( FileImageOutputStream stream , int tag , TiffType type , int value ) { ","stream . writeShort ( tag ) ; stream . writeShort ( getTypeInt ( type ) ) ; stream . writeInt ( 1 ) ; writeLeftAlignedValue ( stream , type , value ) ; }"
"Magic: Query for all objects with a known attribute, independant of the class or even if you don't know the class. <code> void testUnconstrainedClass ( ) { ","Query q = st . query ( ) ; q . descend ( ""str"" ) . constrain ( ""aaa"" ) ; st . expect ( q , new Object [ ] { new STMagic ( ""aaa"" ) , new STString ( ""aaa"" ) , new STStringU ( ""aaa"" ) } ) ; }"
"Saves the state to a stream (that is, serializes it). <code> void writeObject ( java . io . ObjectOutputStream s ) { ",s . defaultWriteObject ( ) ; int length = length ( ) ; s . writeInt ( length ) ; for ( int i = 0 ; i < length ; i ++ ) { s . writeDouble ( get ( i ) ) ; } }
Adds a customer to the customer list <code> void addCustomer ( Customer c ) { ,c . resetTime ( ) ; customerList . addCustomer ( c ) ; }
Removes the page with a given index. <code> void removePage ( int pageIndex ) { ,"throwIfClosed ( ) ; throwIfPageNotInDocument ( pageIndex ) ; mPageCount = nativeRemovePage ( mNativeDocument , pageIndex ) ; }"
Gets the last execution instance. <code> ExecutionInstance getLastExecutionInstance ( String flowId ) { ,if ( _flows . containsKey ( flowId ) ) { List instances = ( List ) _flows . get ( flowId ) ; ExecutionInstance toReturn = ( ExecutionInstance ) instances . get ( instances . size ( ) - 1 ) ; return toReturn ; } else { return null ; } }
Performs the actual write to the repository. This can be overriden by a subclass if necessary. <code> void doWrite ( List < ? extends T > items ) { ,"if ( logger . isDebugEnabled ( ) ) { logger . debug ( ""Writing to the repository with "" + items . size ( ) + "" items."" ) ; } MethodInvoker invoker = createMethodInvoker ( repository , methodName ) ; for ( T object : items ) { invoker . setArguments ( new Object [ ] { object } ) ; doInvoke ( invoker ) ; } }"
"Method to dump a tree of resources recursively. <code> void dumpRecursively ( String path , Writer writer ) { ","if ( isNonRecursive ( path ) ) { registry . dump ( path , writer ) ; } else { repository . dump ( path , writer ) ; } }"
"Releases database connection. Unlike the underlying connection.close(), this method does not throw SQLException or any other exception. It will fail silently from the perspective of calling code, logging errors using Commons Logging. <code> void releaseConnection ( final Connection con ) { ","try { activeConnections . decrementAndGet ( ) ; con . close ( ) ; } catch ( Exception e ) { if ( LOG . isWarnEnabled ( ) ) LOG . warn ( ""Error closing Connection: "" + con , e ) ; } }"
Simple check that hashCode is implemented. <code> void testHashCode ( ) { ,IntervalCategoryToolTipGenerator g1 = new IntervalCategoryToolTipGenerator ( ) ; IntervalCategoryToolTipGenerator g2 = new IntervalCategoryToolTipGenerator ( ) ; assertTrue ( g1 . equals ( g2 ) ) ; assertTrue ( g1 . hashCode ( ) == g2 . hashCode ( ) ) ; }
Determines if a named Class can be loaded or not. <code> boolean isClassAvailable ( final String className ) { ,try { return LoaderUtil . loadClass ( className ) != null ; } catch ( final Throwable e ) { return false ; } }
"releases the shared reference for all sstables, we acquire this when opening the sstable <code> void releaseReferences ( ) { ",for ( SSTableReader sstable : sstables ) { sstable . selfRef ( ) . release ( ) ; assert sstable . selfRef ( ) . globalCount ( ) == 0 ; } }
Check which character set a given content-type corresponds to. <code> String getCharset ( String contentType ) { ,"String charSet = knownCharsets . get ( contentType ) ; if ( charSet != null ) { return charSet ; } if ( contentType . startsWith ( ""text/"" ) || contentType . endsWith ( ""+json"" ) || contentType . endsWith ( ""+xml"" ) ) { return ""UTF-8"" ; } return ""BINARY"" ; }"
Gets the given property as a boolean value. <code> boolean getBoolean ( String property ) { ,if ( getProperty ( property ) == null ) return false ; return Boolean . valueOf ( getProperty ( property ) ) ; }
"Provides claim mappings for applications. <code> Map < String , Map < String , String >> getClaimMappings ( ) { ","try { return buildClaimMappings ( ) ; } catch ( ClaimMappingReaderException e ) { throw new ClaimResolvingServiceException ( ""Error while getting the claim mappings."" , e ) ; } }"
Returns the current recall: tp/(tp+fn). Returns 1.0 if tp and fn are both 0. <code> double getRecall ( ) { ,if ( tpCount == 0 && fnCount == 0 ) { return 1.0 ; } return ( ( double ) tpCount ) / ( tpCount + fnCount ) ; }
Remove a registered listener <code> void removeListener ( Listener listener ) { ,if ( listener == null ) return ; _listeners . remove ( listener ) ; }
Returns the fieldpolynomial as a new Bitstring. <code> GF2Polynomial getFieldPolynomial ( ) { ,if ( fieldPolynomial == null ) { computeFieldPolynomial ( ) ; } return new GF2Polynomial ( fieldPolynomial ) ; }
Test for block size of 2GB + 512B. This test can take a rather long time to complete on Windows (reading the file back can be slow) so we use a larger timeout here. <code> void testLargeBlockSize ( ) { ,final long blockSize = 2L * 1024L * 1024L * 1024L + 512L ; runTest ( blockSize ) ; }
Lock Object. Needs to be explicitly called. Unlock is automatic. <code> boolean lockObject ( PO po ) { ,if ( m_locked || m_lockedObject != null ) unlockObject ( ) ; if ( po == null ) return false ; m_lockedObject = po ; m_locked = m_lockedObject . lock ( ) ; return m_locked ; }
Returns the number of seconds since midnight. This method does not consider the position of the activity in the activity chain. The consequence is that activities that run over 24:00:00 must be manually corrected if they appear in an activity chain. <code> double getEndTimeInSecondsFromMidnight ( ) { ,int hour = endTime . get ( Calendar . HOUR_OF_DAY ) ; int minute = endTime . get ( Calendar . MINUTE ) ; int second = endTime . get ( Calendar . SECOND ) ; return hour * 60 * 60 + minute * 60 + second ; }
"Write an Array of ""slim"" Points (without endianness, srid and type, part of LinearRing and Linestring, but not MultiPoint! <code> void writePointArray ( Point [ ] geom , ValueSetter dest ) { ","dest . setInt ( geom . length ) ; for ( int i = 0 ; i < geom . length ; i ++ ) { writePoint ( geom [ i ] , dest ) ; } }"
Get the root cause of the Exception <code> RuntimeException getCause ( InvocationTargetException e ) { ,Throwable cause = e . getCause ( ) ; if ( cause instanceof RuntimeException ) throw ( RuntimeException ) cause ; else throw new IllegalStateException ( e . getCause ( ) ) ; }
"Open a new database connection with the given settings. <code> Connection getConnection ( String driver , String url , String user , String password ) { ","Properties prop = new Properties ( ) ; if ( user != null ) { prop . setProperty ( ""user"" , user ) ; } if ( password != null ) { prop . setProperty ( ""password"" , password ) ; } return getConnection ( driver , url , prop ) ; }"
"note: -1 is the empty field: """" !!!! <code> String fieldName ( FieldInfos infos , int fieldNumber ) { ","if ( fieldNumber == - 1 ) { return """" ; } else { return infos . fieldInfo ( fieldNumber ) . name ; } }"
"Verifies the byte by byte read is equal to an increasing byte array, where the written data is an increasing byte array. <code> void singleByteReadTest ( ) { ","for ( int i = 0 ; i < BLOCK_LENGTH ; i ++ ) { Assert . assertEquals ( i , mTestStream . read ( ) ) ; } }"
Example of asynchronously deleting the sink. <code> boolean deleteAsync ( ) { ,Future < Boolean > future = sink . deleteAsync ( ) ; boolean deleted = future . get ( ) ; if ( deleted ) { } else { } return deleted ; }
Gets the assessments of the selected user <code> List < Assessment > getAssessment ( @ PathVariable String email ) { ,List < Assessment > a = aService . findAssessmentsByUser ( userService . findUserByEmail ( email ) ) ; return a ; }
"removes the given display name from the ignore list of the class. returns whether the removing was succesful, i.e. whether the display name was in the list. <code> boolean removeIgnored ( Class c , String displayName ) { ",HashSet list ; if ( m_Ignored . contains ( c ) ) list = ( HashSet ) m_Ignored . get ( c ) ; else list = new HashSet ( ) ; return list . remove ( displayName ) ; }
"Returns the extension for dynamically linked libraries on the current OS. That is, returns ""jnilib"" on Apple, ""so"" on Linux and Sun, and ""dll"" on Windows. <code> String createLibExtension ( ) { ","OSType osType = calculateOS ( ) ; switch ( osType ) { case APPLE : return ""jnilib"" ; case LINUX : return ""so"" ; case SUN : return ""so"" ; case WINDOWS : return ""dll"" ; case UNKNOWN : throw new RuntimeException ( ""Unknown OS"" ) ; } return """" ; }"
Determines whether the passed in string is a valid zookeeper url or not <code> Matcher validateZookeeperUrl ( String zookeeperUrl ) { ,"Matcher matcher = zookeeperUrlPattern . matcher ( zookeeperUrl ) ; if ( ! matcher . matches ( ) ) { throw new IllegalArgumentException ( String . format ( ""Invalid zk url format: '%s' expected '%s'"" , zookeeperUrl , validZookeeperUrl ) ) ; } return matcher ; }"
Gets the type of events the processor produces for its i-th output trace. <code> Class < ? > getOutputType ( int index ) { ,if ( index >= 0 && index < m_outputArity ) { return getOutputTypeFor ( index ) ; } return null ; }
Get the value specified for a given attribute on this element as an integer. <code> int getIntAttribute ( String name ) { ,"try { return Integer . parseInt ( getAttribute ( name ) ) ; } catch ( NumberFormatException e ) { throw new SlickXMLException ( ""Value read: '"" + getAttribute ( name ) + ""' is not an integer"" , e ) ; } }"
the last item in list <code> T lastItem ( ) { ,if ( mDataList == null || mDataList . size ( ) == 0 ) { return null ; } return mDataList . get ( mDataList . size ( ) - 1 ) ; }
Initializes and creates all the portal container that have been registered previously <code> void contextInitialized ( ServletContextEvent event ) { ,final RootContainer rootContainer = RootContainer . getInstance ( ) ; SecurityHelper . doPrivilegedAction ( new PrivilegedAction < Void > ( ) { public Void run ( ) { rootContainer . createPortalContainers ( ) ; return null ; } } ) ; }
getValue. The value of this Property <code> Object getValue ( ) { ,try { return d_ISWbemPropertyProxy . getValue ( ) ; } catch ( com . linar . jintegra . AutomationException automationException ) { automationException . fillInStackTrace ( ) ; throw automationException ; } }
A utility method to clear the netty pipeline of all handlers. <code> void clearPipeline ( ChannelPipeline pipeline ) { ,"if ( null == pipeline ) { return ; } try { int counter = 0 ; while ( pipeline . first ( ) != null ) { pipeline . removeFirst ( ) ; counter ++ ; } LOG . trace ( ""Removed {} handlers from pipeline"" , counter ) ; } catch ( NoSuchElementException e ) { } }"
Make 16 bits of data <code> String [ ] divideInto16bits ( String str ) { ,"int len = ( str . length ( ) / 16 ) ; String array_16_bits [ ] = new String [ len ] ; for ( int i = 0 ; i < len ; i ++ ) { array_16_bits [ i ] = str . substring ( i * 16 , ( i + 1 ) * 16 ) ; } return array_16_bits ; }"
"Formats date with specified format. <code> String formatDate ( Date date , String format ) { ",SimpleDateFormat sdf = new SimpleDateFormat ( format ) ; return sdf . format ( date ) ; }
Get String value from sharedpreference <code> String getString ( String key ) { ,"try { String lvalue ; lvalue = mPref . getString ( key , """" ) ; return lvalue ; } catch ( Exception e ) { e . printStackTrace ( ) ; return """" ; } }"
Clears both interceptor lists maintained by this processor. <code> void clearInterceptors ( ) { ,clearRequestInterceptors ( ) ; clearResponseInterceptors ( ) ; }
!null id may be empty <code> String getRequestedId ( ) { ,"if ( m_RequestedId == null ) return """" ; return m_RequestedId ; }"
Returns if the given model path is existing in the current game level. <code> boolean isPathExistingInModel ( String modelPath ) { ,"if ( runningGameLevel == null ) { System . err . println ( ""Can't determine if the given modelPath exists. No level is currently loaded"" ) ; return false ; } return runningGameLevel . isPathExistingInModel ( modelPath ) ; }"
Method to convert image in Bitmap format into byte array <code> byte [ ] convertImageToBytes ( Bitmap image ) { ,"ByteArrayOutputStream imageStream = new ByteArrayOutputStream ( ) ; image . compress ( Bitmap . CompressFormat . PNG , 100 , imageStream ) ; return imageStream . toByteArray ( ) ; }"
"A method used for autonomous driving. <code> void autonomousDrive ( double Magnitude , double Direction ) { ","yawController . getInput ( yawGyro . getAngle ( ) ) ; mecanumDrive . mecanumDrive_Polar ( Magnitude , Direction + DIRECTION_BIAS , yawController . performPID ( ) ) ; }"
"Adds a claim URI to the required or optional claim list. <code> void addClaim ( String claim , boolean required ) { ",if ( required && ! _requiredClaims . contains ( claim ) ) { _requiredClaims . add ( claim ) ; } else if ( ! _optionalClaims . contains ( claim ) ) { _optionalClaims . add ( claim ) ; } }
"Adds given numbers to write blocks counters. <code> void addWriteBlocks ( int total , int secondary ) { ","IgniteBiTuple < LongAdder8 , LongAdder8 > blocksWritten0 = blocksWritten ; blocksWritten0 . get1 ( ) . add ( total ) ; blocksWritten0 . get2 ( ) . add ( secondary ) ; }"
"Saves the state of the given editor input into the given memento. <code> void saveState ( IMemento memento , PackageAbsFileEditorInput input ) { ","PackageAbsFile file = input . getFile ( ) ; memento . putString ( ABS_PACKAGE , file . getParent ( ) . getPath ( ) ) ; memento . putString ( ABS_PACKAGE_ENTRY , file . getName ( ) ) ; IProject project = file . getProject ( ) ; if ( project != null ) { memento . putString ( ABS_PROJECT , project . getName ( ) ) ; } }"
Returns a string representation of this object; useful for testing and debugging. <code> String toString ( ) { ,"StringBuilder sb = new StringBuilder ( ) ; sb . append ( ""{"" ) ; if ( getAccountLimits ( ) != null ) sb . append ( ""AccountLimits: "" + getAccountLimits ( ) + "","" ) ; if ( getNextToken ( ) != null ) sb . append ( ""NextToken: "" + getNextToken ( ) ) ; sb . append ( ""}"" ) ; return sb . toString ( ) ; }"
is the drawable db out of date for the given case <code> boolean isDrawableDBStale ( Case c ) { ,"if ( c != null ) { String stale = new PerCaseProperties ( c ) . getConfigSetting ( ImageGalleryModule . MODULE_NAME , PerCaseProperties . STALE ) ; return StringUtils . isNotBlank ( stale ) ? Boolean . valueOf ( stale ) : true ; } else { return false ; } }"
Gets an array of the lines (without line breakes) which compund the string <code> String [ ] getLines ( String string ) { ,"if ( string == null ) { return new String [ 0 ] ; } return string . split ( ""|r?|n"" ) ; }"
log out and run new login window <code> void logOut ( ) { ,"deliverToServer . logOut ( login ) ; mainUserFrame . dispose ( ) ; new LoginLogic ( serverConnector , pickUpFromServer ) ; }"
Returns true if enabled for the given object. <code> boolean isEnabled ( Object obj ) { ,"IEvaluationContext context = new EvaluationContext ( null , obj ) ; context . addVariable ( ""selection"" , obj ) ; return evalEnablementExpression ( context , getContextualLaunchEnablementExpression ( ) ) ; }"
A list of email addresses that have been verified. <code> java . util . List < String > getVerifiedEmailAddresses ( ) { ,if ( verifiedEmailAddresses == null ) { verifiedEmailAddresses = new com . amazonaws . internal . SdkInternalList < String > ( ) ; } return verifiedEmailAddresses ; }
"Find current weather around a geographic point <code> WeatherStatusResponse currentWeatherAroundPoint ( float lat , float lon , int cnt ) { ","String subUrl = String . format ( Locale . ROOT , ""find/station?lat=%f&lon=%f&cnt=%d&cluster=yes"" , Float . valueOf ( lat ) , Float . valueOf ( lon ) , Integer . valueOf ( cnt ) ) ; JSONObject response = doQuery ( subUrl ) ; return new WeatherStatusResponse ( response ) ; }"
"Gets up to max bytes from an InputStream <code> byte [ ] getBytes ( InputStream in , Integer max ) { ","ByteArrayOutputStream bout = new ByteArrayOutputStream ( ) ; byte [ ] buff = new byte [ 256 ] ; while ( max == null || max > 0 ) { int n = in . read ( buff ) ; if ( n == - 1 ) { break ; } bout . write ( buff , 0 , n ) ; if ( max != null ) max -= n ; } in . close ( ) ; return bout . toByteArray ( ) ; }"
Send a command to the server <code> void sendCommand ( ServerCommand command ) { ,"Log . debug ( ""Sending cmd:  "" + command ) ; try { writer . write ( command . toString ( ) ) ; writer . flush ( ) ; } catch ( SocketException e ) { throw e ; } catch ( IOException e ) { Log . error ( e ) ; } }"
testAddURLConnection Try to add a new protocol with class mapping <code> void testAddURLConnection ( ) { ,"m_genericURLFactory . addURLConnection ( ""myProtocol"" , ""org.opennms.test.MyProtocolImplementation"" ) ; Assert . assertEquals ( ""Test add URL connection"" , m_genericURLFactory . getURLConnections ( ) . get ( ""myProtocol"" ) , ""org.opennms.test.MyProtocolImplementation"" ) ; }"
We expect IllegalStateException to pass thru map. <code> void testErrorPassesThruMap2 ( ) { ,"Observable . error ( new IllegalStateException ( ) ) . map ( new Func1 < Object , Object > ( ) { @ Override public Object call ( Object i ) { return i ; } } ) . toBlocking ( ) . single ( ) ; }"
"removes session output for host system <code> void removeOutput ( Long sessionId , Long hostSystemId ) { ",UserSessionsOutput userSessionsOutput = userSessionsOutputMap . get ( sessionId ) ; if ( userSessionsOutput != null ) { userSessionsOutput . getSessionOutputMap ( ) . remove ( hostSystemId ) ; } }
Get the text to be logged for a certain exception <code> String getLogMessage ( @ Nullable final Throwable t ) { ,"if ( t == null ) return ""An error occurred"" ; return ""Exception occurred"" ; }"
"Throws IllegalArgumentException if the char sequence is empty, otherwise returns the char sequence. <code> T notEmpty ( T value , String argumentName ) { ","notNull ( value , argumentName ) ; if ( value . toString ( ) . trim ( ) . length ( ) == 0 ) { throw new IllegalArgumentException ( argumentName + "" can't be empty"" ) ; } return value ; }"
Returns length of jsonArray <code> int getJsonArrayLength ( String json ) { ,try { JSONArray jsonArray = new JSONArray ( json ) ; return jsonArray . length ( ) ; } catch ( JSONException e ) { e . printStackTrace ( ) ; } return 0 ; }
Initialize the actual parameters in a method call. Assumes that the callee stack frame has already been pushed on the stack. <code> void setActualParams ( Value [ ] actuals ) { ,"StackFrame calleeFrame = env . top ( ) ; for ( int i = 0 ; i < actuals . length ; i ++ ) { calleeFrame . set ( i , actuals [ i ] ) ; } }"
"Gets the value of the field in the class with the given type. <code> T getValueInFieldOfType ( Object on , Class < T > fieldType ) { ","Field field = getOnlyFieldDefOfType ( on . getClass ( ) , fieldType ) ; try { field . setAccessible ( true ) ; @ SuppressWarnings ( ""unchecked"" ) T fieldValue = ( T ) field . get ( on ) ; return fieldValue ; } catch ( IllegalAccessException e ) { throw new AssertionError ( e ) ; } }"
Adds a ConnectionPoolListener to the internal list. <code> void addConnectionPoolListener ( ConnectionPoolListener listener ) { ,"if ( listener == null ) throw new NullPointerException ( ""listener"" ) ; connectionListeners_ . addElement ( listener ) ; }"
"Get the display name for a CardEntity <code> String getDisplayFromDescription ( String isoCode , CardEntity card ) { ",for ( Description description : card . getDescriptions ( ) ) { if ( description . getLocale ( ) != null && description . getLocale ( ) . toLowerCase ( ) . equals ( isoCode . toLowerCase ( ) ) ) { return description . getDisplay ( ) ; } } return toFirstUpper ( card . getName ( ) ) ; }
returns information on the active network connection <code> NetworkInfo getActiveNetworkInfo ( Context context ) { ,if ( context == null ) { return null ; } ConnectivityManager cm = ( ConnectivityManager ) context . getSystemService ( Context . CONNECTIVITY_SERVICE ) ; if ( cm == null ) { return null ; } return cm . getActiveNetworkInfo ( ) ; }
Get preference prefix String <code> String getPrefix ( Filter filter ) { ,"String ret = """" ; switch ( filter ) { case MAIN : ret = MAIN_PREFIX ; break ; default : break ; } return ret ; }"
Returns the base folder for tests. <code> FileObject getBaseTestFolder ( final FileSystemManager manager ) { ,"final FileObject baseFolder = config . getBaseTestFolder ( manager ) ; final FileSystem newFs = manager . createVirtualFileSystem ( ""vfs:"" ) . getFileSystem ( ) ; final String junctionPoint = ""/some/dir"" ; newFs . addJunction ( junctionPoint , baseFolder ) ; return newFs . resolveFile ( junctionPoint ) ; }"
Converts the given Type into a JVM signature if it is a generic type. Otherwise it returns null. <code> String getSignatureIfGeneric ( java . lang . reflect . Type type ) { ,if ( type instanceof Class ) { return null ; } return getSignature ( type ) ; }
Gets the value of the outlineLevel property. <code> short getOutlineLevel ( ) { ,if ( outlineLevel == null ) { return ( ( short ) 0 ) ; } else { return outlineLevel ; } }
"'Fires' a simple single 'section' with associated data event. Note this method will result in a startEvent, dataEvent and endEvent. <code> void fireParseEvent ( String name , Object value , boolean internal , HashMap parameters ) { ","fireStartParseEvent ( name , internal , parameters ) ; fireParseEvent ( value , internal ) ; fireEndParseEvent ( name , internal ) ; }"
Test remove intertag spaces. <code> void testRemoveIntertagSpaces ( ) { ,"String source = readResource ( ""testRemoveIntertagSpaces.html"" ) ; String result = readResource ( ""testRemoveIntertagSpacesResult.html"" ) ; HtmlCompressor compressor = new HtmlCompressor ( ) ; compressor . setRemoveIntertagSpaces ( true ) ; assertEquals ( result , compressor . compress ( source ) ) ; }"
"Utility method to get bitmap from cache or, if not there, load it from its resource. <code> Bitmap getBitmap ( Resources resources , int resourceId ) { ","Bitmap bitmap = sBitmapResourceMap . get ( resourceId ) ; if ( bitmap == null ) { bitmap = BitmapFactory . decodeResource ( resources , resourceId ) ; sBitmapResourceMap . put ( resourceId , bitmap ) ; } return bitmap ; }"
"Adds given container to the list of parent from the Map. If list is missing in the map, it is created and placed. <code> void addToList ( Map < String , List < ChangesContainer >> childMap , String parent , ChangesContainer container ) { ","List < ChangesContainer > changesContainers = childMap . get ( parent ) ; if ( changesContainers == null ) { changesContainers = new ArrayList < ChangesContainer > ( ) ; } changesContainers . add ( container ) ; childMap . put ( parent , changesContainers ) ; }"
Test search when illegal limit argument. <code> void testSearchIllegalArgumentLimit ( ) { ,"exception . expect ( IllegalArgumentException . class ) ; subject . search ( ""query"" , QuerySyntax . LUCENE , SearchSort . NEW , TimeSpan . ALL , - 1 , - 577 , null , null , false ) ; }"
Clears and removes pool of given type from this collection. <code> void forgetPool ( Class < ? > type ) { ,ObjectPool < ? > pool = pools . remove ( type ) ; if ( pool != null ) { pool . clear ( ) ; } }
"Save a perf trace event as a JSON dict. The format mirrors a TraceEvent dict. <code> void savePerfString ( String name , long id , EventType type , boolean includeMemory ) { ","long timestampUs = ( System . nanoTime ( ) - sBeginNanoTime ) / 1000 ; MemoryInfo memInfo = null ; if ( includeMemory ) { memInfo = new MemoryInfo ( ) ; Debug . getMemoryInfo ( memInfo ) ; } savePerfString ( name , id , type , timestampUs , memInfo ) ; }"
Return true if the ticket is currently valid. This is true if the system time is between the ticket's start and end times. <code> boolean isCurrent ( ) { ,long now = System . currentTimeMillis ( ) ; return startTime . getTime ( ) <= now && now <= endTime . getTime ( ) ; }
Gets the File for the owner <code> File getFile ( ) { ,"if ( file == null ) { file = new File ( getDataFolder ( ) , getName ( ) + "".yml"" ) ; if ( ! file . exists ( ) ) { try { file . createNewFile ( ) ; } catch ( IOException e ) { e . printStackTrace ( ) ; } } } return file ; }"
"Adds the calculation represented by to the worklist, if it has not already been calculated. <code> void addWork ( Object o ) { ","if ( ! results . containsKey ( o ) ) { results . put ( o , NOT_CALCULATED ) ; pending . addLast ( o ) ; size ++ ; } }"
Return the maximum key value in the map <code> K getMax ( ) { ,try { return root . max ( ) ; } catch ( TreeIsEmptyException excep ) { throw new NoSuchElementException ( ) ; } }
"Get the property value, if it is null return default value <code> String getProperty ( String key , String defaultValue ) { ",String value = properties . get ( key ) ; return ( value == null ) ? defaultValue : value ; }
"Search a secret key ring collection for a secret key corresponding to keyID if it exists. <code> PGPPrivateKey findSecretKey ( PGPSecretKeyRingCollection pgpSec , long keyID , char [ ] pass ) { ","PGPSecretKey pgpSecKey = pgpSec . getSecretKey ( keyID ) ; if ( pgpSecKey == null ) { return null ; } return pgpSecKey . extractPrivateKey ( new JcePBESecretKeyDecryptorBuilder ( ) . setProvider ( ""BC"" ) . build ( pass ) ) ; }"
"Reads a zero-compressed encoded long from input stream and returns it. <code> long readVLong ( byte [ ] data , int start , int length ) { ",byte firstByte = data [ start ] ; int len = decodeVIntSize ( firstByte ) ; if ( len == 1 ) { return firstByte ; } long i = 0 ; for ( int idx = 0 ; idx < len - 1 ; idx ++ ) { i = i << 8 ; i = i | ( data [ ++ start ] & 0xFF ) ; } return ( isNegativeVInt ( firstByte ) ? ( i ^ - 1L ) : i ) ; }
Convert to char[] and fill the CharChunk. XXX Not optimized - it converts to String first. <code> void toChars ( ) { ,"if ( ! charC . isNull ( ) ) { type = T_CHARS ; return ; } toString ( ) ; type = T_CHARS ; char cc [ ] = strValue . toCharArray ( ) ; charC . setChars ( cc , 0 , cc . length ) ; }"
The next Option created will be required. <code> OptionBuilder isRequired ( ) { ,instance . required = true ; return instance ; }
Retrieves all specified types in a list (same as returned by values() method). <code> List < TransformationType > getAllTypes ( ) { ,ArrayList < TransformationType > types = new ArrayList < TransformationType > ( ) ; TransformationType [ ] values = TransformationType . values ( ) ; for ( int i = 0 ; i < values . length ; i ++ ) { TransformationType val = values [ i ] ; types . add ( val ) ; } return types ; }
Can we calculate the total pages when it rounds nicely and there's only one? <code> void testCalculateTotalPages02 ( ) { ,"int rows = 10 ; int numFound = 10 ; int result = ResponseHeader . calculateTotalPages ( rows , numFound ) ; assertThat ( result , is ( 1 ) ) ; }"
Get whether or not a wifi connection is currently connected. <code> boolean isWifiConnected ( Context context ) { ,ConnectivityManager connectivityManager = ( ConnectivityManager ) context . getSystemService ( Context . CONNECTIVITY_SERVICE ) ; if ( connectivityManager == null ) return false ; return connectivityManager . getNetworkInfo ( ConnectivityManager . TYPE_WIFI ) . isConnected ( ) ; }
Returns a string representation of this object; useful for testing and debugging. <code> String toString ( ) { ,"StringBuilder sb = new StringBuilder ( ) ; sb . append ( ""{"" ) ; if ( getSizeConstraintSetId ( ) != null ) sb . append ( ""SizeConstraintSetId: "" + getSizeConstraintSetId ( ) + "","" ) ; if ( getName ( ) != null ) sb . append ( ""Name: "" + getName ( ) ) ; sb . append ( ""}"" ) ; return sb . toString ( ) ; }"
"Converts a BigInteger array into an integer array, reducing all BigIntegers mod q. <code> int [ ] toIntArrayModQ ( int q , BigInteger [ ] input ) { ",BigInteger bq = BigInteger . valueOf ( q ) ; int [ ] result = new int [ input . length ] ; for ( int i = 0 ; i < input . length ; i ++ ) { result [ i ] = input [ i ] . mod ( bq ) . intValue ( ) ; } return result ; }
Converts an array of Class names to Class types <code> Class < ? > [ ] toTypeArray ( String [ ] s ) { ,if ( s == null ) return null ; Class < ? > [ ] c = new Class [ s . length ] ; for ( int i = 0 ; i < s . length ; i ++ ) { c [ i ] = forName ( s [ i ] ) ; } return c ; }
Gets JSON data from URL and stores it in AccessToken class. <code> AccessToken getAndStoreAccessToken ( String channelName ) { ,"String tokenUrl = ( ""https://api.twitch.tv/api/channels/"" + channelName + ""/access_token"" ) ; Gson gson = new Gson ( ) ; StringBuffer tokenData = openAndGrabDataFromUrl ( tokenUrl ) ; AccessToken accessToken = gson . fromJson ( tokenData . toString ( ) , AccessToken . class ) ; return accessToken ; }"
getSecurity_. The Security Configurator for this Object <code> wbemdisp . ISWbemSecurity getSecurity_ ( ) { ,try { return d_ISWbemEventSourceProxy . getSecurity_ ( ) ; } catch ( com . linar . jintegra . AutomationException automationException ) { automationException . fillInStackTrace ( ) ; throw automationException ; } }
"Test of getDatingSystem method, of class DefaultCalendarEra. <code> void testGetDatingSystem ( ) { ","Collection < org . opengis . temporal . Calendar > result = ( ( DefaultCalendarEra ) calendarEra1 ) . getDatingSystem ( ) ; assertEquals ( ( ( DefaultCalendarEra ) calendarEra2 ) . getDatingSystem ( ) , result ) ; }"
"Parse date with given formatters. <code> Long internalParseDate ( String value , DateFormat [ ] formats ) { ",Date date = null ; for ( int i = 0 ; ( date == null ) && ( i < formats . length ) ; i ++ ) { try { date = formats [ i ] . parse ( value ) ; } catch ( ParseException e ) { ; } } if ( date == null ) { return null ; } return new Long ( date . getTime ( ) ) ; }
Verifies ALL where the first fails. <code> void testField6PermissionNotOk ( ) { ,"final PermissionExecutor permissionExecutor = new ActivePermissionExecutor ( badRecord . getRequestScope ( ) ) ; permissionExecutor . checkSpecificFieldPermissions ( badRecord , null , ReadPermission . class , ""field6"" ) ; }"
"Creates an asychronous filling handle. <code> AsynchronousFillHandle createHandle ( JasperReport jasperReport , Map parameters ) { ","AsynchronousFillHandle filler = new AsynchronousFillHandle ( jasperReport , parameters ) ; return filler ; }"
No resources to read should result in error in strict mode. <code> void testStrictModeEnabled ( ) { ,tested . setResources ( new Resource [ ] { } ) ; tested . setStrict ( true ) ; tested . open ( ctx ) ; }
getFileNameWithoutExtension() works and is correct case <code> void getFileNameWithoutExtension1 ( ) { ,"File file = new File ( ""test/File.txt"" ) ; String name = FileUtils . getFileNameWithoutExtension ( file ) ; assertEquals ( ""Wrong file extension"" , ""File"" , name ) ; }"
Gets an object value and transforms it into a long <code> long getLong ( Object value ) { ,"if ( value == null ) { return 0 ; } return transform ( value , Long . class ) ; }"
Returns instance of mapping deriver. <code> BinaryAnnotationMappingDeriver getInstance ( String path ) { ,if ( instance == null ) { synchronized ( LOCK ) { if ( instance == null ) { instance = path == null ? new BinaryAnnotationMappingDeriver ( ) : new BinaryAnnotationMappingDeriver ( path ) ; } } } return instance ; }
"Calls caseXXX for each class of the model until one returns a non null result; it yields that result. <code> T doSwitch ( int classifierID , EObject theEObject ) { ",switch ( classifierID ) { case CrossContainmentPackage . ELEMENT : { Element element = ( Element ) theEObject ; T result = caseElement ( element ) ; if ( result == null ) result = defaultCase ( theEObject ) ; return result ; } default : return defaultCase ( theEObject ) ; } }
"Adds a mode-specific abbrev. <code> void addModeAbbrev ( String mode , String abbrev , String expansion ) { ","if ( ! loaded ) load ( ) ; Hashtable < String , String > modeAbbrevs = modes . get ( mode ) ; if ( modeAbbrevs == null ) { modeAbbrevs = new Hashtable < String , String > ( ) ; modes . put ( mode , modeAbbrevs ) ; } modeAbbrevs . put ( abbrev , expansion ) ; abbrevsChanged = true ; }"
Extract locationTagIds from the list of LocationTag objects provided. <code> List < Integer > getLocationTagIds ( List < LocationTag > tags ) { ,List < Integer > locationTagIds = new ArrayList < Integer > ( ) ; for ( LocationTag tag : tags ) { locationTagIds . add ( tag . getLocationTagId ( ) ) ; } return locationTagIds ; }
"Note: This method may throw checked exceptions although it doesn't say so. <code> Object invokeMethod ( Object target , String method , Object ... args ) { ","try { return InvokerHelper . invokeMethod ( target , method , args ) ; } catch ( InvokerInvocationException e ) { ExceptionUtil . sneakyThrow ( e . getCause ( ) ) ; return null ; } }"
"Returns the fully qualified file name associated with the passed DataInputStream if the DataInputStream was created using one of the static locate methods supplied with this class , otherwise returns a zero length string. <code> String getFileNameFromStream ( DataInputStream ds ) { ","if ( ds instanceof NamedDataInputStream ) return ( ( NamedDataInputStream ) ds ) . fullyQualifiedFileName ; return """" ; }"
create native object We use it to create native handlers <code> long createNativeObject ( String clazz ) { ,"assertNativeLibraryLoaded ( ) ; final long ret = JNICreateNativeObject ( clazz . getBytes ( Charsets . UTF_8 ) ) ; if ( ret == 0 ) { LOG . warn ( ""Can't create NativeObject for class "" + clazz + "", probably not exist."" ) ; } return ret ; }"
Convert an input byte array to a String using the ASCII character set. <code> String toAsciiString ( final byte [ ] inputBytes ) { ,"try { return new String ( inputBytes , CharsetNames . US_ASCII ) ; } catch ( final UnsupportedEncodingException e ) { throw new RuntimeException ( e ) ; } }"
"Creates a new sequence. <code> void createSequence ( Connection conn , String seq ) { ","PreparedStatement stmt = conn . prepareStatement ( INSERT ) ; stmt . setString ( 1 , seq ) ; stmt . setLong ( 2 , 1L ) ; stmt . setLong ( 3 , ( new java . util . Date ( ) ) . getTime ( ) ) ; stmt . executeUpdate ( ) ; }"
"Extracts the timestamp from the byte array form of an Update (serverTime in case of Snapshot, seqNum in case of Action) <code> int getTimestamp ( byte [ ] data ) { ",ByteBuffer buff = ByteBuffer . wrap ( data ) ; buff . position ( 1 ) ; return buff . getInt ( ) ; }
Returns the user ID of the portlet. This only applies when the portlet is added by a user to a page in customizable mode. <code> long getUserId ( String portletId ) { ,PortletInstance portletInstance = PortletInstance . fromPortletInstanceKey ( portletId ) ; return portletInstance . getUserId ( ) ; }
returns the current memory consumption <code> long getCurrent ( ) { ,m_Runtime = Runtime . getRuntime ( ) ; m_Total = m_Runtime . totalMemory ( ) ; return m_Total ; }
DyBase can retrieve DyUser. <code> void retrievesDyUser ( ) { ,"final URN urn = URN . create ( ""urn:test:1"" ) ; MatcherAssert . assertThat ( new DyBase ( DyBaseTest . region ( urn ) ) . user ( urn ) . urn ( ) , Matchers . equalTo ( urn ) ) ; }"
Test getTableOutputStream() - we need to test that the inheritance model is properly obeyed. <code> void testGetTableOutputStream ( ) { ,TTFTableOutputStream tableOut = out . getTableOutputStream ( ) ; assertTrue ( tableOut instanceof PSTTFTableOutputStream ) ; }
Tests that an exception is thrown if the read exceeds the file length limit. <code> void readWithInvalidArgument ( ) { ,"mThrown . expect ( IllegalArgumentException . class ) ; mThrown . expectMessage ( ""exceeding fileSize"" ) ; mReader . read ( TEST_BLOCK_SIZE - 1 , 2 ) ; }"
"Adds a value element of the type indicated by the given xpath at the selected index to the XML content document. <code> I_CmsXmlContentValue addValue ( CmsObject cms , String xpath , int index ) { ","I_CmsXmlContentValue newValue = m_content . addValue ( cms , xpath , getLocale ( ) , index ) ; m_values = m_content . getValues ( getPath ( ) , getLocale ( ) ) ; return newValue ; }"
Returns a string representation of this object; useful for testing and debugging. <code> String toString ( ) { ,"StringBuilder sb = new StringBuilder ( ) ; sb . append ( ""{"" ) ; if ( getVolumes ( ) != null ) sb . append ( ""Volumes: "" + getVolumes ( ) ) ; sb . append ( ""}"" ) ; return sb . toString ( ) ; }"
Set the name of this cudaDeviceProp to the given name <code> void setName ( String nameString ) { ,"byte bytes [ ] = nameString . getBytes ( ) ; int n = Math . min ( name . length , bytes . length ) ; System . arraycopy ( bytes , 0 , name , 0 , n ) ; }"
"Reads a specific short byte value (2 bytes) from the input byte array at the given offset. <code> short readShort ( byte [ ] buf , int pos ) { ","checkBoundary ( buf , pos , 2 ) ; return ( short ) ( ( ( short ) ( buf [ pos ] & 0xff ) << 8 ) | ( ( short ) ( buf [ pos + 1 ] & 0xff ) ) ) ; }"
ContainsKey implementation for chunk elements <code> Boolean containsKeyIntern ( final FileCacheKey fileCacheKey ) { ,for ( String file : directory . listAll ( ) ) { if ( file . equals ( fileCacheKey . getFileName ( ) ) ) { return true ; } } return false ; }
"Attempt to load the class of the given name. Note that the type parameter isn't checked. <code> Class < ? > classOrNull ( ClassLoader loader , String className ) { ",try { return loader . loadClass ( className ) ; } catch ( ClassNotFoundException ex ) { } catch ( SecurityException ex ) { } catch ( LinkageError ex ) { } catch ( IllegalArgumentException e ) { } return null ; }
"Checks if placing the piece at grid position with the rotation rot is a valid move. <code> boolean validMove ( TetrisPiece piece , int rot , int gridRow , int gridCol ) { ","if ( ! detectOutBounds ( piece , rot , gridRow , gridCol ) && ! detectCollision ( piece , rot , gridRow , gridCol ) ) { return true ; } else { return false ; } }"
"Sets an array of authors. <code> void setAuthor ( XMPMeta xmpMeta , String [ ] author ) { ","XMPUtils . removeProperties ( xmpMeta , XMPConst . NS_DC , CREATOR , true , true ) ; for ( int i = 0 ; i < author . length ; i ++ ) { xmpMeta . appendArrayItem ( XMPConst . NS_DC , CREATOR , new PropertyOptions ( PropertyOptions . ARRAY_ORDERED ) , author [ i ] , null ) ; } }"
"Get specific device property. If specific not found, return global value. <code> String getProperty ( long address , String property ) { ","String addressString = RemoteDeviceHelper . getBluetoothAddress ( address ) ; String v = getProperty ( addressString + ""."" + property ) ; if ( v != null ) { return v ; } else { return getProperty ( property ) ; } }"
Perform a task on each document in the forward index. <code> void forEachDocument ( ForwardIndexDocTask task ) { ,"for ( Integer fiid : idSet ( ) ) { int [ ] tokenIds = retrievePartsInt ( fiid , new int [ ] { - 1 } , new int [ ] { - 1 } ) . get ( 0 ) ; task . perform ( fiid , tokenIds ) ; } }"
Users' heartbeat to the Worker. <code> void userHeartbeat ( long userId ) { ,mustConnect ( ) ; try { mClient . userHeartbeat ( userId ) ; } catch ( TException e ) { mConnected = false ; throw new IOException ( e ) ; } }
Test returning no. of items remaining to the right of startIndex is greater than the amount to be retrieved <code> void testGetLessThanBufferCapacity4 ( ) { ,"CircularBuffer < String > buffer = new CircularBuffer < String > ( 10 ) ; assertEquals ( buffer . getSize ( ) , 10 , ""Buffer is not initialized with expected size."" ) ; for ( int i = 0 ; i <= 11 ; i ++ ) { buffer . append ( ""item"" + i ) ; } assertEquals ( buffer . get ( 8 ) . size ( ) , 8 , ""Returned an unexpected amount!"" ) ; }"
"Creates a new system-compatible image with the given size, which is much faster when drawn than an image with a custom format. <code> BufferedImage createCompatibleImage ( int width , int height , boolean withAlpha ) { ","GraphicsConfiguration gc = GraphicsEnvironment . getLocalGraphicsEnvironment ( ) . getDefaultScreenDevice ( ) . getDefaultConfiguration ( ) ; BufferedImage newImage = gc . createCompatibleImage ( width , height , ( withAlpha ? Transparency . TRANSLUCENT : Transparency . OPAQUE ) ) ; return newImage ; }"
Converts an url to an uri. Escapes whitespaces if needed. <code> URI urlToURI ( URL url ) { ,"try { return url . toURI ( ) ; } catch ( URISyntaxException e ) { throw LOG . cannotConvertUrlToUri ( url , e ) ; } }"
Clear the selection. The model should remove highlighting from the previously selected objects. <code> void clearSelection ( ) { ,"Object [ ] removals = _selection . toArray ( ) ; _selection . clear ( ) ; for ( int i = 0 ; i < removals . length ; i ++ ) { renderDeselected ( removals [ i ] ) ; } _selEvent . set ( null , removals , getFirstSelection ( ) ) ; dispatchSelectionEvent ( _selEvent ) ; }"
"Looks up a server with a given id. If the id is null, returns the static server. <code> MondrianServer serverForId ( String instanceId ) { ","if ( instanceId != null ) { final LockBox . Entry entry = lockBox . get ( instanceId ) ; if ( entry == null ) { throw Util . newError ( ""No server instance has id '"" + instanceId + ""'"" ) ; } return ( MondrianServer ) entry . getValue ( ) ; } else { return staticServer ; } }"
"Closes the given object, ignoring IOExceptions. <code> void closeQuietly ( Closeable closeable ) { ","try { if ( closeable != null ) { closeable . close ( ) ; } } catch ( IOException e ) { logger . error ( ""IOException should not have been thrown."" , e ) ; } }"
We duplicate some Strings in the array and Distinct operator detect those and skip it. Shall print hello reactive world <code> void testDistinctString ( ) { ,"String hello = ""hello"" ; String reactive = ""reactive"" ; String world = ""world"" ; List < String > numbers = Arrays . asList ( hello , hello , reactive , reactive , world , world ) ; Observable . from ( numbers ) . distinct ( ) . subscribe ( System . out :: println ) ; }"
Adds a task to the google api client manager tasks queue. This task will be scheduled to run on the calling thread. <code> boolean addTask ( GoogleApiClientTask task ) { ,"if ( ! isStarted ( ) ) { Log . d ( TAG , ""GoogleApiClientManager is not started."" ) ; return false ; } task . gApiClient = mGoogleApiClient ; task . taskQueue = mTaskQueue ; task . mRunOnBackgroundThread = false ; return mTaskQueue . offer ( task ) ; }"
"Draw Method - for drawing an image in a new position on the screen <code> void drawImage ( Image Image , int x , int y , int srcX , int srcY , int srcWidth , int srcHeight ) { ","srcRect . left = srcX ; srcRect . top = srcY ; srcRect . right = srcX + srcWidth ; srcRect . bottom = srcY + srcHeight ; dstRect . left = x ; dstRect . top = y ; dstRect . right = x + srcWidth ; dstRect . bottom = y + srcHeight ; canvas . drawBitmap ( ( ( AndroidImage ) Image ) . bitmap , srcRect , dstRect , null ) ; }"
Returns the tenant Id for the logged in user. <code> int getTenantId ( ) { ,Authentication authentication = getAuthenticatedAuthentication ( ) ; if ( authentication != null ) { WMUserDetails principal = ( WMUserDetails ) authentication . getPrincipal ( ) ; return principal . getTenantId ( ) ; } return - 1 ; }
Returns the value of a field as a float <code> float getAsFloat ( FieldEntry field ) { ,if ( fields . containsKey ( field . getName ( ) ) ) { return ( Float ) fields . get ( field . getName ( ) ) ; } if ( dataHandler != null ) { return dataHandler . getAsFloat ( field ) ; } return - 1 ; }
Helper method to validate issuer <code> DigiDocException validateIssuer ( String str ) { ,"DigiDocException ex = null ; if ( str == null && signature != null && signature . getSignedDoc ( ) . getVersion ( ) . equals ( SignedDoc . VERSION_1_3 ) ) ex = new DigiDocException ( DigiDocException . ERR_CREF_ISSUER , ""Issuer name cannot be empty"" , null ) ; return ex ; }"
"Sets the type for accessing the ContentProvider (i.e., CONTENT_RESOLVER or CONTENT_PROVIDER_CLIENT) for the HobbitOps implementation. <code> void setContentProviderAccessType ( ContentProviderAccessType accessType ) { ",if ( mAccessType != accessType ) { mAccessType = accessType ; switch ( mAccessType ) { case CONTENT_RESOLVER : mHobbitOpsImpl = new HobbitOpsContentResolver ( ) ; break ; case CONTENT_PROVIDER_CLIENT : mHobbitOpsImpl = new HobbitOpsContentProviderClient ( ) ; break ; } } }
Returns true iff there is an edge that has not been returned by a previous call of the next method. <code> boolean hasNext ( ) { ,if ( localIterator . hasNext ( ) ) { return true ; } else { if ( ! agenda . isEmpty ( ) ) { current = agenda . pop ( ) ; localIterator = lattice . lowerNeighbors ( current ) ; return ( localIterator != null && localIterator . hasNext ( ) ) ; } else { return false ; } } }
Return number of color mana symbols in manacost. <code> int getColorManaCount ( Card card ) { ,int count = 0 ; for ( String symbol : card . getManaCost ( ) . getSymbols ( ) ) { if ( isColoredMana ( symbol ) ) { count ++ ; } } return count ; }
Testing bar creation with date column. <code> void createBarTest3 ( ) { ,"table = Input . readTable ( filePath , configPath ) ; FreqBar . frequencyBar ( table , ""date"" ) ; }"
Remove the specified alias from our cache. <code> void removeAlias ( String alias ) { ,"if ( debug >= 3 ) engine . log ( ""Removing alias '"" + alias + ""'"" ) ; cache . remove ( alias . toLowerCase ( ) ) ; }"
Returns the string representation for this object. <code> String toString ( ) { ,"CPStringBuilder b = new CPStringBuilder ( ) ; if ( attributes . size ( ) > 0 ) b . append ( attributes . get ( 0 ) ) ; for ( int i = 1 ; i < attributes . size ( ) ; i ++ ) b . append ( "", "" + attributes . get ( i ) ) ; return b . toString ( ) ; }"
"A list of tags associated with StreamName, starting with the first tag after ExclusiveStartTagKey and up to the specified Limit. <code> java . util . List < Tag > getTags ( ) { ",if ( tags == null ) { tags = new com . amazonaws . internal . SdkInternalList < Tag > ( ) ; } return tags ; }
Resets all current tabs information. <code> void resetCurrentTabs ( ) { ,"Set < String > categories = currentTabActions . keySet ( ) ; currentTabActions . clear ( ) ; for ( String category : categories ) { raiseEventOnCurrentTabChange ( category , null ) ; } }"
Will invoke the specified action in EDT in case it is called from non-EDT thread. <code> void invokeAndWait ( final Runnable runnable ) { ,if ( SwingUtilities . isEventDispatchThread ( ) ) { runnable . run ( ) ; } else { SwingUtilities . invokeAndWait ( runnable ) ; } }
Get custom typeface from assets <code> Typeface getCustomTypeface ( String assetsPath ) { ,"if ( mFontMaps . get ( assetsPath ) == null ) { mFontMaps . put ( assetsPath , Typeface . createFromAsset ( mAssetManager , assetsPath ) ) ; } return mFontMaps . get ( assetsPath ) ; }"
Executes a command on the native command line and returns the result. <code> List < String > runNative ( String cmdToRun ) { ,"String [ ] cmd = cmdToRun . split ( "" "" ) ; return runNative ( cmd ) ; }"
Method invokes by the PdfContentStreamProcessor. Passes a TextRenderInfo for every text chunk that is encountered. We'll use this object to obtain coordinates. <code> void renderText ( TextRenderInfo renderInfo ) { ,if ( textRectangle == null ) textRectangle = renderInfo . getDescentLine ( ) . getBoundingRectange ( ) ; else textRectangle . add ( renderInfo . getDescentLine ( ) . getBoundingRectange ( ) ) ; textRectangle . add ( renderInfo . getAscentLine ( ) . getBoundingRectange ( ) ) ; }
Given a cluster and a node id checks if the node exists <code> boolean hasNodeWithId ( int nodeId ) { ,Node node = nodesById . get ( nodeId ) ; if ( node == null ) { return false ; } return true ; }
"Modifies the given zip entry so that it can be added to zip file. The given zip entry represents an enhanced class, so the zip entry has to get the correct size and checksum (but only it the entry won't be compressed). <code> void modifyZipEntry ( ZipEntry entry , byte [ ] bytes , CRC32 crc32 ) { ",entry . setSize ( bytes . length ) ; if ( entry . getMethod ( ) == 0 ) { crc32 . reset ( ) ; crc32 . update ( bytes ) ; entry . setCrc ( crc32 . getValue ( ) ) ; entry . setCompressedSize ( bytes . length ) ; } }
"update session and remember me service with user login data <code> void updateSessionAndRememberMeServiceWithLoginData ( ArtifactoryRestRequest artifactoryRequest , RestResponse artifactoryResponse , UserLogin userLogin , ArtifactoryContext artifactoryContext , UsernamePasswordAuthenticationToken authenticationToken , Authentication authentication ) { ","boolean isUpdateSucceeded = updateSessionAndDB ( artifactoryContext , userLogin . getUser ( ) , authenticationToken , authentication , artifactoryRequest ) ; updateRememberMeService ( artifactoryContext , isUpdateSucceeded , artifactoryRequest , artifactoryResponse ) ; }"
Logs object's Context.toString(...) representation to INFO stream if it's defined. <code> boolean logIfDefined ( Object objToLog ) { ,if ( objToLog != null && ! ( objToLog instanceof Undefined ) ) { logger . info ( Context . toString ( objToLog ) ) ; return true ; } else return false ; }
"Clears local variables form the variable map so that old local variable name-value pairs are not to be used in successive evaluations. <code> void terminateLocalVariables ( LocalVariableBehavior behavior , List < String > varNames , List < BiVariable > variables ) { ",if ( variables == null ) return ; if ( LocalVariableBehavior . TRANSIENT == behavior ) { for ( int i = 0 ; i < variables . size ( ) ; i ++ ) { if ( BiVariable . Type . LocalVariable == variables . get ( i ) . getType ( ) ) { varNames . remove ( i ) ; variables . remove ( i ) ; } } } }
Reads the visual signature from the given input stream. <code> void setVisualSignature ( InputStream is ) { ,VisualSignatureParser visParser = new VisualSignatureParser ( is ) ; visParser . parse ( ) ; visualSignature = visParser . getDocument ( ) ; }
Perform stride operations at once. <code> void skipProgressBar ( final int stride ) { ,completed += stride - 1 ; stepProgressBar ( ) ; }
"Writes a bytes array as a typed bytes sequence, using a given typecode. <code> void writeBytes ( byte [ ] bytes , int code ) { ",out . write ( code ) ; out . writeInt ( bytes . length ) ; out . write ( bytes ) ; }
"Sets the value of the specified security property. <code> void setProperty ( String key , String value ) { ","Services . setNeedRefresh ( ) ; secprops . put ( key , value ) ; }"
For each player of the match it assigns 6 Politic Cards with random colors. <code> void giveInitialPoliticCards ( ) { ,for ( Player player : arrayListPlayer ) for ( int itCard = 0 ; itCard < Constant . POLITIC_CARDS_INITIAL_NUMBER ; itCard ++ ) player . addPoliticCard ( new PoliticCard ( Color . getRandomColor ( ) ) ) ; }
Draw a horizontal line <code> void drawHorizontal ( int y ) { ,"int cl2 = CORNER_LENGTH / 2 ; graphics . drawLine ( x1 + cl2 + PADDING , y , x2 - cl2 - PADDING , y ) ; }"
Bring the ConsoleView to the front and show this console. <code> void bringToFront ( ) { ,"MessageConsole myConsole = findConsole ( ""MonkeyTalk Output"" ) ; if ( myConsole != null ) { myConsole . activate ( ) ; } }"
"Extended grammar for varid/conid from Haskell 2010 specification. Also allows underscore as start on varids. <code> boolean isOneid ( @ NotNull String name , Project project , boolean var ) { ","if ( name . isEmpty ( ) ) return false ; return ! isKeyword ( name , project ) ; }"
returns a String representation of this object. Includes information about the types of the arguments in the signature <code> String toString ( ) { ,"StringBuffer result = new StringBuffer ( ""("" ) ; for ( int i = 0 ; i < _argTypes . length ; i ++ ) { result . append ( _argTypes [ i ] != null ? _argTypes [ i ] . getName ( ) : ""[null]"" ) ; if ( i < ( _argTypes . length - 1 ) ) { result . append ( "", "" ) ; } } result . append ( "")"" ) ; return result . toString ( ) ; }"
"This changes the temporary placeholder jpeg without writing it to the media store <code> void replacePlaceholder ( Placeholder session , Bitmap placeholder ) { ","Storage . replacePlaceholder ( session . outputUri , placeholder ) ; CameraUtil . broadcastNewPicture ( mContext , session . outputUri ) ; }"
spawns the threads for each each elevator <code> void spawnThreads ( ) { ,for ( int i = 0 ; i < ElevatorSimulation . threads ; ++ i ) elevators [ i ] . start ( ) ; }
Sets radian longitude to something sane. <code> double wrapLongitude ( double lon ) { ,if ( ( lon < - DATELINE_D ) || ( lon > DATELINE_D ) ) { lon += DATELINE_D ; lon %= LON_RANGE_D ; lon += ( lon < 0 ) ? DATELINE_D : - DATELINE_D ; } return lon ; }
"Sets a new application folder. Note that this will reset all the folders and resources that are bound to it. For example there might be the need to recreate the database file. <code> void setApplicationDir ( Context context , String path ) { ","SharedPreferences preferences = PreferenceManager . getDefaultSharedPreferences ( context ) ; Editor editor = preferences . edit ( ) ; editor . putString ( LibraryConstants . PREFS_KEY_BASEFOLDER , path ) ; editor . commit ( ) ; resetManager ( ) ; }"
"Returns true if the parameter character is a hexidecimal digit 0 through 9, a through f, or A through F. <code> boolean isHexDigit ( Character c ) { ",if ( c == null ) return false ; char ch = c . charValue ( ) ; return ( ch >= '0' && ch <= '9' ) || ( ch >= 'a' && ch <= 'f' ) || ( ch >= 'A' && ch <= 'F' ) ; }
"Creates and returns the database adapter instance. If an instance has been created, the same instance will be returned on subsequent calls. <code> DbAdapter _getDbAdapter ( ) { ",if ( _dbAdapter == null ) { _dbAdapter = new DbAdapter ( _getContext ( ) ) ; } return _dbAdapter ; }
"Returns true if the player owns the token, otherwise false. If the player is GM this function always returns true. If strict token management is disabled then this function always returns true. <code> boolean playerOwns ( Token token ) { ",Player player = MapTool . getPlayer ( ) ; if ( player . isGM ( ) ) { return true ; } if ( ! MapTool . getServerPolicy ( ) . useStrictTokenManagement ( ) ) { return true ; } return token . isOwner ( player . getName ( ) ) ; }
Select a protocol. Set it as preferred. <code> boolean setCurrentProtocolImplementation ( String implementationName ) { ,boolean retvalue = false ; IProtocol selected = installedProtocolImplementations . get ( implementationName ) ; if ( selected != null ) { currentProtocolImplementation = selected ; retvalue = true ; } return retvalue ; }
Determine a buffer size for reading the underlying character stream. <code> long determineLengthForBufferSizing ( Clob value ) { ,try { return value . length ( ) ; } catch ( SQLFeatureNotSupportedException e ) { return BUFFER_SIZE ; } }
"Print the class hierarchy for the given ontology from this class down, assuming this class is at the given level. Makes no attempt to deal sensibly with multiple inheritance. <code> void printHierarchy ( OWLClass clazz ) { ","OWLReasoner reasoner = reasonerFactory . createNonBufferingReasoner ( ontology ) ; printHierarchy ( reasoner , clazz , 0 ) ; for ( OWLClass cl : ontology . getClassesInSignature ( ) ) { if ( ! reasoner . isSatisfiable ( cl ) ) { out . println ( ""XXX: "" + labelFor ( cl ) ) ; } } reasoner . dispose ( ) ; }"
Returns the IndexNode for the node position digit. <code> IndexNode getChildNode ( char digit ) { ,int pos = findNodePos ( digit ) ; if ( pos >= 0 ) return nodes [ pos ] ; return null ; }
Waits for all tasks within the pipeline to complete. <code> void waitForCompletion ( ) { ,"boolean successful ; successful = true ; for ( TaskManager taskManager : taskManagers ) { if ( ! taskManager . waitForCompletion ( ) ) { successful = false ; } } if ( ! successful ) { throw new OsmosisRuntimeException ( ""One or more tasks failed."" ) ; } }"
Add a new column to this TableColumnModel <code> void addColumn ( DataColumn column ) { ,"TableColumn tableColumn = new DataTableColumn ( dataModel , column ) ; model . addColumn ( tableColumn ) ; int pos = model . getColumnIndex ( tableColumn . getIdentifier ( ) ) ; if ( pos != destPos ) model . moveColumn ( pos , destPos ) ; destPos ++ ; tableColumns . add ( tableColumn ) ; }"
"Returns the full commandline used to start the mysql server, including and arguments to be passed to the server process. <code> String getCommandLine ( ) { ",StringBuilder commandLine = new StringBuilder ( getFullExecutablePath ( ) ) ; commandLine . append ( buildOptionalCommandLine ( ) ) ; return commandLine . toString ( ) ; }
Tests getting and setting fields. <code> void fieldsTest ( ) { ,"Random random = new Random ( ) ; boolean recursive = random . nextBoolean ( ) ; DeleteOptions options = DeleteOptions . defaults ( ) ; options . setRecursive ( recursive ) ; Assert . assertEquals ( recursive , options . isRecursive ( ) ) ; }"
method to move a robot one cell back (relative to his current direction) <code> void goBack ( ) { ,saveCurrentDirection ( ) ; current_direction_ . invertDirection ( ) ; moveInDirection ( current_direction_ ) ; }
"Store text in the cache <code> void putText ( int cache_id , DataBlob entry ) { ","if ( cache_id < textcache . length ) { textcache [ cache_id ] = entry ; } else { throw new RdesktopException ( ""Could not put Text"" ) ; } }"
Return a list of VM arguments <code> List < String > getVmArgs ( ) { ,"if ( testVmArgs == null ) { testVmArgs = new ArrayList < > ( ) ; testVmArgs . addAll ( Arrays . asList ( VM_ARGS ) ) ; testVmArgs . add ( ""-XX:Flags="" + getVmFlagsFile ( ) . getAbsolutePath ( ) ) ; } return testVmArgs ; }"
"Return a List of the second items from a list of pairs <code> List < W > listSecond ( List < Pair < T , W >> list ) { ","ArrayList < W > ts = new ArrayList < W > ( ) ; for ( Pair < T , W > twPair : list ) { ts . add ( twPair . getSecond ( ) ) ; } return ts ; }"
"Set the character at a particular offset <code> void setCharAt ( int index , char ch ) { ","if ( index < 0 || index > used ) { throw new IndexOutOfBoundsException ( """" + index ) ; } array [ index ] = ch ; }"
"limits results of getHL7InArchiveByState <code> List < HL7InArchive > getHL7InArchiveByState ( Integer state , Integer maxResults ) { ","Query q = sessionFactory . getCurrentSession ( ) . createQuery ( ""from HL7InArchive where messageState = ?"" ) . setParameter ( 0 , state , StandardBasicTypes . INTEGER ) ; if ( maxResults != null ) { q . setMaxResults ( maxResults ) ; } return q . list ( ) ; }"
Return a Rating instance with no rating. Create and return a new Rating instance with no rating known for the given rating style. <code> RatingCompat newUnratedRating ( @ Style int ratingStyle ) { ,"switch ( ratingStyle ) { case RATING_HEART : case RATING_THUMB_UP_DOWN : case RATING_3_STARS : case RATING_4_STARS : case RATING_5_STARS : case RATING_PERCENTAGE : return new RatingCompat ( ratingStyle , RATING_NOT_RATED ) ; default : return null ; } }"
The Resource must already exist in the ENC of this webapp. <code> Object lookupInjectedValue ( ) { ,"InitialContext context = new InitialContext ( ) ; return context . lookup ( ""java:comp/env/"" + getJndiName ( ) ) ; }"
"Removes the character large object (CLOB) associated with the specified key in the given preference node, if any. <code> void removeCLOB ( Preferences prefs , String key ) { ","prefs . remove ( key ) ; try { getClobStorage ( prefs , key ) . removeNode ( ) ; } catch ( BackingStoreException bse ) { } }"
Obtain NFS protocol version (if provided) for a store uuid. <code> Integer getNfsVersionByUuid ( String storeUuid ) { ,ImageStoreVO imageStore = imageStoreDao . findByUuid ( storeUuid ) ; if ( imageStore != null ) { return getNfsVersion ( imageStore . getId ( ) ) ; } return getGlobalDefaultNfsVersion ( ) ; }
"Returns an image scaled to fit width panel <code> BufferedImage getResizedImage ( BufferedImage original , int width ) { ","if ( width != original . getWidth ( ) ) { double ratio = width / ( double ) original . getWidth ( ) ; int height = ( int ) ( original . getHeight ( ) * ratio ) ; return getResizedImage ( original , width , height ) ; } else { return original ; } }"
Retrieves the naming context bound to the current thread. <code> Context getThread ( ) { ,"Context context = threadBindings . get ( Thread . currentThread ( ) ) ; if ( context == null ) { throw new NamingException ( sm . getString ( ""contextBindings.noContextBoundToThread"" ) ) ; } return context ; }"
Deallocate all hostList for the VM. <code> void vmDeallocate ( Vm vm ) { ,getRamProvisioner ( ) . deallocateRamForVm ( vm ) ; getBwProvisioner ( ) . deallocateBwForVm ( vm ) ; getVmScheduler ( ) . deallocatePesForVm ( vm ) ; setStorage ( getStorage ( ) + vm . getSize ( ) ) ; }
Returns true if the reference of the specified class key exists in this context. <code> boolean hasKey ( Class < ? > aClass ) { ,TsNullArgumentRtException . checkNull ( aClass ) ; return find ( aClass ) != null ; }
Returns the user name of the user making this call. This call is only available to applications on the system image; it requires the MANAGE_USERS permission. <code> String getUserName ( ) { ,"try { return mService . getUserInfo ( getUserHandle ( ) ) . name ; } catch ( RemoteException re ) { Log . w ( TAG , ""Could not get user name"" , re ) ; return """" ; } }"
Resets and initializes the SessionFactory. If there is a SessionFactory then this one is first closed before a new one is created. <code> void reInitialize ( ) { ,if ( sessionFactory != null ) { sessionFactory . close ( ) ; sessionFactory = null ; } initialize ( ) ; }
"This method returns an ArrayList of Strings of IP addresses that all have the maximum number of visits to this website. <code> int mostNumberVisitsByIP ( HashMap < String , Integer > map ) { ",int maxVisits = 0 ; for ( int visits : map . values ( ) ) if ( visits > maxVisits ) maxVisits = visits ; return maxVisits ; }
Return the sign of the given double value. <code> long unpackGetSign ( final double d ) { ,final long b = Double . doubleToRawLongBits ( d ) ; return ( ( b & Binary64 . MASK_SIGN ) >> 63 ) & 1 ; }
Creates a copy of the record so we don't get interference from bolts that execute in the same JVM. We invoke ByteBuffer.duplicate() so the ByteBuffer state is decoupled. <code> Record copyRecord ( Record record ) { ,Record duplicate = new Record ( ) ; duplicate . setPartitionKey ( record . getPartitionKey ( ) ) ; duplicate . setSequenceNumber ( record . getSequenceNumber ( ) ) ; duplicate . setData ( record . getData ( ) . duplicate ( ) ) ; return duplicate ; }
"For example nextIntBetween( 2, 8 ) can give values between 2-8, all included. <code> int nextIntBetween ( int lowIncluded , int highIncluded ) { ",int diff = highIncluded - lowIncluded ; assert diff > 0 ; return lowIncluded + random . nextInt ( diff + 1 ) ; }
"Sets the given property. Make sure this model has this property! <code> void setValue ( Property < TYPE > property , TYPE value ) { ","if ( setValues == null ) setValues = new ContentValues ( ) ; if ( ! shouldSaveValue ( property , value ) ) return ; saver . save ( property , setValues , value ) ; }"
"DOC amaumont Comment method ""getExternalData"". <code> ExternalDbMapData buildExternalData ( ) { ","ExternalDataConverter converter = new ExternalDataConverter ( mapperManager ) ; return converter . prepareExternalData ( mapperModel , mapperManager . getUiManager ( ) . getUiProperties ( ) ) ; }"
Send an unsolicited pong with the specified payload. <code> void sendPong ( Buffer payload ) { ,"if ( writerSentClose ) throw new IllegalStateException ( ""closed"" ) ; if ( writerWantsClose ) throw new IllegalStateException ( ""must call close()"" ) ; try { writer . writePong ( payload ) ; } catch ( IOException e ) { writerWantsClose = true ; throw e ; } }"
Removes the resolver identified by key from this registry. <code> ModelResolverDescriptor removeResolver ( String key ) { ,final ModelResolverDescriptor descriptor = registeredDescriptors . remove ( key ) ; if ( descriptor != null ) { descriptor . dispose ( ) ; } return descriptor ; }
"Delete the last ""_"" part <code> String prepareConfigVarName ( String name ) { ","int index = name . lastIndexOf ( ""_"" ) ; return name . substring ( 0 , index ) ; }"
Calcula o modulo do desvio da amostra na fila Requer que o intervalo total de tempo tenha sido definido <code> void calculateDeviationN ( ) { ,if ( timeInterval == 0 ) { deviationN = 0 ; } else { deviationN = Math . sqrt ( getVarianceN ( ) / timeInterval ) * t ; } }
Removes trailing empty lines. <code> void removeTrailingEmptyLines ( ) { ,Line aLine = m_aLineTail ; while ( aLine != null && aLine . m_bIsEmpty ) { removeLine ( aLine ) ; aLine = m_aLineTail ; } }
Checks if an imbalance was detected in the system <code> boolean imbalanceDetected ( LoadImbalance imbalance ) { ,long min = imbalance . minimumEvents ; long max = imbalance . maximumEvents ; if ( min == Long . MIN_VALUE || max == Long . MAX_VALUE ) { return false ; } long lowerBound = ( long ) ( MIN_MAX_RATIO_MIGRATION_THRESHOLD * max ) ; return min < lowerBound ; }
Returns NTP packet reference identifier as IP address. <code> String getRefAddress ( NtpV3Packet packet ) { ,int address = ( packet == null ) ? 0 : packet . getReferenceId ( ) ; return getHostAddress ( address ) ; }
"Create linear gradient fill. <code> LinearGradientFill newLinearGradientFill ( final int angle , final Color color , final double offset ) { ","checkNotNull ( color , ""color cannot be null"" ) ; checkArgument ( offset >= Data . MIN_VALUE && offset <= Data . MAX_VALUE , ""offset must be between 0 and 100"" ) ; return new LinearGradientFill ( angle , color , offset ) ; }"
Returns the system load average for the last minute. <code> double getSystemLoadAverage ( ) { ,if ( getSystemLoadAverage == null ) { return - 1 ; } try { return ( double ) getSystemLoadAverage . invoke ( osMxBean ) ; } catch ( Throwable t ) { return - 1 ; } }
Get the bean property from a configuration key if it contains one. <code> String getBeanProperty ( String key ) { ,"String property = null ; int atLoc = key . indexOf ( '@' ) ; if ( atLoc > 0 ) { try { property = key . substring ( 0 , atLoc ) ; } catch ( RuntimeException e ) { property = null ; } } return property ; }"
Return a String representation of this object. <code> String toString ( ) { ,"if ( filterConfig == null ) { return ( ""RequestFilter()"" ) ; } StringBuffer sb = new StringBuffer ( ""RequestFilter("" ) ; sb . append ( filterConfig ) ; sb . append ( "")"" ) ; return ( sb . toString ( ) ) ; }"
If the stroke can be described by a basic stroke then this returns true. <code> boolean isBasicLine ( String desc ) { ,for ( int i = 0 ; i < desc . length ( ) ; i ++ ) { char c = desc . charAt ( i ) ; if ( c != '-' && c != '.' ) return false ; } return true ; }
Creates reserve disc cache which will be used if primary disc cache becomes unavailable <code> DiscCacheAware createReserveDiscCache ( Context context ) { ,"File cacheDir = context . getCacheDir ( ) ; File individualDir = new File ( cacheDir , ""uil-images"" ) ; if ( individualDir . exists ( ) || individualDir . mkdir ( ) ) { cacheDir = individualDir ; } return new TotalSizeLimitedDiscCache ( cacheDir , 2 * 1024 * 1024 ) ; }"
"Create a SimpleUnit from the given name, allow Exceptions. <code> SimpleUnit factoryWithExceptions ( String name ) { ",UnitFormat format = UnitFormatManager . instance ( ) ; Unit uu = format . parse ( name ) ; if ( isTimeUnit ( uu ) ) return new TimeUnit ( name ) ; return new SimpleUnit ( uu ) ; }
Finds the user name from the local database of the device. <code> String getUserName ( Context context ) { ,"SharedPreferences prefs = getMySharedPreferences ( context ) ; return prefs . getString ( ""UserName"" , """" ) ; }"
Returns all the endpoints. <code> Set < Endpoint > getEndpoints ( ) { ,Set < Endpoint > endpoints = new HashSet < Endpoint > ( ) ; endpoints . addAll ( endpointsByName . values ( ) ) ; return endpoints ; }
"Encodes byte into its URL representation. <code> void writeEncodedURLByte ( final int b , @ Nonnull final OutputStream aOS ) { ",final char cHigh = StringHelper . getHexCharUpperCase ( ( b >> 4 ) & 0xF ) ; final char cLow = StringHelper . getHexCharUpperCase ( b & 0xF ) ; aOS . write ( ESCAPE_CHAR ) ; aOS . write ( cHigh ) ; aOS . write ( cLow ) ; }
Test a null formula <code> void testNullFormula ( ) { ,"logger . info ( ""Test null Formula"" ) ; String formula = null ; Object resObject = Formula . evalFormula ( formula ) ; Assert . assertNull ( resObject ) ; }"
"Check the geometric consistency between three correspondences. <code> boolean Homography3PointsGeometricallyConsistent ( Point2d x1 , Point2d x2 , Point2d x3 , Point2d x1p , Point2d x2p , Point2d x3p ) { ","if ( ( ( LinePointSide ( x1 , x2 , x3 ) > 0 ) ^ ( LinePointSide ( x1p , x2p , x3p ) > 0 ) ) == true ) { return false ; } return true ; }"
"Returns true if the hints contain at least one value that equals the specified object <code> boolean containsHint ( Object [ ] hints , Object object ) { ","if ( hints != null ) { for ( Object hint : hints ) { if ( Objects . equals ( object , hint ) ) { return true ; } } } return false ; }"
Get boolean value of an attribute. <code> boolean getBooleanAttribute ( A attribute ) { ,String value = getStringAttribute ( attribute ) ; return Boolean . parseBoolean ( value ) ; }
"Set expires header to given date. <code> void setExpires ( HttpServletResponse response , Date date ) { ","if ( date == null ) { response . setHeader ( HEADER_EXPIRES , ""-1"" ) ; } else { response . setHeader ( HEADER_EXPIRES , formatDate ( date ) ) ; } }"
"Cuts the field from left to right according to yCuts <code> boolean cutY ( double [ ] yCuts , double mowerWidth ) { ",Arrays . sort ( yCuts ) ; double currentXCut = 0.0 ; double halfMower = mowerWidth / 2 ; for ( double cut : yCuts ) { if ( ( cut - halfMower ) <= currentXCut ) { currentXCut = ( cut + halfMower ) ; } } return ( currentXCut >= 100.0 ) ; }
Adds an object to the queue. <code> void queueObject ( T object ) { ,List < T > objects = Arrays . asList ( object ) ; queueObjects ( objects ) ; }
"Adds ""toAdd"" items which are not excluded. <code> void addAll ( Set < String > excluded , Set < String > result , Collection < String > toAdd ) { ",for ( String item : toAdd ) { for ( int suffix = 1 ; ; suffix ++ ) { String name = item ; if ( suffix > 1 ) { name += suffix ; } if ( ! excluded . contains ( name ) ) { result . add ( name ) ; break ; } } } }
Extracts the password from the Flex client credentials <code> String extractPassword ( Object credentials ) { ,String password = null ; if ( credentials instanceof String ) { password = ( String ) credentials ; } else if ( credentials instanceof Map ) { password = ( String ) ( ( Map ) credentials ) . get ( MessageIOConstants . SECURITY_CREDENTIALS ) ; } return password ; }
Sign the cookie given the string token as input. <code> String signCookie ( String str ) { ,"if ( str == null || str . isEmpty ( ) ) { throw new IllegalArgumentException ( ""NULL or empty string to sign"" ) ; } String signature = getSignature ( str ) ; if ( LOG . isDebugEnabled ( ) ) { LOG . debug ( ""Signature generated for "" + str + "" is "" + signature ) ; } return str + SIGNATURE + signature ; }"
Private helper method that computes the height and width of the piece. <code> void computeHeightAndWidth ( ) { ,"int xMax , yMax ; xMax = yMax = 0 ; for ( TPoint pt : body ) { if ( xMax < pt . x ) xMax = pt . x ; if ( yMax < pt . y ) yMax = pt . y ; } width = xMax + 1 ; height = yMax + 1 ; }"
"Store view hierarchy state into a Screen that will be pushed into the backstack of Flow <code> void storeViewState ( View view , S screen ) { ","if ( screen != null && screen instanceof TransitionScreen ) { SparseArray < Parcelable > state = new SparseArray < > ( ) ; view . saveHierarchyState ( state ) ; ( ( TransitionScreen ) screen ) . setViewState ( state ) ; Timber . i ( ""Storing view state %s"" , state ) ; } }"
"Announce a synonym type with the given conformance hints. <code> boolean announceSynonym ( LightweightTypeReference synonym , EnumSet < ConformanceHint > hints , Acceptor acceptor ) { ","if ( synonym . isUnknown ( ) ) { return true ; } return acceptor . accept ( synonym , hints ) ; }"
Tests whether an ADD_NODE event can be constructed properly. <code> void testAddNodeEvent ( ) { ,"SessionNode node = new SessionNode ( Type1 . class ) ; SessionEvent event = new SessionEvent ( session , node , SessionEvent . NODE_ADDED ) ; assertTrue ( node == event . getNode ( ) ) ; assertEquals ( SessionEvent . NODE_ADDED , event . getType ( ) ) ; }"
Tests in physical port criterion. <code> void matchInPhyPortTest ( ) { ,"Criterion criterion = Criteria . matchInPhyPort ( port ) ; ObjectNode result = criterionCodec . encode ( criterion , context ) ; assertThat ( result , matchesCriterion ( criterion ) ) ; }"
"Commercial builds should have the BUILD_TYPE set to commercial within the release file, found at the root of the JDK. <code> boolean isCommercialBuild ( ) { ","String buildType = getReleaseProperty ( ""BUILD_TYPE"" , ""notFound"" ) ; return buildType . equals ( ""commercial"" ) ; }"
Test to make sure constructor throws exception on bad inputs. <code> void testEmptyTagsConstructor ( ) { ,final Set < String > tags = new HashSet < > ( ) ; ClusterCriteria cc = new ClusterCriteria ( tags ) ; cc . getTags ( ) ; }
Gets the value of the parameterStyle property. <code> SoapBindingParameterStyle getParameterStyle ( ) { ,if ( parameterStyle == null ) { return SoapBindingParameterStyle . WRAPPED ; } else { return parameterStyle ; } }
Return a string representation of the char classes stored in this class. Enumerates the classes by index. <code> String toString ( ) { ,"StringBuffer result = new StringBuffer ( ""CharClasses:"" ) ; result . append ( Out . NL ) ; for ( int i = 0 ; i < classes . size ( ) ; i ++ ) result . append ( ""class "" + i + "":"" + Out . NL + classes . elementAt ( i ) + Out . NL ) ; return result . toString ( ) ; }"
"Sets a base form (lemma) that will be formatted, or synthesized, using the specified POS regular expressions. <code> void setLemmaString ( final String lemmaString ) { ",if ( ! StringTools . isEmpty ( lemmaString ) ) { lemma = lemmaString ; staticLemma = true ; postagRegexp = true ; if ( posTag != null ) { pPosRegexMatch = Pattern . compile ( posTag ) ; } } }
Sets the window title for the container that hosts this page to the given string. <code> void setWindowTitle ( String newTitle ) { ,windowTitle = newTitle ; if ( container != null ) { container . updateWindowTitle ( ) ; } }
"Converts an RGB object value to an Integer value, the Integer format is 0xRRGGBB. <code> int getRGBInt ( RGB rgb ) { ",if ( rgb == null ) { return - 1 ; } return ( ( rgb . red & 0xff ) << 16 ) | ( ( rgb . green & 0xff ) << 8 ) | ( rgb . blue & 0xff ) ; }
Convert all possible operators to banned <code> void convertNotMetadataOnly ( ) { ,possible . clear ( ) ; success . clear ( ) ; }
Creates a background thread that will call the launch notifier when the process terminates. <code> void startLaunchNotifier ( ) { ,if ( m_launchNotification == null ) throw new NullPointerException ( ) ; m_launchNotifierThread . setDaemon ( true ) ; m_launchNotifierThread . start ( ) ; }
"Takes in a list of Items (as movies) and ranks them using the recommender system. Note that it ranks the movies in the original ArrayList, so the old ratings are destroyed and a new ordering is imposed on movies. <code> void rankMovies ( int uid , ArrayList < Item > movies ) { ","for ( Item m : movies ) m . setRating ( recommend ( uid , Integer . parseInt ( m . getId ( ) ) , """" ) ) ; Collections . sort ( movies , new ItemComparator ( ) ) ; }"
"Returns the index of a letters in the array. If the array doesn't contain the letter, an exception will be thrown. <code> int getIndex ( char letter , char [ ] array ) { ",for ( int i = 0 ; i < array . length ; i ++ ) { if ( array [ i ] == letter ) { return i ; } } throw new CrypterException ( EX_STRING_INVALID_LETTER ) ; }
Returns whether the given String is the default toString() implementation of an Object. <code> boolean isDefaultToString ( String s ) { ,"if ( isEmpty ( s ) ) return false ; int at = s . indexOf ( ""@"" ) ; if ( at == - 1 ) return false ; String hash = s . substring ( at + 1 , s . length ( ) ) ; try { Integer . parseInt ( hash , 16 ) ; return true ; } catch ( NumberFormatException e ) { return false ; } }"
Find principals having specified permission. <code> List < PrincipalEntity > findByPermissionId ( Integer id ) { ,"TypedQuery < PrincipalEntity > query = entityManagerProvider . get ( ) . createNamedQuery ( ""principalByPrivilegeId"" , PrincipalEntity . class ) ; query . setParameter ( ""permission_id"" , id ) ; return daoUtils . selectList ( query ) ; }"
Is the matrix full rank? <code> boolean isFullRank ( ) { ,for ( int j = 0 ; j < n ; j ++ ) { if ( Rdiag [ j ] == 0 ) { return false ; } } return true ; }
Retrieve the initial known set of grammars. this method is called by a validator before the validation starts. the application can provide an initial set of grammars available to the current validation attempt. <code> Grammar [ ] retrieveInitialGrammarSet ( String type ) { ,"if ( logger . isDebugEnabled ( ) ) { logger . debug ( ""Retrieve initial grammarset ("" + type + "")."" ) ; } final Grammar [ ] grammars = pool . retrieveInitialGrammarSet ( type ) ; if ( logger . isDebugEnabled ( ) ) { logger . debug ( ""Found "" + grammars . length + "" grammars."" ) ; } return grammars ; }"
Return a Map-representation of the auth options <code> Map authMap ( ) { ,"HashMap map = new HashMap ( ) ; if ( full_name != null ) { map . put ( ""full_name"" , full_name ) ; } if ( authoritative_source != null ) { map . put ( ""authoritative_source"" , authoritative_source ) ; } if ( username != null ) { map . put ( ""username"" , username ) ; } return ( Map ) map ; }"
Simple method to determine the growth rate <code> void determineFollowerGrowthRate ( ) { ,double growthRate = ( double ) ( _followersNextMonth - _followersCurrent ) / _followersCurrent ; _growthRate = growthRate ; }
"Static method that returns topic name for given topic address, i.e. it removes subtopic name and separated of subtopic. name. <code> String getTopicName ( String topicAddress ) { ",int idx = topicAddress . indexOf ( SUBCHANNEL_SEPARATOR ) ; if ( idx < 0 ) { return topicAddress ; } return topicAddress . substring ( idx + 1 ) ; }
"Returns, if exists, a view of the type typeView. <code> View getRecycledView ( int typeView ) { ",try { return views [ typeView ] . pop ( ) ; } catch ( java . util . EmptyStackException e ) { return null ; } }
Returns the current concurrency level. See 'setThreadConcurrency' for details on the meaning of concurrency <code> int getThreadConcurrency ( ) { ,checkLibrary ( ) ; return getThreadConcurrencyN ( ) ; }
Returns an ImageUploader instance associated with the specified media provider <code> ImageUpload getInstance ( MediaProvider mediaProvider ) { ,"Authorization authorization = AuthorizationFactory . getInstance ( conf ) ; return getInstance ( mediaProvider , authorization ) ; }"
Called when a node is determined to be up. <code> void onUp ( Host host ) { ,"String key = getKey ( host ) ; upHosts . put ( key , host ) ; downHosts . remove ( key ) ; }"
Extracts the recipient from the given string using the sender regex. <code> String extractRecipient ( String s ) { ,if ( extractRecipientPattern == null ) { extractRecipientPattern = Pattern . compile ( recipientRegex ) ; } Matcher m = extractRecipientPattern . matcher ( s ) ; if ( m . find ( ) ) { return m . group ( 1 ) ; } return null ; }
The current priority of the thread associated with this future. <code> int getPriority ( ) { ,if ( nativeThread == null ) { return 1 ; } return nativeThread . getPriority ( ) ; }
"called when live position is on, swapping given players position <code> void positionUpdate2 ( ArrayList < Pair < utils . Position . Player , utils . Position . Player >> movingList ) { ","Player player ; for ( Pair < Position . Player , Position . Player > pair : movingList ) { player = ( Player ) getZone ( pair . getFirst ( ) . getRelativePosition ( getMe ( ) . getGlobalPosition ( ) ) ) ; if ( player != null ) { game . positionUpdate ( player , pair . getSecond ( ) ) ; } } }"
"Attemps to login using the supplied params. <code> LoggedIn getSuccessfulLogin ( String username , String password ) { ","Authentication auth = Authentication . getInstance ( ) ; LoggedIn result = auth . login ( username , password ) ; return result ; }"
Handles an action without a key. <code> void handleActionWithoutKey ( String action ) { ,"engineConfigMap . setConfigAction ( ConfigActionType . getActionType ( action ) ) ; if ( getConfigAction ( ) == null ) { throw new IllegalArgumentException ( ""Action verb must come first, and '"" + action + ""' is not an action. Please tell me what to do: list? get? set? get-all?"" ) ; } }"
handle 'add prefix' link. Save {newPrefixName}={newPrefixValue} into the commandPrefix.properties file. <code> void addPrefix ( final ActionEvent event ) { ,"cfg ( ) . addCommandPrefix ( newPrefixName , newPrefixValue ) ; resetCfg ( ) ; }"
Set a new radius <code> void setRadius ( double newRadius ) { ,if ( newRadius >= 0 ) radius = newRadius ; else throw new InvalidRadiusException ( newRadius ) ; }
Callback to indicate that parsing is done for this part (no more update events for this part) <code> void doneParsing ( ) { ,parsed = true ; dataHead . doneParsing ( ) ; }
"Add a crafting recipe, and save the recipes to the config. <code> void addRecipe ( CraftingRecipe r ) { ",recipes . add ( r ) ; r . register ( ) ; save ( ) ; }
Returns the first available IP address associated with the provided network interface <code> String getDefaultIP ( String strInterface ) { ,String [ ] ips = getIPs ( strInterface ) ; return ips [ 0 ] ; }
"Initialize Attributes (User, Resource and ActionType) IN practical scenario, it will end up calling the db in service chain <code> void initializeAttributes ( AccessControlBuilder builder ) { ",user = userDaoInstance . getUser ( builder . m_userId ) ; requestedResource = resourceDaoInstance . getResource ( builder . m_resourceId ) ; requestedAction = ActionType . fromValue ( builder . m_actionTypeValue ) ; }
Informs this fxom document that its scene graph is hold by the specified scene graph holder. <code> void beginHoldingSceneGraph ( SceneGraphHolder holder ) { ,assert holder != null ; assert sceneGraphHolder == null ; sceneGraphHolder = holder ; }
Tests service invocation without BA context but with enabled WSTXFeature and with disabled WSTX handler. No coordination calls are expected. <code> void testNoActivityWithEnabledFeature ( ) { ,TestServiceBA client = getBAClientWithFeature ( true ) ; client . increment ( ) ; assertInvocations ( client . getBusinessActivityInvocations ( ) ) ; }
Returns the top-level state of rule-result's comparison. <code> String overallComparison ( ) { ,"List < RuleResultComparator > difference = getData ( true ) ; if ( difference . isEmpty ( ) ) { return ""checked"" ; } for ( RuleResultComparator c : difference ) { if ( c . isTheSecondWorse ( ) ) { return ""error"" ; } } return ""alert"" ; }"
Delete record from the Transaction Store. <code> void deleteRecord ( int recordId ) { ,checkOpen ( ) ; store . deleteRecord ( recordId ) ; }
"helper method to build properties <code> Properties getProperties ( String driver , String user , String pwd , String url ) { ","Properties props = new Properties ( ) ; props . put ( DRIVER , driver ) ; props . put ( USER , user ) ; props . put ( PASSWORD , pwd ) ; props . put ( URL , url ) ; return props ; }"
"Directly adds a new TemplateModel as part of the ""Global"" Models in OutputDB. <code> void addGlobalModel ( String name , TemplateModel model ) { ","TemplateModel old = globalModels . put ( name , model ) ; if ( old != null ) { throw new UnsupportedOperationException ( ""Cannot have two Global Output Models using the same name: "" + name ) ; } }"
"get reviews for the book <code> Page < ReviewBook > getBookReviewByBook ( String name , int pageno , int size ) { ","Pageable page = Utility . buildPageRequest ( size , pageno ) ; List < ReviewBook > list = reviewBookRepository . findByBook ( getBookByName ( name ) ) ; return new PageImpl < > ( list , page , size ) ; }"
Gets a new validation register. <code> Register getValidation ( ) { ,Register reg = makeNewReg ( ) ; reg . setValidation ( ) ; return reg ; }
Return a handle to JAXB unmarshaller for a particular data type. JAXBContext itself is thread safe. <code> Marshaller createMarshaller ( Class type ) { ,JAXBContext context = getJaxbContext ( type ) ; return context . createMarshaller ( ) ; }
Tests if the specified object is a key in this hashtable. <code> boolean containsKey ( int key ) { ,final Entry [ ] tab = table ; final int hash = key ; final int index = ( hash & 0x7FFFFFFF ) % tab . length ; for ( Entry e = tab [ index ] ; e != null ; e = e . next ) { if ( e . hash == hash ) { return true ; } } return false ; }
"Add a MD-sequence to this structure <code> void addSequence ( MDSequence sequence , int k ) { ",while ( levels . size ( ) <= k ) { levels . add ( new ArrayList < MDSequence > ( ) ) ; } levels . get ( k ) . add ( sequence ) ; sequencesCount ++ ; }
"Create a RuntimeException for unexpected instance returned from JNDI lookup. <code> void handleUnexpectedInstance ( String name , Object value ) { ","RuntimeException e = new JDOFatalUserException ( I18NHelper . getMessage ( messages , ""ejb.jndi.unexpectedinstance"" , name , value . getClass ( ) . getName ( ) ) ) ; logger . severe ( e . toString ( ) ) ; throw e ; }"
Add a new page set <code> void addPageSet ( @ Nonnull final PLPageSet aPageSet ) { ,"if ( aPageSet == null ) throw new NullPointerException ( ""PageSet"" ) ; m_aPageSets . add ( aPageSet ) ; }"
Returns a string representation of this object; useful for testing and debugging. <code> String toString ( ) { ,"StringBuilder sb = new StringBuilder ( ) ; sb . append ( ""{"" ) ; if ( getCommands ( ) != null ) sb . append ( ""Commands: "" + getCommands ( ) ) ; sb . append ( ""}"" ) ; return sb . toString ( ) ; }"
"Adds a word and the token to be returned if it is detected. <code> void addWord ( String word , IToken token ) { ","Assert . isNotNull ( word ) ; Assert . isNotNull ( token ) ; if ( fIgnoreCase ) { word = word . toLowerCase ( ) ; } fWords . put ( word , token ) ; }"
Creates the Order object with random values. <code> Order createOrder ( ) { ,Order order = new Order ( ) ; Random random = new Random ( ) ; order . setOrderId ( random . nextInt ( 1000 ) ) ; order . setQuantity ( random . nextInt ( 100 ) ) ; order . setItemPrice ( random . nextInt ( 30 ) ) ; return order ; }
fetch a participant completion participant service unique to the current thread <code> BusinessAgreementWithParticipantCompletionParticipantService getParticipantCompletionParticipantService ( ) { ,if ( participantCompletionParticipantService . get ( ) == null ) { participantCompletionParticipantService . set ( PrivilegedServiceFactory . getInstance ( BusinessAgreementWithParticipantCompletionParticipantService . class ) . getService ( ) ) ; } return participantCompletionParticipantService . get ( ) ; }
"This method is called whenever a call went through successfully, thus ""decreasing"" the potential wait level <code> void reportSuccess ( ) { ",if ( queue == null ) { return ; } final int oldDelay = getDelayInMillis ( ) ; numErrors = 0 ; if ( getDelayInMillis ( ) != oldDelay ) { rebuildQueue ( true ) ; } }
"Attempt to parse the error code from the response headers. Returns null if information is not present in the header. <code> String parseErrorCodeFromHeader ( Map < String , String > httpHeaders ) { ","String headerValue = httpHeaders . get ( X_AMZN_ERROR_TYPE ) ; if ( headerValue != null ) { int separator = headerValue . indexOf ( ':' ) ; if ( separator != - 1 ) { headerValue = headerValue . substring ( 0 , separator ) ; } } return headerValue ; }"
Return a string representation of the event <code> String toString ( ) { ,"String ret = ""["" ; if ( eventType == Event . ARRIVAL ) { ret += ""Arrival of "" ; } else { ret += ""Departure of "" ; } ret += customer . getName ( ) ; ret += "" at time "" + getTime ( ) + ""]"" ; return ret ; }"
"Returns the content of the specified file as a string using the specified charset. <code> String getFileContentAsString ( File file , String charset ) { ","if ( file == null ) { throw new IllegalArgumentException ( ""No null file accepted"" ) ; } FileInputStream is = PrivilegedFileHelper . fileInputStream ( file ) ; return new String ( getStreamContentAsBytes ( is ) , charset ) ; }"
Translates repository revision number into file version. <code> int getFileVersion ( String revision ) { ,if ( fileVersions . containsKey ( revision ) ) { return fileVersions . get ( revision ) ; } else { return 0 ; } }
"Get a specific cell from a row. If the cell doesn't exist, then create it. <code> Cell getCell ( Row row , int columnIndex ) { ",Cell cell = row . getCell ( columnIndex ) ; if ( cell == null ) { cell = row . createCell ( columnIndex ) ; } return cell ; }
"Returns whether the resource has a default version, with no qualifier. <code> boolean hasDefault ( ) { ",for ( ResourceFile file : mFiles ) { if ( file . getFolder ( ) . getConfiguration ( ) . isDefault ( ) ) { return true ; } } return ( mFiles . size ( ) == 0 ) ; }
Sets the stream type where this ringtone will be played. <code> void setStreamType ( int streamType ) { ,"mStreamType = streamType ; if ( mAudio != null ) { try { openMediaPlayer ( ) ; } catch ( IOException e ) { Log . w ( TAG , ""Couldn't set the stream type"" , e ) ; } } }"
Return a String Id for a numericId of a threadpool managed by the threadpool manager <code> String getThreadPoolStringId ( int numericIdForThreadpool ) { ,String id = ( String ) indexToIdTable . get ( Integer . valueOf ( numericIdForThreadpool ) ) ; return ( ( id == null ) ? defaultID : id ) ; }
"Send an OK entity <code> void sendOk ( Request req , HttpEntity entity ) { ",HttpResponse response = req . getHttpResponse ( ) ; response . setStatusCode ( HttpStatus . SC_OK ) ; response . setEntity ( entity ) ; }
Replace the config items in this group by the group in the specified parameter. <code> List < ConfigItem > replaceConfig ( ConfigGroup config ) { ,List < ConfigItem > list = new ArrayList < ConfigItem > ( ) ; lock . lock ( ) ; try { for ( ConfigItem item : config . groupData . values ( ) ) { if ( updateConfigItem ( item ) ) { list . add ( item ) ; } } } finally { lock . unlock ( ) ; } return list ; }
"Compare two IStatus. The more severe is returned: An error is more severe than a warning, and a warning is more severe than ok. <code> IStatus getMoreSevere ( IStatus s1 , IStatus s2 ) { ",if ( s1 . getSeverity ( ) > s2 . getSeverity ( ) ) { return s1 ; } return s2 ; }
Ensure the current Locale key exists in the supported local list as listed in locale.support <code> boolean validateLocaleKey ( ) { ,boolean result = false ; for ( int i = 0 ; i < supportedLocales . length ; i ++ ) { if ( localeKey . equals ( supportedLocales [ i ] . toLowerCase ( ) ) ) { result = true ; break ; } } return result ; }
Turn a list into a readable and printable string <code> String printList ( List < Integer > lst ) { ,"String res = """" ; for ( int i : lst ) { res += i + ""-"" ; } return res . substring ( 0 , res . length ( ) - 1 ) ; }"
Returns the ID that has been allocated for extension or -1 if no extension exists. <code> byte getExtensionMapping ( RTPExtension extension ) { ,Byte extID = extMap . get ( extension ) ; if ( extID == null ) { return - 1 ; } return extID ; }
create a path from an array of components <code> Path pathFromComponents ( String [ ] components ) { ,if ( null == components || components . length == 0 ) { return null ; } return new PathImpl ( pathStringFromComponents ( components ) ) ; }
Trims the capacity of this instance to be the list's current size. <code> void trimToSize ( ) { ,"if ( data . length > size + 1 ) { WakeupOnElapsedTime oldData [ ] = data ; data = new WakeupOnElapsedTime [ size + 1 ] ; System . arraycopy ( oldData , 0 , data , 0 , data . length ) ; } }"
Returns the list of AssociationPredicates within the given coding scheme <code> List < AssociationPredicate > resolveAssociationPredicates ( CodingScheme scheme ) { ,List < AssociationPredicate > aps = new ArrayList < AssociationPredicate > ( ) ; for ( Relations rs : scheme . getRelations ( ) ) { for ( AssociationPredicate ap : rs . getAssociationPredicate ( ) ) { aps . add ( ap ) ; } } return aps ; }
"Write the rid into a byte array at offset <code> void writeToByteArray ( byte [ ] ary , int offset ) { ","Convert . setIntValue ( slotNo , offset , ary ) ; Convert . setIntValue ( pageNo . pid , offset + 4 , ary ) ; }"
One or more volumes. <code> java . util . List < ImportInstanceVolumeDetailItem > getVolumes ( ) { ,if ( volumes == null ) { volumes = new com . amazonaws . internal . SdkInternalList < ImportInstanceVolumeDetailItem > ( ) ; } return volumes ; }
Gets the value of the masked property. <code> Boolean getMasked ( ) { ,if ( masked == null ) { return false ; } else { return masked ; } }
Called immediately before checkpointing occurs. <code> void preCheckpointStatistics ( final EvolutionState state ) { ,for ( int x = 0 ; x < children . length ; x ++ ) children [ x ] . preCheckpointStatistics ( state ) ; }
Human readable title describing the stored query. <code> String getTitle ( ) { ,if ( ! queryDef . getTitle ( ) . isEmpty ( ) ) { return queryDef . getTitle ( ) . get ( 0 ) . getValue ( ) ; } return null ; }
"Returns the comma-separated list of clientIds which are candidates to be real components. <code> String getFocusClientIds ( FacesContext context , AbstractFocus component ) { ","Map < String , String > requestParameterMap = context . getExternalContext ( ) . getRequestParameterMap ( ) ; String inputFocus = requestParameterMap . get ( ""org.richfaces.focus"" ) ; return inputFocus ; }"
Returns a new String object representing this ASN.1 object's value. <code> String toString ( ) { ,"if ( asn1any_ber == null ) { return ""<empty ASN.1 ANY>"" ; } return asn1any_ber . toString ( ) ; }"
This will set the background. <code> void setBackground ( COSArray newBackground ) { ,"background = newBackground ; dictionary . setItem ( COSName . BACKGROUND , newBackground ) ; }"
"[zk: localhost:2181(CONNECTED) 56] get /brokers/ids/0 { ""host"":""localhost"", ""jmx_port"":9999, ""port"":9092, ""version"":1 } <code> String getBrokerHost ( byte [ ] contents ) { ","try { JSONObject json = JSON . parseObject ( new String ( contents , ""UTF-8"" ) ) ; String host = json . getString ( ""host"" ) ; Integer port = json . getInteger ( ""port"" ) ; return host + "":"" + port ; } catch ( Exception e ) { throw new RuntimeException ( e ) ; } }"
Returns the data type name of the column specified by columnIndex. <code> String getColumnTypeName ( int columnIndex ) { ,validateColumnIndex ( columnIndex ) ; return RowMetaDataType . getDataTypeName ( getColumnType ( columnIndex ) ) ; }
Set reserved=0 for all products in DB <code> void unreserveProducts ( ) { ,for ( Product product : getProducts ( ) ) { product . setReserved ( 0L ) ; em . merge ( product ) ; } }
Called to process touch screen events. <code> void dispatchTouchEvent ( final MotionEvent event ) { ,"checkNotNull ( event , ""event == null"" ) ; switch ( event . getAction ( ) ) { case MotionEvent . ACTION_DOWN : onActionDown ( event ) ; break ; case MotionEvent . ACTION_UP : onActionUp ( event ) ; break ; case MotionEvent . ACTION_MOVE : onActionMove ( event ) ; break ; default : break ; } }"
Reset the bit buffer <code> void initBits ( ) { ,bitBuf = 0 ; bitPos = 0 ; }
"An efficient copy between two channels with a fixed-size buffer. <code> void fastCopy ( final ReadableByteChannel src , final WritableByteChannel dest ) { ",final ByteBuffer buffer = ByteBuffer . allocateDirect ( 16 * 1024 ) ; while ( src . read ( buffer ) != - 1 ) { buffer . flip ( ) ; dest . write ( buffer ) ; buffer . compact ( ) ; } buffer . flip ( ) ; while ( buffer . hasRemaining ( ) ) { dest . write ( buffer ) ; } }
Gets all values for the specified attribute. <code> List < String > getAttributeValues ( String attr ) { ,AttributeValues list = attributes . get ( attr ) ; if ( list != null ) return list . getAll ( ) ; else return Collections . emptyList ( ) ; }
"Given a map that maps to comparable objects, sets a key to a given value iff the current value is null or smaller than the given value <code> void setKeyValueIfGreaterThanCurrent ( Map < K , V > map , K key , V value ) { ","V coll = map . get ( key ) ; if ( coll == null ) { map . put ( key , value ) ; return ; } if ( coll . compareTo ( value ) < 0 ) map . put ( key , value ) ; }"
"Register a new Vreng object for this Vreng client. The application it is working with is also stored. <code> void addObject ( IVrengObject obj , IVrengApp a ) { ","objects . put ( obj . getId ( ) , new VrengHolder ( obj , a ) ) ; a . addClient ( obj ) ; }"
Returns a string representation of this object; useful for testing and debugging. <code> String toString ( ) { ,"StringBuilder sb = new StringBuilder ( ) ; sb . append ( ""{"" ) ; if ( getFindings ( ) != null ) sb . append ( ""Findings: "" + getFindings ( ) + "","" ) ; if ( getFailedItems ( ) != null ) sb . append ( ""FailedItems: "" + getFailedItems ( ) ) ; sb . append ( ""}"" ) ; return sb . toString ( ) ; }"
Formats a list of strings as an indexed list. <code> String asIndexedList ( List < String > listItems ) { ,"final StringBuilder formatted = new StringBuilder ( ) ; int displayIndex = 0 + DISPLAYED_INDEX_OFFSET ; for ( String listItem : listItems ) { formatted . append ( getIndexedListItem ( displayIndex , listItem ) ) . append ( "" "" ) ; displayIndex ++ ; } return formatted . toString ( ) ; }"
validate read permission for denied for junior analyst on customer:purchase <code> void testValidateSelectPrivilegesRejectionForUsers ( ) { ,"inputTabHierarcyList . add ( buildObjectHierarchy ( SERVER1 , CUSTOMER_DB , PURCHASES_TAB ) ) ; testAuth . authorize ( HiveOperation . QUERY , queryPrivileges , JUNIOR_ANALYST_SUBJECT , inputTabHierarcyList , outputTabHierarcyList ) ; }"
This method is intended for storing labels retrieved from external sources. <code> void storeLabel ( String label ) { ,if ( labels == null ) labels = new ArrayList < > ( ) ; if ( ! labels . contains ( label ) ) labels . add ( label ) ; }
"The same as isToplevelWindow(window), but doesn't treat XEmbeddedFramePeer as toplevel. <code> boolean isTrueToplevelWindow ( long window ) { ",if ( XToolkit . windowToXWindow ( window ) instanceof XEmbeddedFramePeer ) { return false ; } return isToplevelWindow ( window ) ; }
Return an element representing the given method. <code> Element getElement ( MethodElement element ) { ,"Element result = compilerToModelElement . get ( element ) ; if ( result == null ) { result = getElement0 ( element ) ; if ( result != null ) { compilerToModelElement . put ( element , result ) ; } } return result ; }"
Prints display manufacturer and display brightness. <code> String toString ( ) { ,"String s = ""Display manufacturer: "" + manufacturer + "" "" ; if ( isOn == true ) { s += ""Brightness: "" + brightness + "" "" ; } else { s += ""Off"" ; } return s ; }"
Some basic checks for the getColumnCount() method. <code> void testColumnCount ( ) { ,"DefaultKeyedValues2D d = new DefaultKeyedValues2D ( ) ; assertEquals ( 0 , d . getColumnCount ( ) ) ; d . addValue ( new Double ( 1.0 ) , ""R1"" , ""C1"" ) ; assertEquals ( 1 , d . getColumnCount ( ) ) ; d . addValue ( new Double ( 2.0 ) , ""R1"" , ""C2"" ) ; assertEquals ( 2 , d . getColumnCount ( ) ) ; }"
Checks the status of executor service <code> boolean isHealthy ( ) { ,if ( null == queryResultPurgerExecutor || queryResultPurgerExecutor . isShutdown ( ) || queryResultPurgerExecutor . isTerminated ( ) ) { return false ; } return true ; }
Register a listener that will be notified when head tracking changes occur. <code> void addOculusMobileSDKHeadTrackingListener ( OculusMobileSDKHeadTrackingListener listener ) { ,"if ( listener == null ) throw new NullPointerException ( ""The given OculusMobileSDKHeadTrackingListener cannot be null."" ) ; if ( ! oculusMobileSDKHeadTrackingListeners . contains ( listener ) ) { oculusMobileSDKHeadTrackingListeners . add ( listener ) ; } }"
"Sets the data buffer for this datagram packet. <code> void setData ( byte [ ] buf , int anOffset , int aLength ) { ",if ( 0 > anOffset || anOffset > buf . length || 0 > aLength || aLength > buf . length - anOffset ) { throw new IllegalArgumentException ( ) ; } data = buf ; offset = anOffset ; length = aLength ; capacity = aLength ; }
Return the root IndexNode for the digit. If does not exists then it create one. <code> IndexNode addRoot ( ) { ,"IndexNode root = ( IndexNode ) value ; if ( root == null ) { value = root = createIndexNode ( unique , ( char ) - 1 ) ; } return root ; }"
"Return widths (in 1/1000ths of point size) of all characters <code> int [ ] getWidths ( String family , int style , int size ) { ","int i ; if ( width == null ) { width = new int [ 256 ] ; } setFont ( family , style , size ) ; for ( i = 0 ; i < 256 ; i ++ ) { width [ i ] = 1000 * internalCharWidth ( i ) ; } return width ; }"
"The file to be used as album art. There can be multiple artworks associated with an audio file, to a maximum of 20. Valid formats are .jpg and .png <code> java . util . List < Artwork > getArtwork ( ) { ",if ( artwork == null ) { artwork = new com . amazonaws . internal . SdkInternalList < Artwork > ( ) ; } return artwork ; }
Min and Max concatenated <code> double [ ] getMinmax ( ) { ,"if ( count == 0 ) return null ; double [ ] minmax = new double [ dim * 2 ] ; System . arraycopy ( min , 0 , minmax , 0 , dim ) ; System . arraycopy ( max , 0 , minmax , dim , dim ) ; return minmax ; }"
"Get a particular Result object which maps to the given correlator <code> Result getResultByCorrelator ( List < Result > results , String correlator ) { ",for ( Result result : results ) { if ( correlator . equals ( result . getCorrelator ( ) ) ) { return result ; } } return null ; }
"Returns an active session for the given workspace name in the named repository. <code> Session getSession ( HttpServletRequest request , String rawRepositoryName , String rawWorkspaceName ) { ","assert request != null ; if ( ACTIVE_SESSION . get ( ) == null ) { Session session = RepositoryManager . getSession ( request , repositoryNameFor ( rawRepositoryName ) , workspaceNameFor ( rawWorkspaceName ) ) ; ACTIVE_SESSION . set ( session ) ; } return ACTIVE_SESSION . get ( ) ; }"
"Get stored session data <code> HashMap < String , String > getUserDetails ( ) { ","HashMap < String , String > user = new HashMap < String , String > ( ) ; user . put ( KEY_NAME , pref . getString ( KEY_NAME , null ) ) ; user . put ( KEY_EMAIL , pref . getString ( KEY_EMAIL , null ) ) ; return user ; }"
Returns true if a word is a metric <code> Float toFloat ( String str ) { ,try { return Float . parseFloat ( str ) ; } catch ( NumberFormatException nfe ) { return null ; } }
"Retrieves the service of the given class from the bundle context. This will retrieve the service with highest priority if there are multiple instances of the service. <code> T findService ( BundleContext bundleContext , String className ) { ",ServiceReference < T > ref = ( ServiceReference < T > ) bundleContext . getServiceReference ( className ) ; return ref == null ? null : bundleContext . getService ( ref ) ; }
"This method creates a bar chart of the hours spent this day doing homework. It first calls the createDataSet method and then calls the BarChart_AWT class to create the chart. <code> void createDayChart ( String [ ] classes , double [ ] hours ) { ","CategoryDataset dataset = createDataSet ( classes , hours ) ; BarChart_AWT chart = new BarChart_AWT ( ""Today's Homework Chart"" , ""Hours of Homework per Class"" , dataset , ""Hours"" , ""Class"" ) ; chart . pack ( ) ; RefineryUtilities . centerFrameOnScreen ( chart ) ; chart . setVisible ( true ) ; }"
"Serialize an instance, restore it, and check for equality. <code> void testSerialization ( ) { ","GridArrangement f1 = new GridArrangement ( 33 , 44 ) ; GridArrangement f2 = ( GridArrangement ) TestUtilities . serialised ( f1 ) ; assertEquals ( f1 , f2 ) ; }"
Compare numbers of result given by the obda file and the r2rml file over an npd query <code> void testComparesNpdQuery ( ) { ,"int obdaResult = npdQuery ( reasonerOBDA . getConnection ( ) ) ; int r2rmlResult = npdQuery ( reasonerR2rml . getConnection ( ) ) ; assertEquals ( obdaResult , r2rmlResult ) ; }"
Strip a given value of its last dot (.) <code> String processMetadataValue ( String value ) { ,"String ret = value ; ret = StringUtils . strip ( ret ) ; ret = StringUtils . stripEnd ( ret , ""."" ) ; return ret ; }"
"Sets new coordinates for our guy <code> void setCoords ( int ex , int why ) { ","x = ex ; y = why ; collisionBox = new Rectangle ( x + COLLISION_OFFSET , y , width - COLLISION_OFFSET * 2 + xVel , height + yVel ) ; }"
Returns a list of all open class tags <code> Set < String > getOpenTags ( ) { ,if ( openTags == null ) { HashSet < String > open = new HashSet < String > ( ) ; for ( String tag : index ) { if ( ! closed . contains ( tag ) ) { open . add ( tag ) ; } } openTags = open ; } return openTags ; }
"Registers a callback, to be triggered when the system UI visibility changes. <code> void setOnVisibilityChangeListener ( OnVisibilityChangeListener listener ) { ",if ( listener == null ) { listener = sDummyListener ; } mOnVisibilityChangeListener = listener ; }
Adds and binds all shortcuts marked for addition. <code> void finalizeAdditions ( boolean addHomeScreenShortcuts ) { ,"finalizeWorkFolder ( ) ; if ( addHomeScreenShortcuts && ! mHomescreenApps . isEmpty ( ) ) { mModel . addAndBindAddedWorkspaceItems ( mContext , mHomescreenApps ) ; } }"
"Get icon/disabledicon which has previously been registered for this class object. <code> ImageIcon getIcon ( Class < ? > elementClass , boolean enabled ) { ","String key = elementClass . getName ( ) ; ImageIcon icon = ( enabled ? ICON_MAP . get ( key ) : DISABLED_ICON_MAP . get ( key ) ) ; if ( icon != null ) { return icon ; } if ( elementClass . getSuperclass ( ) != null ) { return getIcon ( elementClass . getSuperclass ( ) , enabled ) ; } return null ; }"
Displays the result of a command execution to the user. <code> void displayResult ( CommandResult result ) { ,clearOutputConsole ( ) ; final Optional < List < ? extends ReadOnlyPerson >> resultPersons = result . getRelevantPersons ( ) ; if ( resultPersons . isPresent ( ) ) { display ( resultPersons . get ( ) ) ; } display ( result . feedbackToUser ) ; }
sendToAll - sends the message to every user. <code> void sendToAllExcptHost ( Message msg ) { ,boolean first = true ; for ( Connection conn : connections ) { if ( first ) { first = false ; continue ; } conn . send ( msg ) ; } }
"Sends the given message to the vertex identified by the given key. If the target vertex does not exist, the next superstep will cause an exception due to a non-deliverable message. <code> void sendMessageTo ( K target , Message m ) { ",outMsg . f0 = target ; outMsg . f1 = m ; out . collect ( Either . Right ( outMsg ) ) ; }
"Saves the counter value in the preference storage. If value is negative, then the value will be removed from the preferences. <code> void saveCounterToPreference ( Context context , int value ) { ","SharedPreferences pref = PreferenceManager . getDefaultSharedPreferences ( context ) ; if ( value < 0 ) { pref . edit ( ) . remove ( PREF_KEY_COUNTER ) . apply ( ) ; } else { pref . edit ( ) . putInt ( PREF_KEY_COUNTER , value ) . apply ( ) ; } }"
Returns a string representation of the change call. <code> String getChangeString ( ) { ,"switch ( change . toShort ( ) ) { case COMP_INCREASE_CALL : return ""I"" ; case COMP_DECREASE_CALL : return ""D"" ; case COMP_MOD_INCREASE_CALL : return ""MI"" ; case COMP_MOD_DECREASE_CALL : return ""MD"" ; case COMP_NO_CHANGE_CALL : return ""NC"" ; case COMP_NO_CALL : return ""No Call"" ; default : return """" ; } }"
"Gets units, user want <code> Unit [ ] getUnits ( UnitType unitType ) { ","if ( unitType . name ( ) . equals ( ""Length"" ) ) return Length . values ( ) ; else if ( unitType . equals ( UnitType . Weight ) ) return Weight . values ( ) ; else if ( unitType . equals ( UnitType . Area ) ) return Area . values ( ) ; else if ( unitType . equals ( UnitType . Time ) ) return Time . values ( ) ; else return null ; }"
"Get all descendant roles, the order is randomly <code> List < String > getDescendants ( String roleName ) { ","checkRole ( roleName ) ; Set < String > descendants = new HashSet < String > ( ) ; fillDescendents ( getChildren ( roleName ) , descendants ) ; List < String > result = new ArrayList < String > ( ) ; result . addAll ( descendants ) ; return result ; }"
"Formats a given time using the DateFormat.MEDIUM. In the 'en' locale, this should result in a time formatted like this: 4:59:23 PM. The seconds are necessary when displaying time in the conversation scroller. <code> String formatTimeLong ( Date time ) { ","DateFormat formatter = DateFormat . getTimeInstance ( DateFormat . MEDIUM , JiveGlobals . getLocale ( ) ) ; formatter . setTimeZone ( JiveGlobals . getTimeZone ( ) ) ; return formatter . format ( time ) ; }"
gets the nonce url Get a Cryptographic Key you can use basic or oauth in the path of the api url <code> String getNonceUrl ( ) { ,"Configuration config = Configuration . getInstance ( null ) ; StringBuilder builder = new StringBuilder ( ) ; builder . append ( config . getValue ( Configuration . BASEURL ) ) ; builder . append ( ""/files/basic/api/nonce"" ) ; return builder . toString ( ) ; }"
Build a string representing this array. <code> String toString ( ) { ,"String result = "" "" ; for ( int i = 0 ; i < m_Length ; i ++ ) { result += ""["" + m_Data [ i ] + ""]"" ; } result += "" "" ; return result ; }"
Set a custom value in the 'group.properties': section. <code> void testGroupWithCustomValue ( ) { ,"GpContext context = GpContext . getContextForUser ( ""Broadie C"" ) ; doTest ( context , ""BROADGROUP_VALUE"" ) ; }"
"Constructs a new |InterfaceRequest| for the interface. This method returns a Pair where the first element is a proxy, and the second element is the request. The proxy can be used immediately. <code> Pair < P , InterfaceRequest < I >> getInterfaceRequest ( Core core ) { ","Pair < MessagePipeHandle , MessagePipeHandle > handles = core . createMessagePipe ( null ) ; P proxy = attachProxy ( handles . first , 0 ) ; return Pair . create ( proxy , new InterfaceRequest < I > ( handles . second ) ) ; }"
"Retrieves the current locale from the given request, using the LocaleResolver bound to the request by the DispatcherServlet (if available), falling back to the request's accept-header Locale. <code> Locale getLocale ( HttpServletRequest request ) { ",LocaleResolver localeResolver = getLocaleResolver ( request ) ; if ( localeResolver != null ) { return localeResolver . resolveLocale ( request ) ; } else { return request . getLocale ( ) ; } }
Processes user input. Reads line from console and does the action on a playing field according to input string. <code> void processInput ( ) { ,try { handleInput ( readLine ( ) ) ; } catch ( WrongFormatException e ) { e . printStackTrace ( ) ; } }
Initializes this factory with the given concrete factory. <code> void initializeFactory ( Factory f ) { ,"if ( f == null ) { throw new NullPointerException ( ) ; } synchronized ( MemorySegmentFactory . class ) { if ( factory == null ) { factory = f ; } else { throw new IllegalStateException ( ""Factory has already been initialized"" ) ; } } }"
delete by primary key <code> String deleteSql ( final PK id ) { ,"return new SQL ( ) { { DELETE_FROM ( getTableName ( ) ) ; WHERE ( getPrimaryKey ( ) + "" = #{id}"" ) ; } } . toString ( ) ; }"
Every fields needs to be delimited by complex field characters. This method adds the delimiter that precedes the actual field to the given paragraph. <code> void addFieldBegin ( P paragraph ) { ,R run = factory . createR ( ) ; FldChar fldchar = factory . createFldChar ( ) ; fldchar . setFldCharType ( STFldCharType . BEGIN ) ; run . getContent ( ) . add ( fldchar ) ; paragraph . getContent ( ) . add ( run ) ; }
Returns a copy of the initialized translation rules. <code> String [ ] getTranslations ( ) { ,"String [ ] copy = new String [ m_translations . length ] ; System . arraycopy ( m_translations , 0 , copy , 0 , m_translations . length ) ; return copy ; }"
"Serves single range to the output stream. <code> void serveMultiRangeStream ( InputStream inputStream , OutputStream outputStream , Range range ) { ","inputStream . mark ( 0 ) ; doServeRangeStream ( inputStream , outputStream , range ) ; }"
"Start processing a field. This can be followed by a number of calls to addTerm, and a final call to closeField to indicate the end of processing of this field. If a field was previously open, it is closed automatically. <code> void openField ( String field ) { ","FieldInfo fieldInfo = fieldInfos . fieldInfo ( field ) ; openField ( fieldInfo . number , fieldInfo . storePositionWithTermVector , fieldInfo . storeOffsetWithTermVector ) ; }"
"Use annotation or method naming convention: contributeApplicationDefaults <code> void setupEnvironment ( MappedConfiguration < String , Object > configuration ) { ","configuration . add ( SymbolConstants . JAVASCRIPT_INFRASTRUCTURE_PROVIDER , ""jquery"" ) ; configuration . add ( SymbolConstants . MINIFICATION_ENABLED , true ) ; }"
Returns whether the input was recognized as a number. <code> boolean isNum ( int idx ) { ,if ( num_automata [ idx ] [ 0 ] == 1 ) { return true ; } else { return false ; } }
"Serialize an instance, restore it, and check for equality. <code> void testSerialization ( ) { ","DefaultIntervalXYDataset d1 = new DefaultIntervalXYDataset ( ) ; DefaultIntervalXYDataset d2 = ( DefaultIntervalXYDataset ) TestUtilities . serialised ( d1 ) ; assertEquals ( d1 , d2 ) ; d1 = createSampleDataset1 ( ) ; d2 = ( DefaultIntervalXYDataset ) TestUtilities . serialised ( d1 ) ; assertEquals ( d1 , d2 ) ; }"
"Gets the instruction prefix required, if any, to use in a high register transformed version of this instance. <code> DalvInsn hrPrefix ( ) { ","RegisterSpecList regs = registers ; int sz = regs . size ( ) ; if ( hasResult ( ) ) { if ( sz == 1 ) { return null ; } regs = regs . withoutFirst ( ) ; } else if ( sz == 0 ) { return null ; } return new HighRegisterPrefix ( position , regs ) ; }"
toDto - covert Stock to Stock DTO <code> StockDto toDto ( StockInterface inStock ) { ,"if ( inStock == null ) { return null ; } Stock stock = ( Stock ) inStock ; return new StockDto ( stock . getSymbol ( ) , stock . getAsk ( ) , stock . getBid ( ) , stock . getDate ( ) , stock . getStockQuantity ( ) , stock . getRecommendation ( ) . name ( ) ) ; }"
"Joins the header row with a line filling cell, which includes within it an inner table that shows all the child fields <code> void joinRow ( AccountingLineTableRow headerLabelRow , AccountingLineTableRow row ) { ",AccountingLineTableCell cell = new AccountingLineTableCell ( ) ; AccountingLineTable columnsTable = new AccountingLineTable ( ) ; List < AccountingLineTableRow > rows = createRowsForFields ( ) ; columnsTable . setRows ( rows ) ; cell . addRenderableElement ( columnsTable ) ; headerLabelRow . addCell ( cell ) ; }
"Print the number x in width hex chars. x must fit <code> void printHex ( Writer out , int x , int width ) { ","for ( int i = width - 1 ; i >= 0 ; i -- ) x = oneHex ( out , x , i ) ; }"
"Returns the first accounting schema defined for the client <code> int getAcctSchemaId ( Properties ctx , int adClientId , String trxName ) { ","String sql = ""SELECT C_AcctSchema_ID "" + ""FROM C_AcctSchema a, AD_ClientInfo c "" + ""WHERE a.C_AcctSchema_ID=c.C_AcctSchema1_ID "" + ""AND c.AD_Client_ID=?"" ; int acctSchemaId = DB . getSQLValue ( trxName , sql , adClientId ) ; return acctSchemaId ; }"
"Get the corresponding derivation of double double function by the name. Currently supports: ""Minus_Squared"", ""Cross_Entropy"". <code> DoubleDoubleFunction getDerivativeDoubleDoubleFunction ( String function ) { ","if ( function . equalsIgnoreCase ( ""Minus_Squared"" ) ) { return derivativeMinusSquared ; } else if ( function . equalsIgnoreCase ( ""Cross_Entropy"" ) ) { return derivativeCrossEntropy ; } else { throw new IllegalArgumentException ( ""Function not supported."" ) ; } }"
For a given gene checks it functions is enabled and if so the network transitions to a new state <code> boolean TransitionByGene ( Gene g ) { ,currentState . UpdateGeneState ( ) ; boolean transitSuccess = false ; if ( checkFunctionEnabled ( g ) ) { ABNState next = currentState . applyGeneUpdateFunction ( g . getName ( ) ) ; currentState = next ; transitSuccess = true ; } return transitSuccess ; }
Get path of internal storage <code> String getInternalStorage ( ) { ,"String dataPath = existFile ( ""/data/media/0"" , true ) ? ""/data/media/0"" : ""/data/media"" ; if ( ! new RootFile ( dataPath ) . isEmpty ( ) ) return dataPath ; if ( existFile ( ""/sdcard"" , true ) ) return ""/sdcard"" ; return Environment . getExternalStorageDirectory ( ) . getPath ( ) ; }"
"Filters based on the vector's y value <code> Predicate < Vector3i > heightRange ( final int minHeight , final int maxHeight ) { ",return new Predicate < Vector3i > ( ) { @ Override public boolean apply ( Vector3i input ) { int y = input . getY ( ) ; return y > minHeight && y < maxHeight ; } } ; }
Provides a listener that resets the registered changes in case of a table value change (other records to handle). <code> PmEventListener makeTableValueChangeListener ( ) { ,return new PmEventListener ( ) { @ Override public void handleEvent ( PmEvent event ) { onMasterTableValueChange ( event ) ; } } ; }
"Gives the count of the number of times the ""predicted"" class was predicted for the ""actual"" class. <code> int getCount ( T actual , T predicted ) { ",if ( ! matrix . containsKey ( actual ) ) { return 0 ; } else { return matrix . get ( actual ) . count ( predicted ) ; } }
Get a list of supported GDAL formats <code> List < Format > getFormats ( ) { ,formatsLock . readLock ( ) . lock ( ) ; try { return new ArrayList < Format > ( formats . values ( ) ) ; } finally { formatsLock . readLock ( ) . unlock ( ) ; } }
Removes the provider at the specified 1-based position. <code> void removeProvider ( int providerNumber ) { ,Provider p = providers . remove ( providerNumber - 1 ) ; providersNames . remove ( p . getName ( ) ) ; setNeedRefresh ( ) ; }
"Visit the topology graph and add all the routes that ends with the end word. <code> void getResult ( GraphNode node , List < String > route , List < List < String >> result , String end ) { ","route . add ( node . str ) ; if ( node . str . equals ( end ) ) { result . add ( route ) ; return ; } for ( GraphNode n : node . next ) { List < String > newRoute = new LinkedList < > ( ) ; newRoute . addAll ( route ) ; getResult ( n , newRoute , result , end ) ; } }"
Populate the lists of available and selected languages ready for use by a chooser. <code> void buildLanguageList ( ) { ,if ( source == null || ! ( source instanceof Skill ) ) { buildBonusLangList ( ) ; } else { buildObjectLangList ( ) ; } }
Gets a copy of the elements in the list. The returned list does not contain null elements. <code> ArrayList < T > getAll ( ) { ,clean ( ) ; ArrayList < T > ret = new ArrayList < T > ( ) ; for ( WeakReference < T > e : list ) { T t = e . get ( ) ; if ( t != null ) ret . add ( t ) ; } return ret ; }
returns an attribute Identifier containing the ID from the database and therefore useable for database write and update operations <code> AttributeDBIdentifier getAttributeDBIdentifier ( AttributeIdentifier attrId ) { ,if ( attrIds . containsKey ( attrId ) ) { return attrIds . get ( attrId ) ; } else { return addAttributeIdentifier ( attrId ) ; } }
A list of instance profiles. <code> java . util . List < InstanceProfile > getInstanceProfiles ( ) { ,if ( instanceProfiles == null ) { instanceProfiles = new com . amazonaws . internal . SdkInternalList < InstanceProfile > ( ) ; } return instanceProfiles ; }
Returns the AccountManager obtained from the bundle context. <code> AccountManager getAccountManager ( ) { ,"if ( accountManager == null ) { accountManager = ServiceUtils . getService ( bundleContext , AccountManager . class ) ; } return accountManager ; }"
"Checks whether there are applications installed which are able to handle the given intent. <code> boolean isIntentAvailable ( Context context , Intent intent ) { ","List < ResolveInfo > list = context . getPackageManager ( ) . queryIntentActivities ( intent , PackageManager . MATCH_DEFAULT_ONLY ) ; return ! list . isEmpty ( ) ; }"
"Converts a JTS Geometry into a GeoXPShape <code> GeoXPShape toGeoXPShape ( Geometry geometry , double pctError , boolean inside ) { ","long [ ] bbox = HHCodeHelper . getBoundingBox ( geometry ) ; int res = HHCodeHelper . getOptimalResolution ( bbox , pctError ) ; GeoXPShape geoxpshape = new GeoXPShape ( ) ; geoxpshape . geocells = JTSHelper . coverGeometry ( geometry , 2 , res , inside ) . toGeoCells ( res ) ; return geoxpshape ; }"
"Compresses directory into zip archive. <code> void zipDir ( String dirName , String nameZipFile ) { ","ZipOutputStream zip = null ; FileOutputStream fW = null ; fW = new FileOutputStream ( nameZipFile ) ; zip = new ZipOutputStream ( fW ) ; addFolderToZip ( """" , dirName , zip ) ; zip . close ( ) ; fW . close ( ) ; }"
"Get the hook code <code> String getHook ( String noteId , String event ) { ","InterpreterHookRegistry hooks = interpreterGroup . getInterpreterHookRegistry ( ) ; String className = getClassName ( ) ; return hooks . get ( noteId , className , event ) ; }"
"Transform the given relative request path to an absolute path, taking the path of the given request as a point of reference. The resulting path is also cleaned from sequences like ""path/.."". <code> String toAbsolutePath ( String path , ServerHttpRequest request ) { ","String requestPath = request . getURI ( ) . getPath ( ) ; String absolutePath = StringUtils . applyRelativePath ( requestPath , path ) ; return StringUtils . cleanPath ( absolutePath ) ; }"
Checks if O player is winner. <code> boolean checkO ( String [ ] [ ] array ) { ,boolean doneRowsAndColumnsO = checkRowsAndColumnsO ( array ) ; if ( doneRowsAndColumnsO == true ) { return true ; } boolean doneDiagonalsO = checkDiagonalsO ( array ) ; if ( doneDiagonalsO == true ) { return true ; } return false ; }
Create a set with only one element. <code> void makeSet ( long data ) { ,"Node node = new Node ( ) ; node . data = data ; node . parent = node ; node . rank = 0 ; map . put ( data , node ) ; }"
"No spans will be added if the triangle does not overlap the heightfield grid. <code> void rasterizeTriangle ( Context ctx , float [ ] verts , int v0 , int v1 , int v2 , int area , Heightfield solid , int flagMergeThr ) { ","ctx . startTimer ( ""RASTERIZE_TRIANGLES"" ) ; float ics = 1.0f / solid . cs ; float ich = 1.0f / solid . ch ; rasterizeTri ( verts , v0 , v1 , v2 , area , solid , solid . bmin , solid . bmax , solid . cs , ics , ich , flagMergeThr ) ; ctx . stopTimer ( ""RASTERIZE_TRIANGLES"" ) ; }"
Ensures the removeFromBoard method defers to the provided behavior. <code> void testRemoveFromBoard ( ) { ,testGameObject . removeFromBoard ( ) ; verify ( mockMobilityBehavior ) . removeFromBoard ( ) ; }
Start a new game by shuffling the deck and dealing some cards to this board. <code> void newGame ( ) { ,deck . shuffle ( ) ; dealMyCards ( ) ; }
last cluster state observer by this observer. Note that this may not be the current one <code> ClusterState observedState ( ) { ,ObservedState state = lastObservedState . get ( ) ; assert state != null ; return state . clusterState ; }
"Test of equals method, of class SQLInjectionAnalyzerEntry. <code> void entriesWithDifferentEntryPointsDiffer ( ) { ","SQLInjectionAnalyzerEntry different = new SQLInjectionAnalyzerEntry ( ANOTHER_ENTRY_POINT , A_SIMPLE_SQL , ZERO_VARIATION ) ; assertThat ( anEntryWithZeroVariation . equals ( different ) , is ( false ) ) ; }"
Convert byte array to hex string <code> String byteArray2Hex ( byte [ ] ba ) { ,"StringBuffer sb = new StringBuffer ( ) ; for ( int i = 0 ; i < ba . length ; i ++ ) { int hbits = ( ba [ i ] & 0x000000f0 ) >> 4 ; int lbits = ba [ i ] & 0x0000000f ; sb . append ( """" + hexChars [ hbits ] + hexChars [ lbits ] ) ; } return sb . toString ( ) ; }"
"Make one AndesMessagePart from message content <code> AndesMessagePart getAndesMessagePart ( byte [ ] data , long messageID ) { ",AndesMessagePart messagePart = new AndesMessagePart ( ) ; messagePart . setMessageID ( messageID ) ; messagePart . setDataLength ( data . length ) ; messagePart . setOffSet ( 0 ) ; messagePart . setData ( data ) ; return messagePart ; }
"This really should just be an action method, but the ajax servlet is configured to get properties from beans, not call action methods. So the method has to follow java bean property conventions (get...). <code> String getUpdatePanelState ( ) { ","Map parameters = UIBeanHelper . getRequest ( ) . getParameterMap ( ) ; String [ ] panelId = ( String [ ] ) parameters . get ( ""id"" ) ; String [ ] state = ( String [ ] ) parameters . get ( ""state"" ) ; if ( panelId != null && state != null ) { panelStates . put ( panelId [ 0 ] , state [ 0 ] ) ; } return """" ; }"
Remove the last key. <code> KEY removeLast ( ) { ,final KEY removedKey = queue . removeLast ( ) ; return removedKey ; }
Puts a float into the buffer. <code> void putFloatArray ( float [ ] f ) { ,verifySize ( 4 * f . length ) ; for ( int i = 0 ; i < f . length ; i ++ ) { buf . putFloat ( f [ i ] ) ; } }
An API to fetch all DocumentType by batch class id. <code> List < DocumentType > getDocTypeByBatchClassIdentifier ( final String batchClassIdentifier ) { ,"List < DocumentType > documentType = null ; if ( null == batchClassIdentifier ) { LOGGER . info ( ""Input batchClassID is null."" ) ; } else { documentType = documentTypeDao . getDocTypeByBatchClassIdentifier ( batchClassIdentifier ) ; } return documentType ; }"
add to every element index its index <code> int [ ] increaseByIndex ( int [ ] array ) { ,"checkNull ( array ) ; array = Arrays . copyOf ( array , array . length ) ; for ( int i = array . length - 1 ; i >= 0 ; i -- ) { array [ i ] += i ; } return array ; }"
"Get the matching aliases for authenticating the server side of a secure socket given the public key type and the list of certificate issuer authorities recognized by the peer (if any). <code> String [ ] getServerAliases ( String keyType , Principal [ ] issuers ) { ","if ( keyManager != null ) { return keyManager . getServerAliases ( keyType , issuers ) ; } else { return null ; } }"
Lookup an entry type <code> int getEntryType ( String name ) { ,if ( ! entryTypes . containsKey ( name ) ) { throw new CatalogException ( CatalogException . INVALID_ENTRY_TYPE ) ; } Integer iType = ( Integer ) entryTypes . get ( name ) ; if ( iType == null ) { throw new CatalogException ( CatalogException . INVALID_ENTRY_TYPE ) ; } return iType . intValue ( ) ; }
"Looks up a server stream in the stream map. Null will be returned if the stream is not found. <code> IServerStream getServerStream ( IScope scope , String name ) { ","logger . debug ( ""Looking up server stream: {} scope: {}"" , name , scope ) ; String key = scope . getName ( ) + '/' + name ; if ( serverStreamMap . containsKey ( key ) ) { return serverStreamMap . get ( key ) ; } else { logger . warn ( ""Server stream not found with key: {}"" , key ) ; return null ; } }"
Returns how many different matrix sizes have results. <code> int getNumMatrices ( ) { ,int max = 0 ; for ( SourceResults s : libraries ) { for ( int i = max ; i < matrixSize . length ; i ++ ) { if ( Double . isNaN ( s . getResult ( i ) ) ) break ; max = i ; } } return max ; }
returns the next batch item file in the input directory <code> File getNextFile ( ) { ,File [ ] match = inputDir . listFiles ( testFileFilter ) ; if ( match . length > 0 ) { return match [ 0 ] ; } return null ; }
Checks if an Element contains over one event. <code> boolean containsOverOneEvent ( ) { ,int numEvents = 0 ; for ( int i = 0 ; i < m_Events . length ; i ++ ) { if ( m_Events [ i ] > - 1 ) { numEvents ++ ; } if ( numEvents == 2 ) { return true ; } } return false ; }
Initializes the action intent that will be sent to Simple lastFM Scrobbler. This method should always be called when sending a new set of data to the scrobbling app. <code> void initializeActionIntent ( ) { ,"mSimpleLastFMIntent = null ; mSimpleLastFMIntent = new Intent ( ""com.adam.aslfms.notify.playstatechanged"" ) ; }"
Registers an environment frame. <code> int registerFrame ( EnvironmentFrame frame ) { ,"Environment env = frame . getEnvironment ( ) ; environmentToFrame . put ( env , frame ) ; File file = env . getFile ( ) ; if ( file != null ) fileToFrame . put ( getPath ( file ) , frame ) ; env . addFileChangeListener ( FILE_LISTENER ) ; edu . duke . cs . jflap . gui . action . NewAction . hideNew ( ) ; return ++ numberRegistered ; }"
Tests if the task throws an exception if you try to download multiple files to a single destination file <code> void downloadMultipleFilesToFile ( ) { ,"Download t = makeProjectAndTask ( ) ; t . src ( Arrays . asList ( makeSrc ( TEST_FILE_NAME ) , makeSrc ( TEST_FILE_NAME2 ) ) ) ; File dst = folder . newFile ( ) ; t . dest ( dst ) ; t . execute ( ) ; }"
Tests that the gerrit version is not high enough to run the file trigger feature. <code> void testUnknownVersionNull ( ) { ,"when ( server . getGerritVersion ( ) ) . thenReturn ( null ) ; assertTrue ( GerritVersionChecker . isCorrectVersion ( GerritVersionChecker . Feature . fileTrigger , testServer ) ) ; }"
Method to get the amount of blue at this pixel. It will be from 0-255 with 0 being no blue and 255 being as much blue as you can have. <code> int getBlue ( ) { ,"int value = picture . getBasicPixel ( x , y ) ; int blue = value & 0xff ; return blue ; }"
Return how many elements are in the queue <code> int getQueueSize ( int level ) { ,if ( level % 2 == 0 ) { return evenQueue . size ( ) ; } else { return oddQueue . size ( ) ; } }
"Create indexes for the sites using their position in the grid. <code> int getSiteIndex ( int row , int col ) { ","if ( row <= 0 || row > N || col <= 0 || col > N ) { throw new IndexOutOfBoundsException ( ""("" + row + "", "" + col + "") out of bounds "" + ""for "" + N + ""^2 grid."" ) ; } return ( row - 1 ) * N + ( col - 1 ) ; }"
"Access a property of the class. <code> Accessor createPropertyAccessor ( Class bean , Method getter , Method setter ) { ","if ( getter == null ) { return new Accessor . SetterOnlyReflection ( setter ) ; } if ( setter == null ) { return new Accessor . GetterOnlyReflection ( getter ) ; } return new Accessor . GetterSetterReflection ( getter , setter ) ; }"
Find the largest item in the tree. <code> AnyType findMax ( ) { ,if ( isEmpty ( ) ) throw new UnderflowException ( ) ; return findMax ( root ) . element ; }
"Base64-decode the given byte array from an UTF-8 String using the RFC 4868 ""URL and Filename Safe Alphabet"". <code> byte [ ] decodeFromUrlSafeString ( String src ) { ",assertDelegateAvailable ( ) ; return delegate . decodeUrlSafe ( src . getBytes ( DEFAULT_CHARSET ) ) ; }
Returns the string representation of this JPEGHuffmanTable object. <code> String toString ( ) { ,"StringBuffer sb = new StringBuffer ( ) ; sb . append ( ""JPEGHuffmanTable: lengths:"" ) ; for ( short length : lengths ) { sb . append ( ' ' ) . append ( length ) ; } sb . append ( "" values:"" ) ; for ( short value : values ) { sb . append ( ' ' ) . append ( value ) ; } return sb . toString ( ) ; }"
Set the key of the entry. <code> K setKey ( K keyIn ) { ,key = keyIn ; return key ; }
Returns the possible pseudo-functions for a profile <code> String [ ] getPseudoFunction ( CssVersion version ) { ,switch ( version ) { case CSS2 : case CSS21 : return PSEUDOFUNCTION_CONSTANTSCSS2 ; case CSS3 : return PSEUDOFUNCTION_CONSTANTSCSS3 ; case CSS1 : default : return null ; } }
Guess dev jar name based on platform. <code> String guessDevJarName ( ) { ,"if ( AbstractGWTMojo . OS_NAME . startsWith ( AbstractGWTMojo . WINDOWS ) ) { return ""gwt-dev-windows.jar"" ; } else if ( AbstractGWTMojo . OS_NAME . startsWith ( AbstractGWTMojo . MAC ) ) { return ""gwt-dev-mac.jar"" ; } else { return ""gwt-dev-linux.jar"" ; } }"
"sends a packet of information to a specified node in the network <code> void putPacket ( String str , SocketAddress dest ) { ","debug ( ""putPacket("" + str + "","" + dest + "")"" ) ; packet = new DatagramPacket ( str . getBytes ( ) , str . length ( ) , dest ) ; socket . send ( packet ) ; }"
"Get string description for current cache state (cache is empty or current cache implementation description). <code> String getCacheStateDescription ( CacheStateMachine < ? > stateMachine , Transaction transaction ) { ","Object cacheImpl = stateMachine . getCacheQuick ( transaction ) ; return cacheImpl == null ? ""(cache is empty)"" : ""(cache is "" + cacheImpl + "")"" ; }"
convert int array to Integer array <code> Integer [ ] transformIntArray ( int [ ] source ) { ,Integer [ ] destin = new Integer [ source . length ] ; for ( int i = 0 ; i < source . length ; i ++ ) { destin [ i ] = source [ i ] ; } return destin ; }
get the project image url based on given projectId (Production Server) <code> String getProjectImageURL ( long projectId ) { ,String url ; url = GCSCLIENTURLSTART + getBucket ( ) + GALLERYPROJECTDIR + projectId + IMAGEDIR ; return url ; }
"Stops the stream, and informs the RTSP server. <code> void stopStream ( ) { ",try { sendRequestTeardown ( ) ; } catch ( Exception ignore ) { } try { mSocket . close ( ) ; } catch ( Exception ignore ) { } mSession . stop ( ) ; mRunning = false ; }
"Return the ID contained in a Google BLE Tag (Service Data), or null if not available. <code> Integer getServiceDataId ( byte [ ] scanRecord ) { ","int pos = findCodeInBuffer ( scanRecord , AssignedNumbers . SERVICE ) ; if ( pos != - 1 ) { short id = getShort ( scanRecord , pos ) ; return Integer . valueOf ( id ) ; } return null ; }"
"indicate to a header node what row/colSpan it should use. <code> void setCurrentSpan ( int rowSpan , int colSpan ) { ",_currentSpan . width = colSpan ; _currentSpan . height = rowSpan ; }
Renders a valid LaTeX math formula to an icon. <code> TeXIcon getTeXIcon ( String formula ) { ,"TeXFormula latexFormula = new TeXFormula ( formula ) ; TeXIcon icon = latexFormula . createTeXIcon ( TeXConstants . STYLE_DISPLAY , 20 ) ; icon . setInsets ( new Insets ( 5 , 5 , 5 , 5 ) ) ; return icon ; }"
"Looks in schema tree for default temporary workspace instance. <code> AbstractSchema getTemporaryWorkspace ( SchemaPlus defaultSchema , DrillConfig config ) { ","String temporarySchema = config . getString ( ExecConstants . DEFAULT_TEMPORARY_WORKSPACE ) ; List < String > temporarySchemaPath = Lists . newArrayList ( temporarySchema ) ; SchemaPlus schema = findSchema ( defaultSchema , temporarySchemaPath ) ; return schema == null ? null : unwrapAsDrillSchemaInstance ( schema ) ; }"
Get desired admin interface status. <code> int getIfAdminStatus ( int ifindex ) { ,"SnmpObjId oid = SnmpObjId . get ( snmpObjectId + ""."" + ifindex ) ; SnmpValue status = SnmpUtils . get ( m_agent , oid ) ; return status . toInt ( ) ; }"
"Test of contains method, of class IntegerBinarySearchTree. <code> void testContains ( ) { ",tree . add ( 5 ) ; tree . add ( 3 ) ; tree . add ( 6 ) ; tree . add ( 1 ) ; assertTrue ( tree . contains ( 1 ) ) ; assertFalse ( tree . contains ( 2 ) ) ; }
Retrieves all keys currently in the cache. <code> Set < Object > getKeys ( ) { ,Set < Object > ret = null ; synchronized ( cache ) { ret = new HashSet < Object > ( cache . keySet ( ) ) ; } return ret ; }
"Executes the given SQL statement, which returns a single ResultSet object. <code> ResultSet executeQuery ( String sql ) { ",Statement stat = conn . createStatement ( ) ; return stat . executeQuery ( sql ) ; }
Get the waiting queue length. This is an estimate value. <code> int getQueueLength ( String resourceName ) { ,int count = 0 ; Semaphore semaphore = map . get ( resourceName ) ; if ( semaphore != null ) { count = semaphore . getQueueLength ( ) ; } return count ; }
Write the record in the file <code> void writeRecord ( ) { ,"try { FileWriter fileWriter = new FileWriter ( file_ , false ) ; try ( PrintWriter printWriter = new PrintWriter ( fileWriter ) ) { printWriter . println ( record_ ) ; printWriter . flush ( ) ; } } catch ( IOException ex ) { } }"
Returns the specified NavPoint. The index matches the order that navigation points were found in the source document. <code> NavPoint getNavPoint ( int index ) { ,if ( index >= 0 && index < navMap . size ( ) ) { return navMap . get ( index ) ; } else { return null ; } }
Prepared for sub-class for convenience. <code> Object uniqueResult ( final DetachedCriteria dc ) { ,HibernateCallback callback = new HibernateCallback ( ) { public Object doInHibernate ( Session session ) { return dc . getExecutableCriteria ( session ) . uniqueResult ( ) ; } } ; return hibernateTemplate . execute ( callback ) ; }
Writes tag and class_info_index in element_value. <code> void classInfoIndex ( int index ) { ,output . write ( 'c' ) ; write16bit ( index ) ; }
Recursively delete specified directory. <code> void deleteTempDir ( File dir ) { ,if ( dir != null && dir . exists ( ) ) { for ( File f : dir . listFiles ( ) ) { if ( f . isDirectory ( ) ) { deleteTempDir ( f ) ; } else { f . delete ( ) ; } } dir . delete ( ) ; } }
Returns a string representation of this object; useful for testing and debugging. <code> String toString ( ) { ,"StringBuilder sb = new StringBuilder ( ) ; sb . append ( ""{"" ) ; if ( protocols != null ) sb . append ( ""Protocols: "" + protocols + "", "" ) ; sb . append ( ""}"" ) ; return sb . toString ( ) ; }"
gracefully closes up our socket. <code> void closeOutgoingConnections ( ) { ,"try { sendProfileSocket . close ( ) ; } catch ( Exception e ) { Log . d ( ""Profile Controller"" , ""Could not close sendDeviceSocket"" ) ; } try { profileOut . close ( ) ; } catch ( Exception e ) { Log . d ( ""Profile Controller"" , ""Could not close objectOut Socket"" ) ; } }"
"Posts a status update for a specified item to the event bus. <code> Object postUpdate ( Item item , String stateAsString ) { ","if ( item != null ) { return postUpdate ( item . getName ( ) , stateAsString ) ; } else { return null ; } }"
Set slot of SessionFacade and session. <code> void setSlot ( final Slot slot ) { ,session . setDay ( slot . getDayString ( ) ) ; session . setTime ( slot . getTime ( ) ) ; Platform . runLater ( ( ) -> slotObjectProperty . set ( slot ) ) ; }
Decode the encoded string and return the bitmap <code> Bitmap decodeBitmapFromBase64 ( String encoded ) { ,"byte [ ] decodedString = Base64 . decode ( encoded , Base64 . DEFAULT ) ; return BitmapFactory . decodeByteArray ( decodedString , 0 , decodedString . length ) ; }"
"Create directory with given name in specified directory. <code> Path createDirectory ( Path parent , String name ) { ","Path created = parent . resolve ( name ) ; try { return Files . createDirectories ( created ) ; } catch ( IOException e ) { throw new ReportGenerationException ( ""Can't create data directory"" , e ) ; } }"
Sets whether the user should be prompted when the launch mode of the server doesn't match. <code> void setExtAdapter ( boolean b ) { ,"preferences . setValue ( PREF_EXT_ADAPTER , b ) ; ServerUIPlugin . getInstance ( ) . savePluginPreferences ( ) ; }"
parse button text into level number <code> int getLevelNumber ( String text ) { ,"String number = text . substring ( text . length ( ) - 1 ) ; if ( number . equals ( ""0"" ) ) { return 10 ; } return Integer . parseInt ( number ) ; }"
Mark component identified by 'key' as having reached its end-of-life. <code> void endOfLife ( String key ) { ,"Entry < C > entry = liveMap . remove ( key ) ; if ( entry == null ) return ; lingerersMap . put ( key , entry ) ; }"
Turns an array of bytes into a hexadecimal string. <code> String toString ( final byte [ ] bytes ) { ,"StringBuilder hexed = new StringBuilder ( ) ; for ( int i = 0 ; i < bytes . length ; i ++ ) { hexed . append ( toString ( bytes [ i ] ) ) ; hexed . append ( ' ' ) ; } return hexed . substring ( 0 , hexed . length ( ) - 1 ) ; }"
"Hook that should be called by subclasses to initialize the key property when establishing a new connection. <code> void initKey ( String providerId , String providerUserId ) { ","if ( providerUserId == null ) { providerUserId = setValues ( ) . providerUserId ; } key = new ConnectionKey ( providerId , providerUserId ) ; }"
"Returns String representation of a double value trimmed to the number of decimals required. e.g. 23.34565678766 trimmed to 2 decimals will look like 23.34 <code> String trimDecimals ( double no , int decimalCount ) { ","String sno = String . valueOf ( no ) ; int dp = sno . indexOf ( '.' ) ; if ( dp == - 1 || decimalCount < 0 || ( dp + decimalCount + 1 ) > sno . length ( ) ) return sno ; else { return sno . substring ( 0 , decimalCount == 0 ? dp : dp + decimalCount + 1 ) ; } }"
"Reads a bit of the mapping matrix accounting for boundary wrapping. <code> boolean readModule ( int row , int column , int numRows , int numColumns ) { ","if ( row < 0 ) { row += numRows ; column += 4 - ( ( numRows + 4 ) & 0x07 ) ; } if ( column < 0 ) { column += numColumns ; row += 4 - ( ( numColumns + 4 ) & 0x07 ) ; } readMappingMatrix . set ( column , row ) ; return mappingBitMatrix . get ( column , row ) ; }"
"Execute a DDL statement for creating a schema object. <code> void executeDDL ( Connection conn , String text ) { ","PreparedStatement ps = prepare ( conn , text ) ; ps . execute ( ) ; close ( ps ) ; }"
"Adds given entry to context by given entry type. <code> void addToContext ( @ NotNull StdArrangementSettingsToken token , @ NotNull ArrangementAtomMatchCondition condition ) { ","StdArrangementTokenType tokenType = token . getTokenType ( ) ; context . put ( tokenType , condition ) ; }"
Gets the cell value. <code> Object getCellValue ( Cell cell ) { ,switch ( cell . getCellType ( ) ) { case Cell . CELL_TYPE_STRING : return cell . getStringCellValue ( ) ; case Cell . CELL_TYPE_BOOLEAN : return cell . getBooleanCellValue ( ) ; case Cell . CELL_TYPE_NUMERIC : return cell . getNumericCellValue ( ) ; } return null ; }
Count the number of non-empty squares in the scene. <code> int countItems ( ) { ,"int items = 0 ; for ( int row = 0 ; row < _height ; row ++ ) { for ( int col = 0 ; col < _width ; col ++ ) { if ( isEmpty ( row , col ) ) { ; } else { items += 1 ; } } } return items ; }"
Gets the list of values contained into the lov result. <code> List getValues ( String valueColumnName ) { ,List values = new ArrayList ( ) ; List rows = getRows ( ) ; for ( int i = 0 ; i < rows . size ( ) ; i ++ ) { SourceBean row = ( SourceBean ) rows . get ( i ) ; values . add ( row . getAttribute ( valueColumnName ) ) ; } return values ; }
Returns today's date in the format yyyy-mm-dd <code> String getTodaysDateStr ( ) { ,Date d = new Date ( ) ; return getDateStr ( d ) ; }
"Handler for unhandled exceptions <code> BaseResponse handleException ( HttpServletResponse response , Exception ex ) { ","logger . error ( ""An uknown exception occurred while processing request: "" , ex ) ; response . setStatus ( HttpServletResponse . SC_INTERNAL_SERVER_ERROR ) ; return new BaseResponse ( IWebUtilsCommonConstants . RESPONSE_CODE_UNHANDLED_SERVER_ERROR , ""Unknown server error - "" + ex . getMessage ( ) ) ; }"
Set a visible view invisible <code> void setGoneViewInvisible ( ) { ,"View view = new View ( new Activity ( ) ) ; view . setVisibility ( GONE ) ; assertEquals ( GONE , view . getVisibility ( ) ) ; ViewUtils . setInvisible ( view , true ) ; assertEquals ( INVISIBLE , view . getVisibility ( ) ) ; }"
Sends a session opened event to all listeners <code> void fireSessionOpened ( ) { ,"SessionEvent event = new SessionEvent ( wagon , SessionEvent . SESSION_OPENED ) ; for ( SessionListener listener : listeners ) { listener . sessionOpened ( event ) ; } }"
"Adds an header to the provided map of headers. <code> void addValueToHeader ( Map < String , List < String >> headers , String key , String value , boolean singleValued ) { ","List < String > values = headers . get ( key ) ; if ( values == null ) { values = new ArrayList < String > ( 1 ) ; headers . put ( key , values ) ; } if ( singleValued && values . size ( ) == 1 ) { values . set ( 0 , value ) ; } else { values . add ( value ) ; } }"
"Adding additional key/value pairs onto the servlet logline. If nothing is needed to add, just simply return an empty Enrichments object. <code> Enrichments configAdditionalLoggingInfo ( ) { ","Enrichments enrichments = new Enrichments ( ) ; if ( gitInfo != null ) { enrichments . add ( ""gitCommitId"" , gitInfo . getCommitId ( ) ) ; enrichments . add ( ""gitRemoteOriginUrl"" , gitInfo . getRemoteOriginUrl ( ) ) ; } enrichments . add ( ""appVersion"" , applicationVersion ) ; return enrichments ; }"
Reads all bytes of a file. <code> void readFullFile ( ) { ,"long checksumExpected = populateInputFile ( PACKET_SIZE * 10 , 0 , PACKET_SIZE * 10 - 1 ) ; mChannel . writeInbound ( buildReadRequest ( 0 , PACKET_SIZE * 10 ) ) ; checkAllReadResponses ( mChannel , checksumExpected ) ; }"
"Returns whether the given quadrant lies within the given halfplane (specified by its right-hand quadrant). <code> boolean isInHalfPlane ( int quad , int halfPlane ) { ",if ( halfPlane == 3 ) { return quad == 3 || quad == 0 ; } return quad == halfPlane || quad == halfPlane + 1 ; }
Invoke Hive database filtering that removes the entries which use has no privileges to access <code> List < String > filterDb ( List < String > dbList ) { ,"try { return HiveAuthzBindingHook . filterShowDatabases ( getHiveAuthzBinding ( ) , dbList , HiveOperation . SHOWDATABASES , getUserName ( ) ) ; } catch ( Exception e ) { LOG . warn ( ""Error getting DB list "" , e ) ; return new ArrayList < String > ( ) ; } finally { close ( ) ; } }"
"Pressing Enter on the given component will act as clicking on the given button. <code> void addCRListener ( JComponent c , final JButton b ) { ",c . addKeyListener ( new KeyAdapter ( ) { @ Override public void keyTyped ( KeyEvent e ) { if ( e . getKeyChar ( ) == KeyEvent . VK_ENTER ) { b . doClick ( ) ; } } } ) ; }
Goes to the user list screen. <code> void navigateToUserList ( Context context ) { ,if ( context != null ) { Intent intentToLaunch = UserListActivity . getCallingIntent ( context ) ; context . startActivity ( intentToLaunch ) ; } }
Singleton pattern - for returning one file instance. We make this method private and only return a file if the instance is null Thus we create just one file that we can write to instead of multiple files <code> File getFileInstance ( ) { ,"if ( orders == null ) { String fileName = inputFile + "" "" + ""ItemOrders.txt"" ; orders = new File ( fileName ) ; } return orders ; }"
This is a workaround for the addition of checked/not checked message generated by the framework which should actually happen the the accessibility service. <code> void ensureCompoundButtonWorkaround ( ) { ,if ( sValueChecked == null || sValueNotChecked == null ) { Context context = TalkBackService . asContext ( ) ; sValueChecked = context . getString ( R . string . value_checked ) ; sValueNotChecked = context . getString ( R . string . value_not_checked ) ; } }
"Set the start/end year, month, and day. The time portion of the starting and ending days is automatically supplied to ensure that we will get full days of events. <code> void setStartAndEndListViewDates ( int startYear , int startMonth , int startDay , int endYear , int endMonth , int endDay ) { ","startingListViewDate = TimeService . newTimeLocal ( startYear , startMonth , startDay , 0 , 0 , 0 , 0 ) ; endingListViewDate = TimeService . newTimeLocal ( endYear , endMonth , endDay , 23 , 59 , 59 , 99 ) ; }"
"Add a constructor to the current class. Called by the XML parser. <code> void addCtor ( String type , Modifiers modifiers ) { ","String t = type ; if ( t == null ) t = ""void"" ; api_ . currCtor_ = new ConstructorAPI ( t , modifiers ) ; api_ . currClass_ . ctors_ . add ( api_ . currCtor_ ) ; }"
"Pulls a string off the queue, up to but exclusive of the match sequence, or to the queue running out. <code> String consumeTo ( String seq ) { ","int offset = queue . indexOf ( seq , pos ) ; if ( offset != - 1 ) { String consumed = queue . substring ( pos , offset ) ; pos += consumed . length ( ) ; return consumed ; } else { return remainder ( ) ; } }"
Method find specific service returns POJO or EJB implementation. <code> T getService ( final Class < T > serviceClass ) { ,T service = null ; try { service = ( T ) AbstractVulpeBeanFactory . getInstance ( ) . getBean ( serviceClass . getSimpleName ( ) ) ; } catch ( NoSuchBeanDefinitionException e ) { if ( service == null ) { service = getEJB ( serviceClass ) ; } } return service ; }
"Returns the cached representation of the item if valid, otherwise recomputes the String representation of the item. <code> String getValueAsString ( ) { ",if ( itemStringValue == null ) { itemStringValue = getStringValue ( ) ; } return itemStringValue ; }
"converts bit-wise Intel-endian format into long <code> long getLong ( byte [ ] buf , int o ) { ","long low = ( ( long ) getInt ( buf , o ) ) & 0xffffffffL ; long hi = ( ( long ) getInt ( buf , o + 4 ) ) & 0xffffffffL ; hi <<= 32 ; hi |= low ; return hi ; }"
Indicates the specified property has changed. This method should be called in a controller whenever a bindable property is changed. <code> void propertyDidChange ( String property ) { ,if ( property == null ) { throw new NullPointerException ( ) ; } if ( ! bindings . containsKey ( property ) ) { return ; } for ( ICommand command : bindings . get ( property ) ) { command . execute ( ) ; } }
Create variant ID with multiple IDs. First will be primary. If list is empty or null empty variant ID will be returned. <code> GeneticVariantId createVariantId ( List < String > ids ) { ,if ( ids == null || ids . size ( ) == 0 ) { return BLANK_GENETIC_VARIANT_ID ; } else if ( ids . size ( ) == 1 ) { return new SingleGeneticVariantId ( ids . get ( 0 ) ) ; } else { return new ListGeneticVariantId ( ids ) ; } }
Returns the terminal with the specified name or null if no such terminal exists. <code> CardTerminal getTerminal ( String name ) { ,if ( name == null ) { throw new NullPointerException ( ) ; } try { for ( CardTerminal terminal : list ( ) ) { if ( terminal . getName ( ) . equals ( name ) ) { return terminal ; } } return null ; } catch ( CardException e ) { return null ; } }
Sets the project name. <code> void setProjectName ( String projectName ) { ,checkFrozen ( ) ; m_projectName = projectName ; }
"Create from inside an XML document. Called on a parser positioned at a tag in an XML document, tries to create a ColorStateList from that tag. <code> ColorStateList createFromXmlInner ( @ NonNull Resources r , @ NonNull XmlPullParser parser , @ NonNull AttributeSet attrs , @ Nullable Resources . Theme theme ) { ","final String name = parser . getName ( ) ; if ( ! name . equals ( ""selector"" ) ) { throw new XmlPullParserException ( parser . getPositionDescription ( ) + "": invalid color state list tag "" + name ) ; } return inflate ( r , parser , attrs , theme ) ; }"
"Method to get the prefix If the prefix has not been generated yet, it will be before being returned <code> String getPrefix ( ) { ",if ( ( prefix == null ) && ( name != null ) ) { prefix = Encrypter . md5 ( name + System . currentTimeMillis ( ) ) ; } return prefix ; }
"Build the http request <code> String buildRequest ( Layer layer , String request , String item ) { ","String server = layer . getServer ( ) ; String layerName = layer . getName ( ) ; String httpReq = server + ""?"" ; httpReq += ""REQUEST="" + request ; httpReq += ""&item="" + item ; httpReq += ""&layerName="" + layerName ; return httpReq ; }"
"Test each handle to see if any of them are under the supplied MotionEvent. <code> Handle updateUsingHandles ( float screenx , float screeny ) { ","if ( handles == null ) return null ; Handle result = null ; for ( Handle h : handles ) { if ( h . nearPoint ( screenx , screeny , true ) ) { result = h ; break ; } } return result ; }"
Lists the contents of the container <code> PageSet < ? > listContents ( String container ) { ,PageSet < ? > retVal = null ; BlobStore store = context . getBlobStore ( ) ; retVal = store . list ( container ) ; return retVal ; }
"If bool is false change it to null, otherwise do nothing. <code> Boolean falseToNull ( Boolean bool ) { ",if ( bool != null && bool ) { return true ; } return null ; }
"Returns the ""return block"" for a given ""caller block"". <code> Block pathTarget ( final Block block ) { ",for ( int i = 0 ; i < paths . size ( ) ; i ++ ) { final Block [ ] path = ( Block [ ] ) paths . get ( i ) ; if ( path [ 0 ] == block ) { return path [ 1 ] ; } } return null ; }
"Makes sure arrays are correctly set when it first computers a larger matrix then a smaller one. When going from small to large its often forces to declare new memory, this way it actually uses memory. <code> void testLargeToSmall ( ) { ","SingularValueDecomposition < DenseMatrix64F > alg = createSvd ( ) ; DenseMatrix64F A = RandomMatrices . createRandom ( 10 , 10 , - 1 , 1 , rand ) ; assertTrue ( alg . decompose ( A ) ) ; checkComponents ( alg , A ) ; A = RandomMatrices . createRandom ( 5 , 5 , - 1 , 1 , rand ) ; assertTrue ( alg . decompose ( A ) ) ; checkComponents ( alg , A ) ; }"
runAsServer method is used when the node is working as a server <code> void runAsServer ( ) { ,"find ( config_file_path , identifier ) ; listen ( identifier , hostname , port ) ; }"
Remove a forced mute listener <code> void removeMuteListener ( ForceMuteListener listener ) { ,"@ SuppressWarnings ( ""unchecked"" ) ScalableHashSet < ForceMuteListener > muteListeners = ( ScalableHashSet < ForceMuteListener > ) AppContext . getDataManager ( ) . getBindingForUpdate ( MUTE_LISTENERS_BINDING ) ; muteListeners . remove ( listener ) ; }"
"Perform sanity check: Ensure that node is a state set over the given state variables. Throws a RuntimeException if the test fails. [ REFS: none, DEREFS: none ] <code> void checkIsStateSet ( JDDNode node , JDDVars vars ) { ","checkIsZeroOneMTBDD ( node ) ; checkIsDDOverVars ( node , vars ) ; }"
Returns the byte representation of the whole HPAI structure. <code> byte [ ] toByteArray ( ) { ,"final ByteArrayOutputStream os = new ByteArrayOutputStream ( HPAI_SIZE ) ; os . write ( length ) ; os . write ( hostprot ) ; os . write ( address , 0 , address . length ) ; os . write ( port >> 8 ) ; os . write ( port ) ; return os . toByteArray ( ) ; }"
"Fires about global focus change. <code> void fireGlobalFocusChanged ( final Component oldComponent , final Component newComponent ) { ","final List < GlobalFocusListener > listeners ; synchronized ( listenersLock ) { listeners = CollectionUtils . copy ( globalFocusListeners ) ; } for ( final GlobalFocusListener listener : listeners ) { listener . focusChanged ( oldComponent , newComponent ) ; } }"
Kreira i prikazuje prozor za prikaz i poredjenje strategija. <code> void napraviProzorUporediStrategije ( ) { ,GUIUporediStrategije prozorZaStrategije = new GUIUporediStrategije ( ) ; prozorZaStrategije . setVisible ( true ) ; prozorZaStrategije . setLocationRelativeTo ( null ) ; }
Converts a string representing a valid URL to an equivalent string suitable for passing into WebKit. <code> String adjustUrlForWebKit ( String url ) { ,"if ( newURL ( url ) . getProtocol ( ) . equals ( ""file"" ) ) { int pos = ""file:"" . length ( ) ; if ( pos < url . length ( ) && url . charAt ( pos ) != '/' ) { url = url . substring ( 0 , pos ) + ""///"" + url . substring ( pos ) ; } } return url ; }"
"Converts coordinates from second space to first space. <code> Coordinate backTransform ( Coordinate second , Coordinate first ) { ",first . x = ( second . x - env2 [ 0 ] ) * s_x_inv + env1 [ 0 ] ; first . y = ( second . y - env2 [ 2 ] ) * s_y_inv + env1 [ 2 ] ; return first ; }
Retrieves the meta-data associated with this category <code> Map getMetaData ( ) { ,if ( _metadata == null ) { return new HashMap ( ) ; } return _metadata ; }
Reads the last command's output. <code> String readOutput ( ) { ,"if ( consoleOut . size ( ) <= 0 ) { return null ; } return new String ( consoleOut . toByteArray ( ) , StandardCharsets . UTF_8 ) . trim ( ) ; }"
Extracts the version id from a string <code> long getVersionId ( String versionDir ) { ,"try { return Long . parseLong ( versionDir . replace ( ""version-"" , """" ) ) ; } catch ( NumberFormatException e ) { logger . trace ( ""Cannot parse version directory to obtain id "" + versionDir ) ; return - 1 ; } }"
"Convert an integer to a byte array beginning at the specified offset. No length checking is performed (i.e., if the integer cannot be encoded with length octets, it is truncated). <code> void I2OSP ( int value , byte [ ] output , int outOff , int outLen ) { ",for ( int i = outLen - 1 ; i >= 0 ; i -- ) { output [ outOff + i ] = ( byte ) ( value >>> ( 8 * i ) ) ; } }
Utility error reporting function for a subbox overrunning its superbox. Sets the RepInfo's wellFormed flag to false. <code> void superboxOverrun ( ) { ,"_repInfo . setMessage ( new ErrorMessage ( ""Size of contained Box overruns "" + getSelfPropName ( ) , _module . getFilePos ( ) ) ) ; _repInfo . setWellFormed ( false ) ; }"
"Adds the given row to the data. <code> void addRow ( Map < String , String > row ) { ",if ( sColumns == null ) { setsColumns ( row . keySet ( ) . toArray ( new String [ 0 ] ) ) ; } String [ ] rowed = new String [ sColumns . length ] ; for ( int i = 0 ; i < rowed . length ; i ++ ) { rowed [ i ] = row . get ( sColumns [ i ] ) ; } addRow ( rowed ) ; }
Generate a function that returns the annotations for a BodyDeclarations node. <code> String createFunction ( BodyDeclaration decl ) { ,List < Annotation > runtimeAnnotations = TreeUtil . getRuntimeAnnotationsList ( decl . getAnnotations ( ) ) ; if ( runtimeAnnotations . isEmpty ( ) ) { return null ; } return addFunction ( createAnnotations ( runtimeAnnotations ) ) ; }
"Creates the excel workbook based on another workbook. Usefull to add more excelbooks together <code> void createWorkbook ( Workbook wb , ExcelSheet ... sheets ) { ","try { for ( ExcelSheet sheet : sheets ) { sheet . addSheetTo ( dac , wb ) ; } } catch ( Exception e ) { throw new DataAccessException ( ""Could not generate excel spreadsheet"" , e ) ; } }"
Returns the direction of the column specified by columnIndex. <code> String getColumnDirection ( int columnIndex ) { ,validateColumnIndex ( columnIndex ) ; return columnDirection_ [ columnIndex ] ; }
Converts a string to BigDecimal <code> BigDecimal stringToBigDecimal ( String nr ) { ,DecimalFormat format = ( DecimalFormat ) NumberFormat . getInstance ( ) ; format . setParseBigDecimal ( true ) ; BigDecimal number ; try { number = ( BigDecimal ) format . parse ( nr ) ; } catch ( Exception e ) { return null ; } return number ; }
Returns the number of the card as a long. <code> long getNumber ( ) { ,int suitShift = number / 13 ; int heightShift = number % 13 ; return ( 1l << ( 16 * suitShift + heightShift ) ) ; }
Test for isMultiValued() method. <code> void testIsMultiValued ( ) { ,"SpellCheckedMetadata meta = new SpellCheckedMetadata ( ) ; Assert . assertFalse ( meta . isMultiValued ( ""key"" ) ) ; meta . add ( ""key"" , ""value1"" ) ; Assert . assertFalse ( meta . isMultiValued ( ""key"" ) ) ; meta . add ( ""key"" , ""value2"" ) ; Assert . assertTrue ( meta . isMultiValued ( ""key"" ) ) ; }"
"Returns the number of seconds to wait before reporting slow progress again. <code> int getWaitTime ( int userSpecifiedProgressInterval , int previousWaitTime ) { ",if ( userSpecifiedProgressInterval > 0 ) { return userSpecifiedProgressInterval ; } if ( previousWaitTime == 0 ) { return 10 ; } else if ( previousWaitTime == 10 ) { return 30 ; } else { return 60 ; } }
"Given a lock type, this method returns the lock types which are incompatible with that lock type according to this LockCompatibilityTable <code> Set < LockType > getIncompatibleLocks ( LockType l1 ) { ",List < LockType > compatibleLocks = table . get ( l1 ) ; Set < LockType > incompatibleLocks = new HashSet < LockType > ( ) ; for ( LockType l2 : table . keySet ( ) ) { if ( ! compatibleLocks . contains ( l2 ) ) { incompatibleLocks . add ( l2 ) ; } } return incompatibleLocks ; }
The total number of instances that the Dedicated host supports. <code> java . util . List < InstanceCapacity > getAvailableInstanceCapacity ( ) { ,if ( availableInstanceCapacity == null ) { availableInstanceCapacity = new com . amazonaws . internal . SdkInternalList < InstanceCapacity > ( ) ; } return availableInstanceCapacity ; }
Converts a byte array to a Base32 string. <code> String getString ( final byte [ ] bytes ) { ,final Base32 codec = new Base32 ( ) ; final byte [ ] decodedBytes = codec . encode ( bytes ) ; return StringEncoder . getString ( decodedBytes ) ; }
Throws the error that affected the most recent attempt to load the manifest. Does nothing if the most recent attempt was successful. <code> void maybeThrowError ( ) { ,if ( loadException == null || loadExceptionCount <= 1 ) { return ; } throw loadException ; }
Tells all ParserListeners that a controller event has been parsed. <code> void fireControllerEvent ( Controller event ) { ,Object [ ] listeners = listenerList . getListenerList ( ) ; for ( int i = listeners . length - 2 ; i >= 0 ; i -= 2 ) { if ( listeners [ i ] == ParserListener . class ) { ( ( ParserListener ) listeners [ i + 1 ] ) . controllerEvent ( event ) ; } } }
Adds delegate at the start of the chain. It becomes the first delegate called. <code> void addDelegateAtStart ( Object delegate ) { ,"synchronized ( delegates ) { if ( hasDelegate ( delegate ) ) { throw new IllegalArgumentException ( ""Delegate is already included"" ) ; } _NSDelegate delegateObject = new _NSDelegate ( getClass ( ) , delegate ) ; delegates . insertObjectAtIndex ( delegateObject , 0 ) ; } }"
"Returns the hash code value for this code signer. The hash code is generated using the signer's certificate path and the timestamp, if present. <code> int hashCode ( ) { ",if ( myhash == - 1 ) { if ( timestamp == null ) { myhash = signerCertPath . hashCode ( ) ; } else { myhash = signerCertPath . hashCode ( ) + timestamp . hashCode ( ) ; } } return myhash ; }
"Right aligns an integer number with zeros for printing <code> String padNumZero ( int num , int totalLen ) { ","String numStr = Integer . toString ( num ) ; int len = totalLen - numStr . length ( ) ; String pads = """" ; for ( int i = 0 ; i < len ; i ++ ) { pads += ""0"" ; } return pads + numStr ; }"
Lists the objects in a bucket <code> List < String > listBucket ( String bucketName ) { ,Storage storage = getStorage ( ) ; List < String > list = new ArrayList < String > ( ) ; List < StorageObject > objects = storage . objects ( ) . list ( bucketName ) . execute ( ) . getItems ( ) ; if ( objects != null ) { for ( StorageObject o : objects ) { list . add ( o . getName ( ) ) ; } } return list ; }
Checks if the given file is a binary external events file <code> boolean isBinaryEeFile ( File file ) { ,if ( ! file . getName ( ) . endsWith ( BINARY_EXT ) ) { return false ; } try { BinaryEventsReader r = new BinaryEventsReader ( file ) ; r . readEvents ( 1 ) ; r . close ( ) ; } catch ( SimError e ) { return false ; } return true ; }
"Update download notification to paused. <code> void notifyDownloadPaused ( Context context , String guid , String displayName ) { ",DownloadNotifier notifier = getDownloadNotifier ( context ) ; if ( notifier == null ) return ; DownloadInfo downloadInfo = new DownloadInfo . Builder ( ) . setIsOfflinePage ( true ) . setDownloadGuid ( guid ) . setFileName ( displayName ) . build ( ) ; notifier . notifyDownloadPaused ( downloadInfo ) ; }
Reverses the bits of an int value <code> int reverseBits ( int a ) { ,a = ( ( a >>> 1 ) & 0x55555555 ) | ( ( a << 1 ) & 0xAAAAAAAA ) ; a = ( ( a >>> 2 ) & 0x33333333 ) | ( ( a << 2 ) & 0xCCCCCCCC ) ; a = ( ( a >>> 4 ) & 0x0F0F0F0F ) | ( ( a << 4 ) & 0xF0F0F0F0 ) ; a = ( ( a >>> 8 ) & 0x00FF00FF ) | ( ( a << 8 ) & 0xFF00FF00 ) ; a = ( ( a >>> 16 ) & 0x0000FFFF ) | ( ( a << 16 ) & 0xFFFF0000 ) ; return a ; }
matches name of the given security group <code> Predicate < SecurityGroup > nameEquals ( final String name ) { ,"checkNotNull ( name , ""name must be defined"" ) ; return new Predicate < SecurityGroup > ( ) { @ Override public boolean apply ( SecurityGroup ext ) { return name . equals ( ext . getName ( ) ) ; } @ Override public String toString ( ) { return ""nameEquals("" + name + "")"" ; } } ; }"
Gets a list of all domain representatives <code> SortedSet < String > getRepresentativeDomains ( ) { ,"String url = base + ""representativeDomains?cluster="" + cutoff ; return requestRepresentativeDomains ( url ) ; }"
"Adds the given element as the last one, but only if it is greater than the last element. <code> void addLast ( T e ) { ",notNull ( e ) ; if ( duplicates || list . size ( ) == 0 || e . compareTo ( list . getLast ( ) ) > 0 ) { list . addLast ( e ) ; } }
"Check a number of tags in the given order for the any of the given values. Used to parse hierarchical access restrictions <code> boolean hasTag ( String [ ] keyList , Set < String > values ) { ",if ( tags == null ) return false ; for ( int i = 0 ; i < keyList . length ; i ++ ) { String osmValue = tags . get ( keyList [ i ] ) ; if ( osmValue != null && values . contains ( osmValue ) ) return true ; } return false ; }
Calculates square root of this complex number <code> Complex squareRoot ( ) { ,"Double r = Math . sqrt ( ( real + modulus ( ) ) / 2 ) ; Double i = Math . sqrt ( ( - real + modulus ( ) ) / 2 ) * MathUtil . sgn ( img ) ; return new Complex ( r , i ) ; }"
Release the clone back to the pool. The clone will be available for other clients. <code> void releaseClone ( Object clone ) { ,"if ( trackLockedClones ) { if ( ! lockedClones . remove ( clone ) ) { throw new JRRuntimeException ( ""Cannot release clone."" ) ; } } availableClones . addLast ( clone ) ; }"
Convert null strings to empty strings <code> String emptyIfNull ( Object input ) { ,"String returnValue = """" ; if ( input != null ) { returnValue = input . toString ( ) ; } return returnValue ; }"
Method to check if the parameter sequence is DNA or RNA <code> boolean isFastaDNA ( String sequence ) { ,"if ( ! ( sequence == null || sequence . length ( ) == 0 ) ) { return sequence . toUpperCase ( ) . contains ( ""T"" ) ; } return false ; }"
"Overloaded the method in Index to allow a user to specify if the query should be case sensitive. <code> IEntryResult [ ] queryEntries ( char [ ] prefix , boolean isCaseSensitive ) { ","BlocksIndexInput input = getBlocksIndexInput ( ) ; try { return input . queryEntriesPrefixedBy ( prefix , isCaseSensitive ) ; } finally { if ( ! doCache ) { input . close ( ) ; } } }"
"Sets the node in the specified position. <code> void setNode ( ConnectionProvider conn , VariablesSecureApp vars , String TreeType , String TreeID , String strParentID , String strLink , String strSeqNo ) { ","if ( log4j . isDebugEnabled ( ) ) log4j . debug ( ""WindowTreeUtility.setNode() - TreeID: "" + TreeID ) ; WindowTreeData . update ( conn , vars . getUser ( ) , strParentID , strSeqNo , TreeID , strLink ) ; }"
Returns a list with an item for each semicolon-separated element of the property. <code> List < String > getListOfSemicolonSeparatedElements ( String name ) { ,"final String value = getString ( name , null ) ; if ( value == null || value . trim ( ) . length ( ) == 0 ) { return Collections . emptyList ( ) ; } return Arrays . asList ( value . split ( "";"" ) ) ; }"
"A helper function that will return the SyntaxDocument attached to the given text component. Return null if the document is not a SyntaxDocument, or if the text component is null <code> SyntaxDocument getSyntaxDocument ( JTextComponent component ) { ",if ( component == null ) { return null ; } Document doc = component . getDocument ( ) ; if ( doc instanceof SyntaxDocument ) { return ( SyntaxDocument ) doc ; } else { return null ; } }
"Writes the DiscoverInfo stanza(/packet) to an file <code> void writeInfoToFile ( File file , DiscoverInfo info ) { ",DataOutputStream dos = new DataOutputStream ( new FileOutputStream ( file ) ) ; try { dos . writeUTF ( info . toXML ( ) . toString ( ) ) ; } finally { dos . close ( ) ; } }
"Business method that returns VerbNet data as DOM document from sense <code> Document queryDoc ( final SQLiteDatabase connection , final long wordId , final Long synsetId , final Character pos ) { ","final Document doc = DomFactory . makeDocument ( ) ; final Node rootNode = VnNodeFactory . makeVnRootNode ( doc , wordId , synsetId ) ; VerbNetImplementation . walk ( connection , doc , rootNode , wordId , synsetId , true , true ) ; return doc ; }"
"Adds a child file. <code> FileInfo addFile ( final String baseName , final String content ) { ","final FileInfo child = new FileInfo ( baseName , FileType . FILE , content ) ; addChild ( child ) ; return child ; }"
The content server URL <code> String getContentServer ( ) { ,"String contentServer = mSharedPrefs . getString ( ConstantValues . APP_PREFERENCES_BASE_URL , null ) ; if ( contentServer == null ) { contentServer = ConstantValues . DEFAULT_CONTENT_SERVER ; } return contentServer ; }"
Creates and returns a copy of the given array. <code> T [ ] copyOf ( T [ ] array ) { ,"if ( array == null ) throw new NullPointerException ( ""The array to copy should not be null"" ) ; int arraySize = array . length ; T [ ] copy = ( T [ ] ) Array . newInstance ( array . getClass ( ) . getComponentType ( ) , arraySize ) ; for ( int i = 0 ; i < arraySize ; i ++ ) copy [ i ] = array [ i ] ; return copy ; }"
"Used to construct a messageId for a tuple corresponding to a Kinesis record. <code> Object constructMessageId ( String shardId , String sequenceNumber ) { ","String messageId = shardId + "":"" + sequenceNumber ; return messageId ; }"
Return the cached result metadata featured by the given DataSourceAndDataSet. Please note that the paramter would have no impact to DataSourceAndDataSet so that will be omited. <code> IResultClass getCachedResultClass ( DataSourceAndDataSet dsAndDs ) { ,IDataSetCacheObject cacheObject = null ; Object key = getKey ( dsAndDs ) ; if ( key != null ) { cacheObject = ( IDataSetCacheObject ) cacheMap . get ( key ) ; } if ( cacheObject != null ) { return cacheObject . getResultClass ( ) ; } else { return null ; } }
Used to identify the name of the file or folder <code> String getNameFromPath ( String path ) { ,"String name = null ; if ( path . equals ( ROOT_PATH ) ) { name = ""/"" ; } else { String [ ] parentFolders = path . split ( SPLIT_CHAR ) ; name = parentFolders [ parentFolders . length - 1 ] ; } return name ; }"
Gets the connection pool size when in WAL mode. Maximum number of database connections opened and managed by framework layer to handle queries on each database when using Write-Ahead Logging. <code> int getWALConnectionPoolSize ( ) { ,"int value = 4 ; return Math . max ( 2 , value ) ; }"
Helper function for subclasses to activate the GL environment before running. <code> boolean activateGlContext ( ) { ,GLEnvironment glEnv = mFilterContext . getGLEnvironment ( ) ; if ( glEnv != null && ! glEnv . isActive ( ) ) { glEnv . activate ( ) ; return true ; } return false ; }
Subtract a vector from this vector in place <code> void minusEquals ( Vector vector ) { ,"for ( int i = 0 ; i < size ( ) ; i ++ ) { set ( i , get ( i ) - vector . get ( i ) ) ; } }"
This method is used to show visibility of the Rule <code> Visibility getVisibility ( ) { ,if ( visibility == null ) { return Visibility . VISIBLE ; } return visibility ; }
This sets the address to which the data packet will be transmitted. <code> void setAddress ( InetAddress iaddr ) { ,"if ( iaddr == null ) throw new NullPointerException ( ""Null address"" ) ; address = iaddr ; }"
To test class if has default constructor method <code> boolean hasDefaultConstructor ( Class < ? > cls ) { ,"if ( cls == null ) { return false ; } try { cls . getConstructor ( new Class < ? > [ 0 ] ) ; } catch ( NoSuchMethodException e2 ) { return false ; } catch ( SecurityException e2 ) { throw new IllegalArgumentException ( e2 . getMessage ( ) , e2 ) ; } return true ; }"
"Read a dictionary from a unigram XML file, and optionally a bigram XML file. <code> FusionDictionary readXmlFile ( final String unigramXmlFilename , final String bigramXmlFilename ) { ","final FileInputStream unigrams = new FileInputStream ( new File ( unigramXmlFilename ) ) ; final FileInputStream bigrams = null == bigramXmlFilename ? null : new FileInputStream ( new File ( bigramXmlFilename ) ) ; return XmlDictInputOutput . readDictionaryXml ( unigrams , bigrams ) ; }"
"Serialize an instance, restore it, and check for equality. <code> void testSerialization ( ) { ","Range r1 = new Range ( 25.0 , 133.42 ) ; Range r2 = ( Range ) TestUtilities . serialised ( r1 ) ; assertEquals ( r1 , r2 ) ; }"
"Saves the API preference store, if needed. <code> void saveAPIPrefs ( ) { ",Assert . isNotNull ( uiCallback ) ; uiCallback . savePreferences ( ) ; }
Returns true if the HTTP proxy must be enabled. <code> boolean isHttpEnabled ( ) { ,ProxyPreference preference = getProxyDao ( ) . get ( ProxyKey . HTTP_ENABLED ) ; if ( ( preference == null ) || StringUtils . isEmpty ( preference . getValue ( ) ) ) { return false ; } else { return Boolean . valueOf ( preference . getValue ( ) ) . booleanValue ( ) ; } }
Performs an in-place element by element square operation. aij = aij^2 <code> void elementSquare ( D1Matrix64F a ) { ,"final int size = a . getNumElements ( ) ; for ( int i = 0 ; i < size ; i ++ ) { a . set ( i , a . get ( i ) * a . get ( i ) ) ; } }"
"get property value of app conf <code> boolean getBooleanValue ( String name , boolean defaultValue ) { ",if ( StringUtil . isNullOrBlank ( name ) ) { return defaultValue ; } return Boolean . parseBoolean ( appProp . getProperty ( name ) ) ; }
"Returns the next optional parameter index. <code> Integer getNexOptionalIndex ( List < Parameter > parameters , int i , Integer index ) { ",Parameter parameter = null ; for ( int j = i + 1 ; j < parameters . size ( ) ; j ++ ) { parameter = parameters . get ( j ) ; if ( ! parameter . isRequired ( ) && index == null || ( index != null && index < j ) ) { return j ; } } return null ; }
"Test that an operation returns a certain result when each server in the layout returns a certain error code. <code> void testWithErrorCodes ( ServerErrorCode [ ] serverErrorCodesInOrder , MockServerLayout serverLayout , RouterErrorCode expectedError , ErrorCodeChecker errorCodeChecker ) { ","setServerErrorCodes ( serverErrorCodesInOrder , serverLayout ) ; errorCodeChecker . testAndAssert ( expectedError ) ; resetServerErrorCodes ( serverLayout ) ; }"
"Add a player to a party. This function is designed for API usage. <code> void addToParty ( Player player , String partyName ) { ","Party party = PartyManager . getParty ( partyName ) ; if ( party == null ) { party = new Party ( player . getName ( ) , partyName ) ; } PartyManager . addToParty ( UserManager . getPlayer ( player ) , party ) ; }"
Gets the used bytes of Tachyon's BlockStore. <code> long getUsedBytes ( ) { ,BlockMasterClient blockMasterClient = mContext . acquireMasterClient ( ) ; try { return blockMasterClient . getUsedBytes ( ) ; } catch ( ConnectionFailedException e ) { throw new IOException ( e ) ; } finally { mContext . releaseMasterClient ( blockMasterClient ) ; } }
Creates new audio format descriptor. <code> AudioFormat createAudioFormat ( EncodingName name ) { ,if ( name . equals ( DTMF ) ) { return new DTMFFormat ( ) ; } return new AudioFormat ( name ) ; }
Adds solution to the collection of initial solutions. <code> void addInitialSolution ( VehicleRoutingProblemSolution solution ) { ,verify ( solution ) ; initialSolutions . add ( solution ) ; }
"Creates an element with the specified tag name and character content. <code> void serializeElement ( final String tag , final String content , final ContentHandler handler ) { ","final AttributesImpl attributes = new AttributesImpl ( ) ; handler . startElement ( null , tag , tag , attributes ) ; handler . characters ( content . toCharArray ( ) , 0 , content . length ( ) ) ; handler . endElement ( null , tag , tag ) ; }"
An IN is getting evicted or is displaced by recovery. Caller is responsible for acquiring the major latch before calling this and releasing it when they're done. <code> void removeLatchAlreadyHeld ( IN in ) { ,assert majorLatch . isOwner ( ) ; original ( in ) ; }
Retrieve the representation of the message payload. <code> String getAclRepresentation ( ) { ,if ( env != null ) return env . getAclRepresentation ( ) ; else return null ; }
Check whether or not all data require for the standard rating process are available <code> boolean hasRequireStandardData ( ) { ,if ( builderLaunchNumber != - 1 || builderStandardListener == null ) { return false ; } return true ; }
Get an identity transform (creating it if necessary) <code> AffineTransform getIdentity ( ) { ,if ( m_identity == null ) m_identity = new AffineTransform ( ) ; return m_identity ; }
"Retrieves an annotation for the specified field of getter. <code> T getAnnotationFromGetter ( Class parentClass , String property , Class < T > annotationClass ) { ","try { Method getter = reflectionProvider . getGetMethod ( parentClass , property ) ; if ( getter != null ) { return getter . getAnnotation ( annotationClass ) ; } } catch ( ReflectionException ognle ) { ; } catch ( IntrospectionException ie ) { ; } return null ; }"
"search through the list of productions in G for A, if the first terminal of that production equal to a then return true. <code> boolean isExistProduction ( NonTerminal A , Terminal a ) { ",Production p ; for ( int i = 0 ; i < g . getNumProduction ( ) ; i ++ ) { p = g . getProduction ( ) . elementAt ( i ) ; if ( p . getLHS ( ) . equals ( A ) && p . getRHSLength ( ) > 0 ) { if ( p . getRHS ( ) . elementAt ( 0 ) . equals ( a ) ) return true ; } } return false ; }
Gets the primary thread group. <code> ThreadGroup primaryThreadGroup ( ) { ,ThreadGroup threadGroup = Thread . currentThread ( ) . getThreadGroup ( ) ; while ( threadGroup . getParent ( ) != null ) { threadGroup = threadGroup . getParent ( ) ; } return threadGroup ; }
Returns the formatted message. <code> String getFormattedMessage ( ) { ,final InternalState state = getState ( ) ; final StringBuilder buffer = state . buffer ; formatTo ( buffer ) ; return buffer . toString ( ) ; }
"Get the hash, as a String. <code> String getHashString ( ) { ",if ( null != hash ) return new String ( Hex . encodeHex ( hash ) ) ; else return null ; }
"Used to issue a Type.ADDED FeatureEvent indicating a new feature being created <code> void fireFeatureAdded ( FeatureSource < ? , ? > source , Feature feature ) { ","if ( listeners . isEmpty ( ) && tx != Transaction . AUTO_COMMIT ) return ; Filter filter = idFilter ( feature ) ; ReferencedEnvelope bounds = ReferencedEnvelope . reference ( feature . getBounds ( ) ) ; FeatureEvent event = new FeatureEvent ( source , Type . ADDED , bounds , filter ) ; fireFeatureEvent ( event ) ; }"
Returns the content type to a specific SOAP attachment identified by referenceId. <code> String getAttachmentContentType ( String referenceId ) { ,Vector entry = ( Vector ) attachments . get ( referenceId ) ; if ( entry == null ) { return null ; } return ( String ) entry . get ( 0 ) ; }
"Removes the first location matching the specific terminal ID and height from this argument. <code> void removeLoc ( int terminalId , int height ) { ","for ( PBLoc loc : l_locs ) { if ( loc . equals ( terminalId , height ) ) { l_locs . remove ( loc ) ; break ; } } }"
"Load a document in OpenOffice. <code> Component loadDocument ( final File f , final boolean hidden ) { ","if ( ! f . exists ( ) ) throw new FileNotFoundException ( f . getAbsolutePath ( ) ) ; return loadDocumentFromURLAsync ( convertToUrl ( f . getAbsolutePath ( ) ) , hidden ) ; }"
Method : requestPendingcount Params : count - how many requests were sent Return : void Purpose : Record how many requests were sent <code> void requestPendingCount ( int count ) { ,synchronized ( countLock ) { hasError = false ; requestPendingCount = count ; } }
Return the action key. actionKey = controllerKey + methodName <code> String getActionKey ( ) { ,"if ( action == null ) throw new RuntimeException ( ""This method can only be used for action interception"" ) ; return action . getActionKey ( ) ; }"
One or more values for the account attribute. <code> java . util . List < AccountAttributeValue > getAttributeValues ( ) { ,if ( attributeValues == null ) { attributeValues = new com . amazonaws . internal . SdkInternalList < AccountAttributeValue > ( ) ; } return attributeValues ; }
test with a new StringSource object having same content <code> void borrowCompiledXQueryNewStringSource ( ) { ,"xqueryPool . returnCompiledXQuery ( stringSource , preCompiledXQuery ) ; StringSource localStringSource = new StringSource ( TEST_XQUERY_SOURCE ) ; callAndTestBorrowCompiledXQuery ( localStringSource ) ; }"
"Write the passed map to the passed output stream using the predefined XML layout. <code> ESuccess writeMap ( @ Nonnull final Map < String , String > aMap , @ Nonnull @ WillClose final OutputStream aOS ) { ","ValueEnforcer . notNull ( aMap , ""Map"" ) ; ValueEnforcer . notNull ( aOS , ""OutputStream"" ) ; try { final IMicroDocument aDoc = createMapDocument ( aMap ) ; return MicroWriter . writeToStream ( aDoc , aOS , XMLWriterSettings . DEFAULT_XML_SETTINGS ) ; } finally { StreamHelper . close ( aOS ) ; } }"
"This method grabs all the metrics stored in CompilerMetrics and puts them into a map. <code> void handleStats ( String name , CompilerMetrics compilerMetrics ) { ","currentSelection = name ; HashMap < String , String > updatedMap = initStatMap ( compilerMetrics ) ; compilationUnitToStats . put ( name , updatedMap ) ; }"
The list of SnapshotCopyGrant objects. <code> java . util . List < SnapshotCopyGrant > getSnapshotCopyGrants ( ) { ,if ( snapshotCopyGrants == null ) { snapshotCopyGrants = new com . amazonaws . internal . ListWithAutoConstructFlag < SnapshotCopyGrant > ( ) ; snapshotCopyGrants . setAutoConstruct ( true ) ; } return snapshotCopyGrants ; }
"If the specified string contains an alias group in front of the UUID, strip off that prefix and return just the UUID. If the string does NOT contain a prefixed UUID, this method simply returns the input string. <code> String stripPrefixFromUUID ( final String str ) { ",if ( str == null ) { return null ; } int index = str . indexOf ( PREFIXED_OBJECT_ID_KEY ) ; if ( index == - 1 ) { index = str . indexOf ( PREFIXED_OBJECT_ID_KEY_UCASE ) ; } if ( index != - 1 ) { return str . substring ( index + 1 ) ; } return str ; }
"Returns a copy of the the array of coefficients b0, ..., bp. <code> double [ ] getCoefficients ( ) { ","double [ ] result = new double [ b . length ] ; System . arraycopy ( b , 0 , result , 0 , b . length ) ; return result ; }"
Returns the root script node produced from the compiled JS input. <code> Node compileToScriptRoot ( Compiler compiler ) { ,Node root = compiler . getRoot ( ) ; return root . getLastChild ( ) . getFirstChild ( ) ; }
"Performs functionality common to both encryption and decryption. <code> byte [ ] commonCrypto ( Cipher cipher , byte [ ] inputMessage ) { ",byte [ ] outputMessage = null ; try { outputMessage = cipher . doFinal ( inputMessage ) ; } catch ( IllegalBlockSizeException | BadPaddingException e ) { throw new CryptoException ( e ) ; } return outputMessage ; }
"Remove alias from key store <code> void removeAlias ( KeyStore keystore , KeyStoreInfo info , String alias ) { ","keystore . deleteEntry ( alias ) ; KeyStoreUtil . save ( keystore , info ) ; }"
"Subtract a specific quantity from an inventory slots item stack. <code> void subtractAmountFromPlayerInvSlot ( PlayerInventory inv , int slot , int quant ) { ",ItemStack itemAtSlot = inv . getItem ( slot ) ; if ( itemAtSlot != null && quant <= 64 ) { itemAtSlot . setAmount ( itemAtSlot . getAmount ( ) - quant ) ; if ( itemAtSlot . getAmount ( ) == 0 ) { inv . clear ( slot ) ; } } }
Remove the error message of a field <code> void removeError ( ) { ,fieldError . setVisible ( false ) ; widget . removeStyleName ( INSTANCE . css ( ) . gpmFieldError ( ) ) ; fieldError . removeStyleName ( INSTANCE . css ( ) . gpmFieldErrorMessage ( ) ) ; }
Send a command to the FTP server and return the server's reply <code> String sendCommand ( String command ) { ,log ( DEBUG_ARROW + command ) ; writer . write ( command + EOL ) ; writer . flush ( ) ; return readReply ( ) ; }
Returns next affected agent or null if none. This method does not remove last iterated agent from 'affected' list. <code> Agent nextAgent ( ) { ,prevAffected = nextAffected [ prevAffected ] ; return agents [ nextAffected [ prevAffected ] ] ; }
"saves a static map to the given directory. <code> void saveNewMap ( MapFileHeader header , IMapData data , OutputStream out ) { ","try { if ( out == null ) { out = mapsDir . getOutputStream ( header ) ; } header . writeTo ( out ) ; FreshMapSerializer . serialize ( data , out ) ; } finally { if ( out != null ) { out . close ( ) ; } } loadFileList ( ) ; }"
Test an error is thrown when the output format's directory already exists. <code> void testCheckOutputSpecsAlreadyExists ( ) { ,"ghfs . mkdirs ( TEST_OUTPUT_PATH ) ; expectedException . expect ( IOException . class ) ; expectedException . expectMessage ( ""The output path '"" + TEST_OUTPUT_PATH + ""' already exists."" ) ; outputFormat . checkOutputSpecs ( mockTaskAttemptContext ) ; }"
Returns root dispersion (as defined in RFC-1305) in milliseconds as double precision value. <code> double getRootDispersionInMillisDouble ( ) { ,double l = getRootDispersion ( ) ; return l / 65.536 ; }
Confirm that cloning works. <code> void testCloning ( ) { ,"LineAndShapeRenderer r1 = new LineAndShapeRenderer ( ) ; LineAndShapeRenderer r2 = ( LineAndShapeRenderer ) r1 . clone ( ) ; assertTrue ( r1 != r2 ) ; assertTrue ( r1 . getClass ( ) == r2 . getClass ( ) ) ; assertTrue ( r1 . equals ( r2 ) ) ; assertTrue ( checkIndependence ( r1 , r2 ) ) ; }"
Get all implemented types of this class. <code> Type [ ] getTypes ( ) { ,Type [ ] type = new Type [ 5 ] ; type [ 0 ] = new Type ( XInterface . class ) ; type [ 1 ] = new Type ( XTypeProvider . class ) ; type [ 2 ] = new Type ( XPersistObject . class ) ; type [ 3 ] = new Type ( XServiceInfo . class ) ; type [ 4 ] = new Type ( XPropertySet . class ) ; return type ; }
Constructor tests for default constructor <code> void testConstructor_noArgs_defaultStringConverterIsNotNull ( ) { ,ChoiceBoxListCell < Object > cell = new ChoiceBoxListCell < > ( ) ; assertNotNull ( cell . getConverter ( ) ) ; }
"Specify an optional color for the view <code> void setColor ( ViewGroup group , int color ) { ","for ( int i = 0 ; i < group . getChildCount ( ) ; i ++ ) { View child = group . getChildAt ( i ) ; if ( child instanceof ViewGroup ) { setColor ( ( ViewGroup ) child , color ) ; } else if ( child instanceof TextView ) { ( ( TextView ) child ) . setTextColor ( color ) ; } } }"
"Saves the host to the preference file. <code> void saveHost ( Context context , Host h ) { ","SharedPreferences . Editor ed = PreferenceManager . getDefaultSharedPreferences ( context ) . edit ( ) ; if ( h != null ) { ed . putInt ( SETTING_HOST_ID , h . id ) ; } else { ed . putInt ( SETTING_HOST_ID , 0 ) ; } ed . commit ( ) ; host = h ; ClientFactory . resetClient ( h ) ; }"
Check if matches Ethernet network template. <code> boolean matchesEthernet ( NetworkIdentity ident ) { ,if ( ident . mType == TYPE_ETHERNET ) { return true ; } return false ; }
"Reads the exact number of bytes from the source input stream into a byte array. <code> int readFully ( byte [ ] b , int offs , int len ) { ","int read = 0 ; while ( len > 0 ) { int bytesRead = source . read ( b , offs , len ) ; if ( bytesRead == - 1 ) { while ( len -- > 0 ) { b [ offs ++ ] = 0 ; } break ; } read = read + bytesRead ; offs += bytesRead ; len -= bytesRead ; } return read ; }"
"Add a file count. <code> void addFileCount ( String type , String name , int [ ] count ) { ","name = name . replace ( ""|"" , ""/"" ) ; FileModelProxy proxy = getFileNameProxy ( name ) ; getFileCounts ( type ) . add ( new FileCount ( name , count , proxy ) ) ; }"
Check if mobile network with matching IMSI. <code> boolean matchesMobile ( NetworkIdentity ident ) { ,"if ( ident . mType == TYPE_WIMAX ) { return true ; } else { return ( ( sForceAllNetworkTypes || contains ( DATA_USAGE_NETWORK_TYPES , ident . mType ) ) && Objects . equal ( mSubscriberId , ident . mSubscriberId ) ) ; } }"
Return a list of legislator objects for every term a given legislator has served <code> List < Legislator > getLegislatorTermsByBioguide ( String bioguideId ) { ,String key = TERMS_BY_BIOGUIDE + bioguideId ; return getLegislatorTermsByKey ( key ) ; }
Create a string representation of TimeList. <code> String toString ( ) { ,"StringBuffer s = new StringBuffer ( """" ) ; int i = 0 ; while ( i < timeList . size ( ) ) { s . append ( getElementString ( i ) + "" "" ) ; i ++ ; } return new String ( s . toString ( ) ) ; }"
List context names of current session <code> ApiResponse contextList ( ) { ,"Map < String , String > map = null ; return api . callApi ( ""context"" , ""view"" , ""contextList"" , map ) ; }"
Check if your app is the default system SMS app. <code> boolean isDefaultSmsApp ( Context context ) { ,if ( hasKitKat ( ) ) { return context . getPackageName ( ) . equals ( Telephony . Sms . getDefaultSmsPackage ( context ) ) ; } return true ; }
Creates a canvas where VLC will paint the video. <code> Canvas createCanvas ( ) { ,"Canvas jCanvas = new Canvas ( ) ; jCanvas . setSize ( 500 , 500 ) ; jCanvas . setBackground ( Color . BLACK ) ; return jCanvas ; }"
"Writes a setstring record to the log, and returns its lsn. Updates to temporary files are not logged; instead, a ""dummy"" negative lsn is returned. <code> int setString ( Buffer buff , int offset , String newval ) { ","String oldval = buff . getString ( offset ) ; Block blk = buff . block ( ) ; if ( isTempBlock ( blk ) ) return - 1 ; else return new SetStringRecord ( txnum , blk , offset , oldval , newval ) . writeToLog ( ) ; }"
Enters a value passed from the test into the fullname field. <code> void enterFullname ( String fullName ) { ,"WebElement fullname = driver . findElement ( By . id ( ""id_fullname"" ) ) ; fullname . sendKeys ( fullName ) ; }"
Test for getting tax for taxable salary. <code> void testGetTaxForTaxableSalary ( ) { ,"TenPercentSlabTaxCalculator calculator = new TenPercentSlabTaxCalculator ( 500000 ) ; assertEquals ( 25000 , calculator . getTax ( 0 ) , 0.0 ) ; }"
Converts a list of performance entities to performance DTOs <code> List < PerformanceDto > convertPerformances ( List < Performance > performances ) { ,List < PerformanceDto > ret = new ArrayList < > ( ) ; if ( null != performances ) { for ( Performance n : performances ) { PerformanceDto dto = convert ( n ) ; ret . add ( dto ) ; } } return ret ; }
Method to reset the login fields <code> void clearFields ( ) { ,"presentationName = """" ; presentationPassword = null ; }"
"You know you want this, if you're going to be calling getString() a lot. <code> void setUseStringCache ( String column , boolean b ) { ",Column c = getColumn ( column ) ; c . setUseStringCache ( b ) ; }
Checks if there is no transaction <code> boolean isNoTransaction ( ) { ,try { return lookupUserTransaction ( ) . getStatus ( ) == Status . STATUS_NO_TRANSACTION ; } catch ( NamingException | SystemException cause ) { return true ; } }
Retrieves the class object for the class with the given name. <code> Class getClass ( String name ) { ,try { return Class . forName ( name ) ; } catch ( ClassNotFoundException ex ) { throw new ClassNotFoundException ( name ) ; } }
"Attempts to remove the specified amount of grass from the square. If there isn't enough grass, removes as much as possible. <code> int takeGrass ( int grassToTake ) { ",int grassTaken ; if ( grassHeight - grassToTake > 0 ) { grassHeight -= grassToTake ; grassTaken = grassToTake ; } else if ( grassHeight > 0 ) { grassTaken = grassHeight ; grassHeight = 0 ; } else { grassTaken = 0 ; } notifyListeners ( ) ; return grassTaken ; }
"Returns the tokens that compose the string mapped with the given key <code> List getStringList ( final String key , final String delim , final boolean returnDelims ) { ","final List result = new ArrayList ( ) ; final StringTokenizer st = new StringTokenizer ( getString ( key ) , delim , returnDelims ) ; while ( st . hasMoreTokens ( ) ) { result . add ( st . nextToken ( ) ) ; } return result ; }"
"A set of Android resources to supply to the compositor. <code> void setResources ( int resource , int presssedResource , int incognitoResource , int incognitoPressedResource ) { ",mResource = resource ; mPressedResource = presssedResource ; mIncognitoResource = incognitoResource ; mIncognitoPressedResource = incognitoPressedResource ; }
"Return the immediate child of this node having a given ID. If there is no such child, return null; <code> FPNode getChildWithID ( int id ) { ",for ( FPNode child : childs ) { if ( child . itemID == id ) { return child ; } } return null ; }
Converts long value to an array of bytes (1 long = 4 bytes). <code> byte [ ] longToBytes ( long value ) { ,byte [ ] result = new byte [ 4 ] ; for ( int i = 3 ; i >= 0 ; i -- ) { result [ i ] = ( byte ) ( value & 0xFF ) ; value >>= 8 ; } return result ; }
Simple method to query user for a new Teiid Model Project <code> IProject queryUserToCreateModelProject ( ) { ,"Properties newProps = new Properties ( ) ; ModelerUiViewUtils . launchWizard ( ""newModelProject"" , new StructuredSelection ( ) , newProps , true ) ; IProject project = DesignerPropertiesUtil . getProject ( newProps ) ; return project ; }"
"Check for image format magic numbers of formats supported by Android. <code> boolean isDecodableByAndroid ( byte [ ] buffer , int offset ) { ","for ( ImageMagicNumbers m : ImageMagicNumbers . values ( ) ) { if ( bufferStartsWith ( buffer , m . value , offset ) ) { return true ; } } return false ; }"
Obtiene un usuario por su nombre <code> User getUserByLegajo ( String legajo ) { ,"User user = null ; List < User > list = HibernateService . findByFilter ( User . class , ""legajo"" , legajo ) ; for ( int i = 0 ; i < list . size ( ) ; i ++ ) { user = list . get ( i ) ; } if ( user != null ) return getUser ( user . getId ( ) ) ; return null ; }"
Removes diacritical mark from a string <code> String enhremoveDiacriticalMark ( String st ) { ,int len = st . length ( ) ; StringBuffer tempS = new StringBuffer ( ) ; for ( int i = 0 ; i < len ; i ++ ) { tempS . append ( removeDiacriticalMark ( st . charAt ( i ) ) ) ; } return tempS . toString ( ) ; }
Reads a variable long if possible. If not present the reader index is reset to the last mark. <code> Optional < Long > readMaybeVLong ( ByteBuf bf ) { ,"if ( bf . readableBytes ( ) >= 1 ) { byte b = bf . readByte ( ) ; return read ( bf , b , 7 , ( long ) b & 0x7F , 1 ) ; } else { bf . resetReaderIndex ( ) ; return Optional . empty ( ) ; } }"
"Copy all params to the given map or if the given map is null create a new one <code> Map < String , Object > getAll ( Map < String , Object > sink , String ... params ) { ","if ( sink == null ) sink = new LinkedHashMap < > ( ) ; for ( String param : params ) { String [ ] v = getParams ( param ) ; if ( v != null && v . length > 0 ) { if ( v . length == 1 ) { sink . put ( param , v [ 0 ] ) ; } else { sink . put ( param , v ) ; } } } return sink ; }"
Creates an editor input using the given file. <code> IEditorInput createFileEditorInput ( File file ) { ,"if ( file == null ) throw new IllegalArgumentException ( ""File is null"" ) ; return new MindMapEditorInput ( file . toURI ( ) ) ; }"
Returns the screen/display size <code> Point getDisplaySize ( Context context ) { ,WindowManager wm = ( WindowManager ) context . getSystemService ( Context . WINDOW_SERVICE ) ; Display display = wm . getDefaultDisplay ( ) ; Point size = new Point ( ) ; display . getSize ( size ) ; return size ; }
"Add a node corresponding to an intersection at a Geographic Point If the location is already in the graph or null, this method does not change the graph. <code> boolean addVertex ( GeographicPoint location ) { ","if ( ! graph . containsKey ( location ) ) graph . put ( location , new LinkedList < > ( ) ) ; return false ; }"
Returns the best Blast hit. <code> BlastHit getFirstHit ( ) { ,if ( blastHits . size ( ) > 0 ) { return blastHits . get ( 0 ) ; } else { return null ; } }
This method was generated by MyBatis Generator. This method corresponds to the database table event_group <code> int hashCode ( ) { ,final int prime = 31 ; int result = 1 ; result = prime * result + ( ( getEventid ( ) == null ) ? 0 : getEventid ( ) . hashCode ( ) ) ; result = prime * result + ( ( getGroupid ( ) == null ) ? 0 : getGroupid ( ) . hashCode ( ) ) ; return result ; }
This method computes whether a chain of converters handles exceptions or not. <code> boolean chainHandlesThrowable ( Converter < ILoggingEvent > head ) { ,Converter < ILoggingEvent > c = head ; while ( c != null ) { if ( c instanceof ThrowableHandlingConverter ) { return true ; } c = c . getNext ( ) ; } return false ; }
Confirm that cloning works. <code> void testCloning ( ) { ,"RingPlot p1 = new RingPlot ( null ) ; GradientPaint gp = new GradientPaint ( 1.0f , 2.0f , Color . yellow , 3.0f , 4.0f , Color . red ) ; p1 . setSeparatorPaint ( gp ) ; RingPlot p2 = ( RingPlot ) p1 . clone ( ) ; assertTrue ( p1 != p2 ) ; assertTrue ( p1 . getClass ( ) == p2 . getClass ( ) ) ; assertTrue ( p1 . equals ( p2 ) ) ; }"
Return a simple readable description of eObject using an IItemLabelProvider if possible. <code> String getLabel ( @ Nullable Object object ) { ,if ( object instanceof Labelable ) { String text = ( ( Labelable ) object ) . getText ( ) ; if ( text != null ) { return text ; } } return NameUtil . qualifiedNameFor ( object ) ; }
Returns true if this Tokenizer has more elements. <code> boolean hasNext ( ) { ,if ( nextToken == null ) { nextToken = getNext ( ) ; } return nextToken != null ; }
"compare two doubles with an epsilon. taken from Ilias/Markus Iser <code> boolean greaterThan ( double a , double b ) { ",if ( a == b ) { return false ; } return a - b > - EPSILON && ! ( Math . abs ( a - b ) < EPSILON ) ; }
Write the tag contained in the audioFile in the actual file on the disk. <code> void writeFile ( AudioFile f ) { ,String ext = Utils . getExtension ( f . getFile ( ) ) ; AudioFileWriter afw = writers . get ( ext ) ; if ( afw == null ) { throw new CannotWriteException ( ErrorMessage . NO_WRITER_FOR_THIS_FORMAT . getMsg ( ext ) ) ; } afw . write ( f ) ; }
"This function returns how many bombs should a grid of given size have. <code> int noOfBombsInGrid ( int width , int height , int level ) { ",int noOfBombsInGrid = ( int ) ( ( width * height * level ) / 10 ) ; return noOfBombsInGrid * 2 ; }
"The time of arrival, GBTT value takes precedence to WTT <code> String getArrival ( ) { ",String t = getPta ( ) ; return t == null ? getWta ( ) : t ; }
"Calculates the brightness of a color, based on its RGB values. <code> int colorBrightness ( int color ) { ",int r2 = Color . red ( color ) * Color . red ( color ) ; int g2 = Color . green ( color ) * Color . green ( color ) ; int b2 = Color . blue ( color ) * Color . blue ( color ) ; return ( int ) Math . sqrt ( r2 * 0.241f + g2 * 0.691f + b2 * 0.068f ) ; }
Get the text of the tokens comprising this node. <code> String getText ( ) { ,"StringBuilder text = new StringBuilder ( ) ; Token t = firstToken ; while ( t != null ) { text . append ( t . image ) ; if ( ! t . image . equals ( ""."" ) ) text . append ( "" "" ) ; if ( t == lastToken || t . image . equals ( ""{"" ) || t . image . equals ( "";"" ) ) break ; t = t . next ; } return text . toString ( ) ; }"
Returns all the packages that are known to the callers class loader. It may return an empty array if the classloader of the caller is null. <code> Package [ ] getPackages ( ) { ,SecurityManager sm = System . getSecurityManager ( ) ; Class c = sm . getClassContext ( ) [ 1 ] ; ClassLoader cl = c . getClassLoader ( ) ; if ( cl != null ) return cl . getPackages ( ) ; else return new Package [ 0 ] ; }
"Faster toRGB method which uses the provided output array. <code> void CStoRGB ( ColorSpace cs , float [ ] colorvalue , float [ ] rgb ) { ","if ( cs . isCS_sRGB ( ) ) { System . arraycopy ( colorvalue , 0 , rgb , 0 , 3 ) ; } else if ( cs instanceof NamedColorSpace ) { CStoRGB ( ( NamedColorSpace ) cs , colorvalue , rgb ) ; } else { float [ ] tmp = cs . toRGB ( colorvalue ) ; System . arraycopy ( tmp , 0 , rgb , 0 , tmp . length ) ; } }"
"When called, start action sets time stamp to identify start time of operation. <code> Action0 getStartAction ( ) { ",return new Action0 ( ) { @ Override public void call ( ) { if ( startTime == null ) { startTime = new Date ( ) . getTime ( ) ; } } } ; }
Get the number of anonymous users <code> int anonymousSize ( ) { ,"Integer count = ( Integer ) cache . get ( FQN_COUNT , ANONYMOUS_COUNT ) ; return ( count == null ? 0 : count . intValue ( ) ) ; }"
Convert String to a SafeHtml <code> SafeHtml toSafeHtml ( final String html ) { ,final SafeHtmlBuilder builder = new SafeHtmlBuilder ( ) ; builder . appendHtmlConstant ( html ) ; return builder . toSafeHtml ( ) ; }
Returns list of Child Concepts <code> Vector < String > getChildConcepts ( ResolvedConceptReference ref ) { ,"String code = ref . getCode ( ) ; Vector < String > supconcepts = getAssociatedConcepts ( code , false ) ; return supconcepts ; }"
"Given an endpoint, calculate the corresponding BrowserID audience. This is the domain, in web parlance. <code> String getAudienceForURL ( String serverURI ) { ","URI uri = new URI ( serverURI ) ; return new URI ( uri . getScheme ( ) , uri . getHost ( ) , null , null ) . toString ( ) ; }"
Confirm that cloning works. <code> void testCloning ( ) { ,"XYBoxAnnotation a1 = new XYBoxAnnotation ( 1.0 , 2.0 , 3.0 , 4.0 , new BasicStroke ( 1.2f ) , Color . red , Color . blue ) ; XYBoxAnnotation a2 = ( XYBoxAnnotation ) a1 . clone ( ) ; assertTrue ( a1 != a2 ) ; assertTrue ( a1 . getClass ( ) == a2 . getClass ( ) ) ; assertTrue ( a1 . equals ( a2 ) ) ; }"
Prepare saml outbound destination handler. <code> void prepareSamlOutboundDestinationHandler ( final MessageContext < T > outboundContext ) { ,final SAMLOutboundDestinationHandler handlerDest = new SAMLOutboundDestinationHandler ( ) ; handlerDest . initialize ( ) ; handlerDest . invoke ( outboundContext ) ; }
From from valid URL <code> void createFromUrl ( ) { ,"RepositoryId id = RepositoryId . createFromUrl ( new URL ( ""http://github.com/user/project"" ) ) ; assertNotNull ( id ) ; assertEquals ( ""user"" , id . getOwner ( ) ) ; assertEquals ( ""project"" , id . getName ( ) ) ; }"
Calculates hashcode for board <code> int hashCode ( ) { ,StringBuilder sb = new StringBuilder ( ) ; for ( int i = 0 ; i < board . length ; i ++ ) { for ( int j = 0 ; j < board [ 0 ] . length ; j ++ ) { sb . append ( board [ i ] [ j ] ) ; } } hashString = sb . toString ( ) ; return hashString . hashCode ( ) ; }
Get source connection for database from data source in the class <code> Connection getConnection ( String databaseName ) { ,"try { return getDataSource ( databaseName ) . getConnection ( ) ; } catch ( SQLException e ) { throw new RSSManagerException ( ""Error while acquiring datasource connection : "" + e . getMessage ( ) , e ) ; } }"
Fills the Queue with given size. <code> void fillQueue ( int size ) { ,for ( int i = 1 ; i < size + 1 ; i ++ ) { store . add ( getQueuedRequest ( i ) ) ; } }
Returns the total weight of all items in a array. <code> int getTotalWeight ( WeightedRandom . Item [ ] par0ArrayOfWeightedRandomItem ) { ,int var1 = 0 ; WeightedRandom . Item [ ] var2 = par0ArrayOfWeightedRandomItem ; int var3 = par0ArrayOfWeightedRandomItem . length ; for ( int var4 = 0 ; var4 < var3 ; ++ var4 ) { WeightedRandom . Item var5 = var2 [ var4 ] ; var1 += var5 . itemWeight ; } return var1 ; }
Creates a HzIntegrator object and initializes an array of Hazelcast instances. <code> HzIntegrator getHzIntegrator ( ) { ,if ( hzIntegrator == null ) { hzIntegrator = new HzIntegrator ( ) ; } return hzIntegrator ; }
Computes subdivision step size <code> void getStepSize ( ) { ,minstepsize = 0 ; if ( mapdesc . isConstantSampling ( ) ) { setstepsize ( mapdesc . maxrate ) ; } else if ( mapdesc . isDomainSampling ( ) ) { setstepsize ( mapdesc . maxrate * range [ 2 ] ) ; } else { assert ( order <= MAXORDER ) ; setstepsize ( mapdesc . maxrate ) ; } }
"Adds a geometry for the specified material index. <code> void putGeometry ( Integer materialIndex , Geometry geometry ) { ","List < Geometry > geomList = geometries . get ( materialIndex ) ; if ( geomList == null ) { geomList = new ArrayList < Geometry > ( ) ; geometries . put ( materialIndex , geomList ) ; } geomList . add ( geometry ) ; }"
"This function sets a floating point property of a buffer. note: There are no relevant buffer properties defined in OpenAL 1.1 which can be affected by this call, but this function may be used by OpenAL extensions. <code> void alBuffer ( int buffer , int pname , FloatBuffer value ) { ","BufferChecks . checkBuffer ( value , 1 ) ; nalBufferfv ( buffer , pname , MemoryUtil . getAddress ( value ) ) ; }"
"Check if zero VAT is allowed for the passed country <code> boolean isZeroVATAllowed ( @ Nonnull final Locale aCountry , final boolean bUndefinedValue ) { ","ValueEnforcer . notNull ( aCountry , ""Country"" ) ; final VATCountryData aVATCountryData = m_aVATItemsPerCountry . get ( CountryCache . getCountry ( aCountry ) ) ; return aVATCountryData != null ? aVATCountryData . isZeroVATAllowed ( ) : bUndefinedValue ; }"
Dispatches the mousepressed event to the subhandles. This is called from the connection handler as subhandles have precedence over the connection handler. <code> void mousePressed ( MouseEvent e ) { ,if ( graphComponent . isEnabled ( ) && ! graphComponent . isForceMarqueeEvent ( e ) && isEnabled ( ) ) { Iterator < mxCellHandler > it = handlers . values ( ) . iterator ( ) ; while ( it . hasNext ( ) && ! e . isConsumed ( ) ) { it . next ( ) . mousePressed ( e ) ; } } }
Generates a String representation of this object. <code> String toString ( ) { ,StringBuilder builder = new StringBuilder ( ) ; for ( int i = 0 ; i < fields . length ; i ++ ) { builder . append ( ':' ) ; if ( fields [ i ] != null ) builder . append ( fields [ i ] ) ; } return builder . substring ( 1 ) ; }
Writes the closing tag for the root element of the XML stream document. <code> void writeCloseTagRootElement ( ) { ,"try { Element root = baseDocument . getDocumentElement ( ) ; stream . write ( ( ""</"" + root . getTagName ( ) + "">"" ) . getBytes ( ) ) ; } catch ( Exception e ) { throw new XMPPException ( ""Could not send closing tag: "" + e . getMessage ( ) , e ) ; } }"
"Generate a single prediction for a test instance given the pre-trained classifier. <code> Prediction getPrediction ( DistributionClassifier classifier , Instance test ) { ","double actual = test . classValue ( ) ; double [ ] dist = classifier . distributionForInstance ( test ) ; if ( test . classAttribute ( ) . isNominal ( ) ) { return new NominalPrediction ( actual , dist , test . weight ( ) ) ; } else { return new NumericPrediction ( actual , dist [ 0 ] , test . weight ( ) ) ; } }"
Returns a string representation of this object; useful for testing and debugging. <code> String toString ( ) { ,"StringBuilder sb = new StringBuilder ( ) ; sb . append ( ""{"" ) ; if ( getIdentity ( ) != null ) sb . append ( ""Identity: "" + getIdentity ( ) + "","" ) ; if ( getScheduledEventId ( ) != null ) sb . append ( ""ScheduledEventId: "" + getScheduledEventId ( ) ) ; sb . append ( ""}"" ) ; return sb . toString ( ) ; }"
Returns the magic number for the class. <code> short getMagicNumber ( Class clazz ) { ,Short i = classMap . get ( clazz ) ; if ( i == null ) return - 1 ; else return i ; }
"Test of getKey method, of class ResponseMessage. <code> void testGetKey ( ) { ","String expResult = ""a"" ; String result = instance . getKey ( ) ; assertEquals ( expResult , result ) ; }"
"Get an access control object from the DB corresponding to the given list of search contexts. <code> AC getAccessControl ( Class < AC > pClazz , List < AccessControlFinder . Context > pContexts , List < Criterion > pAdditionalCriteria ) { ","AC lAccessControl = null ; for ( Context lCtx : pContexts ) { lAccessControl = getAccessControl ( pClazz , lCtx , pAdditionalCriteria ) ; if ( null != lAccessControl ) { return lAccessControl ; } } return lAccessControl ; }"
This test method demonstrates how we can configure the returned value when the method in question takes no method parameters. <code> void shouldReturnValue ( ) { ,willReturn ( 1L ) . given ( repository ) . count ( ) ; long actualCount = repository . count ( ) ; assertThat ( actualCount ) . isEqualByComparingTo ( 1L ) ; }
Called when disassociated with the DropTargetContextPeer. <code> void removeNotify ( ) { ,dropTargetContextPeer = null ; transferable = null ; }
"Asserts that the given file can be modified by the application. <code> void assertCanWrite ( AssertionInfo info , File actual ) { ","assertNotNull ( info , actual ) ; if ( actual . canWrite ( ) ) return ; throw failures . failure ( info , shouldBeWritable ( actual ) ) ; }"
"This test simulates an user which is already logged in into tenant1 and tries to access a resource on tenant2. On this scenario, the user should be shown the login page again. <code> void testUnauthorizedAccessLoggedIn ( ) { ","String keycloakServerBaseUrl = ""http://localhost:8081/auth"" ; doTenantRequests ( ""tenant1"" , false ) ; driver . navigate ( ) . to ( ""http://localhost:8081/multi-tenant?realm=tenant2"" ) ; Assert . assertTrue ( driver . getCurrentUrl ( ) . startsWith ( keycloakServerBaseUrl ) ) ; }"
Returns the image to use with most dialogs. <code> ImageIcon getApplicationImage ( ) { ,ImageIcon mainImage = Default . getImageIcon ( Default . FRAME_IMAGE ) ; if ( mainImage == null ) { mainImage = SparkRes . getImageIcon ( SparkRes . MAIN_IMAGE ) ; } return mainImage ; }
Creates the BinNavi menu. <code> JMenu createBinNaviMenu ( ) { ,"final JMenu menu = new JMenu ( ""BinNavi"" ) ; menu . setMnemonic ( 'B' ) ; menu . add ( CActionProxy . proxy ( new CAddDatabaseAction ( m_projectTree ) ) ) ; menu . addSeparator ( ) ; menu . add ( CActionProxy . proxy ( new CActionExit ( getParent ( ) ) ) ) ; return menu ; }"
"Fills up an EventSequence object with EventLists with the codePatern declared in the EventSequence Object. <code> void fillEventSequenceWithinPeriod ( final EventSequence eventSeq , final EventList eventList , final Period per ) { ","fillEventSequence ( eventSeq , eventList ) ; deleteOutSideOfPeriod ( eventSeq , per ) ; }"
"Find context with the given name in the context array, converting into org.omg.IOP.ServiceContext. <code> org . omg . IOP . ServiceContext findContext ( int ctx_name , ServiceContext [ ] cx ) { ","for ( int i = 0 ; i < cx . length ; i ++ ) if ( cx [ i ] . context_id == ctx_name ) return new org . omg . IOP . ServiceContext ( ctx_name , cx [ i ] . context_data ) ; throw new BAD_PARAM ( ""No context with id "" + ctx_name ) ; }"
Access an ordered list of all mimetype categories. <code> List < String > getMimeCategories ( ) { ,List < String > rv = new Vector < String > ( ) ; Set < String > categories = m_mimetypes . keySet ( ) ; if ( categories != null ) { rv . addAll ( categories ) ; } return rv ; }
"location for the swagger 1.2 resources <code> String getSwagger12ResourceLocation ( String apiName , String apiVersion , String apiProvider ) { ","String resourcePath = APIConstants . API_DOC_LOCATION + RegistryConstants . PATH_SEPARATOR + apiName + ""-"" + apiVersion + ""-"" + apiProvider + RegistryConstants . PATH_SEPARATOR + APIConstants . API_DOC_1_2_LOCATION ; return resourcePath ; }"
"The request from clients to get a report of Applications matching the giving and application types and application types in the cluster from the ResourceManager. <code> GetApplicationsRequest newInstance ( Set < String > applicationTypes , EnumSet < YarnApplicationState > applicationStates ) { ",GetApplicationsRequest request = Records . newRecord ( GetApplicationsRequest . class ) ; request . setApplicationTypes ( applicationTypes ) ; request . setApplicationStates ( applicationStates ) ; return request ; }
Tests writing an increasing byte array. <code> void byteArrayWrite ( ) { ,"mTestStream . write ( INCREASING_BYTES ) ; Assert . assertEquals ( INCREASING_BYTES . length , mTestStream . getWrittenBytes ( ) ) ; Assert . assertArrayEquals ( INCREASING_BYTES , Arrays . copyOfRange ( mTestStream . getBuffer ( ) . array ( ) , 0 , ( int ) BLOCK_LENGTH ) ) ; }"
Hash the clear text password and add a salt to it so it can be persisted <code> User augmentUser ( RegisteringUser user ) { ,"byte [ ] salt = AuthenticationUtils . getRandomSalt ( ) ; byte [ ] hashPwd = AuthenticationUtils . hash ( user . getClearTextPassword ( ) , salt ) ; user . setPassword ( ByteBuffer . wrap ( hashPwd ) ) ; user . setSalt ( ByteBuffer . wrap ( salt ) ) ; user . setJoined ( new Date ( ) ) ; user . setUserId ( UUIDs . timeBased ( ) ) ; return user ; }"
Returns a string representation of this object; useful for testing and debugging. <code> String toString ( ) { ,"StringBuilder sb = new StringBuilder ( ) ; sb . append ( ""{"" ) ; if ( getKeyPair ( ) != null ) sb . append ( ""KeyPair: "" + getKeyPair ( ) ) ; sb . append ( ""}"" ) ; return sb . toString ( ) ; }"
"Deletes a character from the specified position of the text, updates this LineBreakMeasurer object. <code> void deleteChar ( AttributedCharacterIterator newText , int pos ) { ","tm . deleteChar ( newText , pos ) ; position = newText . getBeginIndex ( ) ; maxpos -- ; }"
"Checks whether the given file has one of the given extension. <code> boolean hasExtension ( File file , String ... extensions ) { ","String extension = FilenameUtils . getExtension ( file . getName ( ) ) ; for ( String s : extensions ) { if ( extension . equalsIgnoreCase ( s ) || ( ""."" + extension ) . equalsIgnoreCase ( s ) ) { return true ; } } return false ; }"
"Creates an SSL server with the specified port, listen backlog, and local IP address to bind to. <code> SSLServerSocket createSSLServerSocket ( int port , int backlog , InetAddress bindAddress ) { ","SSLServerSocket sock = ( SSLServerSocket ) getSSLServerSocketFactory ( ) . createServerSocket ( port , backlog , bindAddress ) ; return sock ; }"
This method returns a list which contains a path to every given file in the input and a path to every file inside a given directory. The list is sorted alphabetically and contains no subdirectories or files within those. <code> List < Path > getFiles ( List < String > fileOrDirNames ) { ,ArrayList < Path > pathList = new ArrayList < Path > ( ) ; for ( String name : fileOrDirNames ) { pathList . addAll ( getFiles ( name ) ) ; } Collections . sort ( pathList ) ; return pathList ; }
"Sets the locale of current user-thread. This method should be called before access to any localized message. If the locale is null, the default locale will be set. <code> void setLocale ( Locale locale ) { ",if ( locale == null ) threadLocal . set ( Locale . getDefault ( ) ) ; else threadLocal . set ( locale ) ; }
"Returns the instructions for creating a new account, or null if there are no instructions. If present, instructions should be displayed to the end-user that will complete the registration process. <code> String getAccountInstructions ( ) { ",try { if ( info == null ) { getRegistrationInfo ( ) ; } return info . getInstructions ( ) ; } catch ( XMPPException xe ) { return null ; } }
"Enables an account that may or may not have previously been disabled. This erases any knowledge of a lockout, including one that wasn't necessarily in effect at the time the method was called. <code> void enableAccount ( String username ) { ",if ( provider . isReadOnly ( ) ) { throw new UnsupportedOperationException ( ) ; } provider . unsetDisabledStatus ( username ) ; if ( ! provider . shouldNotBeCached ( ) ) { lockOutCache . remove ( username ) ; } LockOutEventDispatcher . accountUnlocked ( username ) ; }
test that allowed stat puts proper entry in audit log <code> void testAuditAllowedStat ( ) { ,"final Path file = new Path ( fnames [ 0 ] ) ; FileSystem userfs = DFSTestUtil . getFileSystemAs ( userGroupInfo , conf ) ; setupAuditLogs ( ) ; FileStatus st = userfs . getFileStatus ( file ) ; verifyAuditLogs ( true ) ; assertTrue ( ""failed to stat file"" , st != null && st . isFile ( ) ) ; }"
"Generates the byte code to initialize the static coverage data field within this class. The code will push the [Z data array on the operand stack. <code> int genInitializeDataField ( final MethodVisitor mv , final int probeCount ) { ","final int size = accessorGenerator . generateDataAccessor ( classId , className , probeCount , mv ) ; mv . visitInsn ( Opcodes . DUP ) ; mv . visitFieldInsn ( Opcodes . PUTSTATIC , className , InstrSupport . DATAFIELD_NAME , InstrSupport . DATAFIELD_DESC ) ; return Math . max ( size , 2 ) ; }"
"Validate scheme. If schemes[] was initialized to a non null, then only those scheme's are allowed. Note this is slightly different than for the constructor. <code> boolean isValidScheme ( String scheme ) { ",if ( scheme == null ) { return false ; } return SCHEME_PATTERN . matcher ( scheme ) . matches ( ) ; }
"Compare 2 arrays only at the first level <code> boolean isEquals ( Object [ ] o1 , Object [ ] o2 ) { ",if ( o1 == o2 ) return true ; if ( o1 == null || o2 == null ) return false ; int length = o1 . length ; if ( length != o2 . length ) return false ; for ( int index = 0 ; index < length ; index ++ ) { if ( ! o1 [ index ] . equals ( o2 [ index ] ) ) return false ; } return true ; }
Returns a ContentValues object representing this note. <code> ContentValues getContentValues ( ) { ,"final ContentValues values = new ContentValues ( ) ; values . put ( _ID , mId ) ; values . put ( TITLE , mTitle ) ; values . put ( BODY , mBody ) ; values . put ( CURSOR , mCursor ) ; values . put ( SCROLL_Y , mScrollY ) ; return values ; }"
Clamps the minimum value of this tuple to the min parameter. <code> void clampMin ( double min ) { ,if ( x < min ) x = min ; if ( y < min ) y = min ; }
Converts an ANTRL OR AST into a filter OR AST. <code> IAbstractNode convertOr ( final CommonTree ast ) { ,final List < IAbstractNode > children = new ArrayList < IAbstractNode > ( ) ; for ( final Object childObject : ast . getChildren ( ) ) { children . add ( convert ( ( CommonTree ) childObject ) ) ; } return new CAbstractOrExpression ( children ) ; }
"returns a textual representation of the list of content types for the new resource. This will be the content type header if there is one, otherwise it will be determined by the file name <code> String findContentTypes ( Request request , String newName ) { ","String s = ContentTypeUtils . findContentTypes ( newName ) ; LogUtils . trace ( log , ""findContentTypes: got type from name. Type: "" + s ) ; return s ; }"
returns the resource path without the resource. <code> String stripResource ( String path ) { ,"String result = null ; if ( path != null ) { int pos = path . lastIndexOf ( ""/"" ) ; result = path . substring ( 0 , pos + 1 ) ; } return result ; }"
"Recursive method to find the indices of the two halves before merge sort. <code> void doMergeSort ( int lowerIndex , int higherIndex , int datePosition ) { ","if ( lowerIndex < higherIndex ) { int middle = lowerIndex + ( higherIndex - lowerIndex ) / 2 ; doMergeSort ( lowerIndex , middle , datePosition ) ; doMergeSort ( middle + 1 , higherIndex , datePosition ) ; mergeParts ( lowerIndex , middle , higherIndex , datePosition ) ; } }"
"65-90 = big, 97-122 - small <code> String generateString ( Random rng , int length ) { ",char [ ] text = new char [ length ] ; for ( int i = 0 ; i < length ; i ++ ) { int ch = - 1 ; double db = rng . nextDouble ( ) ; if ( rng . nextInt ( ) % 2 == 0 ) { ch = 65 + ( int ) ( db * 26 ) ; } else { ch = 97 + ( int ) ( db * 26 ) ; } text [ i ] = ( char ) ch ; } return new String ( text ) ; }
Prepare endpoint url scheme security handler. <code> void prepareEndpointURLSchemeSecurityHandler ( final MessageContext < T > outboundContext ) { ,final EndpointURLSchemeSecurityHandler handlerEnd = new EndpointURLSchemeSecurityHandler ( ) ; handlerEnd . initialize ( ) ; handlerEnd . invoke ( outboundContext ) ; }
"Return true if a file represented by ""path"" is indexable. This method is an optimization, we could just look for the index but that is expensive to do for remote resources. All tribble indexable extensions should be listed here. <code> boolean hasCodec ( ResourceLocator locator , Genome genome ) { ","String fn = locator . getTypeString ( ) ; if ( fn . endsWith ( "".gz"" ) ) { int l = fn . length ( ) - 3 ; fn = fn . substring ( 0 , l ) ; } return fn . endsWith ( "".vcf"" ) || fn . endsWith ( "".bcf"" ) || getCodec ( locator , genome ) != null ; }"
Writes a title to the editor console. <code> void writeTitle ( String message ) { ,if ( OptionItems . ERASE_CONSOLE ) MessageWriter . eraseConsole ( ) ; MessageConsole . logTitle ( message ) ; }
Determine if the supplied EObject has a SqlVdbAspect <code> boolean isVdb ( EObject eObject ) { ,MetamodelAspect aspect = getSqlAspect ( eObject ) ; if ( aspect != null && aspect instanceof SqlVdbAspect ) return true ; return false ; }
"Adds a POX part to the list of existing parts with the label 'label'. <code> PT addPart ( String label , PT entity ) { ",parts . add ( entity ) ; return entity ; }
Perform whatever processing is encapsulated here before completion of the transaction. <code> void doBeforeTransactionCompletion ( SessionImplementor session ) { ,"final EntityPersister persister = entry . getPersister ( ) ; final Object nextVersion = persister . forceVersionIncrement ( entry . getId ( ) , entry . getVersion ( ) , session ) ; entry . forceLocked ( object , nextVersion ) ; }"
"Serialize an instance, restore it, and check for equality. <code> void testSerialization2 ( ) { ","ChartRenderingInfo i1 = new ChartRenderingInfo ( ) ; i1 . getPlotInfo ( ) . setDataArea ( new Rectangle2D . Double ( 1.0 , 2.0 , 3.0 , 4.0 ) ) ; ChartRenderingInfo i2 = ( ChartRenderingInfo ) TestUtilities . serialised ( i1 ) ; assertEquals ( i1 , i2 ) ; assertEquals ( i2 , i2 . getPlotInfo ( ) . getOwner ( ) ) ; }"
"Locate a product with the given ID, and return how many of this item are in stock. If the ID does not match any product, return zero. <code> int numberInStock ( int id ) { ",int cantidad = 0 ; Product producto = findProduct ( id ) ; if ( producto != null ) { cantidad = producto . getQuantity ( ) ; } return cantidad ; }
"Read an unsigned short, 16 bits. Like DataInputStream.readUnsignedShort except little endian. Note, returns int even though it reads a short. <code> int readUnsignedShort ( ) { ","dis . readFully ( work , 0 , 2 ) ; return ( ( work [ 1 ] & 0xff ) << 8 | ( work [ 0 ] & 0xff ) ) ; }"
this method returns the copy of the stack with a new reference but in reverse order <code> Stack < E > getReverseCopy ( ) { ,Stack stNew = new Stack ( ) ; int i = arrItems . size ( ) - 1 ; for ( ; i >= 0 ; i -- ) stNew . push ( arrItems . get ( i ) ) ; return stNew ; }
"Invoked when the property of the feed has been changed. <code> void propertyChanged ( IFeed feed , String property , Object oldValue , Object newValue ) { ","first . propertyChanged ( feed , property , oldValue , newValue ) ; second . propertyChanged ( feed , property , oldValue , newValue ) ; }"
"Adds a rubric for given language and code <code> void addRubric ( String lang , String code , String rubric ) { ","Map < String , String > map = codeRubrics . get ( lang ) ; if ( map == null ) { map = new HashMap < String , String > ( ) ; codeRubrics . put ( lang , map ) ; } map . put ( code , rubric ) ; }"
Returns string of list_dbs request. <code> String listDbsStr ( String uuid ) { ,"String methodName = ""list_dbs"" ; return getRequestStr ( uuid , methodName , null ) ; }"
Return a UserTransaction that was retrieved via getUserTransaction(). This will make sure that the InitalContext used to lookup/create the UserTransaction is properly cleaned up. <code> void returnUserTransaction ( UserTransaction userTransaction ) { ,if ( ( userTransaction != null ) && ( userTransaction instanceof UserTransactionWithContext ) ) { UserTransactionWithContext userTransactionWithContext = ( UserTransactionWithContext ) userTransaction ; userTransactionWithContext . closeContext ( ) ; } }
Returns the File associated to the imagemosaic feature location <code> File getFile ( String strValue ) { ,"File file = new File ( strValue ) ; if ( ! file . isAbsolute ( ) ) { file = new File ( mosaicFolder , strValue ) ; } return file ; }"
Obtains a buffer for formatting. <code> CharArrayBuffer initBuffer ( CharArrayBuffer buffer ) { ,if ( buffer != null ) { buffer . clear ( ) ; } else { buffer = new CharArrayBuffer ( 64 ) ; } return buffer ; }
Stops the reader. Will wait 5 seconds for the runnable to stop (should stop within 1 second based on the poll timeout below) <code> void stopRunning ( ) { ,"_lock . lock ( ) ; try { if ( _isRunning . getAndSet ( false ) ) { if ( ! _running . await ( 5 , TimeUnit . SECONDS ) ) { logger . warn ( ""Waited too long for dispatcher to finish"" ) ; } } } catch ( InterruptedException e ) { } finally { _lock . unlock ( ) ; } }"
"Counts all the known nodes, both active and in-progress, across all templates. <code> int countNodes ( ) { ",int result = 0 ; for ( final CloudProvisioningRecord record : records . values ( ) ) { result += record . getCurrentlyPlanned ( ) . size ( ) ; result += record . getCurrentlyProvisioned ( ) . size ( ) ; } return result ; }
"Creates a pseudo element selector. <code> ElementSelector createPseudoElementSelector ( String namespaceURI , String pseudoName ) { ",if ( namespaceURI != null ) { throw new CSSException ( CSSException . SAC_NOT_SUPPORTED_ERR ) ; } else { return new PseudoElementSelectorImpl ( pseudoName ) ; } }
cleanup code to finish simulation. <code> void finishSimulation ( ) { ,"entityHolder . runAll ( ) ; entityHolder . shutdownEntities ( ) ; writeLog ( null , ""=========================SIMULATION FINISHED=========================="" ) ; invalidateSimulationEnvironment ( ) ; }"
Returns the value of a single pathway-to-KOs mapping. <code> List < Short > getKOsByPathway ( Short pw ) { ,if ( pathway2ko == null ) { readDumpedKeggPathways ( ) ; } return pathway2ko . get ( pw ) ; }
"create XML file from the given object with custom file name <code> void toXMLFile ( Object objTobeXMLTranslated , String fileName ) { ","FileWriter writer = new FileWriter ( fileName ) ; xstream . toXML ( objTobeXMLTranslated , writer ) ; writer . close ( ) ; }"
getProeprtyNames Returns a list of property names <code> String [ ] getPropertyNames ( ) { ,String [ ] names = null ; if ( mInfo != null ) names = mInfo . getPropertyNames ( ) ; return names ; }
Dump the configuration using EZLogger. <code> void dumpConfig ( ) { ,"Iterator < String > iter = _pConfig . getKeys ( ) ; String key ; while ( iter . hasNext ( ) ) { key = iter . next ( ) . toString ( ) ; EZLogger . info ( key + "" = "" + _pConfig . getString ( key ) ) ; } }"
Gets the value of the tx property. <code> int getTx ( ) { ,if ( tx == null ) { return 0 ; } else { return tx ; } }
Adds an outgoing edge to the node. <code> void addOutgoingEdge ( final EdgeType edge ) { ,"Preconditions . checkNotNull ( edge , ""Error: Edge argument can not be null"" ) ; Preconditions . checkArgument ( ! m_outgoingEdges . contains ( edge ) , ""Error: Outgoing edge was added before"" ) ; m_outgoingEdges . add ( edge ) ; }"
Read a string from an input stream using the default encoding. <code> String readString ( InputStream is ) { ,FastStringBuffer sb = new FastStringBuffer ( ) ; sb . load ( new InputStreamReader ( is ) ) ; return sb . toString ( ) ; }
Make a random array of n (complex) elements. <code> double [ ] makeRandom ( int n ) { ,int nd = 2 * n ; double data [ ] = new double [ nd ] ; for ( int i = 0 ; i < nd ; i ++ ) data [ i ] = Math . random ( ) ; return data ; }
"Returns the full ASN.1 DER encoding for this oid object, which includes the tag and length. <code> byte [ ] getDER ( ) { ","if ( derEncoding == null ) { DerOutputStream dout = new DerOutputStream ( ) ; try { dout . putOID ( oid ) ; } catch ( IOException e ) { throw new GSSException ( GSSException . FAILURE , e . getMessage ( ) ) ; } derEncoding = dout . toByteArray ( ) ; } return derEncoding . clone ( ) ; }"
"Used to save a value to the session <code> void saveSessionValue ( String key , Object value ) { ","synchronized ( lock ) { if ( sessionValues != null ) sessionValues = new HashMap < > ( ) ; assert sessionValues != null ; sessionValues . put ( key , value ) ; } }"
"Gets the value of the given given member as a set of strings, null if it doesn't exist <code> List < String > getAsStringList ( JsonObject o , String member ) { ","if ( o . has ( member ) ) { if ( o . get ( member ) . isJsonArray ( ) ) { return gson . fromJson ( o . get ( member ) , new TypeToken < List < String >> ( ) { } . getType ( ) ) ; } else { return Lists . newArrayList ( o . get ( member ) . getAsString ( ) ) ; } } else { return null ; } }"
"Updates the clipping of a view <code> void updateChildClip ( View child , int height , int clipInset ) { ","mClipRect . set ( 0 , clipInset , child . getWidth ( ) , height ) ; child . setClipBounds ( mClipRect ) ; }"
"Create a new statistics object that has the supplied execution time. <code> Statistics withExecutionTime ( long execution , TimeUnit unit ) { ","long executionMillis = TimeUnit . MILLISECONDS . convert ( execution , unit ) ; return new Statistics ( planningMillis , optimizationMillis , resultFormulationMillis , executionMillis ) ; }"
"Returns true, if there is a line break character in the given string, otherwise false. <code> boolean containsLineBreakCharacter ( String s ) { ",for ( int i = 0 ; i < s . length ( ) ; i ++ ) if ( isLineBreakCharacter ( s . charAt ( i ) ) ) return true ; return false ; }
Adds a --verbose flag. <code> void addVerbose ( final ArgP argp ) { ,"argp . addOption ( ""--verbose"" , ""Print more logging messages and not just errors."" ) ; argp . addOption ( ""-v"" , ""Short for --verbose."" ) ; }"
Do phase 2 abort (rollback) on the transaction. <code> boolean doPhase2Abort ( ) { ,if ( _theAction != null ) { _theAction . phase2Abort ( false ) ; return true ; } else return false ; }
Tells whether or not the previously-parsed UCS-4 character was originally represented by a surrogate pair. <code> boolean isPair ( ) { ,assert ( error == null ) ; return isPair ; }
"add or replace replication <code> void addOrReplace ( T newReplication , List < T > replications ) { ","String repoKey = newReplication . getRepoKey ( ) ; T existingReplication = getReplication ( repoKey , replications ) ; if ( existingReplication != null ) { int i = replications . indexOf ( existingReplication ) ; replications . set ( i , newReplication ) ; } else { replications . add ( newReplication ) ; } }"
Returns a string representation of this object; useful for testing and debugging. <code> String toString ( ) { ,"StringBuilder sb = new StringBuilder ( ) ; sb . append ( ""{"" ) ; if ( getStatement ( ) != null ) sb . append ( ""Statement: "" + getStatement ( ) ) ; sb . append ( ""}"" ) ; return sb . toString ( ) ; }"
"Helperful function. Return the node from the argument triple corresponding to the byte code address. <code> Node getTripleValue ( Triple triple , byte address , Functor lastFunctor ) { ",switch ( address & 0xf0 ) { case ADDRSubject : return triple . getSubject ( ) ; case ADDRPredicate : return triple . getPredicate ( ) ; case ADDRObject : return triple . getObject ( ) ; case ADDRFunctorNode : return lastFunctor . getArgs ( ) [ address & 0x0f ] ; } return null ; }
Submits a callable for each part to be copied to our thread pool and records its corresponding Future. <code> void copyPartsInParallel ( CopyPartRequestFactory requestFactory ) { ,"while ( requestFactory . hasMoreRequests ( ) ) { if ( threadPool . isShutdown ( ) ) throw new CancellationException ( ""TransferManager has been shutdown"" ) ; CopyPartRequest request = requestFactory . getNextCopyPartRequest ( ) ; futures . add ( threadPool . submit ( new CopyPartCallable ( s3 , request ) ) ) ; } }"
Increments the counter of the Compensations participants in the transaction. <code> void incrementParticipantsCounter ( ) { ,"synchronized ( PARTICIPANT_COUNTERS ) { final AtomicInteger counter = PARTICIPANT_COUNTERS . get ( currentTX ) ; if ( counter == null ) { PARTICIPANT_COUNTERS . put ( currentTX , new AtomicInteger ( 1 ) ) ; } else { counter . incrementAndGet ( ) ; } } }"
Javadoc for this public method is generated via the doc templates in the doc_src directory. <code> EnvironmentStats getStats ( StatsConfig config ) { ,StatsConfig useConfig = ( config == null ) ? StatsConfig . DEFAULT : config ; if ( environmentImpl != null ) { return environmentImpl . loadStats ( useConfig ) ; } else { return new EnvironmentStats ( ) ; } }
"Obtain the name of the caller, most likely a user but could also be a remote process. <code> String getName ( ) { ",if ( name == null && securityIdentity != null ) { name = securityIdentity . getPrincipal ( ) . getName ( ) ; } return name ; }
Returns the total length of the corresponding structure when this object is written to IBM i bytes for use by the validation list APIs. <code> int getByteLength ( ) { ,int total = 4 ; for ( int i = 0 ; i < getAttributes ( ) . length ; i ++ ) total += getAttributes ( ) [ i ] . getByteLength ( ) ; return total ; }
Get the meeting spot for the node <code> Coord getMeetingSpotForID ( int id ) { ,int index = id % meetingSpots . size ( ) ; Coord loc = meetingSpots . get ( index ) . clone ( ) ; return loc ; }
THis function clears the count parameter of all vertices in the graph <code> void clearVertexCount ( ) { ,for ( int i = 1 ; i <= numNodes ; i ++ ) { verts . get ( i ) . count = 0 ; } }
"Serialize an instance, restore it, and check for equality. <code> void testSerialization ( ) { ",PointerNeedle n1 = new PointerNeedle ( ) ; PointerNeedle n2 = ( PointerNeedle ) TestUtilities . serialised ( n1 ) ; assertTrue ( n1 . equals ( n2 ) ) ; }
"Because the envelope is cached, the envelope may be incorrect if you later change a Feature's geometry using Feature#setGeometry. <code> Envelope getEnvelope ( ) { ",if ( envelope == null ) { envelope = new Envelope ( ) ; for ( Feature feature : features ) { envelope . expandToInclude ( feature . getGeometry ( ) . getEnvelopeInternal ( ) ) ; } } return envelope ; }
"Sends a message to the specified channel in Discord <code> IMessage sendMessage ( IChannel channel , String message ) { ","LOGGER . debug ( ""Sending message ["" + channel . getName ( ) + ""]["" + message + ""]"" ) ; return performRequest ( ( ) -> getMessageBuilder ( channel , message , null ) . send ( ) , String . format ( ""Could not send message [%s] to [%s]"" , message , channel ) , null ) ; }"
Converts byte Array to HexString <code> String byteArrayToHexString ( byte [ ] b ) { ,StringBuffer sb = new StringBuffer ( b . length * 2 ) ; for ( int i = 0 ; i < b . length ; i ++ ) { int v = b [ i ] & 0xff ; if ( v < 16 ) { sb . append ( '0' ) ; } sb . append ( Integer . toHexString ( v ) ) ; } return new String ( sb ) . toUpperCase ( ) ; }
"This function gets the stream of the request to copy it into a file. <code> File handleBinUpload ( String datasetName , String extension , Request request ) { ","final File dir = GeoserverDataDirectory . findCreateConfigDir ( ""data"" ) ; return handleBinUpload ( datasetName + ""."" + extension , dir , request ) ; }"
Test whether a node is usable by XPath. <code> boolean isXPathNode ( PsiElement node ) { ,if ( node == null ) return true ; return true ; }
Test starting master then stopping it before its fully up. <code> void testStopDuringStart ( ) { ,"CoordinatedStateManager cp = CoordinatedStateManagerFactory . getCoordinatedStateManager ( TESTUTIL . getConfiguration ( ) ) ; HMaster master = new HMaster ( TESTUTIL . getConfiguration ( ) , cp ) ; master . start ( ) ; master . stopMaster ( ) ; master . join ( ) ; }"
"Create an action named ""Close"" that closes the current document. If there is no current document, do nothing. <code> Action closeAction ( final Application app ) { ",return new AbstractAction ( CLOSE ) { public void actionPerformed ( ActionEvent e ) { app . closeDocument ( app . getCurrentView ( ) . getDocument ( ) ) ; } } ; }
Attempts to load the ClearSilver JNI library. <code> void loadLibrary ( ) { ,try { System . loadLibrary ( libraryName ) ; } catch ( UnsatisfiedLinkError e ) { synchronized ( callbackLock ) { if ( failureCallback != null ) { failureCallback . run ( ) ; } } } }
"A helper function to create a function class name. <code> String convertToClassName ( String packageName , String functionName ) { ","if ( functionName == null || functionName . length ( ) == 0 ) { return null ; } return packageName + ""."" + functionName . substring ( 0 , 1 ) . toUpperCase ( ) + functionName . substring ( 1 , functionName . length ( ) ) ; }"
A single location and image id tuplet to test. <code> Object [ ] [ ] cloudAndImageFirstId ( ) { ,Object [ ] [ ] all = cloudAndImageIds ( ) ; return ( all != null ) ? new Object [ ] [ ] { all [ 0 ] } : new Object [ ] [ ] { } ; }
Returns the evaluation context factory. <code> EvaluationContextFactory getEvaluationContextFactory ( ) { ,if ( evaluationContextFactory == null ) { evaluationContextFactory = new StandardEvaluationContextFactory ( ) ; } return evaluationContextFactory ; }
"This method is to verify name and icon of a resource. <code> boolean verifyResourceInformation ( String resourceName , String iconName ) { ","iconName = ""fa "" + iconName ; return ( ExplicitWait . waitForElement ( RemoveResourceMap . RESOURCE_NAME . replace ( ""resourceName"" , resourceName ) , 30 ) && ExplicitWait . waitForElement ( RemoveResourceMap . ICON_NAME . replace ( ""iconName"" , iconName ) , 30 ) ) ? true : false ; }"
Creates a hash code based on the entries stored in this context. The hash code for two instances will be the same if they contain the same keys and values. <code> int hashCode ( ) { ,final int prime = 31 ; int result = 1 ; result = prime * result + ( ( entries == null ) ? 0 : entries . hashCode ( ) ) ; return result ; }
Elimina els fitxers seleccionats. de la biblioteca <code> void eliminarFitxerBiblioteca ( int [ ] llistat ) { ,for ( int i = 0 ; i < llistat . length ; i ++ ) { ctrl . eliminarFitxerMiBiblioteca ( i ) ; } }
Adds to the trips feature. <code> boolean addToTrips ( Trip tripsValue ) { ,if ( ! trips . contains ( tripsValue ) ) { boolean result = trips . add ( tripsValue ) ; return result ; } return false ; }
"read length bytes from position of a file channel. An EOFException will be thrown if you attempt to read beyond the end of file. <code> void readFromFileChannelWithEofException ( FileChannel channel , long channelPosition , byte [ ] dest , int destOffset , int length ) { ","int read = readFromFileChannel ( channel , channelPosition , dest , destOffset , length ) ; if ( read < 0 ) { throw new EOFException ( ""read past EOF. pos ["" + channelPosition + ""] length: ["" + length + ""] end: ["" + channel . size ( ) + ""]"" ) ; } }"
"Find the specified normalized field. Search without case. <code> AnalystField findNormalizedField ( final String name , final int slice ) { ",for ( final AnalystField field : getNormalize ( ) . getNormalizedFields ( ) ) { if ( field . getName ( ) . equalsIgnoreCase ( name ) && ( field . getTimeSlice ( ) == slice ) ) { return field ; } } return null ; }
"Utility method for compiling a OpenGL shader. Note: When developing shaders, use the checkGlError() method to debug shader coding errors. <code> int loadShader ( int type , String shaderCode ) { ","int shader = GLES20 . glCreateShader ( type ) ; GLES20 . glShaderSource ( shader , shaderCode ) ; GLES20 . glCompileShader ( shader ) ; return shader ; }"
"Sets startPc of the n-th entry. <code> void setStartPc ( int nth , int value ) { ",ExceptionTableEntry e = ( ExceptionTableEntry ) entries . get ( nth ) ; e . startPc = value ; }
Schedules a file to be deleted when JVM exits. If file is directory delete it and all sub-directories. <code> void forceDeleteOnExit ( File file ) { ,if ( file . isDirectory ( ) ) { deleteDirectoryOnExit ( file ) ; } else { file . deleteOnExit ( ) ; } }
Get the status List <code> List getStatusList ( ) { ,if ( statusList != null ) { return statusList ; } return Collections . EMPTY_LIST ; }
"Applys changes for security reason if necessary <code> Map applySecurity ( Map pars , IEngUserProfile profile ) { ","logger . debug ( ""IN"" ) ; pars . put ( SsoServiceInterface . USER_ID , ( ( UserProfile ) profile ) . getUserUniqueIdentifier ( ) ) ; logger . debug ( ""Add parameter: "" + SsoServiceInterface . USER_ID + "" / "" + ( ( UserProfile ) profile ) . getUserUniqueIdentifier ( ) ) ; logger . debug ( ""OUT"" ) ; return pars ; }"
Just produces debug representation <code> String toString ( ) { ,String s = elements . toString ( ) ; if ( isRequired ( ) ) s += '!' ; if ( isCollection ( ) ) s += '*' ; return s ; }
Convert integer (4 octets) value to bytes. <code> byte [ ] intToBytes ( int value ) { ,byte [ ] result = new byte [ 4 ] ; result [ 0 ] = ( byte ) ( value >> 24 & 0xff ) ; result [ 1 ] = ( byte ) ( value >> 16 & 0xff ) ; result [ 2 ] = ( byte ) ( value >> 8 & 0xff ) ; result [ 3 ] = ( byte ) ( value & 0xff ) ; return result ; }
"Causes child lines to join the given set of rows <code> void haveLinesJoinRows ( List < AccountingLineTableRow > rows , int headerRowCount ) { ","int count = 0 ; for ( AccountingLineViewLineFillingElement line : lines ) { if ( line . getRequestedRowCount ( ) > 1 ) { line . joinRow ( rows . get ( count ) , rows . get ( count + 1 ) ) ; count += 2 ; } else { line . joinRow ( rows . get ( count ) , null ) ; count += 1 ; } } }"
Creates a new SDFExpressionEdgePropertyType given the expression expr. <code> AbstractEdgePropertyType < ? > getSDFEdgePropertyType ( final String expr ) { ,try { final int value = Integer . decode ( expr ) ; return new SDFIntEdgePropertyType ( value ) ; } catch ( final NumberFormatException e ) { return new SDFExpressionEdgePropertyType ( new ExpressionValue ( expr ) ) ; } }
"Set the lineage information for the associated directory. <code> void setLineage ( Path dir , DataContainer dc , List < FieldSchema > cols ) { ","Operator < ? > op = dirToFop . get ( dir ) ; if ( op == null ) { return ; } List < ColumnInfo > signature = op . getSchema ( ) . getSignature ( ) ; int i = 0 ; for ( FieldSchema fs : cols ) { linfo . putDependency ( dc , fs , index . getDependency ( op , signature . get ( i ++ ) ) ) ; } }"
Initiate disconnect from an A2DP sink. Listen for SINK_STATE_CHANGED_ACTION to find out when disconnect is completed. <code> int disconnectSink ( String address ) { ,"if ( DBG ) log ( ""disconnectSink("" + address + "")"" ) ; try { return mService . disconnectSink ( address ) ; } catch ( RemoteException e ) { Log . w ( TAG , """" , e ) ; return BluetoothError . ERROR_IPC ; } }"
Converts an ArtifactResource object into corresponding REST API Comment DTO object <code> RatingDTO fromRatingToDTO ( Rating rating ) { ,RatingDTO ratingDTO = new RatingDTO ( ) ; ratingDTO . setRatingId ( rating . getUuid ( ) ) ; ratingDTO . setApiId ( rating . getApiId ( ) ) ; ratingDTO . setSubscriberName ( rating . getSubscriber ( ) ) ; ratingDTO . setRating ( Integer . parseInt ( rating . getRating ( ) ) ) ; return ratingDTO ; }
returns the default clusterer (fully configured) for the clusterer panel. <code> Object getClusterer ( ) { ,"Object result ; result = getObject ( ""Clusterer"" , weka . clusterers . EM . class . getName ( ) , weka . clusterers . Clusterer . class ) ; if ( result == null ) result = new weka . clusterers . EM ( ) ; return result ; }"
"This method removes any record of the request to transfer the given attributes of the given object. If this cancellation means that there are no more attributes associated with the transfer request, that to is removed. <code> void cancelAcquisition ( int objectHandle , Set < Integer > attributes ) { ",AcquireRequest request = acquisitions . get ( objectHandle ) ; if ( request == null ) return ; request . cancelTransfer ( attributes ) ; if ( request . isEmpty ( ) ) acquisitions . remove ( objectHandle ) ; }
Parses the file name from a URL. <code> String getFileNameFromURL ( String url ) { ,"int lastIndexOfSlash = url . lastIndexOf ( ""/"" ) ; String fileName = null ; if ( lastIndexOfSlash > - 1 ) { fileName = url . substring ( lastIndexOfSlash , url . length ( ) ) ; } else { fileName = url ; } return fileName ; }"
Set the default Host used for resolving unknown host names. <code> void setDefaultHost ( String name ) { ,"if ( debug >= 3 ) engine . log ( ""Setting default host '"" + name + ""'"" ) ; if ( name == null ) defaultHost = null ; else defaultHost = ( Host ) engine . findChild ( name ) ; }"
Creates the pattern. Matching is by default case insensitive. <code> Optional < Pattern > createPattern ( final String pattern ) { ,"if ( RegexUtils . isValidRegex ( pattern ) ) { return Optional . of ( Pattern . compile ( pattern , Pattern . CASE_INSENSITIVE ) ) ; } return Optional . empty ( ) ; }"
Used internally to change selection <code> void makeSelected ( GToggleControl tc ) { ,deselected = selected ; if ( deselected != null ) deselected . setSelected ( false ) ; selected = tc ; }
"Gets value in column, starting from startRow till endRow <code> List < String > getColumn ( int startRow , int endRow , int col ) { ","if ( isInCorrectRange ( startRow , endRow , col , col + 1 ) ) { List < String > column = new LinkedList < > ( ) ; for ( List < String > slicedLine : matrix . subList ( startRow , endRow ) ) { column . add ( slicedLine . get ( col ) ) ; } return column ; } return null ; }"
Gets the largest timestamp of any sample parsed by the extractor. <code> long getLargestParsedTimestampUs ( ) { ,"long largestParsedTimestampUs = Long . MIN_VALUE ; for ( int i = 0 ; i < sampleQueues . size ( ) ; i ++ ) { largestParsedTimestampUs = Math . max ( largestParsedTimestampUs , sampleQueues . valueAt ( i ) . getLargestParsedTimestampUs ( ) ) ; } return largestParsedTimestampUs ; }"
Scrub given IMSI on production builds. <code> String scrubSubscriberId ( String subscriberId ) { ,"if ( ""eng"" . equals ( Build . TYPE ) ) { return subscriberId ; } else if ( subscriberId != null ) { return subscriberId . substring ( 0 , Math . min ( 6 , subscriberId . length ( ) ) ) + ""..."" ; } else { return ""null"" ; } }"
This test checks that LateData Handler is invoked only if LateArrival is configured for a feed. <code> void testFeedLateArrivalCheck ( ) { ,"Feed feed = new Feed ( ) ; String nominalTime = ""2013-10-01T12:00Z"" ; Date cutOff = LateRerunHandler . getCutOffTime ( feed , nominalTime ) ; Assert . assertEquals ( cutOff , new Date ( 0 ) ) ; }"
"Creates a new resource key from the given object and the factory keys. <code> ResourceKey createKey ( final Object value , final Map factoryKeys ) { ","if ( value instanceof byte [ ] == false ) { return null ; } return new ResourceKey ( SCHEMA_NAME , value , factoryKeys ) ; }"
"Sends the given packet to the specified IP address. <code> void unicastPacket ( ArtNetPacket packet , String adr ) { ","InetAddress targetAdress ; try { targetAdress = InetAddress . getByName ( adr ) ; server . unicastPacket ( packet , targetAdress ) ; } catch ( UnknownHostException e ) { logger . log ( Level . WARNING , e . getMessage ( ) , e ) ; } }"
"Adds a value and its corresponding display item to the list. <code> void addItem ( String value , String displayItem ) { ",values . add ( value ) ; listBoxWrapper . addItem ( displayItem ) ; }
Resets the manager view configured by the parameters in this base class. <code> void resetManagerView ( ) { ,"String alluxioHome = mTestFolder . newFolder ( ) . getAbsolutePath ( ) ; TieredBlockStoreTestUtils . setupConfWithMultiTier ( alluxioHome , TIER_LEVEL , TIER_ALIAS , TIER_PATH , TIER_CAPACITY_BYTES , null ) ; mManager = BlockMetadataManager . createBlockMetadataManager ( ) ; }"
Adds the given element to if it has an ID. <code> void addElement ( Node node ) { ,"if ( node instanceof Element ) { String id = ( ( Element ) node ) . getAttribute ( ""id"" ) ; if ( id != null && ! elements . containsKey ( id ) ) { elements . put ( id , node ) ; } } node = node . getFirstChild ( ) ; while ( node != null ) { addElement ( node ) ; node = node . getNextSibling ( ) ; } }"
Pide por pantalla el cateto b y devuelve el valor introducido por teclado <code> Double pedirB ( ) { ,"System . out . print ( ""Cateto b:  "" ) ; return leerDouble ( ) ; }"
"Create the like vector with read-only matrices support. <code> Vector likeVector ( Matrix matrix , int crd ) { ",if ( isCopyLikeSupport ( matrix ) ) return new DenseLocalOnHeapVector ( crd ) ; else return matrix . likeVector ( crd ) ; }
"Parse an octal long integer from a header buffer. <code> int getLongOctalBytes ( long value , byte [ ] buf , int offset , int length ) { ","byte [ ] temp = new byte [ length + 1 ] ; getOctalBytes ( value , temp , 0 , length + 1 ) ; System . arraycopy ( temp , 0 , buf , offset , length ) ; return offset + length ; }"
Method to return the singleton instance of this class <code> PresentationManager getInstance ( ) { ,if ( singleton == null ) { singleton = new PresentationManager ( ) ; } return ( singleton ) ; }
"Waits as long as all elements found with the specified locator are visible. <code> void waitUntilAllElementsAreVisible ( WebDriver browser , By elementLocator ) { ","WebDriverWait wait = new WebDriverWait ( browser , DEFAULT_TIMEOUT_IN_SECONDS ) ; wait . until ( ExpectedConditions . visibilityOfAllElementsLocatedBy ( elementLocator ) ) ; }"
"Determines if the Subject might contain creds for princ. <code> boolean isRelated ( Subject subject , Principal princ ) { ","ensureAvailable ( ) ; return proxy . isRelated ( subject , princ ) ; }"
"Return all the medicals with the specified criteria. In case of error a message error is shown and a null value is returned. <code> ArrayList < Medical > getMedicals ( String description , String type , boolean expiring ) { ","try { return ioOperations . getMedicals ( description , type , expiring ) ; } catch ( OHException e ) { JOptionPane . showMessageDialog ( null , e . getMessage ( ) ) ; return null ; } }"
Return a String representation of this object. <code> String toString ( ) { ,"StringBuilder sb = new StringBuilder ( ""SecurityRoleRef["" ) ; sb . append ( ""name="" ) ; sb . append ( name ) ; if ( link != null ) { sb . append ( "", link="" ) ; sb . append ( link ) ; } sb . append ( ""]"" ) ; return ( sb . toString ( ) ) ; }"
Waits until the crawl has to stop. <code> ExitStatus awaitTermination ( ) { ,latch . await ( ) ; return reason ; }
Get a List of Strings that corresponds to the subject regular expression constraints from a JAXB CertificateConstraintsType <code> List < String > getSubjectConstraints ( CertificateConstraintsType certConstraints ) { ,if ( certConstraints != null && certConstraints . isSetSubjectDNConstraints ( ) ) { DNConstraintsType constraints = certConstraints . getSubjectDNConstraints ( ) ; return constraints . getRegularExpression ( ) ; } return java . util . Collections . emptyList ( ) ; }
Selects Sandbox as login server (used in tests). <code> void useSandbox ( ) { ,final LoginServer sandboxServer = getLoginServerFromURL ( SANDBOX_LOGIN_URL ) ; setSelectedLoginServer ( sandboxServer ) ; }
Returns a MapNode at given coordinates or null if there's no MapNode in the location of the coordinate <code> MapNode getNodeByCoord ( Coord c ) { ,"if ( needsRehash ) { nodesMap . clear ( ) ; for ( MapNode node : getNodes ( ) ) { nodesMap . put ( node . getLocation ( ) , node ) ; } } return nodesMap . get ( c ) ; }"
"Go through the list of class loaders but exclude the given class loader, then try to load the requested class. The method will stop as soon as the class is found. If the class is not found the method will throw a ClassNotFoundException exception. <code> Class < ? > loadClassWithout ( ClassLoader loader , String className ) { ","MBEANSERVER_LOGGER . logp ( Level . FINEST , DefaultLoaderRepository . class . getName ( ) , ""loadClassWithout"" , className ) ; return load ( loader , className ) ; }"
Sets the subnet mask to be used for the network interface <code> void setSubnetMask ( T subnetMask ) { ,m_networkPrefixLength = calculateNetworkPrefixFromNetmask ( subnetMask . getHostAddress ( ) ) ; m_subnetMask = subnetMask ; }
Unregister an existing peer. <code> void removePeer ( JsonRpcPeer peer ) { ,if ( mReceivingPeers . remove ( peer ) != null ) { mReceivingPeersSnapshot = null ; if ( mListener != null ) { mListener . onPeerUnregistered ( peer ) ; } } }
Determines the number of listeners of a particular class. <code> int getListenerCount ( Class t ) { ,int result = 0 ; for ( int i = 0 ; i < listenerList . length ; i += 2 ) if ( t == listenerList [ i ] ) ++ result ; return result ; }
String representation of the SecuenceDatabase <code> String toString ( ) { ,"StringBuilder r = new StringBuilder ( ) ; for ( Sequence sequence : sequences ) { r . append ( sequence . getId ( ) ) ; r . append ( "":  "" ) ; r . append ( sequence . toString ( ) ) ; r . append ( '|n' ) ; } return r . toString ( ) ; }"
"Copy chars from a large (over 2GB) Reader to a Writer. This method buffers the input internally, so there is no need to use a BufferedReader. <code> long copyLarge ( Reader input , Writer output ) { ","char [ ] buffer = new char [ DEFAULT_BUFFER_SIZE ] ; long count = 0 ; int n = 0 ; while ( - 1 != ( n = input . read ( buffer ) ) ) { output . write ( buffer , 0 , n ) ; count += n ; } return count ; }"
Returns list of CEnums or throw an RuntimeException <code> List < CEnum > getItems ( String enumName ) { ,"List < CEnum > result = enums . get ( enumName ) ; if ( result == null ) { throw new RuntimeException ( ""Enum no have loaded items for the name: "" + enumName ) ; } return result ; }"
"Take an action and learn from the option given the current state and current observation. <code> int actAndLearn ( double [ ] features , double pReward ) { ","lastAction = action ; action = selectAction ( features ) ; if ( lastFeatures != null ) { learn ( lastFeatures , lastAction , pReward , features , action ) ; } return action ; }"
This method resets the outgoing events. <code> void clearOutEvents ( ) { ,sCInterface . clearOutEvents ( ) ; sCIIfA . clearOutEvents ( ) ; }
"Creates the board from the data given by reader (expects .sok format). <code> Board fromReaderSok ( String levelName , Reader textReader , int levelNumber ) { ","Board board = null ; SokReader reader = new SokReader ( levelName , textReader ) ; for ( int i = 0 ; i < levelNumber ; ++ i ) { reader . readNext ( ) ; } TextLevelS4JL level = reader . readNext ( ) ; reader . close ( ) ; return fromTextLevel ( level ) ; }"
This method was generated by MyBatis Generator. This method corresponds to the database table manger <code> int hashCode ( ) { ,final int prime = 31 ; int result = 1 ; result = prime * result + ( ( getMangerName ( ) == null ) ? 0 : getMangerName ( ) . hashCode ( ) ) ; result = prime * result + ( ( getMangerPassword ( ) == null ) ? 0 : getMangerPassword ( ) . hashCode ( ) ) ; return result ; }
Retrieve the bytes for the given String in the encoding set for this Stream. <code> byte [ ] getBytes ( String name ) { ,if ( encoding == null ) { return name . getBytes ( ) ; } else { try { return name . getBytes ( encoding ) ; } catch ( UnsupportedEncodingException uee ) { throw new ZipException ( uee . getMessage ( ) ) ; } } }
"Record a draw between two players and add to the set. <code> void addDraw ( Rating player1 , Rating player2 ) { ","Result result = new Result ( player1 , player2 , true ) ; results . add ( result ) ; }"
Gets a version from the cache <code> Object getVersion ( Object obj ) { ,final Object version = versionMap . get ( new Key ( obj ) ) ; if ( version == null ) { return version ; } return version ; }
Create a new RetryingCaller with configured rpc timeout. <code> RpcRetryingCaller < T > newCaller ( ) { ,"RpcRetryingCaller < T > caller = new RpcRetryingCallerImpl < T > ( pause , retries , interceptor , startLogErrorsCnt , rpcTimeout ) ; return caller ; }"
Safely close the stream sources and underlying inputstreams. <code> void closeStreamSources ( StreamSource sources [ ] ) { ,if ( sources == null ) { return ; } for ( final StreamSource source : sources ) { closeStreamSource ( source ) ; } }
Gets the revision for the last change to the specified line. <code> String getRevision ( int line ) { ,"try { return lines . get ( line - 1 ) . revision ; } catch ( IndexOutOfBoundsException e ) { return """" ; } }"
Add the link rule and check if spannable text is created. <code> void addLinkToSpan ( Link link ) { ,"if ( spannable == null ) { spannable = SpannableString . valueOf ( text ) ; } addLinkToSpan ( spannable , link ) ; }"
Returns a string representation of this object; useful for testing and debugging. <code> String toString ( ) { ,"StringBuilder sb = new StringBuilder ( ) ; sb . append ( ""{"" ) ; if ( getPolicyName ( ) != null ) sb . append ( ""PolicyName: "" + getPolicyName ( ) + "","" ) ; if ( getPolicyDocument ( ) != null ) sb . append ( ""PolicyDocument: "" + getPolicyDocument ( ) ) ; sb . append ( ""}"" ) ; return sb . toString ( ) ; }"
Generate a response from a given set of input words. <code> String generateResponse ( HashSet < String > words ) { ,Iterator < String > it = words . iterator ( ) ; while ( it . hasNext ( ) ) { String word = it . next ( ) ; String response = responseMap . get ( word ) ; if ( response != null ) { return response ; } } return pickDefaultResponse ( ) ; }
Assert can't add empty array. <code> void testPassingEmptyArrayToFindEntry ( ) { ,"assertEquals ( Dictionary . NOT_IN_DICTIONARY , testee . findEntry ( HConstants . EMPTY_BYTE_ARRAY , 0 , 0 ) ) ; assertEquals ( Dictionary . NOT_IN_DICTIONARY , testee . addEntry ( HConstants . EMPTY_BYTE_ARRAY , 0 , 0 ) ) ; }"
Reset the RequestAttributes for the current thread. <code> void resetRequestAttributes ( ) { ,requestAttributesHolder . remove ( ) ; inheritableRequestAttributesHolder . remove ( ) ; }
Transform an hexadecimal String to a byte array. <code> byte [ ] hexStringToByte ( String hexString ) { ,try { return Hex . decodeHex ( hexString . toCharArray ( ) ) ; } catch ( DecoderException e ) { throw new UnexpectedException ( e ) ; } }
"Load symbols from a file. <code> void loadSymbolFile ( String inFilename , Properties prop ) { ",InputStream in = new FileInputStream ( inFilename ) ; prop . load ( in ) ; in . close ( ) ; }
Deleted an interest on a key. This method is called on the NIOService-thread. <code> void deleteInterest ( int interest ) { ,m_interestOps = m_interestOps & ~ interest ; synchronizeKeyInterestOps ( ) ; }
first sorts according to low-bound (ascending) then according to high-bound (descending) <code> int compareTo ( DoubleRange other ) { ,int temp = low . compareTo ( other . low ) ; if ( temp == 0 ) { temp = other . high . compareTo ( high ) ; } return temp ; }
Compute the sum of the x coordinates each raised to an integer power and multiplied by the corresponding y coordinate. <code> float sumXPowerY ( final int power ) { ,"float sum = 0 ; for ( int i = 0 ; i < n ; ++ i ) { sum += m_aData [ i ] . getY ( ) * IntPower . raise ( m_aData [ i ] . getX ( ) , power ) ; } return sum ; }"
method to establish whether a treatment room is free <code> void findEmptyTreatmentRoom ( Patient patient ) { ,vacant = true ; patient = null ; }
"Tests if this AbsContentElementList is grounded, i.e., if no one of its elements is associated with a variable <code> boolean isGrounded ( ) { ",Iterator it = elements . iterator ( ) ; while ( it . hasNext ( ) ) { AbsContentElement abs = ( AbsContentElement ) it . next ( ) ; if ( ! abs . isGrounded ( ) ) { return false ; } } return true ; }
Return true if this cluster contains cluster bs. Assume that bs use the same taxa-index reference. <code> boolean containsCluster ( BitSet bs ) { ,BitSet temp = ( BitSet ) bs . clone ( ) ; temp . and ( _cluster ) ; return ( temp . equals ( bs ) ) ; }
Sets the scoreboard to show users the score from their class only <code> void setScoreboardClassSpecific ( ) { ,scoreboardEnabled = true ; scoreboardClass = new String ( ) ; adminOnlyScoreboard = false ; classSpecificScoreboard = true ; }
Called when the writer gets closed (rollback closes it!) <code> IndexWriter writerRollback ( ) { ,closeWriter ( ) ; getWriter ( ) ; return _writer ; }
Parses a String in RFC 822 format into a Date object <code> Date toRFC822DateParse ( String toParse ) { ,"synchronized ( RFC822_FORMAT ) { try { return RFC822_FORMAT . parse ( toParse ) ; } catch ( ParseException pe ) { throw new IllegalArgumentException ( ""Error parsing date at "" + pe . getErrorOffset ( ) , pe ) ; } } }"
"Checks that a URL is a valid OAuth callback <code> void checkValidOAuthCallback ( String url , String errorMsg ) { ","checkEmptyString ( url , errorMsg ) ; if ( url . compareToIgnoreCase ( OAuthConstants . OUT_OF_BAND ) != 0 ) { check ( isUrl ( url ) , errorMsg ) ; } }"
Tests Digest authentication scheme. <code> void testDigestAuth ( ) { ,"startServer ( 47500 ) ; fetchPage ( ""/digest.jsp"" , 200 ) ; tearDown ( ) ; }"
Adds a reference to a RichMediaConfiguration. (Part of the RichMediaContent.) <code> PdfIndirectReference addConfiguration ( PdfIndirectReference ref ) { ,"if ( configurations == null ) throw new IllegalPdfSyntaxException ( ""You can't add configurations to reused RichMediaContent."" ) ; configurations . add ( ref ) ; return ref ; }"
