nl,code
Read class definition a zip (jar) file entry. <code> byte [ ] readByteCode ( ZipInputStream zip ) { ,ByteArrayOutputStream bout = new ByteArrayOutputStream ( ) ; InputStream in = new BufferedInputStream ( zip ) ; int b ; while ( ( b = in . read ( ) ) != - 1 ) { bout . write ( b ) ; } return bout . toByteArray ( ) ; }
"Get all referenced bindings by the given binding in a set of binding list. <code> Set getReferencedBindings ( ComputedColumnHandle target , List allHandleList ) { ","IModelAdapter modelAdapter = getModelAdapter ( ) ; return getReferencedBindings ( target , allHandleList , new HashSet ( ) , modelAdapter ) ; }"
"Debug method to print tree node structure <code> void printNodeData ( Node rootNode , String tab ) { ","if ( tab == null ) tab = """" ; else tab = tab + ""  "" ; for ( Node n : rootNode . getChilds ( ) ) { printNodeData ( n , tab ) ; } }"
Get the product description of the device <code> String getProduct ( ) { ,"try { return device . getProductString ( ) ; } catch ( Exception e ) { return """" ; } }"
set functions from curve <code> void setFunctions ( ParametricCurve curve ) { ,funX = curve . getRealRootFunctionX ( ) ; funY = curve . getRealRootFunctionY ( ) ; }
Gets the singleton instance <code> ServerHostProperties getInstance ( ) { ,if ( instance == null ) { instance = new ServerHostProperties ( ) ; } return instance ; }
"Delete the block file and meta file from the disk asynchronously, adjust dfsUsed statistics accordingly. <code> void deleteAsync ( FsVolumeImpl volume , File blockFile , File metaFile , ExtendedBlock block , String trashDirectory ) { ","LOG . info ( ""Scheduling "" + block . getLocalBlock ( ) + "" file "" + blockFile + "" for deletion"" ) ; ReplicaFileDeleteTask deletionTask = new ReplicaFileDeleteTask ( volume , blockFile , metaFile , block , trashDirectory ) ; execute ( volume . getCurrentDir ( ) , deletionTask ) ; }"
Returns time as String in format HHMMSS. <code> String getStrTime ( Calendar c ) { ,"int h = c . get ( Calendar . HOUR ) ; int m = c . get ( Calendar . MINUTE ) ; int s = c . get ( Calendar . SECOND ) ; return """" + ( h < 10 ? ""0"" + h : h ) + ( m < 10 ? ""0"" + m : m ) + ( s < 10 ? ""0"" + s : s ) ; }"
"Find the _Fields constant that matches fieldId, or null if its not found. <code> _Fields findByThriftId ( int fieldId ) { ",switch ( fieldId ) { case 1 : return SPOUT_OBJECT ; case 2 : return COMMON ; default : return null ; } }
"given either a token or a raw type, returns the raw type <code> Class < ? super T > getRawType ( TypeToken < T > token , Class < ? super T > raw ) { ","if ( raw != null ) return raw ; if ( token != null ) return token . getRawType ( ) ; throw new IllegalStateException ( ""Both indicators of type are null"" ) ; }"
"Extract a NSTRING, starting at the current position. Return it as a ByteArray. The sequence 'NIL' is returned as null NSTRING := QuotedString | Literal | ""NIL"" <code> ByteArray readByteArray ( ) { ","if ( isContinuation ( ) ) { skipSpaces ( ) ; return new ByteArray ( buffer , index , size - index ) ; } return ( ByteArray ) parseString ( false , false ) ; }"
"Returns a map of mappings between HAWQ and HBase column names, with the HAWQ column values in lower case. <code> Map < String , byte [ ] > lowerCaseMappings ( ) { ","Map < String , byte [ ] > lowCaseKeys = new HashMap < String , byte [ ] > ( ) ; for ( Map . Entry < byte [ ] , byte [ ] > entry : rawTableMapping . entrySet ( ) ) { lowCaseKeys . put ( lowerCase ( entry . getKey ( ) ) , entry . getValue ( ) ) ; } return lowCaseKeys ; }"
"Creates a String representation of the given array, using the given format string for its elements. The String will be formatted as a rectangular matrix. <code> String toString2D ( float a [ ] [ ] , String format ) { ","StringBuilder sb = new StringBuilder ( ) ; for ( int i = 0 ; i < a . length ; i ++ ) { sb . append ( toString1D ( a [ i ] , format ) ) ; sb . append ( "" "" ) ; } return sb . toString ( ) ; }"
Returns whether the HTTP response is in an error state caused by the client. <code> boolean isClientError ( HttpResponse response ) { ,int sc = response . getStatusLine ( ) . getStatusCode ( ) ; return sc >= 400 && sc < 500 ; }
Start to record samples <code> void beginSampling ( int capacity ) { ,if ( ! enabled ) { summary = new StreamSummary < T > ( capacity ) ; hll = new HyperLogLogPlus ( 14 ) ; enabled = true ; } }
Return port name for consisting of the form . for inner ports of just the port name for replicating ports. <code> String getPortName ( Port p ) { ,"if ( p == null ) { return null ; } String portName = p . getDisplayName ( ) ; if ( p . getComponentNode ( ) != null ) { String compName = p . getComponentNode ( ) . getName ( ) ; return compName + ""."" + portName ; } else { return portName ; } }"
Test that cleanup actually cleans up. <code> void testCleanup ( ) { ,generateSampleFiles ( ) ; committer . cleanup ( job ) ; assertTrue ( ! ghfs . exists ( outputPath ) ) ; assertTrue ( ! ghfs . exists ( outputSampleFilePath ) ) ; }
Cleans up the ErrorTag <code> void cleanUpErrorTag ( ) { ,errorTag . setPageContext ( null ) ; errorTag . setParent ( null ) ; errorTag . setProperty ( null ) ; }
Generate a deck of all weapon cards in the game <code> List < Card > generateWeaponDeck ( ) { ,List < Card > deck = new ArrayList < Card > ( ) ; deck . addAll ( weaponCards ) ; return deck ; }
Returns the ConfigurationService currently registered. <code> ConfigurationService getConfigurationService ( ) { ,"if ( configurationService == null ) { configurationService = ServiceUtils . getService ( bundleContext , ConfigurationService . class ) ; } return configurationService ; }"
"remove the special characters replacing it with empty ("""") and change all to lower case <code> String normalizeName ( String name ) { ","String normalizedName = StringUtils . trimToEmpty ( StringUtils . lowerCase ( name ) ) ; if ( StringUtils . isNotBlank ( normalizedName ) ) { normalizedName = normalizedName . replaceAll ( ""[^a-z0-9]*"" , """" ) ; } return normalizedName ; }"
Writing hierarchical field sub.(o)sub.name for Pojo. The optional part is not existing an should not end in an exception. <code> void testWriteHierarchicalToOptionalNotExistingPojoPath ( ) { ,"Pojo p = Pojo . make ( ""head"" , ""subName"" ) ; Expression expr = PathExpressionChain . parse ( ""sub.(o)sub.name"" ) ; expr . execAssign ( new ExprExecCtxt ( p ) , ""newValue"" ) ; assertEquals ( ""subName"" , p . sub . name ) ; }"
"Returns the boolean indicator annotation on a method parameter for the given boolean value, if any. <code> IndicatesAnnotation getBooleanIndicatorIfAny ( AnnotationSummary method , int paramIndex , boolean value ) { ","String indicatorAnnoName = value ? ""edu.cmu.cs.plural.annot.TrueIndicates"" : ""edu.cmu.cs.plural.annot.FalseIndicates"" ; return ( IndicatesAnnotation ) method . getParameter ( paramIndex , indicatorAnnoName ) ; }"
"Verify error message is on page, locate, check the length and the message <code> void checkErrorMessage ( By by , String message ) { ",checkErrorMessage ( by ) ; Assert . assertTrue ( locateElement ( by ) . getText ( ) . equalsIgnoreCase ( message ) ) ; }
Creates a new instance. <code> T newInstance ( Class < T > clazz ) { ,try { T object = clazz . newInstance ( ) ; return object ; } catch ( InstantiationException e ) { throw new ConfigurationException ( e ) ; } catch ( IllegalAccessException e ) { throw new ConfigurationException ( e ) ; } }
Returns an instance of this comparator. <code> DefaultLiteralComparator getInstance ( ) { ,if ( s_instance == null ) s_instance = new DefaultLiteralComparator ( ) ; return s_instance ; }
Tests the objectListToStringArray() method. <code> void testObjectListToStringArray ( ) { ,"final List < Object > input = Arrays . asList ( new Object [ ] { 1 , null , ""three"" } ) ; final String [ ] output = Util . objectListToStringArray ( input ) ; assertEquals ( 3 , output . length ) ; assertEquals ( ""1"" , output [ 0 ] ) ; assertNull ( output [ 1 ] ) ; assertEquals ( ""three"" , output [ 2 ] ) ; }"
Test non-mutable created at date <code> void nonMutableCreatedAt ( ) { ,IssueEvent event = new IssueEvent ( ) ; Date date = new Date ( 1000 ) ; event . setCreatedAt ( date ) ; date . setTime ( 0 ) ; assertFalse ( date . equals ( event . getCreatedAt ( ) ) ) ; }
Return number of bytes used making variable length value <code> int varLengthBytes ( int value ) { ,int numOfBytes = 0 ; long buffer = value & 0x7F ; while ( ( value >>= 7 ) > 0 ) { buffer <<= 8 ; buffer |= ( ( value & 0x7F ) | 0x80 ) ; } while ( true ) { numOfBytes ++ ; if ( ( buffer & 0x80 ) != 0 ) { buffer >>= 8 ; } else { break ; } } return numOfBytes ; }
"Constructs a new ClassPathLocation which handles all classes within. <code> AbstractClassPathLocation newClasspathLocation ( JARCache cache , String realm , URI location ) { ","if ( $ ( location ) . filter ( "".*|.plugin[/]$"" ) . get ( 0 ) != null ) return new MultiPluginClasspathLocation ( cache , realm , location ) ; if ( location . toString ( ) . endsWith ( "".jar"" ) ) return new JARClasspathLocation ( cache , realm , location ) ; return new FileClasspathLocation ( cache , realm , location ) ; }"
"Clicks the 'X' to remove a student roll based upon a concatenation of the First Name and Surname. <code> void removeStudentRole ( String usersFirstName , String usersSurname ) { ","WebElement removeStudentRole = driver . findElement ( By . xpath ( ""//tr[contains(.,'"" + usersFirstName + "" "" + usersSurname + ""')]/*/div[@class='roles']/*/a[@class='unassignrolelink']"" ) ) ; removeStudentRole . click ( ) ; }"
"Reads packet from currently opened stream. <code> int readPacket ( byte [ ] packet , int offset , int psize ) { ","int length = 0 ; try { while ( length < psize ) { int len = stream . read ( packet , offset + length , psize - length ) ; if ( len == - 1 ) { return length ; } length += len ; } return length ; } catch ( Exception e ) { logger . error ( e ) ; } return length ; }"
"Retrieves the system change number associated with the specified compiled statement identifier, in the context of the specified session identifier. <code> long getSCN ( int csid , int sid ) { ",IntKeyHashMap scsMap ; Long scn ; scsMap = ( IntKeyHashMap ) validationMap . get ( sid ) ; if ( scsMap == null ) { return Long . MIN_VALUE ; } scn = ( Long ) scsMap . get ( csid ) ; return ( scn == null ) ? Long . MIN_VALUE : scn . longValue ( ) ; }
"This method gives us the settings of a wallet <code> void setSettings ( String xmlWalletSetting , String walletPublicKey ) { ","WalletSettings walletSettings = new WalletSettingsSettings ( walletPublicKey , pluginFileSystem , pluginId , errorManager ) ; walletSettings . setPreferenceSettings ( xmlWalletSetting , walletPublicKey ) ; }"
Returns a list containing ALL oreNames for a given ItemStack. Returns NULL if there are none. Input is not validated - don't be dumb! <code> ArrayList < String > getAllOreNames ( ItemStack stack ) { ,"ArrayList < String > names = stackNames . get ( new ItemWrapper ( stack ) ) ; return names == null ? stackNames . get ( new ItemWrapper ( stack . getItem ( ) , WILDCARD_VALUE ) ) : names ; }"
"remove index suffix, if it exists <code> void testRemoveIndexSuffix ( ) { ","String callnum = ""ML1 .I614 INDEX 1969-1986"" ; assertEquals ( ""ML1 .I614"" , removeVolSuffix ( callnum ) ) ; callnum = ""KD270 .E64 INDEX:A/K"" ; assertEquals ( ""KD270 .E64"" , removeVolSuffix ( callnum ) ) ; }"
Get the length of the string currently in the byte stream. <code> int lengthOfCurrentString ( ) { ,int i = 0 ; while ( bytes [ streamPosition + i ] != 0 ) i ++ ; return i ; }
"Test of findChildByEnabled method, of class ChildFacade. <code> void testFindChildByEnabled ( ) { ","Child childT = new Child ( ) ; childT . setId ( ""181671874"" ) ; childT . setEnabled ( true ) ; List < Child > childT2 = new ArrayList < > ( ) ; childT2 . add ( childT ) ; assertEquals ( childT2 , mockChildFacade . findChildByEnabled ( childT . isEnabled ( ) ) ) ; }"
Get all chains for this Packet (as Iterator) <code> Iterator getChains ( ) { ,if ( chains != null ) { return chains . keySet ( ) . iterator ( ) ; } return nullIter ; }
returns copy of list of unresolved classes supposed to be called from UI Thread <code> List < UnresolvedClass > getUnresolvedClasses ( ) { ,synchronized ( unresolvedClassList ) { List < UnresolvedClass > list = new ArrayList < UnresolvedClass > ( unresolvedClassList ) ; if ( ! model . isTestEnvironment ( ) ) { unresolvedClassList . clear ( ) ; } return list ; } }
Standard function to convert a string into an int with error handling. Returns -1 on failure. <code> int convertStrToInt ( String str ) { ,int result = 0 ; try { result = Integer . parseInt ( str . trim ( ) ) ; } catch ( Exception e ) { result = - 1 ; } return result ; }
Computes the AMQP wire-protocol length of an encoded field-array of type Object[] <code> long arraySize ( Object [ ] values ) { ,long acc = 0 ; for ( Object value : values ) { acc += fieldValueSize ( value ) ; } return acc ; }
"Sends a message to the given username. <code> void sendMessage ( String username , String message , int lifetimeInMilliseconds , @ Nullable BriefMessengerCallback < Message > messageCallback ) { ","throwIfNotValid ( username , ""username"" ) ; throwIfNotValid ( message , ""message"" ) ; CreateMessageBody body = new CreateMessageBody ( username , message , lifetimeInMilliseconds ) ; new SendMessageTask ( ) . addCallback ( messageCallback ) . send ( body ) ; }"
Gets the value of the contourW property. <code> long getContourW ( ) { ,if ( contourW == null ) { return 0L ; } else { return contourW ; } }
Gets the direction in which the first segment of the connection should point <code> Ray getFHRoutingStartConstraint ( ) { ,switch ( getFHSourceAnchorLoc ( ) ) { case CenteredConnectionAnchor . BOTTOM : return ManhattanConnectionRouterEx . DOWN ; default : return ManhattanConnectionRouterEx . RIGHT ; } }
"Find the first element with the specified name in the specified element's context (that is, the elements parent's subtree). <code> HTMLNode findInContext ( String name , HTMLNode el ) { ","if ( el == null ) return null ; return find ( name , el . getParent ( ) , null , true , false ) ; }"
Returns the name of the file without <code> String stripFileExt ( String fname ) { ,"int endIndex = fname . length ( ) - 1 ; while ( endIndex >= 0 && fname . charAt ( endIndex ) != '.' ) { endIndex -- ; } if ( endIndex <= 0 ) { return """" ; } return fname . substring ( 0 , endIndex ) ; }"
Returns true if the device has an SMS application installed. <code> boolean isSmsIntentRegistered ( Context context ) { ,"final Intent intent = new Intent ( Intent . ACTION_SENDTO , Uri . fromParts ( ""smsto"" , """" , null ) ) ; return isIntentRegistered ( context , intent ) ; }"
Returns this model's database <code> Database < Customer > getDb ( ) { ,"if ( null == _customerDatabase ) { _customerDatabase = new Database < Customer > ( ""customer"" ) ; } return _customerDatabase ; }"
read the &lt;sessionId&gt; field as String <code> String getSessionId ( ) { ,"final NodeList sessionIdTagList = xmlDoc . getElementsByTagName ( ""sessionId"" ) ; final String givenSessId = getCharacterDataFromElement ( ( Element ) sessionIdTagList . item ( 0 ) ) ; return givenSessId ; }"
"Add the session of user that connected to gateway and update or create timestamp for session <code> boolean connectUserTo ( String transport , String user ) { ","if ( transportSessions . get ( transport ) != null && transportSessions . get ( transport ) . get ( user ) == null ) { long millis = System . currentTimeMillis ( ) ; transportSessions . get ( transport ) . put ( user , millis ) ; db . insertOrUpdateSession ( transport , user , millis ) ; return true ; } return false ; }"
Get the binned cumulative probability. <code> double getBinnedCumulativeProbability ( double intensity ) { ,for ( int i = 0 ; i < orderedBins . length ; i ++ ) { int bin = orderedBins [ i ] ; if ( intensity > bin ) { return binSize * i ; } } return 1.0 ; }
"Add a page to the index. <code> void indexPage ( String url , Elements paragraphs ) { ","TermCounter tc = new TermCounter ( url ) ; tc . processElements ( paragraphs ) ; for ( String term : tc . keySet ( ) ) { add ( term , tc ) ; } }"
This method initializes executionButton <code> JRadioButton getExecutionButton ( ) { ,"if ( executionButton == null ) { executionButton = new JRadioButton ( ) ; executionButton . setText ( ""Execution"" ) ; } return executionButton ; }"
Get the rating a given user gave the sale <code> RatingModel getRatingFrom ( UserModel user ) { ,for ( RatingModel rating : ratings ) { if ( rating . user == user ) return rating ; } return null ; }
Returns a string representation of this object; useful for testing and debugging. <code> String toString ( ) { ,"StringBuilder sb = new StringBuilder ( ) ; sb . append ( ""{"" ) ; if ( getReservations ( ) != null ) sb . append ( ""Reservations: "" + getReservations ( ) + "","" ) ; if ( getNextToken ( ) != null ) sb . append ( ""NextToken: "" + getNextToken ( ) ) ; sb . append ( ""}"" ) ; return sb . toString ( ) ; }"
Lets us show a toast message from any thread <code> void showToastMessage ( final String message ) { ,"( ( Activity ) mainContext ) . runOnUiThread ( new Runnable ( ) { public void run ( ) { Toast . makeText ( mainContext , message , Toast . LENGTH_LONG ) . show ( ) ; } } ) ; }"
Returns the inverse of this instance. The norm of the quaternion must not be zero. <code> Quaternion getInverse ( ) { ,"final double squareNorm = q0 * q0 + q1 * q1 + q2 * q2 + q3 * q3 ; if ( squareNorm < Precision . SAFE_MIN ) { throw new ZeroException ( LocalizedFormats . NORM , squareNorm ) ; } return new Quaternion ( q0 / squareNorm , - q1 / squareNorm , - q2 / squareNorm , - q3 / squareNorm ) ; }"
Get the best bid price. <code> long getBestBidPrice ( ) { ,if ( bids . isEmpty ( ) ) return 0 ; return bids . firstLongKey ( ) ; }
gives the current Session <code> Session getSession ( ) { ,if ( null == session ) { session = sessionFactory . openSession ( ) ; } return session ; }
"Asserts that the node with the given name was triggered and left with no action in between <code> void assertNextNode ( IterableProcessEventListener it , String nodeName ) { ","assertTriggered ( it , nodeName ) ; assertLeft ( it , nodeName ) ; }"
"Take a string and make it an iterable ContentStream <code> Collection < ContentStream > toContentStreams ( final String str , final String contentType ) { ",if ( str == null ) return null ; ArrayList < ContentStream > streams = new ArrayList < > ( 1 ) ; ContentStreamBase ccc = new ContentStreamBase . StringStream ( str ) ; ccc . setContentType ( contentType ) ; streams . add ( ccc ) ; return streams ; }
"Adds a field to this structure. Returns its index. Any spaces in the field name will be replaced with underscores. <code> int addField ( String fieldName , int rows , int cols , Serializable data ) { ","field_t f = new field_t ( ) ; f . fieldName = fieldName . replace ( ' ' , '_' ) ; f . rows = rows ; f . cols = cols ; f . data = data ; sFields . add ( f ) ; return sFields . size ( ) - 1 ; }"
Returns whether we're running under Windows. <code> boolean isWindows ( ) { ,"String os = System . getProperty ( ""os.name"" ) ; return ( os != null ) && os . toLowerCase ( ) . startsWith ( ""windows"" ) ; }"
Add a vertex to this congruence class. <code> void addVertex ( ValueGraphVertex v ) { ,if ( vertices . add ( v ) ) { if ( v . representsParameter ( ) ) { nParameter ++ ; } if ( representativeV == null ) { representativeV = v ; } } }
Get local file manager <code> DragTree getLocalDragTree ( ) { ,if ( localAndRemoteTree == null ) return null ; return LocalAndRemoteFileTreeFrame . getLocalDragTree ( ) ; }
"Appends an attribute. If there is already an attribute with the same name, the new one substitutes for it. <code> void addAttribute ( AttributeInfo info ) { ","if ( attribute == null ) attribute = new ArrayList ( ) ; AttributeInfo . remove ( attribute , info . getName ( ) ) ; attribute . add ( info ) ; }"
Creates a user node <code> int createUser ( int id ) { ,if ( ! graph . containsVertex ( id ) ) { graph . addVertex ( id ) ; } return id ; }
Check to see if an array of comparable objects is sorted. <code> boolean isSorted ( T data [ ] ) { ,boolean result = true ; for ( int i = 0 ; i < data . length - 1 ; i ++ ) { if ( data [ i ] . compareTo ( data [ i + 1 ] ) > 0 ) { result = false ; break ; } } return result ; }
Tests if the distribution returns proper probability values. <code> void testProbability ( ) { ,"int [ ] points = new int [ ] { - 2 , - 1 , 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 } ; double [ ] results = new double [ ] { 0 , 0.2 , 0 , 0 , 0 , 0.5 , 0 , 0 , 0 , 0.3 , 0 } ; for ( int p = 0 ; p < points . length ; p ++ ) { double probability = testDistribution . probability ( points [ p ] ) ; Assert . assertEquals ( results [ p ] , probability , 0.0 ) ; } }"
"Converts an Integer value to an RGB object value, the Integer format is 0xRRGGBB. <code> RGB getRGBValue ( int rgbValue ) { ","if ( rgbValue == - 1 ) { return null ; } return new RGB ( ( rgbValue >> 16 ) & 0xff , ( rgbValue >> 8 ) & 0xff , rgbValue & 0xff ) ; }"
Test an event with no type declaration whatsoever: the default event type should be returned. <code> void testGetEventTypeWithoutType ( ) { ,"Model rdf = RDF2Go . getModelFactory ( ) . createModel ( GRAPHNAME ) . open ( ) ; rdf . addStatement ( OTHER_SUBJECT , RDF . first , EVENT_TYPE_2 ) ; assertEquals ( EVENT_TYPE_DEFAULT . toString ( ) , EventTypeMetadata . getType ( rdf ) ) ; }"
Provides the other index of the edge. <code> int getOther ( int vertexIndex ) { ,"if ( v0 == vertexIndex ) { return v1 ; } else if ( v1 == vertexIndex ) { return v0 ; } else { throw new IllegalArgumentException ( ""Invalid vertex index."" ) ; } }"
Serialize the given RemoteInvocation into a ByteArrayOutputStream. <code> ByteArrayOutputStream getByteArrayOutputStream ( RemoteInvocation invocation ) { ,"ByteArrayOutputStream baos = new ByteArrayOutputStream ( SERIALIZED_INVOCATION_BYTE_ARRAY_INITIAL_SIZE ) ; writeRemoteInvocation ( invocation , baos ) ; return baos ; }"
"Varargs version of AnnotatedElement.isAnnotationPresent() <code> boolean isAnnotatedBy ( AnnotatedElement annotatedElement , Class < ? extends Annotation > ... annotation ) { ",if ( ArrayUtils . isEmpty ( annotation ) ) { return false ; } for ( Class < ? extends Annotation > c : annotation ) { if ( annotatedElement . isAnnotationPresent ( c ) ) return true ; } return false ; }
Does the given string need to be quoted? <code> boolean needsQuoting ( String str ) { ,"if ( str == null ) { return false ; } byte [ ] bytes = str . getBytes ( ) ; return needsQuoting ( bytes , 0 , bytes . length ) ; }"
Returns the sum of all count elements in the results. <code> long getTagCountSum ( Collection < Tag > tags ) { ,long total = 0 ; for ( Tag topTag : tags ) { total += topTag . count ; } return total ; }
"Fetches base class handle <code> Object staticFieldBase ( Class clazz , String fieldName ) { ","Field field = null ; try { field = clazz . getDeclaredField ( fieldName ) ; return UnsafeHolder . getUnsafe ( ) . staticFieldBase ( field ) ; } catch ( Exception e ) { throw new RuntimeException ( clazz + "" "" + field , e ) ; } }"
Replays phase 2 of the transaction. <code> void replayPhase2 ( ) { ,"if ( jtsLogger . logger . isDebugEnabled ( ) ) { jtsLogger . logger . debug ( ""CachedRecoveredTransaction.replayPhase2 ["" + _theTransactionUid + "", "" + _theTransactionType + ""]"" ) ; } TransactionCache . replayPhase2 ( _theTransactionUid , _theTransactionType ) ; }"
Get the Properties object associated with the type passed. An UNKNOWN_TYPE exception is thrown if there are not properities of the type passed. This method was introduced in rc6.1. <code> osid . shared . Properties getPropertiesByType ( osid . shared . Type propertiesType ) { ,for ( int i = 0 ; i < ag_props . size ( ) ; i ++ ) { Properties prop = ( Properties ) ag_props . elementAt ( i ) ; if ( ( prop . getType ( ) ) . isEqual ( propertiesType ) ) return prop ; } throw new osid . shared . SharedException ( osid . shared . SharedException . UNKNOWN_TYPE ) ; }
Initializes the range for both axes. <code> void initRange ( ) { ,"mMinX = MathHelper . NULL_VALUE ; mMaxX = - MathHelper . NULL_VALUE ; mMinY = MathHelper . NULL_VALUE ; mMaxY = - MathHelper . NULL_VALUE ; int length = getItemCount ( ) ; for ( int k = 0 ; k < length ; k ++ ) { Number x = getX ( k ) ; Number y = getY ( k ) ; updateRange ( x , y ) ; } }"
Removes number from the cell's note. <code> CellNote removeNumber ( int number ) { ,"if ( number < 1 || number > 9 ) throw new IllegalArgumentException ( ""Number must be between 1-9."" ) ; Set < Integer > notedNumbers = new HashSet < Integer > ( getNotedNumbers ( ) ) ; notedNumbers . remove ( number ) ; return new CellNote ( notedNumbers ) ; }"
"Returns the zero-based index of the given DirectedEdge, after sorting in ascending order by angle with the positive x-axis. <code> int getIndex ( DirectedEdge dirEdge ) { ",sortEdges ( ) ; for ( int i = 0 ; i < outEdges . size ( ) ; i ++ ) { DirectedEdge de = ( DirectedEdge ) outEdges . get ( i ) ; if ( de == dirEdge ) return i ; } return - 1 ; }
"Get the name(s) of the deployments for an OperationalString. If the deployment has nested components, return a comma-separated list of deployment names <code> String getDeploymentNames ( OperationalString deployment ) { ","StringBuffer buffer = new StringBuffer ( ) ; buffer . append ( deployment . getName ( ) ) ; OperationalString [ ] nested = deployment . getNestedOperationalStrings ( ) ; for ( OperationalString aNested : nested ) { buffer . append ( "", "" ) . append ( getDeploymentNames ( aNested ) ) ; } return ( buffer . toString ( ) ) ; }"
"Splits start set a in relation to start set b <code> Set < Integer > splitStartSets ( Set < Integer > a , Set < Integer > b ) { ",Set < Integer > in = new HashSet < Integer > ( ) ; for ( Integer a1 : a ) { if ( b . contains ( a1 + 1 ) ) { in . add ( a1 ) ; } } return in ; }
Return whether the given type is a simple type or not <code> boolean isSimpleType ( String typeName ) { ,"if ( simpleTypetoxsd . keySet ( ) . contains ( typeName ) ) { return true ; } else if ( typeName . startsWith ( ""java.lang"" ) || typeName . startsWith ( ""javax."" ) ) { return true ; } return false ; }"
"Extra option is considered to be valid if it is build in pattern: ConnType.key All generated extra options generated by this method are valid. <code> Map < String , String > generateExtraOptions ( final String connType , int numberOfOptions ) { ","Map < String , String > map = new HashMap < > ( numberOfOptions ) ; for ( int i = 0 ; i < numberOfOptions ; i ++ ) { String uniqueExtraOption = STRING_EXTRA_OPTION + i ; String optionVal = STRING_OPTION_VALUE + i ; map . put ( connType + ""."" + uniqueExtraOption , optionVal ) ; } return map ; }"
Get the result of evaluating the expression for continuous optype. Is the same as calling getResult() when the optype is continuous. <code> double getResultContinuous ( double [ ] incoming ) { ,"if ( ! ( m_opType == FieldMetaInfo . Optype . CONTINUOUS ) ) { throw new Exception ( ""[Expression] Can't return continuous result "" + ""as optype is not continuous"" ) ; } return getResult ( incoming ) ; }"
Exist property predicate sample <code> void existProperty ( ) { ,"Filter resultFilter = ECQL . toFilter ( ""aProperty EXISTS"" ) ; Assert . assertTrue ( resultFilter instanceof PropertyIsEqualTo ) ; PropertyIsEqualTo eq = ( PropertyIsEqualTo ) resultFilter ; Expression expr = eq . getExpression1 ( ) ; Assert . assertTrue ( expr instanceof PropertyExistsFunction ) ; }"
"Returns the first index of a largest value in xs, which must have nonzero length. <code> int maxIndex ( float [ ] xs ) { ",int am = 0 ; float m = xs [ 0 ] ; for ( int i = 1 ; i < xs . length ; ++ i ) { float v = xs [ i ] ; if ( v > m ) { m = v ; am = i ; } } return am ; }
Gets the loess parameter estimates. <code> double [ ] getLoessParameterEstimates ( final double [ ] y ) { ,"int n = y . length ; double [ ] x = new double [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { x [ i ] = i + 1 ; } return createWeigthedLinearRegression ( x , y , getTricubeWeigts ( n ) ) . regress ( ) . getParameterEstimates ( ) ; }"
Instantiates a set of default StoreItem's <code> void loadDefaults ( ) { ,"items . put ( ""001"" , new StoreItem ( ""Ice Cube"" , 12.00 , 7 , ""001"" ) ) ; items . put ( ""002"" , new StoreItem ( ""Ice Breaker"" , 1.25 , 11 , ""002"" ) ) ; items . put ( ""003"" , new StoreItem ( ""Ice Castle"" , 0.38 , 13 , ""003"" ) ) ; }"
"Sets the suggestions to be returned for a given category. <code> void setSuggestionsForCategory ( @ CategoryInt int category , List < SnippetArticle > suggestions ) { ","mSuggestions . put ( category , new ArrayList < > ( suggestions ) ) ; if ( mObserver != null ) mObserver . onNewSuggestions ( category ) ; }"
"takes the screen coordinates and returns the world coordinates. <code> Vec2 getScreenToWorld ( float screenX , float screenY ) { ","Vec2 screen = new Vec2 ( screenX , screenY ) ; viewportTransform . getScreenToWorld ( screen , screen ) ; return screen ; }"
"Logs an occurance of an exception while reading a task. <code> void logReadTaskException ( final Logger logger , final Task < Revision > task , final Exception e ) { ","if ( task != null ) { logger . logException ( Level . SEVERE , ""Error while reading a task: "" + task . toString ( ) , e ) ; } else { logger . logException ( Level . SEVERE , ""Error while reading an unknown task"" , e ) ; } }"
Returns an network interface by name <code> NetworkInterface getByName ( String name ) { ,Vector networkInterfaces = getRealNetworkInterfaces ( ) ; for ( Enumeration e = networkInterfaces . elements ( ) ; e . hasMoreElements ( ) ; ) { NetworkInterface tmp = ( NetworkInterface ) e . nextElement ( ) ; if ( name . equals ( tmp . getName ( ) ) ) return tmp ; } return null ; }
Applies the given JSON to the underlying REST APIs in a single operation without needing to explicitly parse first. <code> String applyJson ( byte [ ] json ) { ,"Object dto = KubernetesHelper . loadJson ( json ) ; apply ( dto , ""REST call"" ) ; return """" ; }"
"Performs standard initializations on a newly created socket. <code> void prepareSocket ( Socket sock , HttpContext context , HttpParams params ) { ","sock . setTcpNoDelay ( HttpConnectionParams . getTcpNoDelay ( params ) ) ; sock . setSoTimeout ( HttpConnectionParams . getSoTimeout ( params ) ) ; int linger = HttpConnectionParams . getLinger ( params ) ; if ( linger >= 0 ) { sock . setSoLinger ( linger > 0 , linger ) ; } }"
Temporary method to add default transport parameters. <code> List < Parameter > getDefaultTransportParams ( ) { ,"Parameter param1 = new Parameter ( ) ; param1 . setName ( Constants . EXECUTOR_WORKER_POOL_SIZE ) ; param1 . setValue ( ""1024"" ) ; return Collections . singletonList ( param1 ) ; }"
"Returns a string with a formatted local date according to the specified date format string. <code> String formatLocalDateFromLong ( String dateFormat , long localTime ) { ",SimpleDateFormat simpleDateFormat = new SimpleDateFormat ( dateFormat ) ; simpleDateFormat . setCalendar ( sLocalCalendarInstance ) ; return simpleDateFormat . format ( new Date ( localTime ) ) ; }
Tax is originally a double value. This method converts that double value into a readable String value by multiplying the double value by 100. Return value will read as a whole number. <code> String returnTax ( ) { ,Double convertedTax = ( Double ) TAX * 100 ; return convertedTax . toString ( ) ; }
Finishes the session with temporarily disabled readonly checking. <code> void finishTemporarilyDisableReadonlyCheckSession ( ) { ,Set < String > variables = futureReadOnlyVariables . pop ( ) ; readOnlyVariables . addAll ( variables ) ; if ( ! futureReadOnlyVariables . isEmpty ( ) ) { futureReadOnlyVariables . peek ( ) . addAll ( variables ) ; } clonable = false ; }
Set the current state of the chat connection <code> void setState ( int state ) { ,"Log . d ( TAG , ""setState() "" + mState + "" -> "" + state ) ; mState = state ; if ( mHandler != null ) mHandler . obtainMessage ( MESSAGE_STATE_CHANGE , state , - 1 ) . sendToTarget ( ) ; else Log . d ( ""ccc"" , ""setState() Handle=null error state"" + "" -> "" + state ) ; }"
Returns a copy of the initialization vector data. <code> byte [ ] getIV ( ) { ,"byte [ ] res = new byte [ iv . length ] ; System . arraycopy ( iv , 0 , res , 0 , iv . length ) ; return res ; }"
Unapplies the WinAnsi encoding. <code> String unapplyWinAnsiEncoding ( byte [ ] replace_bytes ) { ,"String text = new String ( replace_bytes , ""windows-1252"" ) ; return text ; }"
Returns the key of the previous task in the group. <code> Task . TaskKey getPrevTaskInGroup ( Task t ) { ,int i = indexOf ( t ) ; if ( ( i - 1 ) >= 0 ) { return mTaskKeys . get ( i - 1 ) ; } return null ; }
Tail recursive solution to this problem. This algorithm has the same complexity order in time and space terms than the previous approach. <code> String reverseRecursive ( String input ) { ,"validateInput ( input ) ; return reverseRecursiveInner ( input , input . length ( ) - 1 , new StringBuilder ( ) ) ; }"
"Provides a human readable String representation of status, including timestamp, client id, action and (possibly) reason. <code> String toString ( ) { ","if ( action . equals ( ""Disconnect"" ) ) { return ""Status ["" + time . toString ( ) + ""] "" + clientId + "":"" + action + "" ("" + reason + "")"" ; } else { return ""Status ["" + time . toString ( ) + ""] "" + clientId + "":"" + action ; } }"
Returns the number of backups. <code> Integer getExportBackups ( ) { ,if ( m_exportBackups != null ) { return m_exportBackups ; } return EXPORT_DEFAULT_BACKUPS ; }
"Execute the element-available() function. <code> boolean elementAvailable ( String ns , String elemName ) { ",boolean isAvailable = false ; if ( null != ns ) { ExtensionHandler extNS = ( ExtensionHandler ) m_extensionFunctionNamespaces . get ( ns ) ; if ( extNS != null ) isAvailable = extNS . isElementAvailable ( elemName ) ; } return isAvailable ; }
"Imports a 3D model from a file on the device's SD card. The application must have read permission for the directory containing the file. Does not check that file exists and is readable by this process: the only public caller does that check. <code> GVRAssimpImporter readFileFromSDCard ( GVRContext gvrContext , String filename ) { ","long nativeValue = NativeImporter . readFileFromSDCard ( filename ) ; return new GVRAssimpImporter ( gvrContext , nativeValue ) ; }"
"Returns set of profiler tasks to be filtered from critical path. Also always filters out ACTION_LOCK and WAIT tasks to simulate unlimited resource critical path (see comments inside formatExecutionPhaseStatistics() method). <code> Pair < String , EnumSet < ProfilerTask >> typeFilter ( String description , ProfilerTask ... tasks ) { ","EnumSet < ProfilerTask > filter = EnumSet . of ( ProfilerTask . ACTION_LOCK , ProfilerTask . WAIT ) ; Collections . addAll ( filter , tasks ) ; return Pair . of ( description , filter ) ; }"
"Add new elements to this bag. If the new elements would take this bag beyond its current capacity, then the capacity is increased before adding the new elements. <code> void addMany ( int ... elements ) { ","if ( manyItems + elements . length > data . length ) { ensureCapacity ( ( manyItems + elements . length ) * 2 ) ; } System . arraycopy ( elements , 0 , data , manyItems , elements . length ) ; manyItems += elements . length ; }"
"Creates a random string with a length within the given interval. The string contains only characters that can be represented as a single code point. <code> String getRandomString ( Random rnd , int minLength , int maxLength ) { ",int len = rnd . nextInt ( maxLength - minLength + 1 ) + minLength ; char [ ] data = new char [ len ] ; for ( int i = 0 ; i < data . length ; i ++ ) { data [ i ] = ( char ) ( rnd . nextInt ( 0x7fff ) + 1 ) ; } return new String ( data ) ; }
"Loads the identity. Equal to translation=0,0,0 scale=1,1,1 rot=0,0,0,1. <code> void loadIdentity ( ) { ","translation . set ( 0 , 0 , 0 ) ; scale . set ( 1 , 1 , 1 ) ; rot . set ( 0 , 0 , 0 , 1 ) ; }"
Gets the value of the depth property. <code> BigInteger getDepth ( ) { ,"if ( depth == null ) { return new BigInteger ( ""1"" ) ; } else { return depth ; } }"
Ensure the name of the current event. <code> void ensureName ( String local_name ) { ,"QName ref = new QName ( myTargetNs , local_name ) ; QName actual = myParser . getName ( ) ; if ( ! ref . equals ( actual ) ) { parseError ( ""The element is not a web:"" + local_name + "" ("" + actual + "")"" ) ; } }"
sorts in ascending order of tournament score <code> PlayerResultsScoreComparator getAscendingTournamentInstance ( ) { ,"if ( ascTourneyInstance == null ) ascTourneyInstance = new PlayerResultsScoreComparator ( true , true ) ; return ascTourneyInstance ; }"
RDB Character shown in the column <code> String getRDBShowInTheColumn ( ) { ,UserInfoDataDAO userInfo = SessionManager . getUserInfo ( PreferenceDefine . RDB_CHARACTER_SHOW_IN_THE_COLUMN ) ; if ( null == userInfo ) return PreferenceDefine . RDB_CHARACTER_SHOW_IN_THE_COLUMN_VALUE ; return userInfo . getValue0 ( ) ; }
Assigns the IPentahoSession and Authentication stored with the given key to the current request. <code> boolean restoreSession ( String hash ) { ,SessionAuthenticationTuple tuple = sessionMap . get ( hash ) ; if ( tuple == null ) { return false ; } SecurityContextHolder . getContext ( ) . setAuthentication ( tuple . auth ) ; PentahoSessionHolder . setSession ( tuple . session ) ; return true ; }
Tries to extract HazelcastInstance from SessionFactory. <code> HazelcastInstance getHazelcastInstance ( final SessionFactory sessionFactory ) { ,"if ( ! ( sessionFactory instanceof SessionFactoryImplementor ) ) { logger . log ( Level . WARNING , ""SessionFactory is expected to be instance of SessionFactoryImplementor."" ) ; return null ; } return getHazelcastInstance ( ( SessionFactoryImplementor ) sessionFactory ) ; }"
"Ensure query modified with typeName. This method will make copy of the provided query, using DefaultQuery, if query.getTypeName is not equal to getSchema().getTypeName(). <code> Query namedQuery ( Query query ) { ","String typeName = getSchema ( ) . getTypeName ( ) ; if ( query . getTypeName ( ) == null || ! query . getTypeName ( ) . equals ( typeName ) ) { return new DefaultQuery ( typeName , query . getFilter ( ) , query . getMaxFeatures ( ) , query . getPropertyNames ( ) , query . getHandle ( ) ) ; } return query ; }"
"Get a particular bead on a specified peg. <code> Bead getBead ( String pos , int numBead ) { ",int selectedPeg = mapPosToPeg ( pos ) ; return position [ selectedPeg ] . beadAt ( numBead ) ; }
Creates a JDOM Element as defined in minigl.dtd <code> Element toXML ( ) { ,"Element e = new Element ( ""currency"" ) . addContent ( new Element ( ""symbol"" ) . setText ( getSymbol ( ) ) ) . addContent ( new Element ( ""name"" ) . setText ( getName ( ) ) ) ; e . setAttribute ( ""id"" , getId ( ) ) ; return e ; }"
"Set value of Status <code> void setStatus ( IContext context , system . proxies . EventStatus status ) { ","if ( status != null ) getMendixObject ( ) . setValue ( context , MemberNames . Status . toString ( ) , status . toString ( ) ) ; else getMendixObject ( ) . setValue ( context , MemberNames . Status . toString ( ) , null ) ; }"
"Returns true if the column of grid denoted by whichCol does not contain any duplicate values. Preconditions: whichCol < number of columns in grid all values in grid are between 1 and grid.length, inclusive <code> boolean checkColumn ( int [ ] [ ] grid , int whichCol ) { ",final int size = grid . length ; boolean [ ] found = new boolean [ size ] ; for ( int row = 0 ; row < size ; ++ row ) { int index = grid [ row ] [ whichCol ] - 1 ; if ( ! found [ index ] ) { found [ index ] = true ; } else { return false ; } } return true ; }
Adds the item that is already in the items list. This method is used both when adding new items and when regrouping existing. <code> void addExistingItem ( ResultItem item ) { ,"ResultGroup < ResultItem > group = getGroup ( item ) ; group . add ( item ) ; fireItemAdded ( item , group ) ; }"
Parses arguments in the context of the select person command. <code> Command prepareSelect ( String args ) { ,"Optional < Integer > index = parseIndex ( args ) ; if ( ! index . isPresent ( ) ) { return new IncorrectCommand ( String . format ( MESSAGE_INVALID_COMMAND_FORMAT , SelectCommand . MESSAGE_USAGE ) ) ; } return new SelectCommand ( index . get ( ) ) ; }"
"Tells if version1 is lower than version2. <code> boolean isLower ( String version1 , String version2 , boolean inclusive ) { ","int result = staticVersionComparator . compare ( version1 , version2 ) ; return result <= ( inclusive ? 0 : - 1 ) ; }"
"Draw a RGB(A) texture frame with specified texture transformation matrix. Required resources are allocated at the first call to this function. <code> void drawRgb ( int textureId , float [ ] texMatrix , int frameWidth , int frameHeight , int viewportX , int viewportY , int viewportWidth , int viewportHeight ) { ","prepareShader ( RGB_FRAGMENT_SHADER_STRING , texMatrix ) ; GLES20 . glActiveTexture ( GLES20 . GL_TEXTURE0 ) ; GLES20 . glBindTexture ( GLES20 . GL_TEXTURE_2D , textureId ) ; drawRectangle ( viewportX , viewportY , viewportWidth , viewportHeight ) ; GLES20 . glBindTexture ( GLES20 . GL_TEXTURE_2D , 0 ) ; }"
Sets the task name to the given value. This method is used to restore the task label after a nested operation was executed. Normally there is no need for clients to call this method. <code> void setTaskName ( final String name ) { ,runInUI ( new Runnable ( ) { public void run ( ) { if ( messageLabel != null ) { messageLabel . setText ( name ) ; } } } ) ; }
Method to let the user pick a color and return the color object. <code> Color pickAColor ( ) { ,"Color color = Color . white ; JFrame frame = new JFrame ( ) ; frame . setAlwaysOnTop ( true ) ; color = JColorChooser . showDialog ( frame , ""Pick a color"" , color ) ; return color ; }"
Gets a property value as an InetAddress. <code> InetAddress asInetAddress ( String key ) { ,String addressString = delegate . getProperty ( key ) ; if ( addressString == null ) { return null ; } else { return InetAddress . getByName ( addressString ) ; } }
pre 0 < nBytes <=4 <code> float readFloat ( int nBytes ) { ,int bits = readInt ( nBytes ) ; int bytesToMove = ( 4 - nBytes ) * 8 ; bits <<= bytesToMove ; return Float . intBitsToFloat ( bits ) ; }
Retorna o icone associado ao PIN <code> byte [ ] getIcon ( ) { ,try ( InputStream input = Pin . class . getResourceAsStream ( iconPath ) ) { return Util . toByteArray ( input ) ; } catch ( IOException ex ) { return new byte [ 0 ] ; } }
Read a 2-byte unsigned integer and update the CRC <code> int readUnsignedShort ( ) { ,int val = 0 ; for ( int i = 0 ; i < 2 ; i ++ ) { int b = _dstream . readUnsignedByte ( ) ; val = ( val << 8 ) | b ; crc . update ( ( int ) b ) ; } return val ; }
return the actual annex library if present. otherwise return the given (default) annex library <code> AnnexLibrary getActualAnnexLibrary ( AnnexLibrary annexObj ) { ,if ( annexObj instanceof DefaultAnnexLibrary ) { return ( ( DefaultAnnexLibrary ) annexObj ) . getParsedAnnexLibrary ( ) ; } return annexObj ; }
Call this method after a record has been parsed. This finished the lifecycle of any maps that were written and removes all the entries for the next record to be able to work. <code> void finishRecord ( ) { ,for ( MapWriter writer : wildcardWriters . values ( ) ) { writer . end ( ) ; } wildcardWriters . clear ( ) ; startedWildcards . clear ( ) ; }
Adds a long number to the message argument. <code> void appendLong ( final BigInteger number ) { ,for ( int i = 7 ; i >= 0 ; -- i ) { byteData . add ( Byte . valueOf ( ( byte ) ( number . shiftRight ( 8 * i ) . and ( BigInteger . valueOf ( 0xFF ) ) . longValue ( ) ) ) ) ; } }
Get list of excluded hosts of the HTTP proxy <code> String getHttpExcludedHosts ( ) { ,ProxyPreference preference = getProxyDao ( ) . get ( ProxyKey . HTTP_EXCLUDE ) ; return preference != null ? preference . getValue ( ) : StringUtils . EMPTY ; }
"Find an attribute by ID. <code> AttributeType findAttribute ( AttributeSetType ast , int attributeID ) { ",AttributeType [ ] attrs = ast . getAttribute ( ) ; if ( attrs == null ) { return null ; } for ( int i = 0 ; i < attrs . length ; i ++ ) { AttributeType attr = attrs [ i ] ; if ( attr . getAttributeID ( ) == attributeID ) return attr ; } return null ; }
Get the Read Optimized Storage Format <code> HoodieFileFormat getROFileFormat ( ) { ,if ( props . containsKey ( HOODIE_RO_FILE_FORMAT_PROP_NAME ) ) { return HoodieFileFormat . valueOf ( props . getProperty ( HOODIE_RO_FILE_FORMAT_PROP_NAME ) ) ; } return DEFAULT_RO_FILE_FORMAT ; }
"Bind commit committer avatar to image view <code> ImageView bindCommitter ( final RepositoryCommit commit , final AvatarLoader avatars , final ImageView view ) { ","User committer = commit . getCommitter ( ) ; if ( committer != null ) avatars . bind ( view , committer ) ; else { Commit rawCommit = commit . getCommit ( ) ; if ( rawCommit != null ) avatars . bind ( view , rawCommit . getCommitter ( ) ) ; } return view ; }"
Determines if the MIME type of this Entity is multipart/. Since multipart-entities must have a boundary parameter in the Content-Type field this method returns false if no boundary exists. <code> boolean isMultipart ( ) { ,ContentTypeField f = ( ContentTypeField ) getHeader ( ) . getField ( Field . CONTENT_TYPE ) ; return f != null && f . getBoundary ( ) != null && getMimeType ( ) . startsWith ( ContentTypeField . TYPE_MULTIPART_PREFIX ) ; }
Mandatory writeExternal method. It writes out the class version number and then writes out the fields. <code> void writeExternal ( ObjectOutput out ) { ,out . writeInt ( version ) ; out . writeInt ( dimension ) ; out . writeObject ( array ) ; out . writeObject ( name ) ; }
"Returns the Sequence server URL for the Fasta service. <code> String getFastaServiceURL ( String dbCode , String id ) { ","String str ; if ( dbCode != null ) str = CoreUtil . replaceAll ( _fastaService , ""@DB@"" , dbCode ) ; else str = _fastaService ; if ( id != null ) str = CoreUtil . replaceAll ( str , ""@ID@"" , id ) ; return addServiceRequirements ( str ) ; }"
Add a new order to the list and print out the information. method will notify cooks waiting to get orders if the list is currently empty. <code> Order addOrder ( String cashierName ) { ,Order newOrder = new Order ( cashierName ) ; ordersList . add ( newOrder ) ; notifyAll ( ) ; return newOrder ; }
"Writes a string to a file using default encoding. <code> void toFile ( String contents , File file ) { ",FileWriter out = new FileWriter ( file ) ; out . write ( contents ) ; out . close ( ) ; }
Write an array of bytes to the underlying DataOutputStream. Optionally trace the value. <code> void writeBytes ( byte [ ] b ) { ,"if ( Trace . isTraceOn ( ) ) Trace . log ( Trace . PROXY , ""  "" + Thread . currentThread ( ) . getName ( ) + "" out < "" , b ) ; out_ . write ( b , 0 , b . length ) ; }"
Randomly chooses one of the given generators. <code> Gen < T > oneOf ( Gen < T > ... generators ) { ,"Objects . requireNonNull ( generators , ""generators is null"" ) ; if ( generators . length == 0 ) { throw new IllegalArgumentException ( ""generators is empty"" ) ; } return choose ( 0 , generators . length - 1 ) . flatMap ( i -> generators [ i ] ) ; }"
"Reads integer from byte array for specified memory pointer, offset from this pointer and mask of value that is read. <code> int readInt ( int memPtr , int bitOffset , int mask ) { ",int idx = memPtr + ( bitOffset >> 3 ) ; int value = mem [ idx ++ ] & 0xFF ; value |= ( mem [ idx ++ ] << 8 ) & 0xFFFF ; value |= ( mem [ idx ++ ] << 16 ) & 0xFFFFFF ; value |= ( mem [ idx ++ ] << 24 ) & 0xFFFFFFFF ; value >>= ( bitOffset & 7 ) ; value &= mask ; return value ; }
Removes an option from the choice set. <code> boolean removeOption ( T option ) { ,int idx = options . indexOf ( option ) ; if ( idx >= 0 ) { options . remove ( idx ) ; double w = weights . removeAt ( idx ) ; weightSum -= w ; return true ; } else { return false ; } }
Gets the secure random generator algorithm name. <code> String getAlgorithm ( ) { ,if ( algorithm == null ) { return SSL . DEFAULT_SECURE_RANDOM_ALGORITHM ; } return algorithm ; }
locates the midpoint of the curve representing the path. This is used for positioning a label on the curve <code> Point2D curveMidPoint ( ) { ,"CubicCurve2D . subdivide ( getCurve ( ) , left , right ) ; return left . getP2 ( ) ; }"
"Generates an invoke method instruction. <code> void invokeInsn ( final int opcode , final Type type , final MethodDescriptor method ) { ","String owner = type . getSort ( ) == Type . ARRAY ? type . getDescriptor ( ) : type . getInternalName ( ) ; mv . visitMethodInsn ( opcode , owner , method . getName ( ) , method . getDescriptor ( ) ) ; }"
Method used to send updated state to this player. <code> void sendInfo ( GameInfo info ) { ,while ( myHandler == null ) Thread . yield ( ) ; myHandler . post ( new MyRunnable ( info ) ) ; }
Check whether this entry is able to issue other certificates (means has a key and hat it's Basic Constraints CA flag set to true). <code> boolean canIssue ( ) { ,boolean canIssue = false ; if ( hasKey ( ) && hasCRT ( ) ) { try { canIssue = getCRT ( ) . getBasicConstraints ( ) >= 0 ; } catch ( IOException e ) { Exceptions . warn ( e ) ; } } return canIssue ; }
"Add the provided HTTP Cookie to the Response <code> boolean addCookie ( final Cookie cookie , final HttpServletResponse response ) { ",if ( cookie == null || response == null ) { return false ; } response . addCookie ( cookie ) ; return true ; }
Returns all listeners currently registered. Modifying this array will result in undefined behaviour. <code> Array < ControllerListener > getListeners ( ) { ,initialize ( ) ; return getManager ( ) . getListeners ( ) ; }
"save the widget id for updating <code> void setWidgetIDForUpdate ( String key , ArrayList < Integer > value ) { ","StringBuilder str = new StringBuilder ( ) ; for ( int i = 0 ; i < value . size ( ) ; i ++ ) { str . append ( String . valueOf ( value . get ( i ) ) ) . append ( "","" ) ; } String finalStr = str . substring ( 0 , str . length ( ) - 1 ) ; mSharedPrefs . edit ( ) . putString ( key , finalStr ) . apply ( ) ; }"
"Generate a random path underneath baseRestoreDir for each snapshot in snapshots and return a map from the snapshot to the restore directory. <code> Map < String , Path > generateSnapshotToRestoreDirMapping ( Collection < String > snapshots , Path baseRestoreDir ) { ","Map < String , Path > rtn = Maps . newHashMap ( ) ; for ( String snapshotName : snapshots ) { Path restoreSnapshotDir = new Path ( baseRestoreDir , snapshotName + ""__"" + UUID . randomUUID ( ) . toString ( ) ) ; rtn . put ( snapshotName , restoreSnapshotDir ) ; } return rtn ; }"
Populates cached messages with unseen messages that match subject <code> boolean getUnseenMessages ( String subject ) { ,if ( myConnector == null ) { return false ; } cachedMessages = myConnector . getUnseenMessages ( subject ) ; return true ; }
Parses a stop Id from a Json node. <code> String parseStopId ( JsonNode place ) { ,"JsonNode stopId = place . get ( ""stopId"" ) ; if ( stopId != null ) { String tokens [ ] = stopId . asText ( ) . split ( "":"" ) ; return tokens [ 1 ] ; } return null ; }"
Converts a message into the table. <code> Hashtable toHashtable ( ) { ,"Hashtable < String , Object > t = new Hashtable < String , Object > ( ) ; t . put ( ""id"" , getId ( ) ) ; t . put ( ""priority"" , getPriority ( ) ) ; t . put ( ""type"" , getType ( ) ) ; t . put ( ""title"" , StringUtils . toUTF8 ( getTitle ( ) ) ) ; t . put ( ""text"" , StringUtils . toUTF8 ( getText ( ) ) ) ; t . put ( ""version"" , getVersion ( ) ) ; return t ; }"
Helper method that returns the URI to the directory pathname. <code> Uri getDirectoryPathname ( ) { ,Bundle data = mMessage . getData ( ) ; return data . getParcelable ( DIRECTORY_PATHNAME ) ; }
"Resets the serial numbers of the entries to prevent overflow of the serial number counter. Not likely to be called, but here just in case. <code> void resetSerialNumbers ( ) { ",final int sz = mEntries . size ( ) ; if ( sz > 0 ) { Collections . sort ( mEntries ) ; mSNCounter = 0L ; for ( int i = 0 ; i < sz ; i ++ ) { mEntries . get ( i ) . setSerialNum ( mSNCounter ++ ) ; } } }
"Converts an array of bytes into an array of characters representing the hexadecimal values of each byte in order. The returned array will be double the length of the passed array, as it takes two characters to represent any given byte. <code> char [ ] encodeHex ( byte [ ] data ) { ","int l = data . length ; char [ ] out = new char [ l << 1 ] ; for ( int i = 0 , j = 0 ; i < l ; i ++ ) { out [ j ++ ] = DIGITS [ ( 0xF0 & data [ i ] ) >>> 4 ] ; out [ j ++ ] = DIGITS [ 0x0F & data [ i ] ] ; } return out ; }"
Create an empty list for a key. This overrides a previosly mapped list. <code> List < I > createList ( K key ) { ,"List < I > list = new ArrayList < I > ( ) ; entries . put ( key , list ) ; return list ; }"
"Returns the ratio of a given sample normalized if the given reporter ion quantification has normalization factors. null if not found. <code> Double getRatio ( String reporterIonName , NormalizationFactors normalizationFactors ) { ",if ( rawRatios == null ) { return null ; } Double ratio = rawRatios . get ( reporterIonName ) ; if ( normalizationFactors . hasPsmNormalisationFactors ( ) && ratio != null && ratio != Double . NaN ) { ratio /= normalizationFactors . getPsmNormalisationFactor ( reporterIonName ) ; } return ratio ; }
"A method to check if a given integer is contained in an array <code> boolean containsInt ( int [ ] array , int theInt ) { ",for ( int i : array ) { if ( i == theInt ) { return true ; } } return false ; }
Create a string representation of the data. This is not necessarily identical with the text of the original log line. <code> String toString ( ) { ,StringBuffer buffer = new StringBuffer ( ) ; for ( int value : dataValues ) { if ( value < 10 ) { buffer . append ( '0' ) ; } buffer . append ( value ) ; buffer . append ( ' ' ) ; } return buffer . toString ( ) . trim ( ) ; }
Callback is called when connection is suspended. Try to connect again. <code> void onConnectionSuspended ( int cause ) { ,"Log . i ( TAG , ""onConnectionSuspended, cause: "" + cause ) ; mGoogleApiClient . connect ( ) ; }"
Find the name of the replica set precedes the host addresses. <code> String replicaSetUsedIn ( String addresses ) { ,"if ( addresses . startsWith ( ""["" ) ) { return null ; } int index = addresses . indexOf ( '/' ) ; if ( index < 0 ) return null ; return addresses . substring ( 0 , index ) ; }"
Is The Action Valid based on current state <code> boolean isValidAction ( String action ) { ,String [ ] options = getActionOptions ( ) ; for ( int i = 0 ; i < options . length ; i ++ ) { if ( options [ i ] . equals ( action ) ) return true ; } return false ; }
Create complex number where the <code> IComplexNumber [ ] [ ] complexNumbersFor ( double [ ] [ ] realComponents ) { ,"IComplexNumber [ ] [ ] ret = new IComplexNumber [ realComponents . length ] [ realComponents [ 0 ] . length ] ; for ( int i = 0 ; i < realComponents . length ; i ++ ) for ( int j = 0 ; j < realComponents [ i ] . length ; j ++ ) ret [ i ] [ j ] = Nd4j . createComplexNumber ( realComponents [ i ] [ j ] , 0 ) ; return ret ; }"
Returns the appropriate icon for the specified layer <code> ResourceReference getLayerIcon ( LayerInfo info ) { ,ResourceReference icon = UNKNOWN_ICON ; if ( info . getType ( ) == Type . VECTOR ) icon = VECTOR_ICON ; else if ( info . getType ( ) == Type . RASTER ) icon = RASTER_ICON ; return icon ; }
Encode a string using Base64 encoding. Used when storing passwords as cookies. This is weak encoding in that anyone can use the decodeString routine to reverse the encoding. <code> String encodeString ( String str ) { ,sun . misc . BASE64Encoder encoder = new sun . misc . BASE64Encoder ( ) ; return encoder . encodeBuffer ( str . getBytes ( ) ) . trim ( ) ; }
"This method returns default substrings delimited by Pattern p. As such, this method may be more memory-efficient in some situations (for example when only a multiple columns should be loaded and stored in memory). <code> String [ ] readLineElemsReturnReference ( Pattern p ) { ",if ( in != null ) { String ln = readLine ( ) ; if ( ln != null ) { String [ ] elems = p . split ( ln ) ; ln = null ; return elems ; } else { return null ; } } else { return null ; } }
"Color distance on the HSB scale. The incomingPix is compared with the baseline. The method returns true if each channel validates the condition for the given threshold. <code> boolean colorDistHSB ( PGraphics g , int baseline , int incomingPix , float hueTresh , float saturationTresh , float brightnessTresh ) { ",float h1 = g . hue ( baseline ) ; float h2 = g . hue ( incomingPix ) ; return abs ( h1 - h2 ) < hueTresh && g . saturation ( incomingPix ) > saturationTresh && g . brightness ( incomingPix ) > brightnessTresh ; }
"Remove the handshake string from the buffer. On entry and exit, ""position"" is the #of bytes in the buffer. <code> void consumeHandshake ( ByteBuffer buf ) { ",buf . flip ( ) ; buf . position ( mHandshake . length ) ; buf . compact ( ) ; }
"Make a standard toast that just contains a text view. <code> Toast makeText ( Context context , int resId , int duration ) { ","Toast toast = Toast . makeText ( context , resId , duration ) ; setToast ( toast ) ; return toast ; }"
Finds the correct schematic when player presses NEXT <code> void flipToNextPage ( int currentIndex ) { ,"FMLClientHandler . instance ( ) . getClient ( ) . currentScreen = null ; MinecraftForge . EVENT_BUS . post ( new FlipPage ( null , currentIndex , 1 ) ) ; }"
"grants the given JID the subscription (e.g. viewing your online state) <code> void grantSubscription ( String jid , XMPPConnection connection ) { ","Presence presence = new Presence ( Presence . Type . subscribed ) ; sendPresenceTo ( jid , presence , connection ) ; }"
"Store the root certificate and the key in the jks keystore <code> void storeKeyAndCertificate ( String alias , char [ ] password , String keystore , Key key , X509Certificate [ ] chain ) { ","KeyStore keyStore = KeyStore . getInstance ( ""jks"" ) ; keyStore . load ( null , null ) ; keyStore . setKeyEntry ( alias , key , password , chain ) ; keyStore . store ( new FileOutputStream ( keystore ) , password ) ; }"
"Get an iterator over all the prefixes declared in this namespace context. This will include the default namespace (prefix="""") and the XML namespace where appropriate <code> Iterator < String > iteratePrefixes ( ) { ","ArrayList < String > list = new ArrayList < String > ( 10 ) ; for ( Iterator < String > it = baseResolver . iteratePrefixes ( ) ; it . hasNext ( ) ; ) { String p = it . next ( ) ; if ( p . length ( ) != 0 ) { list . add ( p ) ; } } list . add ( """" ) ; return list . iterator ( ) ; }"
Loads an external speech strategy with the given speechStrategyPath. <code> void loadExternalSpeechStrategy ( String speechStrategyRelativePath ) { ,"File speechStrategyFile = new File ( mExternalSpeechStrategyDirectory , speechStrategyRelativePath ) ; mSpeechRuleProcessor . addSpeechStrategy ( speechStrategyFile ) ; Log . i ( LOG_TAG , ""Loaded external speech strategy: "" + speechStrategyRelativePath ) ; }"
Sets the port on which this ModbusTransaction should be executed. <code> void setSerialConnection ( SerialConnection con ) { ,m_SerialCon = con ; m_IO = con . getModbusTransport ( ) ; }
"Try to compute value in background and abort computation if it takes too long. If the computation is fast, return computed value. If the computation is slow, abort computation (cancel ProgressIndicator). <code> T tryComputeFast ( @ NotNull Function < ProgressIndicator , T > backgroundTask , long waitMillis ) { ","Pair < T , ProgressIndicator > pair = computeInBackgroundAndTryWait ( backgroundTask , ( result , indicator ) -> { } , ModalityState . defaultModalityState ( ) , waitMillis ) ; T result = pair . first ; ProgressIndicator indicator = pair . second ; indicator . cancel ( ) ; return result ; }"
Returns true if java.awt.Desktop is supported on host platform. <code> boolean isDesktopSupported ( ) { ,if ( ! desktopSupportedInitialized ) { desktopSupported = Desktop . isDesktopSupported ( ) ; desktopSupportedInitialized = true ; } return desktopSupported ; }
Reads a byte from the current position. <code> int readByte ( ) { ,bytesRead ++ ; return ( ( int ) arr [ pos ++ ] ) & 0xFF ; }
Returns the distance matrix used to construct this guide tree. The scores have been normalized. <code> double [ ] [ ] getDistanceMatrix ( ) { ,"double [ ] [ ] matrix = new double [ distances . getSize ( ) ] [ distances . getSize ( ) ] ; for ( int i = 0 ; i < matrix . length ; i ++ ) { for ( int j = i + 1 ; j < matrix . length ; j ++ ) { matrix [ i ] [ j ] = matrix [ j ] [ i ] = distances . getValue ( i , j ) ; } } return matrix ; }"
Is the current message being processed a shutdown message? <code> boolean isShutdown ( Object msg ) { ,assert ( msg != null ) ; if ( msg . equals ( Commands . SHUTDOWN ) ) { return ( true ) ; } return ( false ) ; }
Format for Git storage. <code> String toExternalString ( ) { ,"final StringBuilder r = new StringBuilder ( ) ; r . append ( getName ( ) . trim ( ) ) ; r . append ( "" <"" ) ; r . append ( getEmailAddress ( ) . trim ( ) ) ; r . append ( ""> "" ) ; r . append ( when / 1000 ) ; r . append ( ' ' ) ; appendTimezone ( r ) ; return r . toString ( ) ; }"
"Given data and error-correction codewords received, possibly corrupted by errors, attempts to correct the errors in-place. <code> void correctErrors ( int [ ] codewords , int [ ] erasures , int numECCodewords ) { ","if ( erasures . length > numECCodewords / 2 + MAX_ERRORS || numECCodewords < 0 || numECCodewords > MAX_EC_CODEWORDS ) { throw ChecksumException . getChecksumInstance ( ) ; } errorCorrection . decode ( codewords , numECCodewords , erasures ) ; }"
Returns executable path of Handbrake application <code> String getHandbrakeExecutable ( ) { ,"if ( MediaUtil . osIsWindows ( ) ) { return BIN_DIR + ""handbrake.exe"" ; } else { return BIN_DIR + ""handbrake"" ; } }"
Test referral in BYE when connecting. <code> void testConnectReferral ( ) { ,test ( new IMAPHandler ( ) { @ Override public void sendGreetings ( ) throws IOException { bye ( REFERRAL ) ; } } ) ; }
"The degree sequence of a graph is a sorted (organized in numerical order from largest to smallest, possibly with repetitions) list of the degrees of the vertices in the graph. <code> List < Integer > degreeSequence ( ) { ","List < Integer > degrees = new ArrayList < > ( ) ; List < Integer > vertices = getVertices ( ) ; for ( int v = 0 ; v < getNumVertices ( ) ; v ++ ) { degrees . add ( getNeighbors ( v ) . size ( ) + getInNeighbors ( v ) . size ( ) ) ; } Collections . sort ( degrees , Collections . reverseOrder ( ) ) ; return degrees ; }"
Test of max method <code> void testMax ( ) { ,"ArithmeticFunction instance = new ArithmeticFunction ( ) ; assertEquals ( 5 , instance . max ( 1 , 5 ) , 0.0 ) ; }"
Returns the Device Class component of a bluetooth class. This includes both the major and minor device components. Values returned from this function can be compared with the constants Device.FOO. A bluetooth device can only be associated with one device class. <code> int getDevice ( int btClass ) { ,if ( btClass == ERROR ) { return ERROR ; } return ( btClass & Device . BITMASK ) ; }
"Add an attribute using a prefix. <code> void addAttributeWithPrefix ( String prefix , String uri , String localName , String type , String value ) { ",final int i = _attributeCount << 3 ; if ( i == _strings . length ) { resize ( i ) ; } _strings [ i + PREFIX ] = prefix ; _strings [ i + URI ] = uri ; _strings [ i + LOCAL_NAME ] = localName ; _strings [ i + QNAME ] = null ; _strings [ i + TYPE ] = type ; _strings [ i + VALUE ] = value ; _attributeCount ++ ; }
Get a jedis entity from the pool <code> Jedis getJedis ( ) { ,"if ( jedisPool != null ) return jedisPool . getResource ( ) ; else throw new RedisInitException ( ""Cannot get redis instance from a null JedisPool"" ) ; }"
Gets the offset from the start of an array object's memory to the memory used to store its initial (zeroeth) element. <code> int arrayBaseOffset ( Class clazz ) { ,"Class < ? > component = clazz . getComponentType ( ) ; if ( component == null ) { throw new IllegalArgumentException ( ""Valid for array classes only: "" + clazz ) ; } return getArrayBaseOffsetForComponentType ( component ) ; }"
"Add all the subject classifications from the bibliographic metadata. <code> void addCategories ( Item item , DepositReceipt receipt ) { ","List < MetadataValue > dcv = itemService . getMetadataByMetadataString ( item , ""dc.subject.*"" ) ; if ( dcv != null ) { for ( MetadataValue aDcv : dcv ) { receipt . getWrappedEntry ( ) . addCategory ( UriRegistry . DC_NAMESPACE , aDcv . getValue ( ) , aDcv . getValue ( ) ) ; } } }"
"Returns the class file for the given class (which has been verified to exist in the returned location), or null if the class file could not be found (e.g. because it is contained in a Jar). <code> File getClassFile ( Class < ? > clazz ) { ","File dir = new File ( clazz . getProtectionDomain ( ) . getCodeSource ( ) . getLocation ( ) . getPath ( ) ) ; if ( ! dir . isDirectory ( ) ) return null ; File clazzFile = new File ( dir , clazz . getName ( ) . replace ( '.' , File . separatorChar ) + "".class"" ) ; return clazzFile . isFile ( ) ? clazzFile : null ; }"
"Builds a mapping of components to PositionDTO's. <code> Map < NiFiComponentDTO , PositionDTO > getPositionLookup ( Collection < NiFiComponentDTO > components ) { ","final Map < NiFiComponentDTO , PositionDTO > positionLookup = new HashMap < > ( ) ; for ( final NiFiComponentDTO component : components ) { positionLookup . put ( component , new PositionDTO ( component . getPosition ( ) . getX ( ) , component . getPosition ( ) . getY ( ) ) ) ; } return positionLookup ; }"
"Writes the name of the entity It is a MUST element. <code> void writeName ( JsonGenerator jsonGenerator , Object entity ) { ",jsonGenerator . writeFieldName ( NAME ) ; if ( entity instanceof EntitySet ) { jsonGenerator . writeObject ( ( ( EntitySet ) entity ) . getName ( ) ) ; } else { jsonGenerator . writeObject ( ( ( Singleton ) entity ) . getName ( ) ) ; } }
"Print a node as a list, with a trailing newline character. <code> void printListln ( ExecutionContext ctx ) { ","ctx . stackCheck ( 1 ) ; ctx . pushCont ( ""bluejelly.runtime.Printer.printListln$1"" ) ; ctx . s [ ctx . sp + 1 ] = ctx . s [ ctx . sp ] ; ++ ctx . sp ; ctx . jump ( ""bluejelly.runtime.Printer.printList"" ) ; }"
Returns time of being in running state. <code> long getUptime ( ) { ,if ( startTime == - 1 ) registerStart ( ) ; return System . currentTimeMillis ( ) - startTime ; }
"Typesafe Getter for the String represented by the provided key with default value to return if key is not represented. <code> String getString ( String key , String defaultString ) { ","if ( ! map . containsKey ( key ) ) { return defaultString ; } return ( String ) readAndValidate ( key , String . class ) ; }"
"Update the hostname portion of a url <code> String updateHostNameInURL ( String url , String siteFQDN ) { ","Validate . notEmpty ( url , ""Null URL string."" ) ; URL oldUrl = new URL ( url ) ; URL newUrl = new URL ( oldUrl . getProtocol ( ) , siteFQDN , oldUrl . getPort ( ) , oldUrl . getFile ( ) ) ; return newUrl . toExternalForm ( ) ; }"
"Returns the parent of this tile, or null if this tile is (one of) the root of the current dataset <code> Tile getParent ( ) { ","if ( z == 0 ) return null ; else return new Tile ( ( long ) Math . floor ( x / 2.0 ) , ( long ) Math . floor ( y / 2.0 ) , z - 1 ) ; }"
Optionally creates and returns the current user's application data directory. <code> File getApplicationUserDir ( boolean forceCreate ) { ,"final File dir = new File ( SystemUtils . getUserHomeDir ( ) , '.' + getContextID ( ) ) ; if ( forceCreate && ! dir . exists ( ) ) { dir . mkdirs ( ) ; } return dir ; }"
Returns the list of people denied from building on this plot. The function returns an empty Set if the plot is null. <code> Collection < UUID > getAllDeniedUUID ( ) { ,if ( getPlot ( ) != null ) { return getPlot ( ) . denied ( ) . getAllPlayers ( ) . values ( ) ; } else { return new HashSet < > ( ) ; } }
"Build a copy of the ServerState with only ChangeNumbers older than a specific ChangeNumber. This is used when building the initial Cookie in the External Changelog, to cope with purged changes. <code> ServerState duplicateOnlyOlderThan ( ChangeNumber cn ) { ","ServerState newState = new ServerState ( ) ; synchronized ( list ) { for ( Integer key : list . keySet ( ) ) { ChangeNumber change = list . get ( key ) ; Integer id = change . getServerId ( ) ; if ( change . older ( cn ) ) { newState . list . put ( id , change ) ; } } } return newState ; }"
"Returns a static library archive with dead code/objects removed by J2ObjC dead code removal, given the original unpruned static library containing J2ObjC-translated code. <code> Artifact j2objcPrunedArchive ( Artifact unprunedArchive ) { ","PathFragment prunedSourceArtifactPath = FileSystemUtils . appendWithoutExtension ( unprunedArchive . getRootRelativePath ( ) , ""_pruned"" ) ; return ruleContext . getUniqueDirectoryArtifact ( ""_j2objc_pruned"" , prunedSourceArtifactPath , ruleContext . getBinOrGenfilesDirectory ( ) ) ; }"
"Get the name of the recipient for this message, if it is a regSendTag message. Messages are sent to Pids or names. If this message was sent to a name then the name is returned by this method. <code> Object getRecipient ( ) { ",if ( toName != null ) { return toName ; } return to ; }
"Gets the list of Crud service managed by the current repository. <code> Collection < Crud < ? , ? >> getCrudServices ( ) { ","List < Crud < ? , ? >> list = new ArrayList < > ( ) ; list . addAll ( cruds ) ; return list ; }"
"Serialize an instance, restore it, and check for equality. <code> void testSerialization ( ) { ","XYShapeRenderer r1 = new XYShapeRenderer ( ) ; XYShapeRenderer r2 = ( XYShapeRenderer ) TestUtilities . serialised ( r1 ) ; assertEquals ( r1 , r2 ) ; }"
Use this method to get the instance of the of this class. <code> GlobalDataStore getInstance ( ) { ,if ( INSTANCE == null ) INSTANCE = new GlobalDataStore ( ) ; return INSTANCE ; }
Builds a bbox using the stack subproducts <code> BBOX buildBBoxWithCRS ( ) { ,String crs = getResultStack ( ) . popStringValue ( ) ; assert crs != null ; BBOX bbox = buildBBox ( crs ) ; return bbox ; }
Convert a number to an IP address. <code> String convertNumberToIP ( long ip ) { ,"StringBuilder ipAddress = new StringBuilder ( 15 ) ; for ( int i = 0 ; i < 4 ; i ++ ) { ipAddress . insert ( 0 , Long . toString ( ip & 0xff ) ) ; if ( i < 3 ) { ipAddress . insert ( 0 , '.' ) ; } ip = ip >> 8 ; } return ipAddress . toString ( ) ; }"
"Inserts a directory entry at the specified slot. <code> void insertDir ( int slot , Constant val , int blknum ) { ","insert ( slot ) ; setVal ( slot , ""dataval"" , val ) ; setInt ( slot , ""block"" , blknum ) ; }"
"Validates that the configured key matches the provided key. <code> void validateConfiguredTypes ( CacheConfig cacheConfig , K key ) { ","Class keyType = cacheConfig . getKeyType ( ) ; validateConfiguredKeyType ( keyType , key ) ; }"
"This is another method to use to modify the graph from the updaters. It behaves like execute, but blocks until the runnable has been executed. This might be particularly useful in the setup method of an updater. <code> void executeBlocking ( GraphWriterRunnable runnable ) { ",Future < ? > future = executeReturningFuture ( runnable ) ; future . get ( ) ; }
"Setter for the ""root"" location of the HCatPartitionSpec. <code> void setRootLocation ( String location ) { ","try { partitionSpecProxy . setRootLocation ( location ) ; } catch ( MetaException metaException ) { throw new HCatException ( ""Unable to set root-path!"" , metaException ) ; } }"
"Sets the value of an object stored on an Annotation in the tags map based on the input key <code> void setProperty ( final ModelResource modelResource , final String key , final Object value ) { ","CoreArgCheck . isNotNull ( modelResource , ""modelResource"" ) ; CoreArgCheck . isNotNull ( key , ""key"" ) ; if ( value == null ) { removeProperty ( modelResource , key ) ; return ; } Annotation annotation = getResourceAnnotation ( modelResource , true ) ; annotation . getTags ( ) . put ( key , value ) ; }"
"Provide the nth block according to BLOCK_SIZE <code> byte [ ] getBlock ( int n , byte [ ] blocks ) { ","byte [ ] res = new byte [ BLOCK_SIZE ] ; int j = n * BLOCK_SIZE + BLOCK_SIZE ; for ( int i = n * BLOCK_SIZE , k = 0 ; i < j ; i ++ , k ++ ) { if ( i >= blocks . length ) res [ k ] = 0 ; else res [ k ] = blocks [ i ] ; } return res ; }"
"Gets the fully qualified cell reference given the column, row external sheet reference etc <code> void getCellReference ( int sheet , int column , int row , ExternalSheet workbook , StringBuffer buf ) { ","String name = workbook . getExternalSheetName ( sheet ) ; buf . append ( StringHelper . replace ( name , ""'"" , ""''"" ) ) ; buf . append ( sheetInd ) ; getCellReference ( column , row , buf ) ; }"
Throws IllegalArgumentException of the matrix does not have at least two columns and two rows <code> void checkSufficientData ( final RealMatrix matrix ) { ,"int nRows = matrix . getRowDimension ( ) ; int nCols = matrix . getColumnDimension ( ) ; if ( nRows < 2 || nCols < 2 ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats . INSUFFICIENT_ROWS_AND_COLUMNS , nRows , nCols ) ; } }"
"Check if zero VAT is allowed for the passed country <code> boolean isZeroVATAllowed ( @ Nonnull final Locale aCountry , final boolean bUndefinedValue ) { ","ValueEnforcer . notNull ( aCountry , ""Country"" ) ; final VATCountryData aVATCountryData = getVATCountryData ( aCountry ) ; return aVATCountryData != null ? aVATCountryData . isZeroVATAllowed ( ) : bUndefinedValue ; }"
"Search all connections from our input Id and search their connections <code> CandidateBuilder searchConnection ( final String connectionName , final String ql , final Optional < String > entityType ) { ","final Pipeline < FilterResult < Candidate >> newFilter = pipeline . withFilter ( filterFactory . searchConnectionFilter ( ql , connectionName , entityType ) ) ; return new CandidateBuilder ( newFilter , filterFactory ) ; }"
Add an ignore item. <code> void addIgnore ( final int ignores ) { ,"sink . text ( ignores + "" "" ) ; iconIgnore ( ) ; sink . text ( "" "" ) ; }"
Returns the funding alt ref that has this fundingAlt in it <code> FundingSourceAltRef getFundingSourceAltRef ( FundingSourceAlternative fundingAlt ) { ,for ( FundingSourceAltRef altRef : getAltRefs ( ) ) { if ( altRef . getAlternative ( ) . getId ( ) . equals ( fundingAlt . getId ( ) ) ) { return altRef ; } } return null ; }
Perform the undo operation on the given Track <code> void performUndo ( TrackInfo inTrackInfo ) { ,"inTrackInfo . getTrack ( ) . addTimeOffset ( _startIndex , _endIndex , - _timeOffset , true ) ; UpdateMessageBroker . informSubscribers ( ) ; }"
Search clickedCardButton for the specified bounded card <code> ToggleButton getRevokedCard ( ) { ,"String prevCardId = ""x"" + selectedCards . get ( activeCardContainer . getId ( ) ) ; ToggleButton prevCard = null ; for ( ToggleButton b : clickedCardButtons ) { if ( b . getId ( ) . equalsIgnoreCase ( prevCardId ) ) { prevCard = b ; } } return prevCard ; }"
"For the given group name, return the package list, on which it is mapped. Create a new list, if not found. <code> List < PackageDoc > getPkgList ( Map < String , List < PackageDoc >> map , String groupname ) { ","List < PackageDoc > list = map . get ( groupname ) ; if ( list == null ) { list = new ArrayList < PackageDoc > ( ) ; map . put ( groupname , list ) ; } return list ; }"
Provides a valid random ID with the prefix provided. <code> String getRandomID ( String prefix ) { ,"StringBuilder builder = new StringBuilder ( 9 ) ; String nPrefix = asIdentifier ( prefix ) ; builder . append ( nPrefix ) ; builder . append ( ""_"" ) ; int val = Math . abs ( rnd . nextInt ( ) ) ; builder . append ( Integer . toString ( val , 36 ) ) ; return builder . toString ( ) ; }"
"Get the styleId from attributes. <code> int getStyleId ( Context context , AttributeSet attrs , int defStyleAttr , int defStyleRes ) { ","TypedArray a = context . obtainStyledAttributes ( attrs , R . styleable . ThemableView , defStyleAttr , defStyleRes ) ; int styleId = a . getResourceId ( R . styleable . ThemableView_v_styleId , 0 ) ; a . recycle ( ) ; return styleId ; }"
Create a classloader for the specified archives. <code> ClassLoader createClassLoader ( List < Archive > archives ) { ,List < URL > urls = new ArrayList < > ( archives . size ( ) ) ; for ( Archive archive : archives ) { urls . add ( archive . getUrl ( ) ) ; } return createClassLoader ( urls . toArray ( new URL [ urls . size ( ) ] ) ) ; }
Get the exception that was thrown in the call (if any). <code> Exception getException ( ) { ,join ( ) ; if ( ex != null ) { return ex ; } return null ; }
"Create a list of orders from a list of asks or bids. <code> List < LimitOrder > createOrders ( CurrencyPair currencyPair , Order . OrderType orderType , BigDecimal [ ] [ ] orders ) { ","List < LimitOrder > limitOrders = new ArrayList < LimitOrder > ( ) ; for ( BigDecimal [ ] order : orders ) { limitOrders . add ( createOrder ( currencyPair , order , orderType , null , null ) ) ; } return limitOrders ; }"
"Converts String to bytes on Java 5.0. <code> byte [ ] getBytes ( String text , Charset charset ) { ",byte [ ] result ; try { result = text . getBytes ( charset . name ( ) ) ; } catch ( UnsupportedEncodingException e ) { result = text . getBytes ( ) ; } return result ; }
Gets the single instance of ApplicationContextFactory. <code> ApplicationContextFactory getInstance ( ) { ,if ( instance == null ) { instance = new ApplicationContextFactory ( ) ; } return instance ; }
Returns true if the enclosed Source has more tokens. The EOF token is never returned by the iterator. <code> boolean hasNext ( ) { ,advance ( ) ; return tok . getType ( ) != EOF ; }
"Find children nodes of given node id. <code> List < NodeDO > findChildrenNodes ( @ PathVariable ( ""id"" ) long id , @ RequestParam ( value = ""parentRootSum"" ) double parentRootSum ) { ","List < NodeDO > children = nodeService . findChildrenOf ( id ) ; nodeService . calculateChildrenRootSum ( parentRootSum , children ) ; return children ; }"
"Adds feature to this device type <code> boolean addFeature ( String aKey , String aFeatureName ) { ","if ( m_features . containsKey ( aKey ) ) { return false ; } m_features . put ( aKey , aFeatureName ) ; return true ; }"
"Generate the expected name of the serialized object file. <code> String getSerializedFileName ( String version , Class clazz ) { ","String className = clazz . getName ( ) ; int index = className . lastIndexOf ( ""."" ) ; index = ( index < 0 ) ? 0 : index + 1 ; return className . substring ( index ) + ""-"" + version + "".ser"" ; }"
like DataInputStream.readChar except little endian. <code> char readChar ( ) { ,"d . readFully ( w , 0 , 2 ) ; return ( char ) ( ( w [ 1 ] & 0xff ) << 8 | ( w [ 0 ] & 0xff ) ) ; }"
"Returns row number based on matcher, which was obtained using spreadsheetPattern <code> int getSpreadsheetRow ( MatchResult matcher ) { ",if ( matcher == null ) return - 1 ; int ret = - 1 ; try { String s = matcher . getGroup ( MATCH_ROW ) ; ret = Integer . parseInt ( s ) - 1 ; } catch ( Exception e ) { return - 1 ; } if ( ret + 1 > Kernel . MAX_SPREADSHEET_ROWS_DESKTOP ) { return - 1 ; } return ret ; }
Is Google search enabled? <code> boolean isGoogleScholarEnabled ( ) { ,org . sakaiproject . citation . api . ConfigurationService instance = getInstance ( ) ; if ( instance == null ) { return false ; } return instance . isGoogleScholarEnabled ( ) ; }
"Converts percentage string into actual based on a relative number <code> float fromPercentageToFloat ( String percentage , float relative , float offset , float scale ) { ","Matcher matched = Pattern . compile ( ""^(|-?|d+(?:|.|d+)?)%$"" ) . matcher ( percentage ) ; if ( matched . matches ( ) ) { return Float . valueOf ( matched . group ( 1 ) ) / 100 * relative + offset ; } else { return Float . valueOf ( percentage ) * scale ; } }"
Tests the creation of the MapEvent object. <code> void testConstruction ( ) { ,"assertThat ( stats1 . value1 ( ) , is ( 1 ) ) ; assertThat ( stats1 . value2 ( ) , is ( 3 ) ) ; }"
"Converts an address from its string representation to an IP address in a particular family. <code> InetAddress getByAddress ( String addr , int family ) { ","if ( family != IPv4 && family != IPv6 ) throw new IllegalArgumentException ( ""unknown address family"" ) ; byte [ ] bytes ; bytes = toByteArray ( addr , family ) ; if ( bytes != null ) return InetAddress . getByAddress ( bytes ) ; throw new UnknownHostException ( ""Invalid address: "" + addr ) ; }"
"Returns whether a command can be placed in a given batch <code> boolean canBeAddedToBatch ( Command command , Object batchModelID , QueryMetadataInterface metadata , CapabilitiesFinder capFinder ) { ","if ( isEligibleForBatching ( command , metadata ) ) { Object modelID = metadata . getModelID ( getUpdatedGroup ( command ) . getMetadataID ( ) ) ; return CapabilitiesUtil . isSameConnector ( modelID , batchModelID , metadata , capFinder ) ; } return false ; }"
"Returns the duration length in milliseconds. Because the length of a month or year may vary depending on the year, the startInstant parameter is used to specify the duration offset. <code> long getTimeInMillis ( Calendar startInstant ) { ",Calendar cal = ( Calendar ) startInstant . clone ( ) ; long t1 = cal . getTimeInMillis ( ) ; addTo ( cal ) ; long t2 = cal . getTimeInMillis ( ) ; return t2 - t1 ; }
"Return true if this TokenValidator implementation is capable of validating the ReceivedToken argument. The realm is ignored in this token Validator. <code> boolean canHandleToken ( ReceivedToken validateTarget , String realm ) { ",Object token = validateTarget . getToken ( ) ; if ( ( token instanceof BinarySecurityTokenType ) && X509_V3_TYPE . equals ( ( ( BinarySecurityTokenType ) token ) . getValueType ( ) ) ) { return true ; } return false ; }
Returns an instance of object java.util.TimeZone <code> java . util . TimeZone getUtilTimeZone ( ) { ,"int hourseZone = getHourseZone ( ) ; if ( hourseZone < 0 ) { return java . util . TimeZone . getTimeZone ( ""GMT"" + hourseZone + "":00"" ) ; } else { return java . util . TimeZone . getTimeZone ( ""GMT+"" + hourseZone + "":00"" ) ; } }"
"Percent-encode values according the RFC 3986. The built-in Java URLEncoder does not encode according to the RFC, so we make the extra replacements. <code> String percentEncodeRfc3986 ( String string ) { ","try { string = string . replace ( ""+"" , ""%2B"" ) ; string = URLDecoder . decode ( string , ""UTF-8"" ) ; string = URLEncoder . encode ( string , ""UTF-8"" ) ; return string . replace ( ""+"" , ""%20"" ) . replace ( ""*"" , ""%2A"" ) . replace ( ""%7E"" , ""~"" ) ; } catch ( Exception e ) { return string ; } }"
\ METHOD TO UPDATE POSITION <code> void updatePosition ( double dt ) { ,velocity . x = randForce . x + springForce . x ; velocity . y = randForce . y + springForce . y ; velocity . z = randForce . z + springForce . z ; pos . x += ( dt * velocity . x ) ; pos . y += ( dt * velocity . y ) ; pos . z += ( dt * velocity . z ) ; checkBoundaries ( ) ; }
get automation context object with given node key <code> AutomationContext getAutomationContextWithKey ( String key ) { ,"if ( contextMap != null && contextMap . size ( ) > 0 ) { for ( Map . Entry < String , AutomationContext > entry : contextMap . entrySet ( ) ) { if ( entry . getKey ( ) . equalsIgnoreCase ( key ) ) { return entry . getValue ( ) ; } } } return null ; }"
Called in response to onClientUpdated. Creates a new proxy and notifies it of the current state. <code> void setMessenger ( Messenger msg ) { ,mClientProxy = DownloaderClientMarshaller . CreateProxy ( msg ) ; if ( null != mProgressInfo ) { mClientProxy . onDownloadProgress ( mProgressInfo ) ; } if ( mState != - 1 ) { mClientProxy . onDownloadStateChanged ( mState ) ; } }
Trims the job-name if required <code> String trimJobName ( String jobName ) { ,"if ( jobName . length ( ) > JOB_NAME_TRIM_LENGTH ) { jobName = jobName . substring ( 0 , JOB_NAME_TRIM_LENGTH ) ; } return jobName ; }"
Calculating wait duration after failure attempt <code> long exponentialWait ( ) { ,long maxDelayRet = minDelay + ( ( maxDelay - minDelay ) / maxFailureCount ) * currentFailureCount . get ( ) ; synchronized ( random ) { return ( long ) ( random . nextFloat ( ) * maxDelayRet ) ; } }
A ColumnIdentifier should not be equal to an instance of a different class. <code> void testEqualsNotEqualDifferentClass ( ) { ,"String tableIdentifier1 = ""table1"" ; String columnIdentifier1 = ""column1"" ; ColumnIdentifier identifier1 = new ColumnIdentifier ( tableIdentifier1 , columnIdentifier1 ) ; assertNotEquals ( identifier1 , ""test"" ) ; }"
moves caret to end of text <code> void moveToEnd ( EditText edit ) { ,if ( edit . getText ( ) == null ) { return ; } edit . setSelection ( edit . getText ( ) . toString ( ) . length ( ) ) ; }
Get a byte in a printable binary form. <code> String writeBits ( byte b ) { ,StringBuffer stringBuffer = new StringBuffer ( ) ; int bit ; for ( int i = 7 ; i >= 0 ; i -- ) { bit = ( b >>> i ) & 0x01 ; stringBuffer . append ( bit ) ; } return stringBuffer . toString ( ) ; }
"Creates a new token that is never the empty token (i.e., always 1-8 bytes). <code> Exchange . KeyToken createUnusedToken ( ) { ",Random random = ThreadLocalRandom . current ( ) ; byte [ ] token ; Exchange . KeyToken result ; do { token = new byte [ tokenSizeLimit ] ; random . nextBytes ( token ) ; result = new Exchange . KeyToken ( token ) ; } while ( exchangesByToken . get ( result ) != null ) ; return result ; }
Determines the color temperature of the given bulb. <code> int getColorTemperature ( String deviceId ) { ,"if ( settingsData == null ) { logger . error ( ""Hue bridge settings not initialized correctly."" ) ; return 154 ; } Object ct = settingsData . node ( ""lights"" ) . node ( deviceId ) . node ( ""state"" ) . value ( ""ct"" ) ; if ( ct instanceof Integer ) { return ( Integer ) ct ; } else { return 154 ; } }"
"Appends specified string and course name with file stub. <code> void appendInFile ( String courseName , String fileName ) { ","lines . add ( ""BEGIN:"" + courseName ) ; lines . add ( courseName + ""/"" + fileName ) ; lines . add ( ""END:"" + courseName ) ; printLinesToFile ( ) ; }"
A list of SNS topic names that receive status messages from the specified Directory ID. <code> java . util . List < EventTopic > getEventTopics ( ) { ,if ( eventTopics == null ) { eventTopics = new com . amazonaws . internal . SdkInternalList < EventTopic > ( ) ; } return eventTopics ; }
"If the type of label is qualified with a ""qualifier:"" prefix this method returns ""qualifier"". Else it returns the complete type string. <code> String getTypePrefix ( ) { ","int index = type . indexOf ( ':' ) ; return index == - 1 ? type : type . substring ( 0 , index ) ; }"
"The distance formula is: s1.length()+s2.length()-2.0lcs.length(); <code> double getDistance ( String s1 , String s2 ) { ","String lcs = getLCS ( s1 , s2 ) ; return s1 . length ( ) + s2 . length ( ) - 2.0 * lcs . length ( ) ; }"
Perform user actions which are required to set up this object in the UI <code> void setUp ( String sectionName ) { ,"new LabeledText ( new DefaultSection ( sectionName ) , ""Name"" ) . setText ( name ) ; Combo dataTypeCombo = new LabeledCombo ( ""Data Type"" ) ; if ( ! dataTypeCombo . getItems ( ) . contains ( dataType ) ) { new PushButton ( 0 ) . click ( ) ; new DataTypeDialog ( ) . add ( dataType ) ; } dataTypeCombo . setSelection ( dataType ) ; }"
Reads a Synchsafe integer. Synchsafe integers keep the highest bit of every byte zeroed. A 32 bit synchsafe integer can store 28 bits of information. <code> int readSynchSafeInt ( ) { ,int b1 = readUnsignedByte ( ) ; int b2 = readUnsignedByte ( ) ; int b3 = readUnsignedByte ( ) ; int b4 = readUnsignedByte ( ) ; return ( b1 << 21 ) | ( b2 << 14 ) | ( b3 << 7 ) | b4 ; }
"Creates a scatter chart view. <code> PlotView getScatterChartView ( Context context , XYMultiSeries dataset , XYMultipleSeriesRenderer renderer ) { ","checkParameters ( dataset , renderer ) ; XYChart chart = new ScatterChart ( dataset , renderer ) ; return new PlotView ( context , chart ) ; }"
"Record a single instance of a split <code> void addSplit ( long time , long size ) { ",source . updateSplitTime ( time ) ; source . updateSplitSize ( size ) ; }
Get the number of shared nodes within this shared set. <code> int getSize ( ) { ,final SessionCache cache = session ( ) . cache ( ) ; Set < NodeKey > additionalParents = shareableNode . node ( ) . getAdditionalParentKeys ( cache ) ; return additionalParents . size ( ) + 1 ; }
"Used by the brewing stand to determine if its contents can be brewed. Extra parameters exist to allow modders to create bigger brewing stands without much hassle <code> boolean canBrew ( ItemStack [ ] inputs , ItemStack ingredient , int [ ] inputIndexes ) { ","if ( ingredient == null || ingredient . stackSize <= 0 ) return false ; for ( int i : inputIndexes ) { if ( hasOutput ( inputs [ i ] , ingredient ) ) { return true ; } } return false ; }"
Get configuration from the properties or bail out. <code> String getOrBail ( String property ) { ,"String value = props . getProperty ( property ) ; if ( value == null ) { throw new IllegalStateException ( ""Unable to find configuration for: "" + property ) ; } return value ; }"
Converts a byte[] to a upper cased hexadecimal String <code> String getUpperCaseHexString ( byte [ ] bytes ) { ,"StringBuilder sb = new StringBuilder ( bytes . length * 2 ) ; for ( byte b : bytes ) { sb . append ( String . format ( ""%02X"" , b ) ) ; } return sb . toString ( ) ; }"
Method to get current time in minutes <code> int getTimeInMin ( String time ) { ,"String [ ] splitTime = time . split ( "":"" ) ; int hr = Integer . parseInt ( splitTime [ 0 ] ) ; int mn = Integer . parseInt ( splitTime [ 1 ] . substring ( 0 , 2 ) ) ; if ( hr > 12 ) { hr = hr - 12 ; } int timStamp = ( hr * 60 ) + mn ; return timStamp ; }"
Returns a list of all strikes in ascending order. <code> List < Double > getStrikes ( ) { ,if ( strikes == null ) { TreeSet < Double > strikesSet = new TreeSet < > ( calls . keySet ( ) ) ; strikesSet . addAll ( puts . keySet ( ) ) ; strikes = new ArrayList < > ( strikesSet ) ; } return strikes ; }
run a garbage collection. <code> void collectGarbage ( long timeout ) { ,try { System . gc ( ) ; Thread . sleep ( timeout ) ; System . runFinalization ( ) ; Thread . sleep ( timeout ) ; } catch ( InterruptedException ex ) { ex . printStackTrace ( ) ; } }
process all rows (computes and writes aggregation values) of current batch that are part of current partition. <code> int processPartition ( final int currentRow ) { ,"logger . trace ( ""process partition {}, currentRow: {}, outputCount: {}"" , partition , currentRow , outputCount ) ; setupWriteFirstValue ( internal , container ) ; int row = currentRow ; while ( row < outputCount && ! partition . isDone ( ) ) { processRow ( row ) ; row ++ ; } return row ; }"
"Returns the text content of a child node with the given name. If no such child exists or the child does not have text content, null is returned. <code> String getChildText ( final String name ) { ",final DomElement child = getChild ( name ) ; return child != null ? child . getText ( ) : null ; }
Simple method to create JDBC activity and execute given task. <code> void executeTask ( CDRTaskBase jdbcTask ) { ,JdbcActivity jdbcActivity = jdbcRA . createActivity ( ) ; ActivityContextInterface jdbcACI = jdbcACIF . getActivityContextInterface ( jdbcActivity ) ; jdbcACI . attach ( sbbContextExt . getSbbLocalObject ( ) ) ; jdbcActivity . execute ( jdbcTask ) ; }
"Strip any leading ""file:"" off a URL string <code> String removeFilePrefix ( String f ) { ","if ( f . startsWith ( ""file:"" ) ) { return f . substring ( 5 ) ; } else { return f ; } }"
Getting current date time by template <code> String s_fGetCurrentDateTimeByTemplate ( String sTemplate ) { ,"sTemplate = ( sTemplate != """" ) ? sTemplate : DateUtil . _dateTimeFormat ; Date currentDate = new Date ( ) ; SimpleDateFormat dateFormat = new SimpleDateFormat ( sTemplate ) ; return dateFormat . format ( currentDate ) ; }"
"formatDatetime Dinh dang ngay gio kieu java.sql.Timestamp thanh String theo mau ""dd/MM/yyyy HH:mm:ss"" <code> String formatDatetime ( java . sql . Timestamp timeStamp ) { ","if ( timeStamp == null ) { return null ; } else { SimpleDateFormat dateFormat = new SimpleDateFormat ( ""dd/MM/yyyy HH:mm:ss"" ) ; return dateFormat . format ( timeStamp ) ; } }"
Used to delete a user. <code> void eliminarJugador ( Long id ) { ,"try { Jugador jugador = ( Jugador ) session . get ( Jugador . class , id ) ; session . delete ( jugador ) ; } catch ( Exception e ) { transaction . rollback ( ) ; e . printStackTrace ( ) ; } }"
"Copy this value to the output and advance to the next one. <code> void writeToBuffers ( ByteBufferList compQualifier , ByteBufferList compValue ) { ","compQualifier . add ( qualifier , qualifier_offset , current_qual_length ) ; compValue . add ( value , value_offset , current_val_length ) ; }"
These are normally NMTOKEN type in attributes String --> Set <code> Set < String > getStringSet ( Object value ) { ,if ( value == null ) return null ; return _getTokensSet ( value . toString ( ) ) ; }
"This method attempts to determine the two keys used to encrypt the message, prints the two keys, and then returns the decrypted String with those two keys. <code> String decryptTwoKeys ( String encrypted ) { ","String s0 = halfOfString ( encrypted , 0 ) ; String s1 = halfOfString ( encrypted , 1 ) ; System . out . printf ( ""key1: %d key2: %d "" , getKey ( s0 ) , getKey ( s1 ) ) ; String dec0 = decryptOneKey ( s0 ) ; String dec1 = decryptOneKey ( s1 ) ; return mix ( dec0 , dec1 ) ; }"
Indicate that there is a problem with this tile. <code> void setError ( ) { ,aError = true ; aImage = ERROR_IMAGE ; }
"Takes an expression in text and returns a Psi tree of that program. <code> PsiElement createExpressionFromText ( @ NotNull Project project , @ NotNull String name ) { ","final DLanguageFile fileFromText = createFileFromText ( project , name ) ; final PsiElement rhs = fileFromText . getFirstChild ( ) . getFirstChild ( ) . getLastChild ( ) ; return rhs . getLastChild ( ) . getLastChild ( ) . getLastChild ( ) ; }"
Gets the substring of key which refers to the Agents RMI Binding <code> String getAgentName ( final String key ) { ,"final int indexOfMachine = key . indexOf ( "".Machine"" ) ; return key . substring ( 0 , indexOfMachine ) ; }"
"Returns the value of the given node with no conversion attempted. <code> Object getChildValue ( String namespace , String nodename ) { ","ParsedNode child = getChild ( namespace , nodename ) ; if ( child == null ) { return null ; } return child . getValue ( ) ; }"
"Returns slash separated path relative to given root. <code> String getRelativePath ( File root , File file ) { ","String result = file . getAbsolutePath ( ) . substring ( root . getAbsolutePath ( ) . length ( ) ) ; result = result . replace ( '|' , '/' ) ; if ( result . startsWith ( ""/"" ) && ! result . startsWith ( ""//"" ) ) { result = result . substring ( 1 ) ; } return result ; }"
"If the delegate label provider implements IDescriptionProvider, it is used to retrieve the status bar message. Returns null otherwise, forcing the CommonNavigator to provide the default message. <code> String getDescription ( Object element ) { ",if ( delegateLabelProvider instanceof IDescriptionProvider ) { IDescriptionProvider provider = ( IDescriptionProvider ) delegateLabelProvider ; return provider . getDescription ( element ) ; } return null ; }
"Returns a random item from the given list, or null is the list is empty <code> T nextItem ( List < T > list ) { ",if ( list . isEmpty ( ) ) { return null ; } return list . get ( nextInt ( list . size ( ) ) ) ; }
Converts the given ints array into a String used to display a more readable representation of the updated bytes held by this record. <code> String toString ( int [ ] ints ) { ,"String txt = ""[ "" ; for ( int i : ints ) { txt += i + "", "" ; } return txt . substring ( 0 , txt . length ( ) - 2 ) + "" ]"" ; }"
Validates the format of an email. <code> boolean isEmailValid ( final String email ) { ,"String emailRegex = ""^[_A-Za-z0-9-|+]+(|.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(|.[A-Za-z0-9]+)*(|.[A-Za-z]{2,})$"" ; return email . matches ( emailRegex ) ; }"
Retrieves the output stream for this instance. <code> OutputStream getOutputStream ( ) { ,implCreateIfNeeded ( ) ; return impl . getOutputStream ( ) ; }
Subjectively best candidate solution for a given generation <code> EvaluatedIndividual < S > bestSolution ( int generation ) { ,"Map < Integer , List < EvaluatedIndividual < S >>> history = getSolutionsHistory ( ) ; return max ( history . get ( generation ) ) ; }"
"assigns the given aggregation buffer set to a given batch row (by row number). populates the selection vector appropriately. This is where the versioning numbers play a role in determining if the index cached on the aggregation buffer set is stale. <code> void mapAggregationBufferSet ( VectorAggregationBufferRow bufferSet , int row ) { ","if ( version != bufferSet . getVersion ( ) ) { bufferSet . setVersionAndIndex ( version , distinctCount ) ; distinctAggregationBuffers [ distinctCount ] = bufferSet ; ++ distinctCount ; } aggregationBuffers [ row ] = bufferSet ; }"
"Assert that a string contains the given substring. <code> void assertContains ( String message , String needle , String haystack ) { ","String formattedMessage = ( message == null ? """" : message + "" "" ) ; assertTrue ( formattedMessage + String . format ( ""expected message containing: <%s> but got: <%s>"" , needle , haystack ) , haystack . contains ( needle ) ) ; }"
This method is invoked after the entity bean is processed successfully by a Camel endpoint <code> void goToNextStep ( ) { ,"setStep ( getStep ( ) + 1 ) ; LOG . info ( ""Invoked the completion complete method. Now updated the step to: {}"" , getStep ( ) ) ; }"
Gets the cookie associated with the specific name. <code> String getCookie ( String name ) { ,String value = null ; List < Cookie > cookies = getCookieStore ( ) . getCookies ( ) ; for ( int i = 0 ; name != null && cookies != null && i < cookies . size ( ) ; i ++ ) { if ( cookies . get ( i ) . getName ( ) . equalsIgnoreCase ( name ) ) { value = cookies . get ( i ) . getValue ( ) ; break ; } } return value ; }
"Return the current foregroundColor if defined , else return styleLink foreground if defined , else return gc foreground. <code> Color getForegroundColor ( GC gc ) { ",if ( styleLink . getForegroundColor ( ) != null ) { return styleLink . getForegroundColor ( ) ; } else { return gc . getForeground ( ) ; } }
This method is called to determine if and how many bytes are available on the serial received data buffer. <code> int availableBytes ( ) { ,"if ( isClosed ( ) ) throw new IllegalStateException ( ""Serial connection is not open; cannot 'availableBytes()'."" ) ; return com . pi4j . wiringpi . Serial . serialDataAvail ( fileDescriptor ) ; }"
"Serialize an instance, restore it, and check for equality. <code> void testSerialization ( ) { ","BarRenderer3D r1 = new BarRenderer3D ( ) ; r1 . setWallPaint ( new GradientPaint ( 1.0f , 2.0f , Color . red , 4.0f , 3.0f , Color . blue ) ) ; BarRenderer3D r2 = ( BarRenderer3D ) TestUtilities . serialised ( r1 ) ; assertEquals ( r1 , r2 ) ; }"
"For each vertex v in g, calculates the average shortest path length from v to all other vertices in g, ignoring edge weights. <code> Transformer < V , Double > averageDistances ( Hypergraph < V , E > g ) { ","final ClosenessCentrality < V , E > cc = new ClosenessCentrality < V , E > ( g , new UnweightedShortestPath < V , E > ( g ) ) ; return new VertexScoreTransformer < V , Double > ( cc ) ; }"
Convert json string to json object <code> JSONObject convertJSONString2Obj ( String jsonString ) { ,"JSONObject jObj = null ; try { Log . w ( ""convertJSONString2Obj"" , ""JsonString="" + jsonString ) ; jObj = new JSONObject ( jsonString ) ; } catch ( JSONException e ) { e . printStackTrace ( ) ; } return jObj ; }"
"Parse parameters using the HttpRequest API <code> void parseRequestParameters ( HttpServletRequest req , Map < String , List < String >> params ) { ","Enumeration < String > paramNames = req . getParameterNames ( ) ; while ( paramNames . hasMoreElements ( ) ) { String key = paramNames . nextElement ( ) ; String [ ] values = req . getParameterValues ( key ) ; for ( String value : values ) { addParameter ( params , key , value ) ; } } }"
Add creativeView trackers that are supposed to be fired when the companion ad is visible. <code> void addCreativeViewTrackers ( @ NonNull final List < VastTracker > creativeViewTrackers ) { ,"Preconditions . checkNotNull ( creativeViewTrackers , ""creativeViewTrackers cannot be null"" ) ; mCreativeViewTrackers . addAll ( creativeViewTrackers ) ; }"
Build search filter for Contacts folder search. Use Exchange SEARCH syntax <code> Condition getContactSearchFilter ( ) { ,MultiCondition condition ; if ( type == Ldap . LDAP_FILTER_OR ) { condition = conditions . or ( ) ; } else { condition = conditions . and ( ) ; } for ( LdapFilter child : criteria ) { condition . add ( child . getContactSearchFilter ( ) ) ; } return condition ; }
"puts an List into a Memento, the List is changed into a delimited String <code> void putList ( String key , List < T > valueList ) { ","if ( valueList . isEmpty ( ) ) { putString ( key , """" ) ; return ; } final StringBuilder sb = new StringBuilder ( String . valueOf ( valueList . get ( 0 ) ) ) ; for ( int k = 1 ; k < valueList . size ( ) ; k ++ ) { sb . append ( LIST_SEPARATOR ) . append ( valueList . get ( k ) ) ; } putString ( key , sb . toString ( ) ) ; }"
"Creates the from xml file. <code> String createItemInAuthorityFromXmlFile ( String vcsid , String commonPartFileName , TaxonomyAuthorityClient client ) { ","byte [ ] b = FileUtils . readFileToByteArray ( new File ( commonPartFileName ) ) ; String commonPartXML = new String ( b ) ; return createItemInAuthority ( vcsid , commonPartXML , client ) ; }"
Tests the isZero method. <code> void isZero ( ) { ,"Vector2 v = new Vector2 ( ) ; TestCase . assertTrue ( v . isZero ( ) ) ; v . set ( 1.0 , 0.0 ) ; TestCase . assertFalse ( v . isZero ( ) ) ; v . set ( 1.0 , 1.0 ) ; TestCase . assertFalse ( v . isZero ( ) ) ; v . set ( 0.0 , 1.0 ) ; TestCase . assertFalse ( v . isZero ( ) ) ; }"
return the count for any item <code> int getCount ( @ NotNull T key ) { ,if ( m_Counts . containsKey ( key ) ) return m_Counts . get ( key ) . getCount ( ) ; else return 0 ; }
"Transform data about a users edits on an article into a rating. Data has the form ""user id, article id, bytes changed"" <code> Rating parseRating ( String s ) { ","String [ ] sarray = s . split ( "","" ) ; return new Rating ( Integer . parseInt ( sarray [ 0 ] ) , Integer . parseInt ( sarray [ 1 ] ) , Math . log ( Double . parseDouble ( sarray [ 2 ] ) ) / LOG2 + 1 ) ; }"
This method was generated by CreditEase ibator-extending. This method corresponds to the database table personrel Sun Jan 13 16:31:41 CST 2013 <code> Criteria createCriteria ( ) { ,Criteria criteria = createCriteriaInternal ( ) ; if ( oredCriteria . size ( ) == 0 ) { oredCriteria . add ( criteria ) ; } return criteria ; }
Returns the plot ndarray to be rendered <code> INDArray getPlot ( ) { ,"if ( plot == null ) { throw new IllegalStateException ( ""Please call plot() first."" ) ; } return plot ; }"
Calculates the initial cost of the Druid segment configuration. <code> double calculateInitialTotalCost ( final List < ServerHolder > serverHolders ) { ,"double cost = 0 ; for ( ServerHolder server : serverHolders ) { Iterable < DataSegment > segments = server . getServer ( ) . getSegments ( ) . values ( ) ; for ( DataSegment s : segments ) { cost += computeJointSegmentsCost ( s , segments ) ; } } return cost ; }"
Checks if the question has been skipped. <code> boolean isQuestionSkipped ( String [ ] answer ) { ,if ( answer == null ) { return true ; } boolean allAnswersEmpty = true ; for ( int i = 0 ; i < answer . length ; i ++ ) { if ( answer [ i ] != null && ! answer [ i ] . trim ( ) . isEmpty ( ) ) { allAnswersEmpty = false ; break ; } } return allAnswersEmpty ; }
Test method 'task'. Should set TaskPage class for rendering and information for title <code> void testTask ( ) { ,"appController . task ( ) ; assertEquals ( ""Attempts for "" + taskId , appController . getProperty ( ) . get ( ""title"" ) ) ; assertEquals ( TaskPage . class , appController . getClazz ( ) ) ; }"
"Converts a col and row character pair to a square index. <code> int strToSqi ( char colCh , char rowCh ) { ","int col = charToCol ( colCh ) ; if ( col == NO_COL ) return NO_SQUARE ; int row = charToRow ( rowCh ) ; if ( row == NO_ROW ) return NO_SQUARE ; return coorToSqi ( col , row ) ; }"
Converts the attribute to a string. <code> String toAttributeValue ( final Object o ) { ,"if ( o == null ) { throw new NullPointerException ( ) ; } if ( o instanceof Integer ) { return o . toString ( ) ; } throw new BeanException ( ""Failed to convert object of type "" + o . getClass ( ) + "": Not a integer."" ) ; }"
See if a Variable is currently in the list and returns if it's present <code> SLogoCustomCommand getCustomCommand ( String varName ) { ,for ( SLogoCustomCommand custom : myObservableCustomList ) { if ( custom . getName ( ) . equals ( varName ) ) { return custom ; } } return null ; }
Creates a temporary folder and returns the path <code> String createTempFolder ( ) { ,"File file = File . createTempFile ( ""Test-res"" , """" ) ; File userTempFolder = file . getParentFile ( ) ; file . delete ( ) ; File tmpFolder = new File ( userTempFolder , ""tmp-"" + System . currentTimeMillis ( ) + random . nextInt ( ) ) ; tmpFolder . mkdirs ( ) ; return tmpFolder . getPath ( ) ; }"
This test generate custom DOM tree without parse-html for testing just parse-metatags. <code> void testFilter ( ) { ,"Map < CharSequence , ByteBuffer > meta = parseMetaTags ( sampleFile , false ) ; assertEquals ( description , getMeta ( meta , MetaTagsParser . PARSE_META_PREFIX + ""description"" ) ) ; assertEquals ( keywords , getMeta ( meta , MetaTagsParser . PARSE_META_PREFIX + ""keywords"" ) ) ; }"
Test serializing int to bytes <code> void testPutInt ( ) { ,testPutInt ( 0 ) ; testPutInt ( Integer . MAX_VALUE ) ; for ( int i = 0 ; i < 3 ; i ++ ) { testPutInt ( ( 128 << i ) - 1 ) ; } for ( int i = 0 ; i < 3 ; i ++ ) { testPutInt ( ( 128 << i ) ) ; } }
Sorts courses based on course creation date in the order of latest to oldest order <code> void sortSummarizedCoursesByCreationDate ( List < CourseSummaryBundle > courses ) { ,"Collections . sort ( courses , new Comparator < CourseSummaryBundle > ( ) { @ Override public int compare ( CourseSummaryBundle obj1 , CourseSummaryBundle obj2 ) { return obj2 . course . createdAt . compareTo ( obj1 . course . createdAt ) ; } } ) ; }"
Populates the extracted event to the callbackReceiver. <code> void handleEvent ( Object [ ] parms ) { ,"String interfaceId = parms [ 0 ] . toString ( ) ; String address = parms [ 1 ] . toString ( ) ; String attribute = parms [ 2 ] . toString ( ) ; Object value = parms [ 3 ] ; callbackReceiver . event ( interfaceId , address , attribute , value ) ; }"
"Prepares the matrix that transforms values to pixels. Calculates the scale factors from the charts size and offsets. <code> void prepareMatrixValuePx ( float xChartMin , float deltaX , float deltaY , float yChartMin ) { ","float scaleX = ( float ) ( ( mViewPortHandler . contentWidth ( ) ) / deltaX ) ; float scaleY = ( float ) ( ( mViewPortHandler . contentHeight ( ) ) / deltaY ) ; mMatrixValueToPx . reset ( ) ; mMatrixValueToPx . postTranslate ( - xChartMin , - yChartMin ) ; mMatrixValueToPx . postScale ( scaleX , - scaleY ) ; }"
"Ensures that an object reference passed as a parameter to the calling method is not null. <code> T checkNotNull ( T reference , String errorMessageTemplate , Object ... errorMessageArgs ) { ","if ( reference == null ) { throw new NullPointerException ( String . format ( errorMessageTemplate , errorMessageArgs ) ) ; } return reference ; }"
Provide a list of names for use in form display. <code> List < String > getNameList ( ) { ,"String [ ] nameArray = { ""Freshman"" , ""Sophomore"" , ""Junior"" , ""Senior"" , ""Other"" } ; return Arrays . asList ( nameArray ) ; }"
"Writes the specified integer to a buffer. <code> void writeIntToBuffer ( int value , byte [ ] buffer , int initialOffset ) { ",int offset ; offset = initialOffset ; buffer [ offset ++ ] = ( byte ) ( value >>> 24 ) ; buffer [ offset ++ ] = ( byte ) ( value >>> 16 ) ; buffer [ offset ++ ] = ( byte ) ( value >>> 8 ) ; buffer [ offset ++ ] = ( byte ) value ; }
"Dispense the specified stack, play the dispense sound and spawn particles. <code> ItemStack dispenseStack ( IBlockSource source , ItemStack stack ) { ","EnumFacing enumfacing = ( EnumFacing ) source . getBlockState ( ) . getValue ( BlockDispenser . FACING ) ; IPosition iposition = BlockDispenser . getDispensePosition ( source ) ; ItemStack itemstack = stack . splitStack ( 1 ) ; doDispense ( source . getWorld ( ) , itemstack , 6 , enumfacing , iposition ) ; return stack ; }"
"Retreives the value from the defaults table with key AbstractUndoableEdit.redoText and returns that value followed by a space, followed by getPresentationName. If getPresentationName returns """", then the defaults value is returned alone. <code> String getRedoPresentationName ( ) { ","String name = getPresentationName ( ) ; if ( ! """" . equals ( name ) ) { name = UIManager . getString ( ""AbstractUndoableEdit.redoText"" ) + "" "" + name ; } else { name = UIManager . getString ( ""AbstractUndoableEdit.redoText"" ) ; } return name ; }"
Creates a pop up menu for this handler. <code> Menu getMenu ( ) { ,"Menu menu = new Menu ( tree . getTree ( ) ) ; MenuItem itemCopy = new MenuItem ( menu , SWT . NONE ) ; itemCopy . setText ( ""Copy"" ) ; itemCopy . addSelectionListener ( new SelectionAdapter ( ) { public void widgetSelected ( SelectionEvent arg0 ) { copy ( ) ; } } ) ; return menu ; }"
"Collect a JDR report when run outside the Application Server. <code> JdrReport standaloneCollect ( String protocol , String host , String port ) { ","String username = null ; String password = null ; if ( host == null ) { host = ""localhost"" ; } if ( port == null ) { port = ""9990"" ; } if ( protocol == null ) { protocol = ""http-remoting"" ; } return new JdrRunner ( protocol , username , password , host , port ) . collect ( ) ; }"
"Gets empty parameters map. <code> Map < String , String > getEmptyParametersMap ( ) { ","Map < String , String > parameters = new TreeMap < String , String > ( ) ; parameters . put ( ""symbol"" , null ) ; parameters . put ( ""width"" , null ) ; parameters . put ( ""height"" , null ) ; parameters . put ( ""hit_points"" , null ) ; parameters . put ( ""stroke"" , """" ) ; return parameters ; }"
Evento que suma uno a la cuenta (via Ajax). <code> void onActionFromSumar1CuentaAjax ( ) { ,"cuenta += 1 ; renderer . addRender ( ""zone"" , zone ) . addRender ( ""submitOneZone"" , submitOneZone ) . addRender ( ""csrfZone"" , csrfZone ) ; }"
Clears the current description and enters the new description of the task to the description text area. <code> void typeDescription ( String description ) { ,"WebElement descriptionTextArea = form . findElement ( By . id ( ""task-description"" ) ) ; descriptionTextArea . clear ( ) ; descriptionTextArea . sendKeys ( description ) ; }"
"Returns a JQLParser instance parsing the specified text. <code> JQLParser createStringParser ( String text , ErrorMsg errorMsg ) { ",Reader in = new StringReader ( text ) ; JQLLexer lexer = new JQLLexer ( in ) ; lexer . init ( errorMsg ) ; TokenBuffer buffer = new TokenBuffer ( lexer ) ; JQLParser parser = new JQLParser ( buffer ) ; parser . init ( errorMsg ) ; parser . setASTFactory ( JQLAST . Factory . getInstance ( ) ) ; return parser ; }
"Convert a dash array to string. <code> String dashToString ( float [ ] dash , Float shift ) { ","StringBuilder sb = new StringBuilder ( ) ; if ( shift != null ) sb . append ( shift ) ; for ( int i = 0 ; i < dash . length ; i ++ ) { if ( shift != null || i > 0 ) { sb . append ( "","" ) ; } sb . append ( ( int ) dash [ i ] ) ; } return sb . toString ( ) ; }"
"Realiza a operacao de conversao XML -> Object. <code> T parseToObject ( Class < T > classe , Schema schema , File xmlFile ) { ","Unmarshaller unmarshaller = createUnmarshaller ( classe , schema ) ; return ( T ) unmarshaller . unmarshal ( xmlFile ) ; }"
"Calculates the ratio of gamma values in the distribution equation. <code> double gammaRatio ( int n , int k ) { ",double top = ( n - k + 1 ) / 2.0 ; double bottom = ( n - k ) / 2.0 ; double lngamma = ProbUtils . lngamma ( top ) - ProbUtils . lngamma ( bottom ) ; return Math . exp ( lngamma ) ; }
"Calculates the distance squared between this Point and the one specified. If the distance squared is larger than the maximum integer value, then Integer.MAX_VALUE will be returned. <code> double getDistance2 ( PrecisionPoint pt ) { ",double i = pt . x - x ; double j = pt . y - y ; return i * i + j * j ; }
"This function returns the daily output path. It is of the form ""/yyMMdd/"". <code> String getDailyOutputPath ( ) { ","if ( FileManager . dailyOutputPath == """" ) { FileManager . initializeDailyOutputPath ( ) ; } return FileManager . dailyOutputPath + System . getProperty ( ""file.separator"" ) ; }"
Init JDBC driver (need only call once) <code> boolean initClass ( String jdbcClass ) { ,try { Class . forName ( jdbcClass ) . newInstance ( ) ; return true ; } catch ( Exception e ) { return false ; } }
Get the declared classes <code> Class < ? > [ ] getDeclaredClasses ( final Class < ? > c ) { ,if ( System . getSecurityManager ( ) == null ) return c . getDeclaredClasses ( ) ; return AccessController . doPrivileged ( new PrivilegedAction < Class < ? > [ ] > ( ) { public Class < ? > [ ] run ( ) { return c . getDeclaredClasses ( ) ; } } ) ; }
Returns an array of integers that demonstrate the bug in TimSort <code> int [ ] getTimSortBugTestSet ( int length ) { ,"int minRun = minRunLength ( length ) ; List < Long > runs = runsJDKWorstCase ( minRun , length ) ; return createArray ( runs , length ) ; }"
"Configures refresh after write. <code> void refreshAfterWrite ( String key , String value ) { ","requireArgument ( refreshAfterWriteDuration == UNSET_INT , ""refreshAfterWrite was already set"" ) ; refreshAfterWriteTimeUnit = parseTimeUnit ( key , value ) ; refreshAfterWriteDuration = parseDuration ( key , value ) ; }"
Get the application context set by the application. <code> Context getContext ( ) { ,"if ( applicationContext == null ) { throw new RuntimeException ( ""GroovyLib context hasn't been initialised !"" ) ; } return applicationContext ; }"
"Check whether a parameter is in the parameter list <code> boolean hasParameter ( HttpServletRequest request , String name ) { ","String s = request . getParameter ( name ) ; if ( s == null ) return false ; if ( s . equals ( """" ) ) return false ; if ( s . contains ( ""'"" ) ) throw new RuntimeException ( ""Invalid value"" ) ; return true ; }"
Return the method of this action. You can getMethod.getAnnotations() to get annotation on action method to do more things <code> Method getMethod ( ) { ,if ( action != null ) return action . getMethod ( ) ; return method ; }
"Check whether or not the given WarningProperty has the given attribute value. <code> boolean checkProperty ( T prop , Object value ) { ",Object attribute = getProperty ( prop ) ; return ( attribute != null && attribute . equals ( value ) ) ; }
Returns the maximal lenght from all LengthValidators. <code> int getMaxLength ( Validator validator ) { ,"int result = - 1 ; List < LengthValidator > vals = new ArrayList < LengthValidator > ( ) ; findValidators ( validator , LengthValidator . class , vals ) ; for ( LengthValidator v : vals ) { result = Math . max ( result , v . getMaxLength ( ) ) ; } return result ; }"
Generates a random ID for Client or Provider. <code> Long generateID ( ) { ,long id = generator . nextLong ( ) ; while ( id <= 0 ) { id = generator . nextLong ( ) ; } return id ; }
"Returns true, if a binding for the locationId is available. <code> boolean hasBinding ( String locationId ) { ",for ( WeatherBindingProvider provider : context . getProviders ( ) ) { if ( provider . hasBinding ( locationId ) ) { return true ; } } return false ; }
Puts all values of this record into the given Map. <code> M putIn ( final M map ) { ,"for ( final Entry < String , Integer > entry : mapping . entrySet ( ) ) { map . put ( entry . getKey ( ) , values [ entry . getValue ( ) . intValue ( ) ] ) ; } return map ; }"
The available client-level roles Returns the roles for the client that can be associated with the client's scope <code> List < RoleRepresentation > getAvailableClientScopeMappings ( ) { ,"auth . requireView ( ) ; if ( scopeContainer == null ) { throw new NotFoundException ( ""Could not find client"" ) ; } Set < RoleModel > roles = scopedClient . getRoles ( ) ; return ScopeMappedResource . getAvailable ( scopeContainer , roles ) ; }"
Go to next track for current picker <code> void nextTrack ( boolean browsing ) { ,"mIsBrowsing = browsing ; mFirstPlay = false ; mNavigator . browseAdjacentTrack ( SongPicker . DIRECTION_FORWARD , false ) ; if ( ! mIsBrowsing && isPlaying ( ) ) { play ( ) ; } }"
Check whether the game is over <code> boolean gameOver ( ) { ,int count = 0 ; for ( int i = 0 ; i < coins ; i ++ ) { if ( ! ( stripArray [ i ] == 0 ) ) { count ++ ; } } if ( count == coins ) return true ; return false ; }
Resets the rate sampling. <code> PerfRate cloneAndReset ( ) { ,PerfRate rc = new PerfRate ( ) ; rc . totalCount = totalCount ; rc . count = count ; rc . startTime = startTime ; count = 0 ; startTime = System . currentTimeMillis ( ) ; return rc ; }
Releases an existing hold. <code> void resumeProcessing ( ) { ,"Log . d ( TAG , ""Resume processing. Queue size: "" + mQueue . size ( ) ) ; if ( mHoldProcessing ) { mHoldProcessing = false ; if ( ! mQueue . isEmpty ( ) ) { startService ( ) ; } } }"
"returns the cars current lane based on its x,y coordinates uses kd-Tree to obtain nearest neighbours of the given point <code> Lane getLane ( Point3f position ) { ","Point2f pos2d = new Point2f ( position . x , position . y ) ; return getLane ( pos2d ) ; }"
"Formats a set of objects with the given format string (the same used with System.out.printf() and write the result to the standard error stream. <code> void writeErrorFormat ( String format , Object ... args ) { ","String text = String . format ( format , args ) ; writeError ( text ) ; }"
"Updates the CRC with the given bytes. <code> void updateCrc ( Buffer buffer , long byteCount ) { ","for ( Segment head = buffer . head ; byteCount > 0 ; head = head . next ) { int segmentLength = ( int ) Math . min ( byteCount , head . limit - head . pos ) ; crc . update ( head . data , head . pos , segmentLength ) ; byteCount -= segmentLength ; } }"
Overriden Object hashCode method <code> int hashCode ( ) { ,int result = 23 ; result = 31 * result + ( int ) row ; result = 31 * result + ( int ) column ; result = 31 * result + ( int ) pawn ; return result ; }
Delete the image from SD card <code> void deleteAllPhoto ( String path ) { ,if ( checkSDCardAvailable ( ) ) { File folder = new File ( path ) ; File [ ] files = folder . listFiles ( ) ; for ( int i = 0 ; i < files . length ; i ++ ) { files [ i ] . delete ( ) ; } } }
Creates a special empty instruction operand to simulate empty REIL operands. <code> COperandTree getEmptyOperand ( final INaviModule module ) { ,"final COperandTreeNode rootNode = module . createOperandExpression ( ""b4"" , ExpressionType . SIZE_PREFIX ) ; final COperandTreeNode childNode = module . createOperandExpression ( "" "" , ExpressionType . SYMBOL ) ; COperandTreeNode . link ( rootNode , childNode ) ; return module . createOperand ( rootNode ) ; }"
Returns singleton instance of TracerSupport. <code> TracerSupport getInstance ( ) { ,if ( INSTANCE == null ) INSTANCE = new TracerSupport ( ) ; return INSTANCE ; }
Gets the value of the lastRow property. <code> boolean isLastRow ( ) { ,if ( lastRow == null ) { return false ; } else { return lastRow ; } }
Encode a single file or folder name <code> String encodeZipFileName ( String fileName ) { ,"try { return URLEncoder . encode ( fileName , ""UTF-8"" ) . replace ( ""*"" , ""%2A"" ) ; } catch ( UnsupportedEncodingException e ) { e . printStackTrace ( ) ; return fileName ; } }"
Make sure that equality binning does something reasonable. <code> void opEqualsTest ( ) { ,"IntHistogram h = new IntHistogram ( 10 , 1 , 10 ) ; h . addValue ( 3 ) ; h . addValue ( 3 ) ; h . addValue ( 3 ) ; Assert . assertTrue ( h . estimateSelectivity ( Op . EQUALS , 3 ) > 0.8 ) ; Assert . assertTrue ( h . estimateSelectivity ( Op . EQUALS , 8 ) < 0.001 ) ; }"
"Add a rectangle to the current path. <code> void addRect ( float x , float y , float width , float height ) { ","if ( inTextMode ) { throw new IOException ( ""Error: addRect is not allowed within a text block."" ) ; } writeOperand ( x ) ; writeOperand ( y ) ; writeOperand ( width ) ; writeOperand ( height ) ; writeOperator ( ""re"" ) ; }"
"This method generates a string representation of a date/time in the format you specify on input <code> Date convertStringToDate ( String aMask , String strDate ) { ",SimpleDateFormat df = null ; Date date = null ; df = new SimpleDateFormat ( aMask ) ; try { date = df . parse ( strDate ) ; } catch ( ParseException pe ) { return null ; } return ( date ) ; }
Performs post round clean up of the deck. Must be called when a round is over or else there will be cards missing from the deck when they are dealed out again. <code> void postRound ( ) { ,cardDeck . addAll ( removedCards ) ; removedCards . clear ( ) ; shuffle ( ) ; }
Gets the first AttributeField of a particular attribute name. <code> AttributeField getAttribute ( String attribute_name ) { ,for ( int i = 0 ; i < media . size ( ) ; i ++ ) { AttributeField af = ( AttributeField ) av . elementAt ( i ) ; if ( af . getAttributeName ( ) . equals ( attribute_name ) ) return af ; } return null ; }
Create schema object for the given xsd <code> Schema createSchema ( InputStream is ) { ,"SchemaFactory factory = SchemaFactory . newInstance ( XMLConstants . W3C_XML_SCHEMA_NS_URI ) ; StreamSource src = new StreamSource ( is ) ; try { return factory . newSchema ( src ) ; } catch ( SAXException e ) { throw new RuntimeException ( e . getMessage ( ) , e ) ; } }"
Release reference to a local mail store instance. <code> void removeLocalInstance ( Account account ) { ,String accountUuid = account . getUuid ( ) ; sLocalStores . remove ( accountUuid ) ; }
"Generates Axis with values from start to stop inclusive. <code> Axis generateAxisFromRange ( float start , float stop , float step ) { ",List < AxisValue > values = new ArrayList < AxisValue > ( ) ; for ( float value = start ; value <= stop ; value += step ) { AxisValue axisValue = new AxisValue ( value ) ; values . add ( axisValue ) ; } Axis axis = new Axis ( values ) ; return axis ; }
"Replies the index of a particular child with respect to its parent. <code> int getIndexForRelationChild ( Relation parent , Relation child ) { ",if ( parent == null || child == null ) return - 1 ; int idx = 0 ; for ( RelationMember member : parent . getMembers ( ) ) { if ( ! ( member . isRelation ( ) ) ) { continue ; } if ( member . getMember ( ) == child ) return idx ; idx ++ ; } return - 1 ; }
"stores XML String and get Query Service <code> XQueryService storeXMLStringAndGetQueryService ( String documentName , String content ) { ","XMLResource doc = ( XMLResource ) testCollection . createResource ( documentName , ""XMLResource"" ) ; doc . setContent ( content ) ; testCollection . storeResource ( doc ) ; XQueryService service = ( XQueryService ) testCollection . getService ( ""XPathQueryService"" , ""1.0"" ) ; return service ; }"
"Returns a list of String objects from a JSONArray. This does not do any kind of recursive unpacking of the array. Thus, if the array includes other JSON arrays or JSON objects their string representation will be a single item in the returned list. <code> List < String > getStringListFromJsonArray ( JSONArray jArray ) { ",List < String > returnList = new ArrayList < String > ( ) ; for ( int i = 0 ; i < jArray . length ( ) ; i ++ ) { String val = jArray . getString ( i ) ; returnList . add ( val ) ; } return returnList ; }
"Checks if value starts with startsWith. <code> boolean startsWith ( String value , String startsWith ) { ",if ( value == null || startsWith == null ) { return false ; } return value . startsWith ( startsWith ) ; }
"Additional assert method for testing that will test that two Collections have equal contents The Collections must be of equal size, and each object from one Collection must equal an object in the other Collection Order is not considered. <code> void assertCollectionContentsEquals ( Collection expected , Collection actual ) { ","try { if ( ! expected . containsAll ( actual ) || ! actual . containsAll ( expected ) ) { throw new AssertionError ( ""Expected "" + expected + "" but found "" + actual ) ; } } catch ( Exception e ) { throw new AssertionError ( e ) ; } }"
"Adds a documentation element to the specified element. <code> void addDoc ( final byte [ ] xqdoc , final FElem parent ) { ","if ( xqdoc == null ) return ; final FElem doc = elem ( ""doc"" , parent ) ; doc . namespaces ( ) . add ( EMPTY , token ( XHTML_URL ) ) ; Inspect . add ( xqdoc , doc ) ; }"
"Called to update the current model keepEvery states. <code> void currentState ( long state , Model currentModel ) { ",currentState = state ; if ( loggers != null ) { for ( Logger logger : loggers ) { logger . log ( state ) ; } } }
"Exemple [1,4,6,2,4,6] : a=8 --> [1,4,6,2,4,6,8] <code> int [ ] rallongerTableauDeUnElement ( int [ ] tab , int a ) { ",int [ ] tab1 = null ; if ( tab == null ) { tab1 = null ; } else { tab1 = new int [ tab . length + 1 ] ; for ( int i = 0 ; i < tab1 . length ; i ++ ) { if ( i < tab . length ) { tab1 [ i ] = tab [ i ] ; } else { tab1 [ i ] = a ; } } } return tab1 ; }
Returned packet as string with xml. String is ready to be written to the stream. <code> String toXml ( Instance instance ) { ,"Writer writer = new StringWriter ( ) ; XmlSerializer serializer = Xml . newSerializer ( ) ; try { serializer . setOutput ( writer ) ; instance . serialize ( serializer ) ; serializer . flush ( ) ; } catch ( IOException e ) { return """" ; } return writer . toString ( ) ; }"
Visualizes a PdfDictionary object. <code> void listDict ( PdfDictionary dictionary ) { ,"out . println ( ""<<"" ) ; PdfName key ; PdfObject value ; for ( Iterator i = dictionary . getKeys ( ) . iterator ( ) ; i . hasNext ( ) ; ) { key = ( PdfName ) i . next ( ) ; value = ( PdfObject ) dictionary . get ( key ) ; out . print ( key . toString ( ) ) ; out . print ( ' ' ) ; listAnyObject ( value ) ; } out . println ( "">>"" ) ; }"
"A simple minded look and feel change: ask each node in the tree to updateUI() -- that is, to initialize its UI property with the current look and feel. <code> void updateComponentTreeUI ( Component c ) { ",updateComponentTreeUI0 ( c ) ; c . invalidate ( ) ; c . validate ( ) ; c . repaint ( ) ; }
Logger admin web UI URL <code> void logAdminUI ( ) { ,"String httpPort = environment . resolvePlaceholders ( ADMIN_PORT ) ; Assert . notNull ( httpPort , ""Admin server port is not set."" ) ; logger . info ( ""Admin web UI: "" + String . format ( ""http://%s:%s/%s"" , RuntimeUtils . getHost ( ) , httpPort , ConfigLocations . XD_ADMIN_UI_BASE_PATH ) ) ; }"
Get the current application wide component decorator <code> SwingComponentDecorationFactory getDefault ( ) { ,SwingComponentDecorationFactory result = Lookup . getDefault ( ) . lookup ( SwingComponentDecorationFactory . class ) ; if ( result == null ) { result = componentDecorator ; } return result ; }
"Rotate binary tree node with left child. For AVL trees, this is a single rotation for case 1. Update heights, then return new root. <code> AvlNode < AnyType > rotateWithLeftChild ( AvlNode < AnyType > k2 ) { ","AvlNode < AnyType > k1 = k2 . left ; k2 . left = k1 . right ; k1 . right = k2 ; k2 . height = Math . max ( height ( k2 . left ) , height ( k2 . right ) ) + 1 ; k1 . height = Math . max ( height ( k1 . left ) , k2 . height ) + 1 ; return k1 ; }"
Flushes and closes output stream. <code> void flushAndCloseOutStream ( OutputStream aStream ) { ,"if ( aStream != null ) { try { aStream . flush ( ) ; } catch ( final IOException ex ) { Utils . getExceptionLogger ( ) . debug ( ""Unable to flush output stream."" , ex ) ; } finally { Utils . closeQuietly ( aStream ) ; } } }"
Deletes all ZNodes under the root node. <code> void deleteAll ( ) { ,"final String path = ""/"" + client . getNamespace ( ) ; ZKPaths . deleteChildren ( client . getZookeeperClient ( ) . getZooKeeper ( ) , path , false ) ; }"
Removes a class pattern that should be disallowed to be created.. <code> void removeDisallowClassPattern ( String classNamePattern ) { ,synchronized ( lock ) { if ( disallowClassPatterns != null ) disallowClassPatterns . remove ( classNamePattern ) ; clearClassCache ( ) ; } }
"Use an actual value (like a raw data position), to calculate a percentage to be used to obtain a corresponding world-space value. <code> double getLinearWorldSpaceValueAtXGivenActualValue ( final double actualValue , boolean reverseTransformedDataOrder ) { ","ArrayList < Double > wrappedValue = new ArrayList < Double > ( ) { { add ( ( Double ) actualValue ) ; } } ; Double [ ] list = getLinearWorldSpaceScheduleGivenActualValues ( wrappedValue , reverseTransformedDataOrder ) ; return ( list . length >= 1 ) ? list [ 0 ] : WorldSpaceStart ; }"
Converts a string representing a hex value into a byte array. <code> byte [ ] hexDecode ( String string ) { ,"if ( string . length ( ) % 2 != 0 ) { throw new IllegalArgumentException ( ) ; } byte [ ] bytes = new byte [ string . length ( ) / 2 ] ; for ( int i = 0 ; i < string . length ( ) ; i += 2 ) { bytes [ i / 2 ] = ( byte ) Integer . parseInt ( string . substring ( i , i + 2 ) , 16 ) ; } return bytes ; }"
initializes the input array in the problem statement with random length and random values between 0 and 100. <code> int [ ] initializeRandomInputArray ( ) { ,int randomLength = StdRandom . uniform ( 100 ) ; int [ ] inputArray = new int [ randomLength ] ; for ( int i = 0 ; i < randomLength ; i ++ ) { inputArray [ i ] = StdRandom . uniform ( 100 ) ; } return inputArray ; }
Get a set of all the leaves in the tree. <code> Set < ConditionsTreeNode > getLeafSet ( ) { ,Set < ConditionsTreeNode > leafSet = new HashSet < ConditionsTreeNode > ( ) ; return getLeafSet ( leafSet ) ; }
Comprueba si la pantalla es la de revancha con las tres opciones disponibles. <code> boolean esPantallaRevanchaDosOpciones ( BufferedImage imagen ) { ,VerificacionRegiones puntos = new VerificacionRegiones ( ) ; boolean valido_revancha_2_op = puntos . pc_revancha_2_op . validar ( imagen ) ; return valido_revancha_2_op ; }
"Returns whether the given sphere is in the frustum not checking whether it is behind the near and far clipping plane. <code> boolean sphereInFrustumWithoutNearFar ( float x , float y , float z , float radius ) { ",for ( int i = 2 ; i < 6 ; i ++ ) if ( ( planes [ i ] . normal . x * x + planes [ i ] . normal . y * y + planes [ i ] . normal . z * z ) < ( - radius - planes [ i ] . d ) ) return false ; return true ; }
Formats a given immediate <code> String formatImmediate ( long immediate ) { ,"if ( addrResolver != null && addrResolver . resolveAddress ( immediate ) != null ) { return addrResolver . resolveAddress ( immediate ) ; } return formatNumber ( immediate , true ) ; }"
Get the next element sibling following this node. <code> Element nextSiblingElement ( Node n ) { ,while ( true ) { n = n . getNextSibling ( ) ; if ( n == null ) return null ; if ( n . getNodeType ( ) == Node . ELEMENT_NODE ) return ( Element ) n ; } }
sets if the original short meta class is used <code> void setOrigShort ( boolean v ) { ,origShort = v ; origShortRes = withoutCustomHandle && origShort ; }
util method for check whether an element in one to one map <code> boolean isSimpleMap ( Element inputElement ) { ,if ( isMaped ( inputElement ) ) { if ( inputElement . getOutNode ( ) . getOutgoingLink ( ) . get ( 0 ) . getInNode ( ) . getElementParent ( ) != null ) return true ; } return false ; }
Set a default to use when no profile is configured. <code> void addDefaultProfile ( SpringApplication app ) { ,"Map < String , Object > defProperties = new HashMap < > ( ) ; defProperties . put ( SPRING_PROFILE_ACTIVE , getDefaultActiveProfiles ( ) ) ; app . setDefaultProperties ( defProperties ) ; }"
Remove a forced disconnection listener <code> void removeDisconnectListener ( ForceDisconnectListener listener ) { ,"@ SuppressWarnings ( ""unchecked"" ) ScalableHashSet < ForceDisconnectListener > disconnectListeners = ( ScalableHashSet < ForceDisconnectListener > ) AppContext . getDataManager ( ) . getBindingForUpdate ( DISCONNECT_LISTENERS_BINDING ) ; disconnectListeners . remove ( listener ) ; }"
Returns the maximum count. <code> int getMaxCount ( ) { ,"int max = Integer . MIN_VALUE ; for ( T key : keySet ( ) ) { max = Math . max ( max , getCount ( key ) ) ; } return max ; }"
This method will read the dictionary chunk metadata thrift object for last entry <code> CarbonDictionaryColumnMetaChunk getChunkMetaObjectForLastSegmentEntry ( ) { ,CarbonDictionaryMetadataReader columnMetadataReaderImpl = getDictionaryMetadataReader ( ) ; try { return columnMetadataReaderImpl . readLastEntryOfDictionaryMetaChunk ( ) ; } finally { columnMetadataReaderImpl . close ( ) ; } }
Reconstitute this LinkedList instance from a stream (that is deserialize it). <code> void readObject ( java . io . ObjectInputStream s ) { ,"s . defaultReadObject ( ) ; int size = s . readInt ( ) ; first = new Entry ( null , null , null ) ; last = new Entry ( null , null , null ) ; first . next = last ; last . previous = first ; for ( int i = 0 ; i < size ; i ++ ) add ( s . readObject ( ) ) ; }"
Returns the AWS request ID from the response metadata section of an AWS response. <code> String getRequestId ( ) { ,if ( responseMetadata == null ) return null ; return responseMetadata . getRequestId ( ) ; }
Convert array of Strings into one String <code> String getArrayAsString ( String [ ] a ) { ,"String result = """" ; for ( String s : a ) { result += s + "" "" ; } result = result . trim ( ) ; return result ; }"
"Creates the levels higher than the given level <code> AbstractNode createHigherLevels ( List boundablesOfALevel , int level ) { ","Assert . isTrue ( ! boundablesOfALevel . isEmpty ( ) ) ; List parentBoundables = createParentBoundables ( boundablesOfALevel , level + 1 ) ; if ( parentBoundables . size ( ) == 1 ) { return ( AbstractNode ) parentBoundables . get ( 0 ) ; } return createHigherLevels ( parentBoundables , level + 1 ) ; }"
Make sure that the file type is accepted. <code> void testAcceptsFile ( ) { ,File testFile = getTestFile ( ) ; DataAdapter adapter = getAdapter ( ) ; Assert . assertTrue ( adapter . acceptsFile ( testFile ) ) ; }
Returns just the form field name from the fully qualified URI. <code> String getFieldNameFromURI ( String uri ) { ,"try { String [ ] split = uri . split ( ""/"" ) ; return split [ split . length - 1 ] ; } catch ( IndexOutOfBoundsException e ) { throw new MalformedUriException ( ""Error getting field name from URI: "" + uri , e ) ; } }"
"Get data using the exact name (without implicit digest). TODO: Allow authentication of retrieved data packets <code> Data getData ( final Face face , final Name name ) { ",FetchHelper fetcher = new FetchHelper ( face ) ; Interest interest = new Interest ( name ) ; interest . setInterestLifetimeMilliseconds ( DEFAULT_TIMEOUT ) ; interest . setMustBeFresh ( false ) ; return fetcher . getData ( interest ) ; }
Get the Web Authorization Helper given a security context <code> AbstractWebAuthorizationHelper getWebAuthorizationHelper ( SecurityContext sc ) { ,if ( webAuthorizationHelperClazz == null ) { webAuthorizationHelperClazz = SecurityActions . loadClass ( WebAuthorizationHelperClass ) ; } AbstractWebAuthorizationHelper awh = ( AbstractWebAuthorizationHelper ) webAuthorizationHelperClazz . newInstance ( ) ; awh . setSecurityContext ( sc ) ; return awh ; }
Add an empty searchData object to the model <code> void addDataToModel ( ModelMap model ) { ,"SearchData dataForSearchBar = new SearchData ( ) ; dataForSearchBar . setSearchMode ( ""natural"" ) ; dataForSearchBar . setCurrentPage ( 1 ) ; dataForSearchBar . setQueryText ( null ) ; dataForSearchBar . setNumberResultsPerPage ( 10 ) ; model . put ( ""advancedSearchData"" , dataForSearchBar ) ; }"
"set app user's nickname <code> void setAppUserNick ( String username , TextView textView ) { ",if ( textView != null ) { User user = getAppUserInfo ( username ) ; if ( user != null && user . getMUserNick ( ) != null ) { textView . setText ( user . getMUserNick ( ) ) ; } else { textView . setText ( username ) ; } } }
"Get the file MIME type <code> String getMimeType ( Context context , File file ) { ",String mimeType = null ; final MimeTypes mimeTypes = getMimeTypes ( context ) ; if ( file != null ) mimeType = mimeTypes . getMimeType ( file . getName ( ) ) ; return mimeType ; }
"Replaces the touch point data at the given index with the given touch point data <code> void setPoint ( int index , Point p ) { ",if ( index >= pointCount ) { throw new IndexOutOfBoundsException ( ) ; } p . copyTo ( points [ index ] ) ; }
"Get the http endpoint for result set. <code> Response getHttpResultSet ( @ QueryParam ( ""sessionid"" ) UUID publicId , @ PathParam ( ""queryHandle"" ) String queryHandle ) { ","LensSessionHandle sessionHandle = SessionUIResource . getOpenSession ( publicId ) ; checkSessionHandle ( sessionHandle ) ; try { return queryServer . getHttpResultSet ( sessionHandle , getQueryHandle ( queryHandle ) ) ; } catch ( LensException e ) { throw new WebApplicationException ( e ) ; } }"
"Converts the byte array of ASCII characters to a string. This method is to be used when decoding content of HTTP elements (such as response headers) <code> String getAsciiString ( final byte [ ] data , int offset , int length ) { ","if ( data == null ) { throw new IllegalArgumentException ( ""Parameter may not be null"" ) ; } try { return new String ( data , offset , length , Consts . ASCII . name ( ) ) ; } catch ( UnsupportedEncodingException e ) { throw new Error ( ""HttpClient requires ASCII support"" ) ; } }"
"Grows String array by one element, adds the element at the end. <code> String [ ] addToArray ( String [ ] array , String element ) { ","if ( array == null || array . length == 0 ) { return new String [ ] { element } ; } String [ ] grown = new String [ array . length + 1 ] ; System . arraycopy ( array , 0 , grown , 0 , array . length ) ; grown [ array . length ] = element ; return grown ; }"
Returns true if the extension bit of this packet has been set and false otherwise. <code> boolean getExtensionBit ( ) { ,buffer . rewind ( ) ; return ( buffer . get ( ) & 0x10 ) == 0x10 ; }
"Returns difference in days between two moments. Note that there's 1-day difference between 23:59 of Monday and 00:00 of Tuesday. <code> long dayDiff ( long time1 , long time2 ) { ",time1 = trimTime ( time1 ) ; time2 = trimTime ( time2 ) ; return ( long ) Math . ceil ( ( double ) Math . abs ( time1 - time2 ) / Constants . MILLIS_IN_DAY ) ; }
Add variable arguments to the end of the parameter list. <code> boolean addVarArgs ( JSType type ) { ,if ( hasVarArgs ( ) ) { return false ; } if ( ! type . isEmptyType ( ) ) { type = registry . createOptionalType ( type ) ; } newParameter ( type ) . setVarArgs ( true ) ; return true ; }
Returns a secondary grist type based on primary grist <code> GristType getSecondaryGrist ( GristType primary ) { ,if ( secondaryGristMap . get ( primary ) . size ( ) != 0 && random . nextInt ( secondaryGristMap . get ( primary ) . size ( ) * 2 ) != 0 ) return secondaryGristMap . get ( primary ) . get ( random . nextInt ( secondaryGristMap . get ( primary ) . size ( ) ) ) ; else return primary ; }
Create a sytem with the virtualization platform entitlement and with 1 guest system associated with it. <code> Server createVirtPlatformHostWithGuest ( User user ) { ,Server s = createVirtPlatformHost ( user ) ; VirtualInstance vi = new VirtualInstanceManufacturer ( user ) . newRegisteredGuestWithoutHost ( ) ; s . addGuest ( vi ) ; return s ; }
Convert a GridColumn serialization object to a new GridColumn data object <code> GridColumnData createGridColumnData ( org . topcased . gpm . business . serialization . data . GridColumn pSerializationDataObject ) { ,GridColumnData lDataObject = new GridColumnData ( ) ; lDataObject . setName ( pSerializationDataObject . getName ( ) ) ; lDataObject . setEditorType ( GridColumnEditorType . fromString ( pSerializationDataObject . getEditorType ( ) ) ) ; return lDataObject ; }
"Update the prior snapshot. <code> int updatePrior ( int snapshot , int prior ) { ","int p = getPrior ( snapshot , true ) ; if ( p != Snapshot . CURRENT_STATE_ID && Snapshot . ID_INTEGER_COMPARATOR . compare ( p , prior ) > 0 ) { return p ; } return prior ; }"
Verifies that message sent to different URL than received at will be rejected. <code> void testMessageRecipientInvalid ( ) { ,"prepareHttpRequest ( ""message/SAMLResponse.xml"" , ""POST"" , ""http://localhost:8080/unexpectedURL"" , ""text/html"" ) ; replayMock ( ) ; processor . retrieveMessage ( samlContext ) ; verifyMock ( ) ; }"
"Adds any corpora that are not simple single source corpora. <code> void addSpecialCorpora ( ArrayList < Corpus > corpora , Sources sources ) { ","addCorpus ( corpora , createWebCorpus ( sources ) ) ; addCorpus ( corpora , createAppsCorpus ( sources ) ) ; }"
Returns an instance of a SASL-SRP IALG implementation. <code> IALG getInstance ( final String algorithm ) { ,"final IMac hmac ; hmac = MacFactory . getInstance ( algorithm ) ; if ( hmac == null ) throw new SaslException ( ""getInstance()"" , new NoSuchAlgorithmException ( algorithm ) ) ; return new IALG ( hmac ) ; }"
"Formats a log message. <code> String getLogFormatString ( LogLevel logLevel , String tag , String message ) { ","SimpleDateFormat formatter = new SimpleDateFormat ( ""hh:mm:ss"" ) ; return String . format ( ""%s %c/%s: %s "" , formatter . format ( new Date ( ) ) , logLevel . getPriorityLetter ( ) , tag , message ) ; }"
"Removes artifacts from passed in local repository that has groupId of testId. <code> void cleanRepository ( final File mavenRepo , final String testId ) { ","final File testGroupIdFolder = new File ( mavenRepo , testId ) ; FileUtils . deleteDirectory ( testGroupIdFolder ) ; }"
Find current station weather report <code> StatusWeatherData currentWeatherAtStation ( int stationId ) { ,"String subUrl = String . format ( Locale . ROOT , ""weather/station/%d?type=json"" , Integer . valueOf ( stationId ) ) ; JSONObject response = doQuery ( subUrl ) ; return new StatusWeatherData ( response ) ; }"
A list of reserved cache node offerings. Each element in the list contains detailed information about one offering. <code> java . util . List < ReservedCacheNodesOffering > getReservedCacheNodesOfferings ( ) { ,if ( reservedCacheNodesOfferings == null ) { reservedCacheNodesOfferings = new com . amazonaws . internal . ListWithAutoConstructFlag < ReservedCacheNodesOffering > ( ) ; reservedCacheNodesOfferings . setAutoConstruct ( true ) ; } return reservedCacheNodesOfferings ; }
Creates a scriptPubKey that encodes payment to the given address. <code> Script createOutputScript ( Address to ) { ,if ( to . isP2SHAddress ( ) ) { return new ScriptBuilder ( ) . op ( OP_HASH160 ) . data ( to . getHash160 ( ) ) . op ( OP_EQUAL ) . build ( ) ; } else { return new ScriptBuilder ( ) . op ( OP_DUP ) . op ( OP_HASH160 ) . data ( to . getHash160 ( ) ) . op ( OP_EQUALVERIFY ) . op ( OP_CHECKSIG ) . build ( ) ; } }
"use for download the jar <code> String downloadJars ( ModelMap model , Model m ) { ","List < Subject > subjects = questionAnswerService . getAllSubjectName ( ) ; model . addAttribute ( ""subjectList"" , subjects ) ; List < Upload > l = uploadService . downloadJar ( ) ; model . addAttribute ( ""jarlist"" , l ) ; return ""downloadJars"" ; }"
"Signs a request using the specified operation context under the Shared Key authentication scheme. <code> void signBlobAndQueueRequest ( final StorageCredentials creds , final java . net . HttpURLConnection request , final long contentLength , OperationContext opContext ) { ","if ( creds . getClass ( ) . equals ( StorageCredentialsAccountAndKey . class ) ) { opContext = opContext == null ? new OperationContext ( ) : opContext ; BaseRequest . signRequestForBlobAndQueue ( request , ( ( StorageCredentialsAccountAndKey ) creds ) . getCredentials ( ) , contentLength , opContext ) ; } }"
Remove Serial Event Listener Java consumer code can call this method to unregister itself as a listener for serial data events. <code> void removeListener ( SerialDataListener ... listener ) { ,for ( SerialDataListener lsnr : listener ) { listeners . remove ( lsnr ) ; } if ( listeners . isEmpty ( ) && monitor != null ) { monitor . shutdown ( ) ; monitor = null ; } }
Insert a new task into the queue. Priority tasks are queued in the order they are received ahead of other tasks. Other tasks are queued in reverse order after priority tasks so that more recently added tasks will be performed first. <code> void addNewTask ( Task task ) { ,"synchronized ( queue ) { queue . add ( newTaskIndex , task ) ; if ( task . isPriority ( ) ) { newTaskIndex ++ ; } subTaskIndex ++ ; queue . notifyAll ( ) ; } }"
Specifies the handler of service events. <code> void setEventHandler ( DdeServiceEventHandler eventHandler ) { ,"if ( eventHandler == null ) { throw new IllegalArgumentException ( ""Event handler must be not null."" ) ; } _ddeServiceHelper . setEventHandler ( eventHandler ) ; }"
set the maximum RMSD cutoff to be applied during alignment optimization. (default: 99 = unlimited) <code> void setMaxOptRMSD ( Double param ) { ,if ( param == null ) param = 99d ; maxOptRMSD = param ; }
Returns a string representation of this object; useful for testing and debugging. <code> String toString ( ) { ,"StringBuilder sb = new StringBuilder ( ) ; sb . append ( ""{"" ) ; if ( getStoppingInstances ( ) != null ) sb . append ( ""StoppingInstances: "" + getStoppingInstances ( ) ) ; sb . append ( ""}"" ) ; return sb . toString ( ) ; }"
Get a rowCount from the resultset. If the resultset <code> int getRowCount ( ) { ,if ( rowCount != HQLResultSet . COUNT_NEVER_OBTAINED ) { return rowCount ; } rowCount = nativeResultSet . size ( ) ; return rowCount ; }
"heuristic parameters, assume constant coefficient for all gears <code> double getModelLossMoment ( double frequency ) { ",final double a = 0.003 ; final double b = 0.03 ; final double c = 12 ; return a * frequency * frequency + b * frequency + c ; }
"Moves an user to the given organizational unit. <code> void setUsersOrganizationalUnit ( CmsObject cms , String ouFqn , String userName ) { ","CmsOrganizationalUnit orgUnit = readOrganizationalUnit ( cms , ouFqn ) ; CmsUser user = cms . readUser ( userName ) ; m_securityManager . setUsersOrganizationalUnit ( cms . getRequestContext ( ) , orgUnit , user ) ; }"
"Executes a ""for"" parallel loop operation over all items in the data source in which iterations run in parallel. <code> ParallelLoopResult < R > forLoop ( List < T > source , final LoopBody < T , R > loopBody ) { ","if ( source == null || source . isEmpty ( ) ) { return new ParallelLoopResult < R > ( true , ( List < R > ) Collections . emptyList ( ) ) ; } return forLoop ( source , 0 , source . size ( ) , loopBody ) ; }"
"returns a File for the subfolder of the test resource data. The full path is canonized. This is basically "".../src/test/resources/testData/$name"". <code> File getCanonicalRoot ( String ... names ) { ",File root = getRoot ( names ) ; return root . getCanonicalFile ( ) ; }
"Stores the given short as BigEndian value. <code> void setShort ( final int offset , final int shortval ) { ",if ( offset > ( getLength ( ) - 2 ) ) { throw new IndexOutOfBoundsException ( ) ; } bytes [ offset ] = ( byte ) ( shortval & 0x0ff ) ; bytes [ offset + 1 ] = ( byte ) ( shortval >> 8 ) ; }
Check octect wheter it is a base64 encoding. <code> boolean isBase64 ( byte octect ) { ,if ( octect == PAD ) { return true ; } else if ( base64Alphabet [ octect ] == - 1 ) { return false ; } else { return true ; } }
"Displays root node for given repository and first available workspace. <code> void displayContent ( String repository , boolean changeHistory ) { ","contents . show ( repository , changeHistory ) ; displayRepository ( repository ) ; display ( contents ) ; changeRepositoryInURL ( repository , changeHistory ) ; }"
When writing on the conversion we use the buffer directly <code> ActiveMQBuffer getWriteBodyBuffer ( ) { ,readBodyBuffer = null ; return message . getBodyBuffer ( ) ; }
Get the image associated with this MapImage object. <code> BufferedImage getImage ( boolean disabled ) { ,if ( disabled ) { return getDisabled ( ) ; } else { return getImage ( ) ; } }
Return the RecoveryManager tag. This can be set by a property. <code> String getRecoveryManagerTag ( ) { ,if ( _RecoveryManagerTag != null ) { return _RecoveryManagerTag ; } else { return null ; } }
Retrieves the possible nominal values for the associated data attribute. <code> List < String > getValues ( ) { ,ArrayList < String > result = new ArrayList < String > ( ) ; for ( String val : possibleValues . keySet ( ) ) { result . add ( val ) ; } return result ; }
Sorting on the basis of risks reduction <code> List < Insurance > sortInsurancesByRiskReduction ( ) { ,"List < Insurance > list = new ArrayList < Insurance > ( insurances ) ; Collections . sort ( list , new DerivativeComparator ( ) ) ; return list ; }"
Set the charset used to convert between Java Unicode Strings and byte encodings used by the server for paths and file names. <code> void setCharset ( String charset ) { ,"if ( charset == null ) { charsetName = charset ; return ; } try { Charset . forName ( charset ) ; } catch ( UnsupportedCharsetException e ) { throw new IOException ( ""This charset is not supported"" , e ) ; } charsetName = charset ; }"
"Get the Java Matcher object for the passed pair of regular expression and value. <code> Matcher getMatcher ( @ Nonnull @ RegEx final String sRegEx , @ Nonnull final String sValue ) { ","ValueEnforcer . notNull ( sValue , ""Value"" ) ; return RegExPool . getPattern ( sRegEx ) . matcher ( sValue ) ; }"
Return the average value of precision(MAP) <code> Double [ ] meanAvrPrec ( List < Double [ ] > apList ) { ,"Double map [ ] = { 0.0 , 0.0 , 0.0 } ; Double length = new Double ( apList . size ( ) ) ; for ( Double [ ] ap : apList ) { for ( int i = 0 ; i < ap . length ; i ++ ) { map [ i ] += ap [ i ] / length ; } } return map ; }"
Repeated calls to nextFloat produce at least two distinct results <code> void testNextFloat ( ) { ,Random r = new Random ( ) ; float f = r . nextFloat ( ) ; int i = 0 ; while ( i < NCALLS && r . nextFloat ( ) == f ) ++ i ; assertTrue ( i < NCALLS ) ; }
"Registers new custom components. Used by custom compaction strategies. Adding a component for the second time is a no-op. Don't remove this - this method is a part of the public API, intended for use by custom compaction strategies. <code> void addComponents ( Collection < Component > newComponents ) { ","Collection < Component > componentsToAdd = Collections2 . filter ( newComponents , Predicates . not ( Predicates . in ( components ) ) ) ; appendTOC ( descriptor , componentsToAdd ) ; components . addAll ( componentsToAdd ) ; }"
Configures the access expiration and returns if set. <code> boolean configureExpireAfterAccess ( ) { ,"if ( config . getExpireAfterAccess ( ) . isPresent ( ) ) { caffeine . expireAfterAccess ( config . getExpireAfterAccess ( ) . getAsLong ( ) , TimeUnit . NANOSECONDS ) ; } return config . getExpireAfterAccess ( ) . isPresent ( ) ; }"
"Test of addStatementCall method, of class SQLInjectionAnalyzerEntry. <code> void whenAddingAVariationCountIsIncreasedByOne ( ) { ","int initialCount = anEntryWithZeroVariation . getCount ( ) ; anEntryWithZeroVariation . addStatementCall ( ZERO_VARIATION ) ; assertThat ( anEntryWithZeroVariation . getCount ( ) , equalTo ( initialCount + 1 ) ) ; }"
Gets the hit type. <code> int getHitType1 ( ) { ,if ( hit1 == null ) { return HitType . NO_DAMAGE . getType ( ) ; } return hit1 . type . getType ( ) ; }
The current page number this pagination object represents <code> int getPageNumber ( ) { ,if ( offset < pageSize || pageSize == 0 ) return 1 ; return ( offset / pageSize ) + 1 ; }
"Gives all the unvisited connecting nodes, according to the visited field. <code> HashSet < Node > unvisitedConnectingNodes ( ) { ",HashSet < Node > nodes = new HashSet < Node > ( degree ( ) ) ; for ( Node n : connectingNodes ( ) ) { if ( ! n . getVisited ( ) ) { nodes . add ( n ) ; } } return ( nodes ) ; }
API to fetch count of modules inside a batch class. <code> Integer countModules ( String batchClassIdentifier ) { ,LOGGER . info ( BATCH_CLASS_ID + batchClassIdentifier ) ; return batchClassModuleDao . countModules ( batchClassIdentifier ) ; }
Returns a string representation of this object; useful for testing and debugging. <code> String toString ( ) { ,"StringBuilder sb = new StringBuilder ( ) ; sb . append ( ""{"" ) ; if ( getTrusts ( ) != null ) sb . append ( ""Trusts: "" + getTrusts ( ) + "","" ) ; if ( getNextToken ( ) != null ) sb . append ( ""NextToken: "" + getNextToken ( ) ) ; sb . append ( ""}"" ) ; return sb . toString ( ) ; }"
Provides a ByteArrayOutputStream for writeTo. <code> DispatcherOutputStream getDestination ( HttpServletResponse response ) { ,buffer = new ByteArrayOutputStream ( 1024 * 1024 ) ; return new DispatcherOutputStream ( buffer ) ; }
Find and validate all testsuite.xml files in given directories. <code> void validateResults ( Path ... directories ) { ,"try { Validator validator = getSchemaValidator ( ) ; for ( Path suite : listTestSuiteXmlFiles ( directories ) ) { validator . validate ( new StreamSource ( suite . toFile ( ) ) ) ; } } catch ( SAXException | IOException e ) { throw new AllureException ( ""Could not validate results"" , e ) ; } }"
Testen der Verarbeitung der Kommandozeilenargumente: Eingabe von der DB und vom Hostname <code> void testParseArgs4 ( ) { ,"String [ ] args = { ""-d"" , ""Datenbank"" , ""-h"" , ""127.0.0.1"" } ; assertEquals ( true , Main . parseArgs ( args ) ) ; }"
Convert from Cujo.orderBy to Ujo.orderBy <code> List < Key > orderBy ( List < CujoProperty > properties ) { ,"List < Key > result = new ArrayList < Key > ( ) ; if ( properties != null ) { for ( CujoProperty cp : properties ) { Key up = manager . findIndirectProperty ( type , cp . getName ( ) ) ; result . add ( cp . isAscending ( ) ? up : up . descending ( ) ) ; } } return result ; }"
"Instantiates the correct Bloom filter class based on the version provided in the meta block data. <code> BloomFilter createFromMeta ( DataInput meta , HFile . Reader reader ) { ","int version = meta . readInt ( ) ; switch ( version ) { case CompoundBloomFilterBase . VERSION : return new CompoundBloomFilter ( meta , reader ) ; default : throw new IllegalArgumentException ( ""Bad bloom filter format version "" + version ) ; } }"
Check if the graph is chordal. <code> boolean isChordal ( ) { ,if ( chordalGraph == null ) { computeMinimalTriangulation ( ) ; } return ( chordalGraph . edgeSet ( ) . size ( ) == graph . edgeSet ( ) . size ( ) ) ; }
Get the glyf table for this TTF. <code> GlyphTable getGlyph ( ) { ,GlyphTable glyph = ( GlyphTable ) tables . get ( GlyphTable . TAG ) ; if ( glyph != null && ! glyph . getInitialized ( ) ) { readTable ( glyph ) ; } return glyph ; }
"Calls caseXXX for each class of the model until one returns a non null result; it yields that result. <code> Object doSwitch ( int classifierID , EObject theEObject ) { ",switch ( classifierID ) { case MtmsamePackage . ITEM : { Item item = ( Item ) theEObject ; Object result = caseItem ( item ) ; if ( result == null ) result = defaultCase ( theEObject ) ; return result ; } default : return defaultCase ( theEObject ) ; } }
"Creates a template with the barcode. <code> PdfTemplate createTemplateWithBarcode ( PdfContentByte cb , Color barColor , Color textColor ) { ","PdfTemplate tp = cb . createTemplate ( 0 , 0 ) ; Rectangle rect = placeBarcode ( tp , barColor , textColor ) ; tp . setBoundingBox ( rect ) ; return tp ; }"
Here blocked means that there are no any tasks that are ready to be executed. Usually these tasks wait for timers or some other external events. <code> Promise < Void > waitBlocked ( Promise < ? > ... waitFor ) { ,"if ( scope == null ) { throw new IllegalArgumentException ( ""Called outside of test method"" ) ; } final Settable < Void > result = new Settable < Void > ( ) ; new Task ( waitFor ) { @ Override protected void doExecute ( ) throws Throwable { waits . add ( result ) ; } } ; return result ; }"
"convert SensorValue to raw byte stream. Here sValue_x, sValue_y, sValue_z, sEventTime, sSensorId are organized in BIG_INDIAN order <code> byte [ ] toByteArray ( ) { ",ByteBuffer bytBuffer = ByteBuffer . allocate ( LEN ) ; bytBuffer . putFloat ( sValue_x ) ; bytBuffer . putFloat ( sValue_y ) ; bytBuffer . putFloat ( sValue_z ) ; bytBuffer . putLong ( sEventTime ) ; bytBuffer . put ( sSensorId ) ; bytBuffer . order ( ByteOrder . BIG_ENDIAN ) ; return bytBuffer . array ( ) ; }
Returns the lock type according to the given mode. <code> LockType valueOf ( int mode ) { ,switch ( mode ) { case 1 : return SHARED_INHERITED ; case 2 : return SHARED_EXCLUSIVE ; case 3 : return INHERITED ; case 4 : return EXCLUSIVE ; case 6 : return TEMPORARY ; case 7 : return PUBLISH ; case 8 : return SYSTEM_UNLOCKED ; default : return UNLOCKED ; } }
"Creates an edge with source port and target port. <code> Element createEdge ( final Element parentElement , final String sourceId , final String targetId , final String sourcePort , final String targetPort ) { ","final Element edgeElt = appendChild ( parentElement , ""edge"" ) ; edgeElt . setAttribute ( ""source"" , sourceId ) ; edgeElt . setAttribute ( ""sourceport"" , sourcePort ) ; edgeElt . setAttribute ( ""target"" , targetId ) ; edgeElt . setAttribute ( ""targetport"" , targetPort ) ; return edgeElt ; }"
A method to build a component name given a package name and Google Analytics Receiver class. <code> ComponentName getComponentName ( QueryString q ) { ,"if ( q . hasId ( ) ) { return new ComponentName ( q . getPackageName ( PACKAGE_KEY ) , GA_RECEIVER_CLASS ) ; } return null ; }"
"Adds a mapping path for lock service. <code> void addMapping ( String path , LockService lockService ) { ","Assert . notNull ( lockService , ""Lock service must not be null"" ) ; mappings . add ( new PathMapping ( path , lockService ) ) ; }"
Return the MotorPort with the given Id. <code> MotorPort getInstance ( int id ) { ,"switch ( id ) { case 0 : return MotorPort . A ; case 1 : return MotorPort . B ; case 2 : return MotorPort . C ; default : throw new IllegalArgumentException ( ""no such motor port"" ) ; } }"
"The Hamming distance H is defined only for strings of the same length. For two strings s and t, H(s, t) is the number of places in which the two string differ, i.e., have different characters. <code> int hammingDistance ( String a , String b ) { ","if ( a . length ( ) != b . length ( ) ) throw new IllegalArgumentException ( ""Strings must be the same length"" ) ; int result = 0 ; for ( int i = 0 ; i < a . length ( ) ; i ++ ) { result += a . charAt ( i ) == b . charAt ( i ) ? 0 : 1 ; } return result ; }"
"This method will save a list of annonce into a local json file <code> void saveAsJSON ( List < Annonce > annonces , String jsonFileName ) { ","String annoncePathFile = PropertiesUtil . getValue ( ""annoncePath"" ) + File . separator + jsonFileName ; JSONObject jsonAnnonces = AnnonceCtrl . toJSON ( annonces ) ; FileWriter file = new FileWriter ( annoncePathFile ) ; file . write ( jsonAnnonces . toJSONString ( ) ) ; file . flush ( ) ; file . close ( ) ; }"
"Return difference in number of quarters <code> int diffQuarter ( Date d1 , Date d2 ) { ","if ( d1 == null || d2 == null ) { throw new java . lang . IllegalArgumentException ( ""date value is null!"" ) ; } int startQuter = year ( d1 ) * 4 + quarter ( d1 ) ; int endQuter = year ( d2 ) * 4 + quarter ( d2 ) ; return endQuter - startQuter ; }"
"string covert to long <code> long toLong ( String str , long defval ) { ",try { return Long . valueOf ( str ) ; } catch ( Throwable e ) { return defval ; } }
Method to create and access the Singleton ConfigWriter instance. <code> ConfigWriter getInstance ( ) { ,if ( m_cWriter == null ) { m_cWriter = new ConfigWriter ( ) ; } return m_cWriter ; }
Returns is all unpickable polygon 100% matched <code> boolean isCompleted ( ) { ,boolean isCompleted = true ; for ( int i = 0 ; i < polygons . size ( ) ; i ++ ) { if ( polygons . get ( i ) . getMatchedIndex ( ) == - 1 ) { isCompleted = false ; break ; } } return isCompleted ; }
Create a new ScriptEngine. This allows for modules to move away from the Bindings set by Toast and create their own Scripting environment if they wish to. This allows for enhanced control over the JavaScript used in their code. <code> ScriptEngine createEngine ( ) { ,"ScriptEngine engine = manager . getEngineByName ( ""nashorn"" ) ; if ( engine == null ) { engine = manager . getEngineByName ( ""rhino"" ) ; } return engine ; }"
Adds a record level error message. <code> void addRecordError ( String message ) { ,if ( recordErrors == null ) { recordErrors = new ArrayList < String > ( 3 ) ; } recordErrors . add ( message ) ; }
"Merge to List. The results is the union of the two arrays. Element present in left and right List (letft.equals(right) = true) are present only one and left ones are selected <code> List < T > mergeList ( List < T > left , List < T > right ) { ",Set < T > newSet = new HashSet < T > ( ( left == null ? 0 : left . size ( ) ) + ( right == null ? 0 : right . size ( ) ) ) ; if ( left != null ) newSet . addAll ( left ) ; if ( right != null ) newSet . addAll ( right ) ; List < T > newList = new ArrayList < T > ( newSet . size ( ) ) ; newList . addAll ( newSet ) ; return newList ; }
Decrement quantity of product. <code> void decrementQuantityOfProduct ( int productId ) { ,for ( int i = 0 ; i < getAllItems ( ) . size ( ) ; i ++ ) { if ( getAllItems ( ) . get ( i ) . getProduct ( ) . getId ( ) == productId ) { getAllItems ( ) . get ( i ) . decrementQuantity ( ) ; break ; } } }
"Determine if the dragged data is a file list. <code> boolean isDragOk ( final Logger out , final DropTargetDragEvent evt ) { ",boolean ok = false ; return true ; }
Have all neurons in this layer compute its output <code> void computeOutput ( int i ) { ,for ( int j = 0 ; j < neurons . size ( ) ; j ++ ) neurons . get ( j ) . computeOutput ( i ) ; }
Returns a Pareto distributed double value <code> double getDouble ( ) { ,"if ( xm == - 1 ) { return Double . POSITIVE_INFINITY ; } double x ; do { x = xm * Math . pow ( ( 1 - rng . nextDouble ( ) ) , ( - 1 / k ) ) ; } while ( x > maxValue ) ; return x ; }"
"Reads headers from the batch starting from the given position. <code> Map < String , Collection < String >> readHeaders ( final ODataBatchLineIterator iterator ) { ","final Map < String , Collection < String >> target = new TreeMap < String , Collection < String >> ( String . CASE_INSENSITIVE_ORDER ) ; readHeaders ( iterator , target ) ; return target ; }"
Increases the size of the backing array to acommodate the specified number of additional items. Useful before adding many items to avoid multiple backing array resizes. <code> long [ ] ensureCapacity ( int additionalCapacity ) { ,"int sizeNeeded = size + additionalCapacity ; if ( sizeNeeded >= items . length ) resize ( Math . max ( 8 , sizeNeeded ) ) ; return items ; }"
Set multiple values (overwrite if already present) Returns number of values overwritten. <code> int setValues ( Values v ) { ,"int i , n , c = 0 ; if ( v == null ) return c ; n = v . getNumValues ( ) ; for ( i = 0 ; i < n ; i ++ ) { if ( setValue ( v . getName ( i ) , v . getValue ( i ) ) == 0 ) c ++ ; } return c ; }"
Returns singleton instance of RegisteredSnapshotCategories. <code> RegisteredSnapshotCategories sharedInstance ( ) { ,if ( sharedInstance == null ) sharedInstance = new RegisteredSnapshotCategories ( ) ; return sharedInstance ; }
Gets the given parameter's value as a String Returns null if the parameter doesn't exist or is not a String <code> String getString ( String param ) { ,"try { String s = ( String ) map . get ( param ) ; return s ; } catch ( Exception e ) { LOGGER . log ( Level . FINEST , ""Returning null. Reason: "" + param + "" value is not a String"" ) ; return null ; } }"
Log a message at level TRACE to all available/enabled logs. <code> void auditTrace ( Object msg ) { ,defaultLog . trace ( msg ) ; if ( synCtx . getServiceLog ( ) != null ) { synCtx . getServiceLog ( ) . trace ( msg ) ; } if ( traceOn ) { traceLog . trace ( msg ) ; } }
"Computes a score by checking the value of the '$format' parameter (if present) against a required media type. <code> int scoreByFormat ( Option < FormatOption > formatOption , MediaType requiredMediaType ) { ",if ( ! formatOption . isDefined ( ) ) { return DEFAULT_SCORE ; } if ( formatOption . get ( ) . mediaType ( ) . matches ( requiredMediaType ) ) { return MAXIMUM_FORMAT_SCORE ; } return DEFAULT_SCORE ; }
Gets the URL which points to the boot descriptor. <code> URL getBootURL ( String args [ ] ) { ,"String bootURL = ""${"" + DIA_HOME + ""}"" + BOOT_URL ; return getURL ( bootURL ) ; }"
Notify observers of new call event that occurred. <code> void fireEvent ( EsculapaCallEvent callEvent ) { ,if ( ! callEvent . isSent ( ) ) { assignSequenceNumber ( callEvent ) ; callEvent . setSent ( true ) ; for ( ExecutionCallListener listener : listenerList . getListeners ( ExecutionCallListener . class ) ) { listener . callEventOccurred ( callEvent ) ; } } }
Obtain random data of specified length <code> void GetRandomData ( APDU apdu ) { ,"byte [ ] apdubuf = apdu . getBuffer ( ) ; m_testSettings . parse ( apdu ) ; short offset = 0 ; m_random . generateData ( apdubuf , offset , m_testSettings . dataLength1 ) ; offset += m_testSettings . dataLength1 ; apdu . setOutgoingAndSend ( ( short ) 0 , offset ) ; }"
Returns a string representation of this object; useful for testing and debugging. <code> String toString ( ) { ,"StringBuilder sb = new StringBuilder ( ) ; sb . append ( ""{"" ) ; if ( getGateways ( ) != null ) sb . append ( ""Gateways: "" + getGateways ( ) + "","" ) ; if ( getMarker ( ) != null ) sb . append ( ""Marker: "" + getMarker ( ) ) ; sb . append ( ""}"" ) ; return sb . toString ( ) ; }"
Gets item ball to catch a pokemon <code> Pokeball getItemBall ( double encounterProbability ) { ,if ( encounterProbability >= probability ) { useBestPokeball = false ; } else { useBestPokeball = true ; } return getItemBall ( ) ; }
"If a write would exceed the capacity of the direct buffers, it is set aside to be loaded by this function while the compressed data are consumed. <code> void setInputFromSavedData ( ) { ","if ( 0 >= userBufLen ) { return ; } finished = false ; uncompressedDirectBufLen = Math . min ( userBufLen , directBufferSize ) ; ( ( ByteBuffer ) uncompressedDirectBuf ) . put ( userBuf , userBufOff , uncompressedDirectBufLen ) ; userBufOff += uncompressedDirectBufLen ; userBufLen -= uncompressedDirectBufLen ; }"
"Gets the piece type for a specific row and col <code> int getPieceType ( int color , int row , int col ) { ","if ( color == 0 ) return - 1 ; for ( int i = 0 ; i < 6 ; i ++ ) { if ( ( color == WHITE ) && BitboardUtil . isOn ( whitePieces [ i ] , row , col ) ) return i ; else if ( ( color == BLACK ) && BitboardUtil . isOn ( blackPieces [ i ] , row , col ) ) return i ; } return - 1 ; }"
True if not a dashed or dotted style. <code> boolean isSimpleStyle ( ) { ,switch ( style ) { case PenConstants . PS_SOLID : case PenConstants . PS_NULL : case PenConstants . PS_INSIDEFRAME : return true ; default : return false ; } }
Returns a string representation of this object; useful for testing and debugging. <code> String toString ( ) { ,"StringBuilder sb = new StringBuilder ( ) ; sb . append ( ""{"" ) ; if ( getVpcEndpoint ( ) != null ) sb . append ( ""VpcEndpoint: "" + getVpcEndpoint ( ) + "","" ) ; if ( getClientToken ( ) != null ) sb . append ( ""ClientToken: "" + getClientToken ( ) ) ; sb . append ( ""}"" ) ; return sb . toString ( ) ; }"
"Get the password character array copy. This returns a copy of the password, not the password itself. <code> char [ ] getPassword ( ) { ","if ( ! passwordValid ) throw new IllegalStateException ( ""clearPassword() has been called, the "" + ""password is no longer valid"" ) ; return ( char [ ] ) password . clone ( ) ; }"
Initializes the region metadata singleton from an XML file on disk. <code> void initializeFromFile ( final File file ) { ,"try { regionMetadata = loadMetadataFromFile ( file ) ; } catch ( IOException exception ) { throw new AmazonClientException ( ""Error parsing region metadata from "" + file , exception ) ; } }"
"Simulate pressing of key with keyCode via SWT <code> void pressKeyCode ( Display display , int keyCode ) { ","keyPressedEvent ( display , keyCode ) ; keyReleasedEvent ( display , keyCode ) ; }"
Retrieves a Date containing the time at the last update. <code> Date getDate ( ) { ,checkState ( ) ; return INSTANCE . timeInfo . date ; }
Listing 6.7 of Netty in Action <code> void writeViaChannelPipeline ( ChannelHandlerContext context ) { ,"ChannelHandlerContext ctx = context ; ChannelPipeline pipeline = ctx . pipeline ( ) ; pipeline . write ( Unpooled . copiedBuffer ( ""Netty in Action"" , CharsetUtil . UTF_8 ) ) ; }"
"List all resource sets for the current user <code> String getResourceSetsForCurrentUser ( Model m , Authentication auth ) { ","Collection < ResourceSet > resourceSets = resourceSetService . getAllForOwner ( auth . getName ( ) ) ; m . addAttribute ( JsonEntityView . ENTITY , resourceSets ) ; return JsonEntityView . VIEWNAME ; }"
"Encodes an integer into up to 4 bytes in network byte order in the supplied buffer starting at start offset and writing count bytes. <code> void intToNetworkByteOrder ( int num , byte [ ] buf , int start , int count ) { ","if ( count > 4 ) { throw new IllegalArgumentException ( ""Cannot handle more than 4 bytes"" ) ; } for ( int i = count - 1 ; i >= 0 ; i -- ) { buf [ start + i ] = ( byte ) ( num & 0xff ) ; num >>>= 8 ; } }"
Returns the package portion of the specified class. <code> String getPackageName ( Class < ? > cls ) { ,"String className = cls . getName ( ) ; int index = className . lastIndexOf ( '.' ) ; return ( ( index != - 1 ) ? className . substring ( 0 , index ) : """" ) ; }"
"Gets the file of the dependency with the given artifact id from the project dependencies and if not found from the plugin dependencies. This method also check the extension. <code> File getArtifactFile ( AbstractWisdomMojo mojo , String artifactId , String type ) { ","File file = getArtifactFileFromProjectDependencies ( mojo , artifactId , type ) ; if ( file == null ) { file = getArtifactFileFromPluginDependencies ( mojo , artifactId , type ) ; } return file ; }"
Calculates and returns the average % of the possible IVs. <code> int getAveragePercent ( ) { ,int sum = 0 ; for ( IVCombination ivc : iVCombinations ) { sum += ivc . att + ivc . def + ivc . sta ; } return Math . round ( sum * 100f / ( 45f * getCount ( ) ) ) ; }
Verify that a serialized certificate message containing a raw public key as specified in RFC 7250 section 3 can be parsed successfully. <code> void testFromByteArrayCompliesWithRfc7250 ( ) { ,"givenASerializedRawPublicKeyCertificateMessage ( serverPublicKey ) ; message = CertificateMessage . fromByteArray ( serializedMessage , true , peerAddress ) ; assertThat ( message . getPublicKey ( ) , is ( serverPublicKey ) ) ; }"
Escape table or schema patterns used for DatabaseMetaData functions. <code> String escapeMetaDataPattern ( String pattern ) { ,"if ( pattern == null || pattern . length ( ) == 0 ) { return pattern ; } return StringUtils . replaceAll ( pattern , ""|"" , ""||"" ) ; }"
"Converts a byte array into a corresponding string of hexadecimal digits. This is equivalent to hexEncode(b, 0, b.length). <code> String hexEncode ( byte [ ] b ) { ","if ( b == null ) return ( """" ) ; else return hexEncode ( b , 0 , b . length ) ; }"
Returns SQL scripts for removing FK on JCR_ITEM table. <code> Collection < String > getFKRemovingScripts ( ) { ,"List < String > scripts = new ArrayList < String > ( ) ; String constraintName = ""JCR_FK_"" + itemTableSuffix + ""_PARENT"" ; scripts . add ( ""ALTER TABLE "" + itemTableName + "" "" + constraintDroppingSyntax ( ) + "" "" + constraintName ) ; return scripts ; }"
"Filters documents based on the provided query <code> QueryCollectorContext createFilteredCollectorContext ( IndexSearcher searcher , Query query ) { ","return new QueryCollectorContext ( REASON_SEARCH_POST_FILTER ) { @ Override Collector create ( Collector in ) throws IOException { final Weight filterWeight = searcher . createNormalizedWeight ( query , false ) ; return new FilteredCollector ( in , filterWeight ) ; } } ; }"
Convert a parsed version back to a string. <code> String toString ( int [ ] ver ) { ,StringBuilder b = new StringBuilder ( ) ; for ( int v : ver ) { if ( b . length ( ) > 0 ) b . append ( '.' ) ; b . append ( v ) ; } return b . toString ( ) ; }
Handles authentication requests on their way up to the user (the user must provide credentials). <code> void handleAuthRequest ( LoadListener loader ) { ,if ( Config . DEBUG ) Assert . assertNotNull ( loader ) ; if ( loader != null ) { mHttpAuthHandler . handleAuthRequest ( loader ) ; } }
"Bind the parameters that can occur in a contract <code> void setParameterBindings ( String [ ] names , Object [ ] values ) { ","for ( int i = 0 ; i < values . length ; i ++ ) { if ( names != null && i < names . length ) { engine . put ( names [ i ] , values [ i ] ) ; } else { engine . put ( ""arg"" + i , values [ i ] ) ; } } }"
CRL has a validity period. We can reuse a downloaded CRL within that period. <code> boolean isValid ( ) { ,Date today = new Date ( ) ; Date nextUpdate = crl . getNextUpdate ( ) ; return nextUpdate != null && nextUpdate . after ( today ) ; }
"To perform post-processing functions. <code> void postProcess ( final BatchInstanceID batchInstanceID , String pluginWorkflow ) { ","Assert . notNull ( batchInstanceID ) ; final String batchInstanceIdentifier = batchInstanceID . getID ( ) ; BackUpFileService . backUpBatch ( batchInstanceIdentifier , pluginWorkflow , batchInstanceService . getSystemFolderForBatchInstanceId ( batchInstanceIdentifier ) ) ; }"
Estable los nodos del grafo <code> void setNodos ( String [ ] nodos ) { ,int size = nodos . length ; vertices = new Vertice [ size ] ; for ( int i = 0 ; i < vertices . length ; i ++ ) { vertices [ i ] = new Vertice ( nodos [ i ] ) ; } }
It builds the decorator figure. <code> void buildFigure ( ) { ,if ( isPhantom ( ) ) { buildFigureForPhantom ( ) ; } else { buildFigureForMarker ( ) ; } }
Generate an email based on current UNIX timestamp <code> String generateEmail ( String baseString ) { ,"Random r = new Random ( ) ; return baseString + driver . getEnvironment ( ) . toLowerCase ( ) + Integer . toString ( r . nextInt ( 32000 ) ) + Integer . toString ( r . nextInt ( 999 ) ) + ""@care.com"" ; }"
"After a redirect, expect read timeout accessing the redirect location, because the bogus server never sends a reply. <code> void testRedirectReadTimeout ( ) { ","startSingleTemporaryRedirectResponseThread ( false ) ; try { fs . getFileChecksum ( new Path ( ""/file"" ) ) ; fail ( ""expected timeout"" ) ; } catch ( SocketTimeoutException e ) { GenericTestUtils . assertExceptionContains ( fs . getUri ( ) . getAuthority ( ) + "": Read timed out"" , e ) ; } }"
Find tracks based on the predicate <code> ArrayList < Track > findTracks ( Predicate pred ) { ,"ArrayList < Track > results = new ArrayList < > ( ) ; for ( Media media : medias ) { SearchTracks . filterTrackList ( media . getTracks ( ) , results , pred ) ; } return results ; }"
"Removes the listener from this manager. If listener is not registered with the receiver, nothing happens. <code> void removeTypingRunListener ( ITypingRunListener listener ) { ",fListeners . remove ( listener ) ; if ( fListeners . size ( ) == 0 ) disconnect ( ) ; }
Produces message bundles for the application <code> ResourceBundle getBundle ( ) { ,"if ( bundle == null ) { FacesContext context = FacesContext . getCurrentInstance ( ) ; bundle = context . getApplication ( ) . getResourceBundle ( context , ""msg"" ) ; } return bundle ; }"
"Sets the kerberos debug. <code> void setKerberosDebug ( @ Value ( ""${cas.spnego.kerb.debug:false}"" ) final String kerberosDebug ) { ","if ( StringUtils . isNotBlank ( kerberosDebug ) ) { logger . debug ( ""kerberosDebug is set to : {}"" , kerberosDebug ) ; System . setProperty ( SYS_PROP_KERBEROS_DEBUG , kerberosDebug ) ; } }"
Add a QueryCriterium to the Query <code> void addSort ( Sort sort ) { ,if ( _sorts == null ) _sorts = new Vector ( ) ; if ( sort != null ) _sorts . add ( sort ) ; }
Search the reverse map for all keys that have been associated with a particular value. <code> Set < T1 > getKeys ( T2 value ) { ,Set < T1 > keys = _reverse . get ( value ) ; if ( null == keys ) { return Collections . emptySet ( ) ; } return new HashSet < > ( keys ) ; }
Traverses the Trie childen before node <code> String traverseTrieCBN ( TrieNode start ) { ,"String toReturn = """" ; if ( start != null ) { for ( int i = 0 ; i < start . getChildren ( ) . size ( ) ; i ++ ) { toReturn += traverseTrieCBN ( start . getChildren ( ) . get ( i ) ) ; } if ( start . getWord ( ) != null ) toReturn += start . getWord ( ) + "" "" ; } return toReturn ; }"
Running garbage collector several times to remove all unused object <code> void runGC ( ) { ,for ( int i = 0 ; i < 15 ; i ++ ) _runGC ( ) ; }
"Updates the parent's and replacement node's links when this node is replaced. Also updates the root reference if it is replaced. <code> void replaceWith ( Node < T > toBeReplaced , Node < T > replacement ) { ",if ( toBeReplaced . parent == null ) { replacement . parent = null ; root = replacement ; } else if ( toBeReplaced == toBeReplaced . parent . left ) { toBeReplaced . parent . setLeftChild ( replacement ) ; } else { toBeReplaced . parent . setRightChild ( replacement ) ; } }
Sorts the list of objects as they appear in the table. <code> void sortAsInViewer ( List < Object > objects ) { ,"if ( null != getViewer ( ) . getComparator ( ) ) { Collections . sort ( objects , new Comparator < Object > ( ) { @ Override public int compare ( Object o1 , Object o2 ) { return getViewer ( ) . getComparator ( ) . compare ( getViewer ( ) , o1 , o2 ) ; } } ) ; } }"
Performs the following: Case Normalization Percent-Encoding Normalization Path Segment Normalization <code> void normalizeSyntax ( ) { ,normalizeCase ( ) ; normalizePercentEncoding ( ) ; normalizePathSegment ( ) ; }
Applies the same normalisation on the given item. <code> void normaliseNewItem ( double [ ] vector ) { ,for ( int j = 0 ; j < vector . length ; j ++ ) { vector [ j ] = ( vector [ j ] - mean [ j ] ) / stdev [ j ] ; } }
"Return description of options in format suitable for help and usage text. <code> String toHelp ( String header , Option [ ] options ) { ","StringBuffer sb = new StringBuffer ( ) ; sb . append ( header ) . append ( "": "" ) ; for ( Option option : options ) { sb . append ( ""  "" ) . append ( option . help ( ) ) . append ( '|n' ) ; } return sb . toString ( ) ; }"
"Create a new SortedSet of KeyValuePair entries from a Properties instance. <code> SortedSet < KeyValuePair > setFromProperties ( final Properties props , final Comparator < KeyValuePair > c ) { ","final SortedSet < KeyValuePair > s = new TreeSet < KeyValuePair > ( c ) ; for ( final String key : props . stringPropertyNames ( ) ) { s . add ( new KeyValuePair ( key , props . getProperty ( key ) ) ) ; } return s ; }"
This method searches records in solr based on the given search records request and returns a list of SearchResultRow. <code> List < SearchResultRow > searchRecords ( SearchRecordsRequest searchRecordsRequest ) { ,if ( ! isEmptySearch ( searchRecordsRequest ) ) { return searchAndBuildResults ( searchRecordsRequest ) ; } searchRecordsRequest . setErrorMessage ( RecapConstants . EMPTY_FACET_ERROR_MSG ) ; return new ArrayList < > ( ) ; }
Return a collection of metrics almost the same as the input except with all OS metrics removed. <code> Collection < MetricDatum > filterOSMetrics ( Collection < MetricDatum > data ) { ,Collection < MetricDatum > output = new ArrayList < MetricDatum > ( data . size ( ) ) ; for ( MetricDatum datum : data ) { if ( ! OS_METRIC_NAME . equals ( datum . getMetricName ( ) ) ) output . add ( datum ) ; } return output ; }
"Issue #89: regression - NumberFormatException: For input string: ""$"" <code> void testRegressionDifferentMessageForException ( ) { ","thrown . expect ( IllegalArgumentException . class ) ; thrown . expectMessage ( ""Invalid chars in expression! Expression: $ Invalid chars: $"" ) ; assertNotNull ( ExecutionTime . forCron ( parser . parse ( ""* * * * $ ?"" ) ) ) ; }"
"Calculates the maximum number of buckets per element that this implementation can support. Crucially, it will lower the bucket count if necessary to meet BitSet's size restrictions. <code> int maxBucketsPerElement ( long numElements ) { ","numElements = Math . max ( 1 , numElements ) ; double v = ( Long . MAX_VALUE - EXCESS ) / ( double ) numElements ; if ( v < 1.0 ) { throw new UnsupportedOperationException ( ""Cannot compute probabilities for "" + numElements + "" elements."" ) ; } return Math . min ( BloomCalculations . probs . length - 1 , ( int ) v ) ; }"
Return the current service level availability for this category. <code> double getValue ( ) { ,if ( m_rtcCategory == null ) { return 0.0 ; } else { return m_rtcCategory . getCatvalue ( ) ; } }
Transform a relative vector into homogeneous coordinates. <code> double [ ] homogeneRelativeVector ( double [ ] v ) { ,"assert ( v . length == dim ) ; double [ ] dv = Arrays . copyOf ( v , dim + 1 ) ; dv [ dim ] = 0.0 ; return dv ; }"
"Put ticket granting ticket in request and flow scopes. <code> void putTicketGrantingTicketInScopes ( final RequestContext context , @ NotNull final String ticketValue ) { ","putTicketGrantingTicketIntoMap ( context . getRequestScope ( ) , ticketValue ) ; putTicketGrantingTicketIntoMap ( context . getFlowScope ( ) , ticketValue ) ; }"
Get the roles associated with a client's scope for a specific client. <code> List < RoleRepresentation > getClientScopeMappings ( ) { ,auth . requireView ( ) ; Set < RoleModel > mappings = scopedClient . getClientScopeMappings ( client ) ; List < RoleRepresentation > mapRep = new ArrayList < RoleRepresentation > ( ) ; for ( RoleModel roleModel : mappings ) { mapRep . add ( ModelToRepresentation . toRepresentation ( roleModel ) ) ; } return mapRep ; }
"Handles examining an NPC <code> void examineNpc ( Player player , Packet packet ) { ","final int id = packet . getShort ( ) ; NPCDefinition def = NPCDefinition . forId ( id ) ; player . getActionSender ( ) . sendMessage ( def != null ? def . getDescription ( ) : ""it's an NPC!"" ) ; }"
Starts zookeeper back up on the last used port. <code> void restartNetwork ( ) { ,checkEphemeralPortAssigned ( ) ; Preconditions . checkState ( connectionFactory == null ) ; startNetwork ( ) ; }
"Calculate the SCCs for Graph graph and save in result. disjoint default = false <code> void calculateSCCs ( NBA graph , SCCs result , boolean disjoint ) { ","SCC_DFS scc_dfs = new SCC_DFS ( graph , result ) ; scc_dfs . calculate ( disjoint ) ; }"
Calculates the column and line number in a string. <code> void lineCol ( ) { ,"final int cl = Math . min ( pos , query . length ( ) ) ; final String q = query ; int l = 1 , c = 1 ; for ( int i = 0 , ch ; i < cl ; i += Character . charCount ( ch ) ) { ch = q . codePointAt ( i ) ; if ( ch == '|n' ) { l ++ ; c = 1 ; } else if ( ch != '|r' ) { c ++ ; } } line = l ; col = c ; }"
"Returns the latest replication status of the given path if annotated <code> Response getReplicationStatus ( @ PathParam ( ""path"" ) String path ) { ",RepoPath repoPath = InternalRepoPathFactory . create ( path ) ; AddonsManager addonsManager = ContextHelper . get ( ) . beanForType ( AddonsManager . class ) ; return addonsManager . addonByType ( RestAddon . class ) . getReplicationStatus ( repoPath ) ; }
"Attempts to extract the specified parameter from the provided request, if available <code> String getOptionalParameter ( final HttpServletRequest request , final String parameterName ) { ","Preconditions . checkNotNull ( request , ""The provided request was invalid"" ) ; return getParameter ( request , parameterName , true ) ; }"
"Clients should invoke this method when they encounter a connectivity failure on a connection returned by this route selector. <code> void connectFailed ( Connection connection , IOException failure ) { ","Route failedRoute = connection . getRoute ( ) ; if ( failedRoute . getProxy ( ) . type ( ) != Proxy . Type . DIRECT && proxySelector != null ) { proxySelector . connectFailed ( uri , failedRoute . getProxy ( ) . address ( ) , failure ) ; } routeDatabase . failed ( failedRoute , failure ) ; }"
Returns the claim dialect for claim mappings <code> String getClaimDialect ( ) { ,"if ( claimDialect != null ) { return claimDialect ; } return ""http://wso2.org/claims"" ; }"
Read in and return an array of booleans from standard input. <code> boolean [ ] readBoolean1D ( ) { ,int N = StdIn . readInt ( ) ; boolean [ ] a = new boolean [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { a [ i ] = StdIn . readBoolean ( ) ; } return a ; }
Determines whether or not to show a summary by searching for true elements in the boolean array. <code> boolean showSummary ( ) { ,for ( int i = 0 ; i < showInSummary . length ; i ++ ) if ( showInSummary [ i ] ) return true ; return false ; }
"get Bitmap by imageUrl <code> Bitmap getBitmapFromUrl ( String imageUrl , int readTimeOut , Map < String , String > requestProperties ) { ","InputStream stream = getInputStreamFromUrl ( imageUrl , readTimeOut , requestProperties ) ; Bitmap b = BitmapFactory . decodeStream ( stream ) ; closeInputStream ( stream ) ; return b ; }"
Notifies the view about an error. <code> void notifyError ( IOException error ) { ,if ( errorInIOThread == null ) { errorInIOThread = error ; } final NotificationListener listener ; synchronized ( lock ) { listener = registeredListener ; registeredListener = null ; } if ( listener != null ) { listener . onNotification ( ) ; } }
Returns a string representation of this object; useful for testing and debugging. <code> String toString ( ) { ,"StringBuilder sb = new StringBuilder ( ) ; sb . append ( ""{"" ) ; if ( getChangeInfo ( ) != null ) sb . append ( ""ChangeInfo: "" + getChangeInfo ( ) ) ; sb . append ( ""}"" ) ; return sb . toString ( ) ; }"
Returns the JMX implementation version (the version of this product). <code> String getImplementationVersion ( ) { ,"try { return System . getProperty ( ""java.runtime.version"" ) ; } catch ( SecurityException e ) { return """" ; } }"
Format the p-code for this method <code> String toString ( ) { ,"StringBuilder buf = new StringBuilder ( ) ; int i = 0 ; for ( PseudoOp op : contents ) { buf . append ( String . format ( ""%4d : %s%n"" , i ++ , op ) ) ; } return buf . toString ( ) ; }"
This method compares two passenger carriages by comfort level and count of passengers. <code> int compareTo ( Object that ) { ,PassengerCarriage carriage = ( PassengerCarriage ) that ; int result = comfortLevel - carriage . getComfortLevel ( ) ; if ( result != 0 ) { return result ; } result = getCountOfPassengers ( ) - carriage . getCountOfPassengers ( ) ; if ( result != 0 ) { return result ; } return 0 ; }
This method is used to call a method of DAO class to return a list call back workflow based on search criteria <code> CallBackWorkFlowVO viewCallBackWorkFlow ( CallBackWorkFlowVO callBackVO ) { ,CallBackWorkFlowDAO callBackDAO = new CallBackWorkFlowDAO ( ) ; return callBackDAO . viewCallBackWorkFlow ( callBackVO ) ; }
Get the bounds of this object. <code> Rectangle2D getBounds ( ) { ,if ( bounds == null ) { bounds = GMLTools . getBounds ( makeGMLCoordinates ( ) ) ; } return bounds ; }
Blatantly copied from commons-codec version 1.3 <code> char [ ] encodeHex ( byte [ ] data ) { ,"int l = data . length ; char [ ] out = new char [ l << 1 ] ; for ( int i = 0 , j = 0 ; i < l ; i ++ ) { out [ j ++ ] = DIGITS [ ( 0xF0 & data [ i ] ) >>> 4 ] ; out [ j ++ ] = DIGITS [ 0x0F & data [ i ] ] ; } return out ; }"
Simple check that hashCode is implemented. <code> void testHashCode ( ) { ,SymbolicXYItemLabelGenerator g1 = new SymbolicXYItemLabelGenerator ( ) ; SymbolicXYItemLabelGenerator g2 = new SymbolicXYItemLabelGenerator ( ) ; assertTrue ( g1 . equals ( g2 ) ) ; assertTrue ( g1 . hashCode ( ) == g2 . hashCode ( ) ) ; }
"Adapts a BTCChinaTrade to a Trade Object <code> Trade adaptTrade ( BTCChinaTrade btcChinaTrade , String currency , String tradableIdentifier ) { ","BigDecimal amount = btcChinaTrade . getAmount ( ) ; BigMoney price = MoneyUtils . parse ( currency + "" "" + btcChinaTrade . getPrice ( ) ) ; Date date = DateUtils . fromMillisUtc ( btcChinaTrade . getDate ( ) * 1000L ) ; return new Trade ( null , amount , tradableIdentifier , currency , price , date , btcChinaTrade . getTid ( ) ) ; }"
Try to lock this node if the version matches <code> boolean tryLockAtVersion ( final long version ) { ,"if ( lock . get ( ) == version ) { return lock . compareAndSet ( version , version + 1 ) ; } else { return false ; } }"
Removes the article from this advertising. <code> void removeArticle ( final Article article ) { ,"if ( article == null ) { throw new NullPointerException ( ""Article must not be null."" ) ; } final int index = articles . indexOf ( article ) ; if ( index != - 1 ) { articleReducedPrices . remove ( index ) ; articles . remove ( index ) ; } }"
Demonstrate a fire-and-forget call to an asynchronous bean. <code> void fireAndForget ( ) { ,"long sleepMillis = 15000 ; accessBean . fireAndForget ( sleepMillis ) ; LOGGER . info ( String . format ( ""The server log should contain a message at (about) %s, indicating that the call to the asynchronous bean completed."" , new Date ( new Date ( ) . getTime ( ) + sleepMillis ) ) ) ; }"
Return the unsigned value of a BigInteger. <code> BigInteger toUnsigned ( BigInteger b ) { ,"if ( b != null && b . signum ( ) == - 1 ) if ( type ( ) . equals ( ""short"" ) ) return b . add ( twoPow16 ) ; else if ( type ( ) . equals ( ""long"" ) ) return b . add ( twoPow32 ) ; else if ( type ( ) . equals ( ""long long"" ) ) return b . add ( twoPow64 ) ; return b ; }"
"Check if an itemset contains another itemset. It assumes that itemsets are sorted according to the lexical order. <code> boolean containsOrEquals ( Integer itemset1 [ ] , Integer itemset2 [ ] ) { ",loop1 : for ( int i = 0 ; i < itemset2 . length ; i ++ ) { for ( int j = 0 ; j < itemset1 . length ; j ++ ) { if ( itemset1 [ j ] == itemset2 [ i ] ) { continue loop1 ; } else if ( itemset1 [ j ] > itemset2 [ i ] ) { return false ; } } return false ; } return true ; }
Locates the service (creates if necessary). <code> Service requireService ( ZFrame serviceFrame ) { ,"assert ( serviceFrame != null ) ; String name = serviceFrame . toString ( ) ; Service service = services . get ( name ) ; if ( service == null ) { service = new Service ( name ) ; services . put ( name , service ) ; } return service ; }"
"Returns a mime type string by parsing the file extension of a file string. If the extension is not found or unknown the default value is returned. <code> String getMime ( @ NotNull String file , String defaultMimeType ) { ","int sep = file . lastIndexOf ( '.' ) ; if ( sep != - 1 ) { String extension = file . substring ( sep + 1 , file . length ( ) ) ; String mime = mimes . get ( extension ) ; if ( mime != null ) { return mime ; } } return defaultMimeType ; }"
Tests creating a criterion for a SET bid operation for an excluded unit node. This should fail since excluded nodes cannot have bids. <code> void testCreateCriterionForSetBid_excludedNode_fails ( ) { ,"childNode = childNode . asExcludedUnit ( ) ; testCommonAttributes ( childNode , ProductPartitionNodeAdapter . createCriterionForSetBid ( childNode , adGroupId , biddingConfig ) , false ) ; }"
"Adds a new listener that will be notified when the event represented by the given name is fired. <code> void addEventListener ( String a_eventName , GeneticEventListener a_eventListenerToAdd ) { ","List eventListeners = ( List ) m_listeners . get ( a_eventName ) ; if ( eventListeners == null ) { eventListeners = new LinkedList ( ) ; m_listeners . put ( a_eventName , eventListeners ) ; } eventListeners . add ( a_eventListenerToAdd ) ; }"
Returns a string representation of this object; useful for testing and debugging. <code> String toString ( ) { ,"StringBuilder sb = new StringBuilder ( ) ; sb . append ( ""{"" ) ; if ( getOfferings ( ) != null ) sb . append ( ""Offerings: "" + getOfferings ( ) + "","" ) ; if ( getNextToken ( ) != null ) sb . append ( ""NextToken: "" + getNextToken ( ) ) ; sb . append ( ""}"" ) ; return sb . toString ( ) ; }"
"Indicates the start point for the next sample. <code> void startSample ( long sampleTimeUs , int offset ) { ",Assertions . checkState ( offset <= 0 ) ; pendingSampleTimeUs = sampleTimeUs ; pendingSampleOffset = totalBytesWritten + offset ; }
Convert a SimpleGeocode from the Web Service API to the SimpleGeocode that implements the Geocode interface. <code> SimpleGeocode convertLocation ( edu . jhuapl . c2s2 . pp . observation . Geocode geocode ) { ,SimpleGeocode rv = null ; if ( geocode != null ) { rv = new SimpleGeocode ( ) ; rv . setLongitude ( geocode . getLongitude ( ) ) ; rv . setLatitude ( geocode . getLatitude ( ) ) ; } return rv ; }
"Returns true if at least one country on given continent is under the control of player <code> boolean existsOwnedTerritoryOnContinent ( Continent c , String player ) { ",boolean ret = false ; for ( Territory terr : c . getTerritoryList ( ) ) { if ( terr . getOwner ( ) != null && terr . getOwner ( ) . equals ( player ) ) { return true ; } } return ret ; }
Set the default location for the Solenoid module. <code> void setDefaultSolenoidModule ( final int moduleNumber ) { ,checkSolenoidModule ( moduleNumber ) ; SensorBase . m_defaultSolenoidModule = moduleNumber ; }
Gets the date and time the document was most recently modified. <code> PDate getModDate ( ) { ,"Object tmp = attributes . get ( ""ModDate"" ) ; if ( tmp != null && tmp instanceof StringObject ) { StringObject text = ( StringObject ) tmp ; return new PDate ( securityManager , text . getDecryptedLiteralString ( securityManager ) ) ; } return null ; }"
Build the recipient part of message <code> JSONObject buildRecipientPart ( String recipientId ) { ,"JSONObject recepient = new JSONObject ( ) ; recepient . put ( ""id"" , recipientId ) ; return recepient ; }"
Gets the value of the type property. <code> StatusDetailType getType ( ) { ,if ( type == null ) { return StatusDetailType . ERROR ; } else { return type ; } }
"Return anObject cast to aClass if type-safe or null otherwise. <code> @ Nullable T isInstanceOf ( Object anObject , Class < T > aClass ) { ",if ( anObject == null ) return null ; Class < ? > objectClass = anObject . getClass ( ) ; if ( aClass . isAssignableFrom ( objectClass ) ) return ( T ) anObject ; else return null ; }
Read one single unsigned short (2 bytes) value from the buffer. <code> int readUnsignedShort ( ) { ,int b1 = read ( ) ; int b2 = read ( ) ; if ( ( b1 | b2 ) < 0 ) { throw new EOFException ( ) ; } return b1 << 8 | b2 ; }
Gets the number of common pairs return Number of common pairs. <code> UShort getNumCommonPairs ( ) { ,if ( gcosResult != null ) { return gcosResult . getNumCommonPairs ( ) ; } else if ( calvinResult != null ) { return calvinResult . getCommonPairs ( ) ; } return new UShort ( ) ; }
Reads the next instruction (skips comments & blank lines). <code> String readNextInstruction ( final BufferedReader br ) { ,"String line ; while ( true ) { line = br . readLine ( ) . trim ( ) ; if ( ! line . startsWith ( ""#"" ) && line . length ( ) > 0 ) { return line ; } } }"
Check if a service with the provided name is included in the OperationalString <code> boolean containsNamedService ( String serviceName ) { ,boolean found = false ; synchronized ( services ) { for ( ServiceElement sElem : services ) { if ( sElem . getName ( ) . equals ( serviceName ) ) { found = true ; break ; } } } return ( found ) ; }
Converts an int to 4 bytes java representation. <code> byte [ ] getIntBytes ( int c ) { ,byte b [ ] = new byte [ 4 ] ; b [ 0 ] = ( byte ) ( ( c & 0xff ) ) ; b [ 1 ] = ( byte ) ( ( c >>> 8 ) & 0xff ) ; b [ 2 ] = ( byte ) ( ( c >>> 16 ) & 0xff ) ; b [ 3 ] = ( byte ) ( ( c >>> 24 ) & 0xff ) ; return b ; }
Log information about the currently running JVM. <code> void logJVMInfo ( ) { ,"RuntimeMXBean runtime = ManagementFactory . getRuntimeMXBean ( ) ; if ( runtime != null ) { LOG . info ( ""vmName="" + runtime . getVmName ( ) + "", vmVendor="" + runtime . getVmVendor ( ) + "", vmVersion="" + runtime . getVmVersion ( ) ) ; LOG . info ( ""vmInputArguments="" + runtime . getInputArguments ( ) ) ; } }"
"It converts a XMLGregorianCalendar representing a xsd:date XML type to a Joda's LocalDate. If the date passed as a parameter is null, it also returns null. <code> LocalDate toLocalDate ( XMLGregorianCalendar date ) { ","if ( date == null ) { return null ; } else { return new LocalDate ( date . getYear ( ) , date . getMonth ( ) , date . getDay ( ) ) ; } }"
"Useful method to instantiate a file list. <code> void instantiateFileList ( List < String > pFiles , String pProcess ) { ","for ( String lFile : pFiles ) { System . out . print ( lFile + "" : "" ) ; Instantiate . main ( new String [ ] { ""-P"" , ADMIN_PWD , ""-N"" , pProcess , ""-f"" , lFile } ) ; } }"
"Returns the long value of the param, or def if not set <code> long getLong ( String param , long def ) { ","String val = get ( param ) ; try { return val == null ? def : Long . parseLong ( val ) ; } catch ( Exception ex ) { throw new SolrException ( SolrException . ErrorCode . BAD_REQUEST , ex . getMessage ( ) , ex ) ; } }"
Enables or disables the Back button. <code> void setBackButtonEnabled ( boolean enabled ) { ,"Boolean newValue = enabled ; Boolean oldValue = getBackButtonEnabled ( ) ; if ( ! newValue . equals ( oldValue ) ) { buttonEnabledHashmap . put ( BACK_BUTTON_ENABLED_PROPERTY , newValue ) ; firePropertyChange ( BACK_BUTTON_ENABLED_PROPERTY , oldValue , newValue ) ; } }"
Parse path path to native URI. <code> Uri parseSound ( String path ) { ,if ( path == null || path . isEmpty ( ) ) return Uri . EMPTY ; if ( path . equalsIgnoreCase ( DEFAULT_SOUND ) ) { return RingtoneManager . getDefaultUri ( RingtoneManager . TYPE_NOTIFICATION ) ; } return parse ( path ) ; }
Implementation Details: No support in bigquery to get the schema for the column. <code> String getSchemaName ( int column ) { ,"logger . debug ( ""Function call getSchemaName("" + column + "") will return empty string "" ) ; return """" ; }"
"Matches a value using a name and the value .toString() method <code> Collection < T > matchToString ( Collection < T > values , String name ) { ","List < T > result = new ArrayList < > ( ) ; for ( T value : values ) { if ( value == null ) { continue ; } if ( startsWithIgnoreCase ( value . toString ( ) , name ) ) { result . add ( value ) ; } } return result ; }"
"Returns the root to build configuration filenames including an needed file separators, abstracting difference of the file systems of development and device platforms. Note the root is never null. <code> String getConfigRoot ( int storageId ) { ",synchronized ( mutex ) { if ( configRoot == null || storageId != configRootId ) { configRoot = initConfigRoot ( storageId ) ; configRootId = storageId ; } return configRoot ; } }
Sets the cache usage stats to 0 <code> void resetCacheUsageStats ( ) { ,Long counter = m_cacheUseCounter . get ( ) ; if ( counter != null ) { m_cacheUseCounter . set ( Long . valueOf ( 0 ) ) ; } }
Calculates a hash code value for the object. Objects that are equal will also have the same hashcode. <code> int hashCode ( ) { ,int code = version ^ rounds ^ wordSize ; if ( iv != null ) { for ( int i = 0 ; i != iv . length ; i ++ ) { code ^= iv [ i ] << ( 8 * ( i % 4 ) ) ; } } return code ; }
"Called to open the enter amount interface. <code> void openEnterAmountInterface ( int interfaceId , int slot , int id ) { ",enterAmountInterfaceId = interfaceId ; enterAmountSlot = slot ; enterAmountId = id ; }
"Verifica si la llamada remota enviada debe ser excluida del control de session <code> boolean isExcluded ( String className , String methodName ) { ","String string = className + ""."" + methodName ; for ( int i = 0 ; i < excludeArray . length ; i ++ ) { if ( excludeArray [ i ] . equalsIgnoreCase ( string ) ) return true ; } return false ; }"
"Checks whether a string represents a valid integer number. <code> boolean isValidInteger ( String toCheck , NumberFieldAttributes attr ) { ","String groupingSeparator = attr . isGroupingUsed ( ) ? attr . getEscapedGroupingSeparator ( ) : """" ; String regExp = patternForNegatives ( attr . isNegativeAllowed ( ) ) + ""[0-9"" + groupingSeparator + ""]*"" ; return isWithinBoundsAndMatchesRegExp ( toCheck , regExp , attr ) ; }"
Creates a new MeasureVariations from the current array. <code> Optional < MeasureVariations > toMeasureVariations ( ) { ,if ( ! isAnySet ( ) ) { return Optional . absent ( ) ; } Double [ ] variations = new Double [ values . length ] ; for ( int i = 0 ; i < values . length ; i ++ ) { if ( values [ i ] . isSet ( ) ) { variations [ i ] = ( double ) values [ i ] . getValue ( ) ; } } return Optional . of ( new MeasureVariations ( variations ) ) ; }
"Handles ListView item clicks and invokes onClick (Object o). <code> void onItemClick ( AdapterView < ? > parent , View view , int position , long id ) { ","HashMap < String , Object > rowHashmap = mListContents . get ( position ) ; DataHolder dh = ( DataHolder ) rowHashmap . get ( from [ 0 ] ) ; onClick ( dh . data ) ; }"
Converts a space separated command line into a Command and executes it <code> int runCommandLine ( String command ) { ,"if ( command != null ) { List < String > commandArgs = ExecParseUtils . splitToWhiteSpaceSeparatedTokens ( command ) ; return config . runCommand ( getExecutor ( ) , baseDir , commandArgs . toArray ( new String [ commandArgs . size ( ) ] ) ) ; } else { return 0 ; } }"
"Return an Iterator over the renderer-type entries for the given component-family. If the specified componentFamily is not known to this RenderKit implementation, return an empty Iterator The default implementation of this method returns an empty Iterator <code> Iterator < String > getRendererTypes ( String componentFamily ) { ",Set < String > empty = Collections . emptySet ( ) ; return empty . iterator ( ) ; }
"Returns the customer with specified ID. If the customer does not exist, return null. <code> Customer getCustomer ( int id ) { ",for ( Customer c : customers ) { if ( c . getID ( ) == id ) { return c ; } } return null ; }
verifies that custom props have priority over the originals <code> void testPrefix ( ) { ,"tstamp . setPrefix ( ""prefix"" ) ; tstamp . execute ( ) ; String prop = project . getProperty ( ""prefix.DSTAMP"" ) ; assertNotNull ( prop ) ; }"
"If we succeeded on both stream in and out, reply back to the initiator. <code> void onSuccess ( StreamState state ) { ","logger . info ( String . format ( ""[repair #%s] streaming task succeed, returning response to %s"" , desc . sessionId , request . initiator ) ) ; MessagingService . instance ( ) . sendOneWay ( new SyncComplete ( desc , request . src , request . dst , true ) . createMessage ( ) , request . initiator ) ; }"
"Returns a new builder scoped to the slaves uniquely identified by the given slaveHosts. A builder can only be scoped to slaves once. <code> Builder bySlave ( String slaveHost , String ... slaveHosts ) { ",requireNonNull ( slaveHost ) ; return bySlave ( ImmutableSet . < String > builder ( ) . add ( slaveHost ) . add ( slaveHosts ) . build ( ) ) ; }
"Returns true if device ID, username and password have a non-null value <code> boolean loggedIn ( ) { ",ensurePreferencesLoaded ( ) ; return deviceID != null && username != null && password != null ; }
Utility method to convert the JMX constructor signature to our Flash friendly param type. <code> MBeanParameterInfo [ ] convertSignature ( javax . management . MBeanParameterInfo [ ] source ) { ,MBeanParameterInfo [ ] signature = new MBeanParameterInfo [ source . length ] ; for ( int i = 0 ; i < source . length ; i ++ ) { signature [ i ] = new MBeanParameterInfo ( source [ i ] ) ; } return signature ; }
Create a buffered reader to read from a UTF-8 text file. <code> void createReader ( String fileName ) { ,try { createReader ( new FileInputStream ( fileName ) ) ; } catch ( FileNotFoundException e ) { e . printStackTrace ( ) ; } }
Adds a new item to the map of removed catalog objects. <code> void addRemovedObject ( TCatalogObject catalogObject ) { ,"Preconditions . checkNotNull ( catalogObject ) ; removedCatalogObjects_ . put ( catalogObject . getCatalog_version ( ) , catalogObject ) ; }"
Returns a string representation of this object; useful for testing and debugging. <code> String toString ( ) { ,"StringBuilder sb = new StringBuilder ( ) ; sb . append ( ""{"" ) ; if ( getTrafficPolicy ( ) != null ) sb . append ( ""TrafficPolicy: "" + getTrafficPolicy ( ) ) ; sb . append ( ""}"" ) ; return sb . toString ( ) ; }"
"Links the src hdf name to the dest. <code> void setSymLink ( String hdf_name_src , String hdf_name_dest ) { ","if ( hdfptr == 0 ) { throw new NullPointerException ( ""HDF is closed."" ) ; } _setSymLink ( hdfptr , hdf_name_src , hdf_name_dest ) ; }"
"Has fields perform the transformations <code> void performFieldTransformations ( List < AccountingLineFieldRenderingTransformation > fieldTransformations , AccountingLine accountingLine , Map unconvertedValues ) { ","int count = 0 ; for ( AccountingLineViewField field : fields ) { for ( AccountingLineFieldRenderingTransformation transformation : fieldTransformations ) { transformation . transformField ( accountingLine , field . getField ( ) , field . getDefinition ( ) , unconvertedValues ) ; } } }"
Create a `ByteBuffer` with a given capacity. <code> ByteBuf newByteBuffer ( int capacity ) { ,ByteBuf newbb = Unpooled . buffer ( capacity ) ; newbb . order ( ByteOrder . LITTLE_ENDIAN ) ; return newbb ; }
The method calculates the factorial if n anyway 0. <code> void computedFactorialZero ( ) { ,"Factorial fact = new Factorial ( ) ; final int n = 0 ; final int totalFact = 1 ; int result = fact . mult ( n ) ; assertThat ( result , is ( totalFact ) ) ; }"
"Add a response trailer to the response. Multiple calls with the same key value result in multiple trailer lines with the same key identifier <code> void addResponseTrailer ( String key , String val ) { ","if ( rsptrailers == null ) rsptrailers = new MessageHeader ( ) ; rsptrailers . add ( key , val ) ; }"
Add attribute name attributeName to filter. <code> void addAttributeFilter ( String attributeName ) { ,if ( attributesFilter == null ) { attributesFilter = new ArrayList < > ( ) ; } attributesFilter . add ( attributeName ) ; }
"Add a member to the certificate by name and values. <code> void addMember ( String name , String [ ] values ) { ",Member m = new Member ( ) ; m . setName ( name ) ; for ( int i = 0 ; i < values . length ; i ++ ) { m . addValue ( values [ i ] ) ; } addMember ( m ) ; }
Gets all the encryption helpers. <code> List < IEncryptionHelper > getEncryptionHelpers ( ) { ,ArrayList < IEncryptionHelper > encryptions = new ArrayList < IEncryptionHelper > ( ) ; encryptions . add ( SimpleEncryptionHelper . getInstance ( ) ) ; if ( encryptionHelperMap != null ) { encryptions . addAll ( encryptionHelperMap . values ( ) ) ; } return encryptions ; }
Returns a new certification path validator for the specified algorithm. <code> CertPathValidator getInstance ( String algorithm ) { ,"if ( algorithm == null ) { throw new NullPointerException ( ) ; } Engine . SpiAndProvider sap = ENGINE . getInstance ( algorithm , null ) ; return new CertPathValidator ( ( CertPathValidatorSpi ) sap . spi , sap . provider , algorithm ) ; }"
"Calculate standard deviation of the data set. <code> double stdDev ( Collection < ? extends Number > collection , boolean sample ) { ","if ( sample ) { return aggregate ( collection , EAggregationStrategy . SAMPLE_STD_DEV ) ; } return aggregate ( collection , EAggregationStrategy . POPULATION_STD_DEV ) ; }"
Test to parse a variable. <code> void testVariable ( ) { ,"TemplateParser parser = new TemplateParser ( ""abc{var}|{ef|$|{g"" ) ; ReflectionAssert . assertReflectionEquals ( CompoundTemplateEntry . fromArray ( new StaticText ( ""abc"" ) , new Variable ( ""var"" ) , new StaticText ( ""{ef${g"" ) ) , parser . parse ( ) ) ; }"
"Sets the specified local span as the active span at the top of the stack, or if the specified span is null, the top of the stack is popped. <code> void setCurrentLocalSpan ( Span span ) { ",Deque < Span > deque = currentLocalSpan . get ( ) ; if ( span == null ) { deque . pollFirst ( ) ; } else { deque . addFirst ( span ) ; } }
Clone an integer array. <code> int [ ] cloneIntArray ( int array [ ] ) { ,"int i , n ; int [ ] arrayNew ; if ( array == null ) return null ; n = array . length ; arrayNew = new int [ n ] ; for ( i = 0 ; i < n ; i ++ ) { arrayNew [ i ] = array [ i ] ; } return arrayNew ; }"
Returns the transaction component is participating. <code> Transaction getTransaction ( ) { ,"try { return ConnectorRuntime . getRuntime ( ) . getTransaction ( ) ; } catch ( Exception ex ) { _logger . log ( Level . SEVERE , ""poolmgr.unexpected_exception"" , ex ) ; throw new PoolingException ( ex . toString ( ) , ex ) ; } }"
"Gets a string from the resource bundle and binds it with the given arguments. If the key is not found, return the key. <code> String getResourceString ( String key , Object [ ] args ) { ","try { return MessageFormat . format ( getResourceString ( key ) , args ) ; } catch ( MissingResourceException e ) { return key ; } catch ( NullPointerException e ) { return ""!"" + key + ""!"" ; } }"
"Copied from Spring 4.1 AbstractVersionStrategy <code> String addVersion ( String requestPath , String version ) { ","String baseFilename = StringUtils . stripFilenameExtension ( requestPath ) ; String extension = StringUtils . getFilenameExtension ( requestPath ) ; return baseFilename + version + ""."" + extension ; }"
Tests the reading of a full package <code> void testFullPackage ( ) { ,"final Set < Class < ? >> list = Classes . getClasses ( ""net.meisen.general.genmisc.test.two"" ) ; assertEquals ( list . size ( ) , 2 ) ; assertTrue ( ""Contains Placeholder1 class"" , list . contains ( Placeholder1 . class ) ) ; assertTrue ( ""Contains Placeholder2 class"" , list . contains ( Placeholder2 . class ) ) ; }"
"Creates the error list. <code> List < EditorError > createErrorList ( Editor < T > editor , T value , String messageKey ) { ","List < EditorError > result = new ArrayList < EditorError > ( ) ; result . add ( new BasicEditorError ( editor , value , getInvalidMessage ( messageKey ) ) ) ; return result ; }"
"Construct a decoder for a given CPU <code> X86Decoder fromXML ( Model cpu , ExecutionMode mode , String xmlPath , String dtdPath ) { ","DecodeTree < OpcodeSyntax > tree = createDecodeTree ( cpu , mode , xmlPath , dtdPath ) ; return new X86Decoder ( tree ) ; }"
get a Page object for page NO. <code> Page GetPage ( int pageno ) { ,"if ( hand_val == 0 ) return null ; int hand = getPage ( hand_val , pageno ) ; if ( hand == 0 ) return null ; Page page = new Page ( ) ; if ( page != null ) page . hand = hand ; return page ; }"
"Given the input, it is fed to the network and the output is returned. <code> DoubleMatrix feedForward ( DoubleMatrix input ) { ",inputLayer . setInput ( input ) ; layers . forEach ( NeuronLayer :: feedForward ) ; return outputLayer . getOutput ( ) ; }
Adds an wheighted edge from the source vertex to the destination vertex (source -> destination). <code> void addEdge ( UndirectedEdge edge ) { ,check ( edge . vertexA ( ) ) ; check ( edge . vertexB ( ) ) ; adj [ edge . vertexA ( ) ] . add ( edge ) ; adj [ edge . vertexB ( ) ] . add ( edge ) ; edges ++ ; }
Retourne l'url de serveur elasticSearch <code> String getElasticSearchUrl ( ) { ,"String value = System . getProperty ( ""context.param.elasticsearch.url"" ) ; if ( ! StringUtils . hasText ( value ) ) throw new NullPointerException ( ""param.elasticsearch.url cannot be null !"" ) ; return value ; }"
Information about one or more bundle tasks. <code> java . util . List < BundleTask > getBundleTasks ( ) { ,if ( bundleTasks == null ) { bundleTasks = new com . amazonaws . internal . ListWithAutoConstructFlag < BundleTask > ( ) ; bundleTasks . setAutoConstruct ( true ) ; } return bundleTasks ; }
Gets the value of the bw property. <code> boolean isBw ( ) { ,if ( bw == null ) { return false ; } else { return bw ; } }
"Calculate the number of neighbors from which the node have not received any message; If this method returns 1, that means the silent neighbor has shown up. <code> int flagOfSN ( ) { ",if ( ! nei . containsValue ( false ) ) { return 0 ; } int j = 0 ; for ( int i : nei . keySet ( ) ) { if ( ! nei . get ( i ) ) { j ++ ; } } return j ; }
"Adds certificate section, which contains an icon, a headline, a description and a label for certificate info link. <code> void addCertificateSection ( int enumeratedIconId , String headline , String description , String label ) { ","View section = addSection ( enumeratedIconId , headline , description ) ; assert mCertificateLayout == null ; mCertificateLayout = ( ViewGroup ) section . findViewById ( R . id . connection_info_text_layout ) ; if ( label != null && ! label . isEmpty ( ) ) { setCertificateViewer ( label ) ; } }"
Get the scale image data. Note this is the method that does the work so it might take some time to process. <code> int [ ] getScaledData ( ) { ,"for ( int x = 0 ; x < width ; x ++ ) { for ( int y = 0 ; y < height ; y ++ ) { process ( x , y ) ; } } return dstImage ; }"
Get the log info accumulated by this Timing instance <code> String [ ] getLogInfoLines ( ) { ,assert isEnabled ( ) ; return timeSupplier . getStrings ( ) ; }
Rather then return the actual items we return a list copies. This enforces our HWISessionManager by preventing the ability of the client(jsp) to create SessionItems. <code> ArrayList < HWISessionItem > findAllSessionItems ( ) { ,ArrayList < HWISessionItem > otherItems = new ArrayList < HWISessionItem > ( ) ; for ( HWIAuth a : items . keySet ( ) ) { otherItems . addAll ( items . get ( a ) ) ; } return otherItems ; }
Sets the type of the navigation message. <code> void setType ( byte value ) { ,"switch ( value ) { case TYPE_UNKNOWN : case TYPE_L1CA : case TYPE_L2CNAV : case TYPE_L5CNAV : case TYPE_CNAV2 : mType = value ; break ; default : Log . d ( TAG , ""Sanitizing invalid 'type': "" + value ) ; mType = TYPE_UNKNOWN ; break ; } }"
"Compresses a collection of files to a destination zip file <code> void compressFiles ( List < File > listFiles , String destZipFile ) { ","ZipOutputStream zos = new ZipOutputStream ( new FileOutputStream ( destZipFile ) ) ; for ( File file : listFiles ) { if ( file . isDirectory ( ) ) { addFolderToZip ( file , file . getName ( ) , zos ) ; } else { addFileToZip ( file , zos ) ; } } zos . flush ( ) ; zos . close ( ) ; }"
"Return the NodeId for a node. Returns NodeId.NodeDoesNotExist when the node is not found. Returns null when not a TDB-backed dataset. <code> NodeId getNodeId ( DatasetGraph ds , Node node ) { ","DatasetGraphTDB dsg = getDatasetGraphTDB ( ds ) ; return getNodeId ( dsg , node ) ; }"
Confirm that cloning works. <code> void testCloning ( ) { ,HighLowRenderer r1 = new HighLowRenderer ( ) ; r1 . setCloseTickPaint ( Color . green ) ; HighLowRenderer r2 = ( HighLowRenderer ) r1 . clone ( ) ; assertTrue ( r1 != r2 ) ; assertTrue ( r1 . getClass ( ) == r2 . getClass ( ) ) ; assertTrue ( r1 . equals ( r2 ) ) ; }
Returns object currently pointed by iterator without changing iterator position. <code> T getCurrent ( ) { ,"if ( index == 0 ) throw new NoSuchElementException ( ""No element found."" ) ; if ( index - 1 >= array . length ) throw new NoSuchElementException ( ""No element found."" ) ; return array [ index - 1 ] ; }"
This will set the end page. <code> void setEndPage ( int end ) { ,"if ( end <= 0 ) { throw new RuntimeException ( ""Error split must be at least one page."" ) ; } endPage = end ; }"
Gets the value of the magnitude property. <code> short getMagnitude ( ) { ,if ( magnitude == null ) { return ( ( short ) 38 ) ; } else { return magnitude ; } }
This method returns the set of properties having the supplied property name. <code> Set < Property > getProperties ( String name ) { ,Set < Property > ret = new HashSet < Property > ( ) ; for ( Property property : allProperties ( ) ) { if ( property . getName ( ) . equals ( name ) ) { ret . add ( property ) ; } } return ret ; }
Returns an HTML string that can be used in as hover for a date field. It formats the date in the FULL format. <code> String getHoverDateString ( Date date ) { ,"if ( date != null ) { StringBuilder sb = new StringBuilder ( ""<p style='width:300px'>"" ) ; sb . append ( format ( date , DATE_TIME_FORMAT_FULL ) ) ; sb . append ( ""</p>"" ) ; return sb . toString ( ) ; } else { return null ; } }"
Enter a cache call. <code> boolean enterIfNotStopped ( ) { ,"onEnter ( ) ; rwLock . readLock ( ) . lock ( ) ; return checkState ( true , false ) ; }"
Return the number methods to inline. <code> int getNumberOfTargets ( ) { ,if ( targets == null ) { return 0 ; } return targets . length ; }
"query user data from database <code> Cursor userQuery ( Context context , String username ) { ","String [ ] selectionArgument = { username } ; return context . getContentResolver ( ) . query ( BabyLogContract . User . CONTENT_URI , BabyLogContract . User . Query . PROJECTION , BabyLogContract . User . USER_NAME + ""=?"" , selectionArgument , BabyLogContract . User . USER_NAME ) ; }"
"Creates and registers a new corner pin keystone surface. <code> CornerPinSurface createCornerPinSurface ( int w , int h , int res ) { ","CornerPinSurface s = new CornerPinSurface ( parent , w , h , res ) ; surfaces . add ( s ) ; return s ; }"
"Sets a column constraint for this rule. If set, the rule's token will only be returned if the pattern is detected starting at the specified column. If the column is smaller then 0, the column constraint is considered removed. <code> void setColumnConstraint ( int column ) { ",if ( column < 0 ) column = UNDEFINED ; fColumn = column ; }
Tests that a null context results in an NPE as per EL Javadoc. <code> void testSetValue01 ( ) { ,"ListELResolver resolver = new ListELResolver ( ) ; resolver . setValue ( null , new Object ( ) , new Object ( ) , new Object ( ) ) ; }"
removes session for user session <code> void removeUserSession ( Long sessionId ) { ,UserSessionsOutput userSessionsOutput = userSessionsOutputMap . get ( sessionId ) ; if ( userSessionsOutput != null ) { userSessionsOutput . getSessionOutputMap ( ) . clear ( ) ; } userSessionsOutputMap . remove ( sessionId ) ; }
local variables cannot be intermingled <code> void testLocalVars ( ) { ,int i = 10 ; int j = 10 ; int k = 10 ; int a = 10 ; int b = 10 ; int c = 10 ; i *= 10 ; }
"Creates, and returns, a new ORB instance. <code> Object createOrb ( String [ ] args , Properties props ) { ","if ( proxy == null ) throw new IOException ( ""ORB initialization failed, RMI/IIOP not available"" ) ; return proxy . createOrb ( args , props ) ; }"
Return a new Size with the provided int value <code> NativeSize [ ] toNS ( int [ ] ints ) { ,if ( ints == null ) return null ; int n = ints . length ; NativeSize [ ] nls = new NativeSize [ n ] ; for ( int i = 0 ; i < n ; i ++ ) nls [ i ] = toNS ( ints [ i ] ) ; return nls ; }
Get the SWCs that are forced to load RSLs as a set of paths. <code> Set < String > getForceRslsPaths ( ) { ,if ( forceRsls == null ) { return Collections . emptySet ( ) ; } Set < String > rslPaths = new HashSet < String > ( ) ; for ( VirtualFile file : forceRsls ) { rslPaths . add ( file . getName ( ) ) ; } return rslPaths ; }
"Reads an entire class from jimple, creates the Soot objects & returns it. <code> SootClass createSootClass ( ) { ",Walker w = new Walker ( SootResolver . v ( ) ) ; mTree . apply ( w ) ; return w . getSootClass ( ) ; }
Inserts N random Strings and dummy counts into a YearlyRecord. <code> void testPutHelper ( int N ) { ,"YearlyRecord yr = new YearlyRecord ( ) ; for ( int i = 0 ; i < N ; i += 1 ) { String rs = randomString ( ) ; yr . put ( rs , StdRandom . uniform ( 50 ) ) ; } }"
Retrieve a flattened definition for a given port type name. <code> Definition getDefinition ( QName portType ) { ,"Definition def = ( Definition ) _flattened . get ( portType ) ; if ( def == null ) { def = flattenDefinition ( portType ) ; _flattened . put ( portType , def ) ; } return def ; }"
Build the complete IAIKException to message code mapping. <code> void registerMessages ( ) { ,"int i ; for ( i = 0 ; i < MESSAGES . length ; i ++ ) { registerMessage ( ( Class ) MESSAGES [ i ] [ 0 ] , ( String ) MESSAGES [ i ] [ 1 ] , ( Class ) MESSAGES [ i ] [ 2 ] ) ; } }"
shows import wizard dialog selecting given argument in treeview and clicks next button <code> SWTBot newExport ( IExport export ) { ,"bot . menu ( ""File"" ) . menu ( ""Export..."" ) . click ( ) ; SWTBotShell shell = bot . shell ( ""Export"" ) ; shell . activate ( ) ; selectTreeNode ( export ) ; bot . button ( ""Next >"" ) . click ( ) ; return bot ; }"
"Navigates to page which is controlled by a service worker and uses the passed in Web Manifest URL. <code> void navigateToPageWithServiceWorkerAndManifest ( EmbeddedTestServer testServer , Tab tab , String manifestUrl ) { ","TabLoadObserver observer = new TabLoadObserver ( tab , TITLE , null ) ; observer . fullyLoadUrl ( urlOfPageWithServiceWorkerAndManifest ( testServer , manifestUrl ) ) ; }"
Check and cache whether the currect dialect is HSQL or not. This is needed because some queries are different if in the hsql world as opposed to the mysql/postgres world <code> boolean isHSQLDialect ( SessionFactory sessionFactory ) { ,if ( isHSQLDialect == null ) { isHSQLDialect = HSQLDialect . class . getName ( ) . equals ( getDialect ( sessionFactory ) . getClass ( ) . getName ( ) ) ; } return isHSQLDialect ; }
Load static properties from current replicator.properties location. <code> void loadStaticProperties ( ) { ,"logger . debug ( ""Reading static properties file: "" + staticPropertiesFile . getAbsolutePath ( ) ) ; staticProperties = loadProperties ( staticPropertiesFile ) ; }"
Removes points from list if they are not on the grid. <code> List < Point > sanitizePointList ( List < Point > points ) { ,for ( Iterator < Point > candidate = points . iterator ( ) ; candidate . hasNext ( ) ; ) { if ( ! isPointOnGrid ( candidate . next ( ) ) ) { candidate . remove ( ) ; } } return points ; }
Inserts the given entities in the database using a transaction. <code> void insertInTx ( ArrayList < V > entities ) { ,"SQLiteStatement stmt = statements . getInsertStatement ( ) ; executeInsertInTx ( stmt , entities ) ; }"
Returns the period required to end the milestone window with the given name. <code> Period getWindowEnd ( WindowName windowName ) { ,MutablePeriod period = new MutablePeriod ( ) ; for ( MilestoneWindow window : milestoneWindows ) { period . add ( window . getPeriod ( ) ) ; if ( window . getName ( ) . equals ( windowName ) ) { break ; } } return period . toPeriod ( ) ; }
getInput Gets the input from the file. <code> boolean getInput ( String filePath ) { ,"File file = new File ( filePath ) ; BufferedReader buffer = new BufferedReader ( new FileReader ( file ) ) ; String line ; while ( ( line = buffer . readLine ( ) ) != null ) { if ( ! line . trim ( ) . equals ( """" ) ) { inputList . add ( line . trim ( ) ) ; } } buffer . close ( ) ; return true ; }"
JSONArray is built the first time the method is called. <code> JSONArray asJSONArray ( ) { ,if ( responseAsJSONArray == null ) { responseAsJSONArray = new JSONArray ( asString ( ) ) ; } return responseAsJSONArray ; }
Returns an iterator to the list of the views in the pool. <code> Iterator < V > poolViewIterator ( ) { ,if ( mPool != null ) { return mPool . iterator ( ) ; } return null ; }
Get the X/Y offset for texture atlases <code> float getTextureXOffset ( ) { ,int column = textureIndex % model . getTexture ( ) . getNumberOfRows ( ) ; return ( float ) column / ( float ) model . getTexture ( ) . getNumberOfRows ( ) ; }
This method will be used our Reader implementation to continually retrieve text messages. <code> CharSequence readText ( ) { ,_messageReader . next ( ) ; return _messageReader . getText ( ) ; }
Returns a DatePanel customized. <code> DatePanel createDatePanel ( ) { ,DatePanel retorno = new DatePanel ( ) ; setter . customize ( retorno ) ; return retorno ; }
Returns a string representation of this object; useful for testing and debugging. <code> String toString ( ) { ,"StringBuilder sb = new StringBuilder ( ) ; sb . append ( ""{"" ) ; if ( getSpotInstanceRequestId ( ) != null ) sb . append ( ""SpotInstanceRequestId: "" + getSpotInstanceRequestId ( ) + "","" ) ; if ( getState ( ) != null ) sb . append ( ""State: "" + getState ( ) ) ; sb . append ( ""}"" ) ; return sb . toString ( ) ; }"
"Based on the rethrow parameter, either rethrows the supplied exception or logs the provided message at the given level. <code> void conditionallyReThrow ( T e , boolean rethrow , Logger logger , String m , Level level ) { ","if ( rethrow ) { throw e ; } else { logger . log ( level , m , e ) ; } }"
"prints a line of a file with marked position. <code> void showPosition ( final File file , final int line , final int column ) { ","try { final String ln = getLine ( file , line ) ; if ( ln != null ) { err ( ln ) ; if ( column < 0 ) return ; String t = ""^"" ; for ( int i = 0 ; i < column ; i ++ ) t = "" "" + t ; err ( t ) ; } } catch ( final IOException e ) { } }"
returns an XML string of an object graph rooted at the object toArchive <code> String xmlForObject ( Object toArchive ) { ,"String name = toArchive . getClass ( ) . getName ( ) ; return WOXMLCoder . coder ( ) . encodeRootObjectForKey ( toArchive , name ) ; }"
Gets the request corresponding to this request code and removes it from the pending requests <code> Request getAndRemove ( int requestCode ) { ,Request result = requests . get ( requestCode ) ; requests . remove ( requestCode ) ; return result ; }
"Creates message for invalid select input <code> FacesMessage createMessage ( String value , String label , AbstractSelectComponent select , FacesContext facesContext ) { ","String componentLabel = MessageUtil . getLabel ( facesContext , select ) ; MessageFactory messageFactory = ServiceTracker . getService ( MessageFactory . class ) ; return messageFactory . createMessage ( facesContext , FacesMessage . SEVERITY_ERROR , FacesMessages . UISELECTONE_INVALID , componentLabel ) ; }"
"Helper to encode strategies using an existing decoding context; could be merged to Tlv0_1_1WireFormat.java. <code> void encodeStrategy ( final Name strategy , final TlvEncoder encoder ) { ","int strategySaveLength = encoder . getLength ( ) ; encodeName ( strategy , encoder ) ; encoder . writeTypeAndLength ( Tlv . ControlParameters_Strategy , encoder . getLength ( ) - strategySaveLength ) ; }"
"Register a task that checks that the value of the property at this key matches a pattern. Task parameters are not validated until the task is running. <code> String propertyMatches ( String resourceName , String key , String pattern ) { ","CheckResourceProperty task = new CheckResourceProperty ( ) ; task . setName ( resourceName ) ; task . setProperty ( key ) ; task . setPattern ( pattern ) ; SelfDiagnose . register ( task , DiagnoseUtil . detectRequestorClass ( ) . getName ( ) ) ; return key ; }"
"Check if position found horse on position and end application, else mark visited and move on <code> void checkPosition ( int nP , int mP ) { ","if ( isValidPosition ( nP , mP ) ) { char c = paddock [ nP ] [ mP ] ; if ( ! isPositionVisited ( c ) ) { if ( isHorseFound ( c ) ) { printAndExit ( ""JA"" ) ; } else if ( isSpotFree ( c ) ) { markPositionVisited ( nP , mP ) ; availablePositions . add ( posToLong ( nP , mP ) ) ; } } } }"
"Creates a new complex number consisting of the given real and imaginary part. <code> cuComplex cuCmplx ( float r , float i ) { ",cuComplex res = new cuComplex ( ) ; res . x = r ; res . y = i ; return res ; }
Gets a list of all emoticons that don't have an emoteset associated with them. <code> HashSet < Emoticon > getEmoticons ( ) { ,HashSet < Emoticon > result = emoticons . get ( null ) ; if ( result == null ) { result = new HashSet < > ( ) ; } return result ; }
"while a session is reserved, it cannot be canceled or removed <code> Session reserveSession ( long sessionId ) { ",Session session = sessions . get ( sessionId ) ; if ( session != null ) { if ( session . reserved ) throw new IllegalStateException ( ) ; session . reserved = true ; } return session ; }
"Attempt to do the same with the updated scheduling method. <code> TaskWrapper tryUpdatedVersion ( final Plugin plugin , final BukkitScheduler scheduler , Runnable runnable , long firstDelay , long repeatDelay ) { ","final BukkitTask task = scheduler . runTaskTimerAsynchronously ( plugin , runnable , firstDelay , repeatDelay ) ; return new TaskWrapper ( ) { @ Override public void cancel ( ) { task . cancel ( ) ; } } ; }"
Return map of the hostname if available <code> String getHostMap ( String hostName ) { ,"if ( hostsMapFile == null ) return hostName ; return hostsMap . getProperty ( hostName , hostName ) ; }"
"Returns the index of the first Owner for the given thread, or -1 if none. <code> int indexOf ( Thread thread ) { ",Iterator i = waiters . iterator ( ) ; for ( int index = 0 ; i . hasNext ( ) ; index += 1 ) { Owner owner = ( Owner ) i . next ( ) ; if ( owner . thread == thread ) { return index ; } } return - 1 ; }
Adds a new Chrome extension to install on browser startup. Each string data should specify a Base64 encoded string of packed Chrome extension (CRX file). <code> void addEncodedExtensions ( List < String > encoded ) { ,for ( String extension : encoded ) { checkNotNull ( extension ) ; } extensions . addAll ( encoded ) ; }
Add to the total cumulative committed page count. <code> void addToCommitted ( int pages ) { ,classLock . acquire ( ) ; cumulativeCommitted += pages ; classLock . release ( ) ; }
"Getting the name of domain property to sort on <code> String getProperty ( final DomainProperty domainProperty , final DocumentTypeDTO documentTypeDTO ) { ",String property = null ; if ( domainProperty . getProperty ( ) . equals ( DOCUMENT_TYPE_NAME ) ) { property = documentTypeDTO . getName ( ) ; } else if ( domainProperty . getProperty ( ) . equals ( DOCUMENT_TYPE_DESCRIPTION ) ) { property = documentTypeDTO . getDescription ( ) ; } return property ; }
Gives current selective suspend timeout value for this device. <code> int getSelectiveSuspendTimeout ( ) { ,"if ( ""---"" . equals ( selectiveSuspendTimeoutValue ) ) { return 0 ; } return ( int ) SerialComUtil . hexStrToLongNumber ( selectiveSuspendTimeoutValue ) ; }"
"Returns the index of the parent of the given factor that is equal to the given IndexedParent, or -1 if the given IndexedParent is not equal to any parent. <code> int getIndex ( int factor , IndexedParent parent ) { ",for ( int i = 0 ; i < parents [ factor ] . length ; i ++ ) { if ( parent . equals ( parents [ factor ] [ i ] ) ) { return i ; } } return - 1 ; }
Get the declared methods <code> Method [ ] getDeclaredMethods ( final Class < ? > c ) { ,if ( System . getSecurityManager ( ) == null ) return c . getDeclaredMethods ( ) ; return AccessController . doPrivileged ( new PrivilegedAction < Method [ ] > ( ) { public Method [ ] run ( ) { return c . getDeclaredMethods ( ) ; } } ) ; }
"Create hash for a key <code> String getKeyHash ( @ Nonnull PublicKey pubkey , @ Nonnull String algorithm ) { ",try { MessageDigest md = MessageDigest . getInstance ( algorithm ) ; md . update ( pubkey . getEncoded ( ) ) ; return Base64 . getEncoder ( ) . encodeToString ( md . digest ( ) ) ; } catch ( NoSuchAlgorithmException e ) { Log . getLog ( ) . warn ( e ) ; } return null ; }
Returns a string representation of this object; useful for testing and debugging. <code> String toString ( ) { ,"StringBuilder sb = new StringBuilder ( ) ; sb . append ( ""{"" ) ; if ( getAssessmentTargetArns ( ) != null ) sb . append ( ""AssessmentTargetArns: "" + getAssessmentTargetArns ( ) + "","" ) ; if ( getNextToken ( ) != null ) sb . append ( ""NextToken: "" + getNextToken ( ) ) ; sb . append ( ""}"" ) ; return sb . toString ( ) ; }"
Encodes and writes pixel data <code> void writePixels ( ) { ,"LZWEncoder encoder = new LZWEncoder ( width , height , indexedPixels , colorDepth ) ; encoder . encode ( out ) ; }"
Returns any list of the last SP contacts for each unique callsign <code> ArrayList < Qso > getLastSpContacts ( ) { ,ArrayList < Qso > qsos = new ArrayList < > ( 0 ) ; ArrayList < String > callsigns = getUniqueCallsigns ( ) ; Qso qso ; for ( String call : callsigns ) { qso = getLastSpQso ( call ) ; if ( qso != null ) { qsos . add ( qso ) ; } } return qsos ; }
Get the session id from the response variables. <code> Integer getSessionId ( ) { ,"if ( hash . containsKey ( ""session-id"" ) ) { Integer i = ( Integer ) hash . get ( ""session-id"" ) ; return i . intValue ( ) ; } else { return null ; } }"
"Returns an array containing all of the values in this list in proper sequence (from first to last value). If the list fits in the specified array, it is returned therein. Otherwise, a new array is allocated with the size of this list. <code> double [ ] toArray ( double [ ] dest ) { ","if ( dest == null || dest . length < size ( ) ) { dest = new double [ size ] ; } System . arraycopy ( data , 0 , dest , 0 , size ) ; return dest ; }"
This method determines if a given word is in this Dictionary. implemented from interface <code> boolean findWord ( String word ) { ,"boolean result = findWord ( word , 0 , words . size ( ) - 1 ) ; return result ; }"
Returns a string representation of this object; useful for testing and debugging. <code> String toString ( ) { ,"StringBuilder sb = new StringBuilder ( ) ; sb . append ( ""{"" ) ; if ( getArn ( ) != null ) sb . append ( ""Arn: "" + getArn ( ) + "","" ) ; if ( getReason ( ) != null ) sb . append ( ""Reason: "" + getReason ( ) ) ; sb . append ( ""}"" ) ; return sb . toString ( ) ; }"
"Example of deleting multiple entities. <code> void multipleDeleteEntities ( String keyName1 , String keyName2 ) { ","Datastore datastore = transaction . getDatastore ( ) ; Key key1 = datastore . newKeyFactory ( ) . setKind ( ""MyKind"" ) . newKey ( keyName1 ) ; Key key2 = datastore . newKeyFactory ( ) . setKind ( ""MyKind"" ) . newKey ( keyName2 ) ; transaction . delete ( key1 , key2 ) ; transaction . commit ( ) ; }"
Converts a collection of strings into a collection of URIs. <code> List < URI > stringCollectionAsURIs ( Collection < String > names ) { ,"List < URI > uris = new ArrayList < URI > ( names . size ( ) ) ; for ( String name : names ) { try { uris . add ( stringAsURI ( name ) ) ; } catch ( IOException e ) { LOG . error ( ""Error while processing URI: "" + name , e ) ; } } return uris ; }"
"Creates the nine patch. <code> NinePatch createNinePatch ( URL fileUrl , boolean convert ) { ","try { return NinePatch . load ( fileUrl , convert ) ; } catch ( Exception e ) { e . printStackTrace ( ) ; return null ; } }"
The key method registered with Processing <code> void keyEvent ( KeyEvent event ) { ,if ( isGWindow ) ( ( GWinApplet ) app ) . keyEvent ( event ) ; for ( GAbstractControl control : windowControls ) { if ( ( control . registeredMethods & KEY_METHOD ) == KEY_METHOD ) control . keyEvent ( event ) ; } }
"Test if a MotionEvent with the given start and end offsets can be considered as a ""click"". <code> boolean isClick ( MotionEvent upEvent , float xDown , float yDown , float xUp , float yUp ) { ","if ( upEvent == null ) return false ; long time = upEvent . getEventTime ( ) - upEvent . getDownTime ( ) ; float distance = PointF . length ( xDown - xUp , yDown - yUp ) ; return time < MAX_CLICK_TIME && distance < MAX_CLICK_DISTANCE ; }"
Returns Grantee for the for the named Role <code> Grantee getGrantee ( String name ) { ,"Trace . doAssert ( exists ( name ) , ""No role '"" + name + ""'"" ) ; Grantee g = ( Grantee ) roleMap . get ( name ) ; Trace . doAssert ( g != null , Trace . getMessage ( Trace . MISSING_GRANTEE ) + "": "" + name ) ; return g ; }"
Return the set of notes applicable for this state / backedge pair. <code> Set < MatcherAndAlert > getNotes ( Edge edge ) { ,if ( edge instanceof PartialStreetEdge ) { edge = ( ( PartialStreetEdge ) edge ) . getParentEdge ( ) ; } Set < MatcherAndAlert > maas = notesForEdge . get ( edge ) ; if ( maas == null || maas . isEmpty ( ) ) { return null ; } return maas ; }
"Arranges the block with a range constraint on the width, and no constraint on the height. <code> Size2D arrangeRN ( BlockContainer container , Graphics2D g2 , RectangleConstraint constraint ) { ","Size2D s1 = arrangeNN ( container , g2 ) ; if ( constraint . getWidthRange ( ) . contains ( s1 . width ) ) { return s1 ; } else { RectangleConstraint c = constraint . toFixedWidth ( constraint . getWidthRange ( ) . getUpperBound ( ) ) ; return arrangeFN ( container , g2 , c ) ; } }"
Overridden hashCode() to produce the hash code of the new address This method is adopted from hashCode() method in the course text book Effective Java 2nd edition <code> int hashCode ( ) { ,int hash = 17 ; hash = 31 * hash + street . hashCode ( ) ; hash = 31 * hash + city . hashCode ( ) ; hash = 31 * hash + state . hashCode ( ) ; hash = 31 * hash + zip . hashCode ( ) ; hash = 31 * hash + country . hashCode ( ) ; return hash ; }
"Returns the child node for the given named path, lazily creating one if it does not yet exist <code> DestinationMapNode getChildOrCreate ( String path ) { ","DestinationMapNode answer = ( DestinationMapNode ) childNodes . get ( path ) ; if ( answer == null ) { answer = createChildNode ( ) ; answer . path = path ; childNodes . put ( path , answer ) ; } return answer ; }"
Detects common bzip2 suffixes in the given filename. <code> boolean isCompressedFilename ( String filename ) { ,String lower = filename . toLowerCase ( Locale . ENGLISH ) ; int n = lower . length ( ) ; for ( int i = 3 ; i <= 5 && i < n ; i ++ ) { if ( uncompressSuffix . containsKey ( lower . substring ( n - i ) ) ) { return true ; } } return false ; }
Gets the value of the serverNumberFormat property. <code> boolean isServerNumberFormat ( ) { ,if ( serverNumberFormat == null ) { return true ; } else { return serverNumberFormat ; } }
Ensures that the interference graph is appropriately sized. <code> void ensureCapacity ( int size ) { ,int countRegs = interference . size ( ) ; interference . ensureCapacity ( size ) ; for ( int i = countRegs ; i < size ; i ++ ) { interference . add ( SetFactory . makeInterferenceSet ( size ) ) ; } }
Gets the chip type. <code> String getChipType ( ) { ,if ( gcosHeader != null ) { return gcosHeader . getChipType ( ) ; } else if ( calvinData != null ) { return calvinData . getArrayType ( ) ; } return null ; }
"Extrai a chave privada do arquivo. <code> PrivateKey getPrivateKeyFromFile ( File cert , String alias , String password ) { ","KeyStore ks = KeyStore . getInstance ( ""JKS"" ) ; char [ ] pwd = password . toCharArray ( ) ; InputStream is = new FileInputStream ( cert ) ; ks . load ( is , pwd ) ; is . close ( ) ; Key key = ks . getKey ( alias , pwd ) ; if ( key instanceof PrivateKey ) { return ( PrivateKey ) key ; } return null ; }"
Modifie la liste des Form <code> void updateFormulaireCand ( FormulaireCand formulaireCand ) { ,removeFormulaireCand ( formulaireCand ) ; getFormulaireCands ( ) . add ( formulaireCand ) ; }
"Sets the minimum and maximum scale factors for the x-axis <code> void setMinMaxScaleX ( float minScaleX , float maxScaleX ) { ","if ( minScaleX < 1f ) minScaleX = 1f ; mMinScaleX = minScaleX ; mMaxScaleX = maxScaleX ; limitTransAndScale ( mMatrixTouch , mContentRect ) ; }"
Obtain an OTMConnection for the given persistence broker key <code> OTMConnection acquireConnection ( PBKey pbKey ) { ,TransactionFactory txFactory = getTransactionFactory ( ) ; return txFactory . acquireConnection ( pbKey ) ; }
"play specified card for a trick, returns whether the card was played (must play same suit as 1st card in trick if possible) <code> boolean playTrick ( int cardIndex , Deck trick ) { ","if ( ! isValidPlay ( cardIndex , trick ) ) { return false ; } hand . setAllFaceUp ( true ) ; hand . moveCardTo ( trick , cardIndex ) ; activePlayer ++ ; return true ; }"
Get the user name from a principal <code> String getPrincipalWithoutRealm ( final String principal ) { ,"int i = principal . indexOf ( ""@"" ) ; return ( i > - 1 ) ? principal . substring ( 0 , i ) : principal ; }"
"register the service to a specific path <code> void registerService ( String path , String data ) { ","try { zkClient . create ( path , data . getBytes ( ) , ZooDefs . Ids . OPEN_ACL_UNSAFE , CreateMode . EPHEMERAL ) ; } catch ( KeeperException ke ) { throw new IOException ( ke ) ; } }"
Test default state of tree entry <code> void defaultState ( ) { ,"TreeEntry entry = new TreeEntry ( ) ; assertNull ( entry . getMode ( ) ) ; assertNull ( entry . getPath ( ) ) ; assertNull ( entry . getSha ( ) ) ; assertEquals ( 0 , entry . getSize ( ) ) ; assertNull ( entry . getType ( ) ) ; assertNull ( entry . getUrl ( ) ) ; }"
"Method to determine if the scroll down button for this view is enabled or disabled, based on how big the list is <code> boolean getParticipantScrollDownDisabled ( ) { ",if ( presentation != null ) { if ( ( presentation . getParticipantsSize ( ) < VIEW_SIZE ) || ( position == ( presentation . getParticipantsSize ( ) - VIEW_SIZE ) ) ) { return true ; } } return false ; }
"Returns files in a directory, sorted. Sorts alphabetically, case-insensitively, and puts subdirectories first. <code> File [ ] listFilesSorted ( File dir ) { ","File [ ] files = dir . listFiles ( ) ; Arrays . sort ( files , LIST_FILES_COMPARATOR ) ; return files ; }"
"Copies a file to the local file system given its path. <code> String copyFile ( Configuration conf , Path inFile ) { ","FileSystem fs = inFile . getFileSystem ( conf ) ; return copyFile ( conf , fs . getFileStatus ( inFile ) ) ; }"
Returns an instance of GatewayManager for the given connection. If no instance for this connection exists a new one is created and stored in a Map. <code> GatewayManager getInstanceFor ( Connection connection ) { ,"synchronized ( instances ) { if ( instances . containsKey ( connection ) ) { return instances . get ( connection ) ; } GatewayManager instance = new GatewayManager ( connection ) ; instances . put ( connection , instance ) ; return instance ; } }"
Sending request to the server and pass to caller its raw contents in bytes as it received from server. <code> byte [ ] sendAndReadBytes ( ) { ,"byte [ ] buffer = new byte [ 8192 ] ; InputStream is = con . getInputStream ( ) ; ByteArrayOutputStream output = new ByteArrayOutputStream ( ) ; for ( int bytesRead ; ( bytesRead = is . read ( buffer ) ) >= 0 ; ) output . write ( buffer , 0 , bytesRead ) ; return output . toByteArray ( ) ; }"
Converts CMIS value of boolean type into JCR value of boolean type. <code> Boolean [ ] asBooleans ( List < Object > values ) { ,ValueFactory < Boolean > factory = valueFactories . getBooleanFactory ( ) ; Boolean [ ] res = new Boolean [ values . size ( ) ] ; for ( int i = 0 ; i < res . length ; i ++ ) { res [ i ] = factory . create ( values . get ( i ) ) ; } return res ; }
Create a client for making Authorization Code Requests <code> AuthorizationClient authorizationClient ( ) { ,clear ( ) ; return new AuthorizationClient ( ) ; }
Print a search path in readable form <code> String printPath ( List < GeographicPoint > path ) { ,"String ret = """" ; for ( GeographicPoint point : path ) { ret += point + "" "" ; } return ret ; }"
"Sort a block recursively using merge sort. <code> void mergeSort ( int from , int to ) { ","if ( to - from < INSERTION_SORT_SIZE ) { binaryInsertionSort ( from , to ) ; return ; } int m = ( from + to ) >>> 1 ; mergeSort ( from , m ) ; mergeSort ( m + 1 , to ) ; merge ( from , m + 1 , to ) ; }"
"Method to retrieve a particular attribute from an XML node (attributes are specified inside XML tags. <code> String readStringType ( Element parentElement , String elementName , String typeName ) { ",NodeList nodeList = parentElement . getElementsByTagName ( elementName ) ; if ( nodeList . getLength ( ) < 1 ) return null ; Element element = ( Element ) nodeList . item ( 0 ) ; return element . getAttribute ( typeName ) ; }
"Opens a function in a new graph window. <code> void showFunction ( final CGraphWindow parent , final IViewContainer container , final INaviFunction function ) { ","final INaviModule module = function . getModule ( ) ; final INaviView view = module . getContent ( ) . getViewContainer ( ) . getView ( function ) ; CViewOpener . showView ( parent , container , view , parent ) ; }"
Update a JComboBox with the latest schedules. <code> void updateComboBox ( JComboBox < Schedule > box ) { ,box . removeAllItems ( ) ; box . addItem ( null ) ; for ( Schedule schedule : getSchedulesByNameList ( ) ) { box . addItem ( schedule ) ; } }
"Builds a batch-fetch capable loader based on the given persister, lock-options, etc. <code> UniqueEntityLoader buildLoader ( OuterJoinLoadable persister , int batchSize , LockOptions lockOptions , SessionFactoryImplementor factory , LoadQueryInfluencers influencers ) { ","if ( batchSize <= 1 ) { return buildNonBatchingLoader ( persister , lockOptions , factory , influencers ) ; } return buildBatchingLoader ( persister , batchSize , lockOptions , factory , influencers ) ; }"
Show a passive focus animation at the center of the active area. This will likely be different than the view bounds due to varying image ratios and dimensions. <code> void showPassiveFocusAtCenter ( ) { ,"mMainThread . execute ( new Runnable ( ) { @ Override public void run ( ) { Log . v ( TAG , ""Running showPassiveFocusAtCenter()"" ) ; mFocusRing . startPassiveFocus ( ) ; mFocusRing . centerFocusLocation ( ) ; } } ) ; }"
Checks if the class is available on the current thread's context class loader. <code> boolean isClassAvailable ( String s ) { ,final ClassLoader classLoader = Thread . currentThread ( ) . getContextClassLoader ( ) ; try { classLoader . loadClass ( s ) ; return true ; } catch ( ClassNotFoundException e ) { return false ; } }
Reads the current label. <code> int readLabel ( ) { ,"if ( labels == null ) { throw new IllegalStateException ( ""labels file not initialized."" ) ; } return labels . readLabel ( ) ; }"
Gets the value of the type property. <code> TypeType getType ( ) { ,if ( type == null ) { return TypeType . TITLE ; } else { return type ; } }
"Return an existing counter if (a) A counter already exist with the same metric name. Otherwise, creates a new meter and registers <code> Counter newCounter ( MetricsRegistry registry , MetricName name ) { ",if ( registry != null ) { return registry . newCounter ( name ) ; } else { return Metrics . newCounter ( name ) ; } }
"Check if the specified timestamp is within this TimeRange. Returns true if within interval [minStamp, maxStamp), false if not. <code> boolean withinOrAfterTimeRange ( long timestamp ) { ",if ( allTime ) return true ; return ( timestamp >= minStamp ) ; }
"Add attribute to attribute map. <code> void putAttribute ( final String name , final byte [ ] val ) { ","if ( attrs == null ) attrs = new HashMap < > ( ) ; attrs . put ( name , val ) ; }"
This function will return the tag's ID and its children IDs. Its used to determine if a tag is assigned to an entity. Tag is determined as assigned to an entity if the entity is assigned to the tag or to one of its children. <code> String GetTagIdAndChildrenIds ( String tagName ) { ,Tags tag = GetTagByName ( tagName ) ; StringBuilder sb = tag . getTagIdAndChildrenIds ( ) ; return sb . toString ( ) ; }
Update the buttons state <code> void updateButtonsState ( ) { ,boolean elementSelected = listViewer . getList ( ) . getSelectionIndex ( ) != - 1 ; removeButton . setEnabled ( elementSelected ) ; }
Check if external storage is built-in or removable. <code> boolean isExternalStorageRemovable ( ) { ,if ( Utils . hasGingerbread ( ) ) { return Environment . isExternalStorageRemovable ( ) ; } return true ; }
"Called by the Renderer when a texture has been set. <code> void onTextureUse ( Image image , boolean wasSwitched ) { ","assert image . getId ( ) >= 1 ; if ( ! enabled ) return ; if ( ! texturesUsed . containsKey ( image . getId ( ) ) ) texturesUsed . put ( image . getId ( ) , null ) ; if ( wasSwitched ) numTextureBinds ++ ; }"
Unamed data sets cannot be updated <code> void testUpdateUnnamed ( ) { ,"try { createUpdateTest ( createTestArraysCoherant ( 2 , 1000 , null ) , false , 10 ) ; } catch ( IllegalArgumentException ne ) { return ; } throw new Exception ( ""Update now allowed for a nameless dataset"" ) ; }"
"Sets a boolean preference value. <code> void setBoolean ( Context context , int keyId , boolean value ) { ","SharedPreferences sharedPreferences = context . getSharedPreferences ( Constants . SETTINGS_NAME , Context . MODE_PRIVATE ) ; Editor editor = sharedPreferences . edit ( ) ; editor . putBoolean ( getKey ( context , keyId ) , value ) ; ApiAdapterFactory . getApiAdapter ( ) . applyPreferenceChanges ( editor ) ; }"
"STEADY-STATE: called each time new individuals are evaluated during the steady-state process. You can look up the individuals in state.newIndividuals[] <code> void individualsEvaluatedStatistics ( SteadyStateEvolutionState state , Individual [ ] newIndividuals , Individual [ ] oldIndividuals , int [ ] subpopulations , int [ ] indices ) { ","for ( int x = 0 ; x < children . length ; x ++ ) if ( children [ x ] instanceof SteadyStateStatisticsForm ) ( ( SteadyStateStatisticsForm ) children [ x ] ) . individualsEvaluatedStatistics ( state , newIndividuals , oldIndividuals , subpopulations , indices ) ; }"
"Lexicographically compare bytes. If equal, return zero. If greater-than, return a positive value, if less than return a negative value. <code> int compareBytes ( byte [ ] b1 , int s1 , int l1 , byte [ ] b2 , int s2 , int l2 ) { ","int end1 = s1 + l1 ; int end2 = s2 + l2 ; for ( int i = s1 , j = s2 ; i < end1 && j < end2 ; i ++ , j ++ ) { int a = ( b1 [ i ] & 0xff ) ; int b = ( b2 [ j ] & 0xff ) ; if ( a != b ) { return a - b ; } } return l1 - l2 ; }"
Checks if is windows. <code> boolean isWindows ( ) { ,"String os = System . getProperty ( ""os.name"" ) ; return os . startsWith ( ""Windows"" ) ; }"
"Invoke the specified JavaScript function in the JavaScript runtime. <code> T invokeJavascriptReturnValue ( String function , Class < T > returnType , Object ... args ) { ","Object returnObject = invokeJavascript ( function , args ) ; if ( returnObject != null ) { return ( T ) returnObject ; } else { return null ; } }"
Gets the key to use into the cache of bundles. The key is made up of the fully qualified class name and the locale. <code> String getBundleKey ( ) { ,"Locale locale = getLocale ( ) ; return clazz . getName ( ) + ""::"" + locale . toString ( ) ; }"
"Test-case: Retrieve invalid account. Step: Call GET /account method with non existing account Id Result: Verify that account is not found, response code is 404 <code> void getInvalidAccount ( ) { ","Response response = given ( ) . when ( ) . get ( baseURI + ""/2"" ) ; Assert . assertEquals ( response . getStatusCode ( ) , 404 ) ; }"
"Returns a ArrayList of with count sms where the contactId match the argument <code> ArrayList < Sms > getSms ( ArrayList < Long > rawIds , String contactName ) { ","if ( rawIds . size ( ) > 0 ) { return getAllSms ( ""content://sms/inbox"" , contactName , ""person IN ("" + TextUtils . join ( "", "" , rawIds ) + "")"" ) ; } return new ArrayList < Sms > ( ) ; }"
"Returns the constant for the given String (the search for the constant is case insensitive). If the constant does not already exist, a new Constant is created with the given String as the name of the Constant. <code> VariableKey getConstant ( String name ) { ","initializeTypeMap ( ) ; VariableKey key = typeMap . get ( name ) ; if ( key == null ) { key = new VariableKey ( name ) ; typeMap . put ( name , key ) ; } return key ; }"
"Sets string preference from integer value <code> void setStringFromInteger ( int keyResource , int newValue ) { ","Context context = ContextManager . getContext ( ) ; Editor editor = getPrefs ( context ) . edit ( ) ; editor . putString ( context . getString ( keyResource ) , Integer . toString ( newValue ) ) ; editor . commit ( ) ; }"
"Test of containsKey method, of class ParametrizedHeadersMap. <code> void testContainsKey ( ) { ","map . add ( ""foo"" , new ParameterizedHeader ( ""bar"" ) ) ; assertTrue ( map . containsKey ( ""foo"" ) ) ; assertTrue ( map . containsKey ( ""FOO"" ) ) ; assertTrue ( map . containsKey ( ""Foo"" ) ) ; assertTrue ( map . containsKey ( ""fOo"" ) ) ; assertTrue ( map . containsKey ( ""foO"" ) ) ; assertTrue ( ! map . containsKey ( ""bar"" ) ) ; }"
Picks position on field (plane Y=0) that picking ray intersects <code> Vec3f pickField ( ) { ,"Plane p = new Plane ( new Vec3f ( 0 ) , Vec3f . unitY ( ) ) ; return p . intersect ( pickRay ) ; }"
"Compute the distance between two vertices in the shortest path spanning tree. <code> double getDistance ( Vertex v1 , Vertex v2 ) { ","if ( shortestpathtree == null || v1 != startVertex ) shortestpathtree = shortestPath ( v1 ) ; return getDistanceInTree ( v1 , v2 ) ; }"
The sub-nodes of this explanation node. <code> Explanation [ ] getDetails ( ) { ,if ( details == null ) return null ; return details . toArray ( new Explanation [ 0 ] ) ; }
"Calculates the squared Euclidean distance of the first point divided by a scalar and another second point. <code> double distanceWithDivisionSquared ( double [ ] pointA , double dA , double [ ] pointB ) { ",assert ( pointA . length == pointB . length ) ; double distance = 0.0 ; for ( int i = 0 ; i < pointA . length ; i ++ ) { double d = ( pointA [ i ] / dA ) - pointB [ i ] ; distance += d * d ; } return distance ; }
"Returns the Boolean value of the given String, or null if the conversion impossible. <code> Boolean parseBooleanNull ( String value ) { ",if ( value == null ) return null ; try { return Boolean . parseBoolean ( value ) ; } catch ( Exception ex ) { return null ; } }
Gets the value of the autoPageBreaks property. <code> boolean isAutoPageBreaks ( ) { ,if ( autoPageBreaks == null ) { return true ; } else { return autoPageBreaks ; } }
"Type based get call. Use this when expecting the response as plain array of json <code> T doGetCall ( String url , Map < String , String > queryParamsMap , Type typeOfT ) { ","String modifiedUrl = getUrlWithParams ( url , queryParamsMap ) ; return doGetCall ( modifiedUrl , typeOfT ) ; }"
Tests that a one-byte file is displayed correctly. <code> void testOneByteTextFil ( ) { ,"byte [ ] oneByteContents = { 'x' } ; String output = readUsingTextCommand ( TEXT_FILENAME , oneByteContents ) ; assertTrue ( new String ( oneByteContents ) . equals ( output ) ) ; }"
Silently replace delegate by tree implementation. <code> void replaceWithSBTree ( OBonsaiCollectionPointer pointer ) { ,delegate . requestDelete ( ) ; final OSBTreeRidBag treeBag = new OSBTreeRidBag ( ) ; treeBag . setCollectionPointer ( pointer ) ; delegate = treeBag ; }
"Returns the list of all bookings for the given person name and last day <code> List < Booking > getBookingsByLastExportDay ( String person , Date day ) { ","TypedQuery < Booking > tq = em . createNamedQuery ( ""Booking.findByLastExportDayForPerson"" , Booking . class ) ; tq . setParameter ( ""person"" , person ) ; tq . setParameter ( ""day"" , day ) ; return tq . getResultList ( ) ; }"
"This is an exact copy of the String hashCode() function, aside from the lowercasing. <code> int lowerCaseHash ( String s ) { ",int h = 0 ; final int len = s . length ( ) ; for ( int i = 0 ; i < len ; i ++ ) h = 31 * h + Character . toLowerCase ( s . charAt ( i ) ) ; return h ; }
Convert a String filename to a byte array using the deprecated ascii String method for cases where passing it through a character set converter is too heavyweight. <code> byte [ ] stringToBytes ( String fileName ) { ,"byte [ ] asciiName = new byte [ fileName . length ( ) ] ; fileName . getBytes ( 0 , fileName . length ( ) , asciiName , 0 ) ; return asciiName ; }"
"Sets an entire row to a specified value <code> void setRowToOneValue ( int i , T v ) { ","for ( int j = 0 ; j < dim2 ; j ++ ) { set ( i , j , v ) ; } }"
Gets the given parameter's value as a Vec3D vector Returns null if the parameter doesn't exist or is not a Vec3D <code> Vec3D getVec3D ( String param ) { ,"try { Vec3D v = ( Vec3D ) map . get ( param ) ; return v ; } catch ( Exception e ) { LOGGER . log ( Level . FINEST , ""Returning null. Reason: "" + param + "" value is not a Vec3D"" ) ; return null ; } }"
"Create and start Threads for all the Beings so they can attempt to acquire a lease on a Palantir and gaze into it. <code> void beginBeingsGazing ( int beingCount , CyclicBarrier entryBarrier , CountDownLatch exitBarrier ) { ","for ( int i = 0 ; i < beingCount ; ++ i ) { mExecutor . execute ( makeBeingRunnable ( i , entryBarrier , exitBarrier ) ) ; } }"
This methods to be called on entering a first element whose type has this content model. It will return the initial state of the content model <code> int [ ] startContentModel ( ) { ,int [ ] state = new int [ fNumElements + 1 ] ; for ( int i = 0 ; i <= fNumElements ; i ++ ) { state [ i ] = STATE_START ; } return state ; }
"Add a parameter to the query params (the params map) replacing any parameter that might be there. <code> void addParamOverride ( final Multimap < String , String > params , final String key , final String value ) { ","params . removeAll ( key ) ; params . put ( key , value ) ; }"
Parse named parameter as Double. <code> Double getParameterDouble ( String name ) { ,"try { return StringNumberParser . parseDouble ( getParameterValue ( name ) ) ; } catch ( NumberFormatException e ) { throw new RepositoryConfigurationException ( name + "": unparseable Long. "" + e , e ) ; } }"
"Sets the value for the given key using local (persistent) storage. <code> void setLocalItem ( String key , String value ) { ","if ( localStorage != null ) { localStorage . setItem ( key , value ) ; } else { Cookies . setCookie ( key , value , new Date ( new Date ( ) . getTime ( ) + PERSISTENT_COOKIE_EXPIRATION ) ) ; } }"
Test if the given path is within a directory that is a Profile. <code> boolean inProfile ( File path ) { ,if ( path . getParentFile ( ) != null ) { if ( Profile . isProfile ( path . getParentFile ( ) ) ) { return true ; } return Profile . inProfile ( path . getParentFile ( ) ) ; } return false ; }
"In case of write requests we should only cancel all the threads if a failure can be concluded. Otherwise we just return as soon as success is concluded but we leave other write tasks running in the background. <code> void completeWriteRequest ( final QuorumTracker < Void , TrackingUnit > tracker , final EndpointRequestCompletionService < Void > execSvc ) { ","try { completeRequest ( tracker , execSvc , Functions . < Void > identity ( ) ) ; } catch ( RuntimeException e ) { tracker . cancel ( true ) ; throw e ; } }"
"Returns a RepoPath from an aql result's path fields <code> RepoPath fromAql ( String repo , String path , String name ) { ","if ( StringUtils . equals ( path , ""."" ) ) { return RepoPathFactory . create ( repo , name ) ; } else { return RepoPathFactory . create ( repo , path + ""/"" + name ) ; } }"
Verifies the output of the command when using the help option <code> void testGetFileHelpOption ( ) { ,"int exitCode = getFileCommand . execute ( new String [ ] { ""--help"" } ) ; final String output = outputStringWriter . getBuffer ( ) . toString ( ) . trim ( ) ; assertEquals ( getHelpOutput ( ) , output ) ; assertEquals ( 0 , exitCode ) ; }"
"Given a filepath, makes sure a directory exists there. If not, creates and returns it. Same as ENSURE-DIRECTORY in CL. <code> File ensureDir ( File tgtDir ) { ","if ( tgtDir . exists ( ) ) { if ( tgtDir . isDirectory ( ) ) return tgtDir ; else throw new Exception ( ""Could not create directory "" + tgtDir . getAbsolutePath ( ) + "", as a file already exists at that path."" ) ; } else { tgtDir . mkdirs ( ) ; return tgtDir ; } }"
Unpacks the compressed character translation table. <code> char [ ] zzUnpackCMap ( String packed ) { ,char [ ] map = new char [ 0x10000 ] ; int i = 0 ; int j = 0 ; while ( i < 108 ) { int count = packed . charAt ( i ++ ) ; char value = packed . charAt ( i ++ ) ; do map [ j ++ ] = value ; while ( -- count > 0 ) ; } return map ; }
"Calls statusChange method from the StatusActions class using Reflections. <code> Set < Integer > statusChange ( StatusActions sa , String status , Set < Integer > metadataIds , String changeDate , String changeMessage ) { ","Method statusChange = statusRules . getMethod ( ""statusChange"" , new Class [ ] { String . class , Set . class , String . class , String . class } ) ; return ( Set < Integer > ) statusChange . invoke ( sa , new Object [ ] { status , metadataIds , changeDate , changeMessage } ) ; }"
"Set an instance of the enum into the database field. <code> void nullSafeSet ( PreparedStatement statement , Object value , int index ) { ","if ( value == null ) { statement . setNull ( index , Types . VARCHAR ) ; } else { statement . setString ( index , value . toString ( ) ) ; } }"
Loads the next MusicXML demo score from the scores directory. <code> void loadNextScore ( ) { ,"File [ ] files = new File ( ""scores"" ) . listFiles ( ( d , n ) -> n . endsWith ( "".xml"" ) ) ; loadScore ( ""scores/"" + files [ scoreIndex ] . getName ( ) ) ; scoreIndex = ( scoreIndex + 1 ) % files . length ; }"
"Sets the record ID to be stored for subsequent error messages that are logged If any previous messages are stored for the current record that don't have a stored record ID, set the value for those entries to this value also. <code> void setRecordID ( final String recordID ) { ",curRecordID = recordID ; if ( hasMissingID && errors != null ) { setRecordIDForAll ( recordID ) ; } }
Gets the HTTP conduit responsible for a transport-level communication with the remote service. <code> HTTPConduit getHttpConduit ( ) { ,Conduit conduit = getConduit ( ) ; return conduit instanceof HTTPConduit ? ( HTTPConduit ) conduit : null ; }
"Gets the singleton instance. Throws exception if at least one of either review phase name key, ReviewId, ReviewerId, or IProject instance is null. <code> ReviewModel getInstance ( ) { ",theInstance . computeFields ( ) ; return theInstance ; }
Gives a String representation of the report handler <code> String toString ( ) { ,"String result = """" ; if ( ! reportList . isEmpty ( ) ) { for ( Report rep : reportList ) { result += rep . toString ( ) + "" "" ; } } result += ""---------- "" ; return result ; }"
Returns true if the given state is currently active otherwise false. <code> boolean isStateActive ( State state ) { ,switch ( state ) { case main_region_A : return stateVector [ 0 ] == State . main_region_A ; case main_region_B : return stateVector [ 0 ] == State . main_region_B ; case main_region__final_ : return stateVector [ 0 ] == State . main_region__final_ ; default : return false ; } }
Returns a concatenated String of the contents of an HttpResponse <code> String getContentsFromHttpResponse ( HttpResponse response ) { ,InputStreamReader in = new InputStreamReader ( response . getEntity ( ) . getContent ( ) ) ; return getContentsFromInputStream ( in ) ; }
"Returns an iterable collection of elements of the tree, reported in post-order. <code> Iterable < E > postOrder ( ) { ","List < E > snapshot = new ArrayList < > ( ) ; postOrderSubtree ( root , snapshot ) ; return snapshot ; }"
Get the count of key/data pairs in the database in a JE database. This is a simple wrapper around the JE Database.count method. <code> long getRecordCount ( ) { ,"long count = database . count ( ) ; if ( debugEnabled ( ) ) { TRACER . debugJEAccess ( DebugLogLevel . VERBOSE , OperationStatus . SUCCESS , database , null , null , null ) ; } return count ; }"
"Returns an encrypted version of the plain-text password. Encryption is performed using the Blowfish algorithm. The encryption key is stored as the Jive property ""passwordKey"". If the key is not present, it will be automatically generated. <code> String encryptPassword ( String password ) { ",if ( password == null ) { return null ; } Blowfish cipher = getCipher ( ) ; if ( cipher == null ) { throw new UnsupportedOperationException ( ) ; } return cipher . encryptString ( password ) ; }
"Asserts that the actual log message, excluding its id, is equal to the expected log message, and that the actual log message's id contains the expected google id. <code> void assertLogMessageEquals ( String expected , String actual ) { ","String expectedGoogleId = expected . split ( ""||||||"" ) [ ActivityLogEntry . POSITION_OF_GOOGLEID ] ; assertLogMessageEquals ( expected , actual , expectedGoogleId ) ; }"
"Use this method to query the unique ID of the physical device backing a video capture device handle. <code> boolean glQueryVideoCaptureDeviceNV ( long device , int attribute , IntBuffer value ) { ","checkExtension ( ) ; BufferChecks . checkBuffer ( value , 1 ) ; return nglQueryVideoCaptureDeviceNV ( getPeerInfo ( ) , device , attribute , value , value . position ( ) ) ; }"
Reads a tile entity from NBT. <code> void readFromNBT ( NBTTagCompound par1NBTTagCompound ) { ,"xCoord = par1NBTTagCompound . getInteger ( ""x"" ) ; yCoord = par1NBTTagCompound . getInteger ( ""y"" ) ; zCoord = par1NBTTagCompound . getInteger ( ""z"" ) ; }"
"Drawing inclusions after simulation. They are placed on grain boundaries. <code> void drawInclusionsAfter ( InclusionType type , int radius ) { ","List < Point > borderSeeds = findBorderSeeds ( ) ; Random random = new Random ( ) ; int val = random . nextInt ( borderSeeds . size ( ) ) ; drawInclusions ( type , radius , borderSeeds . get ( val ) . x , borderSeeds . get ( val ) . y ) ; }"
Retrieve the underlying cache for this query miss cache. Presumably and Ehcache region has been configured for this cacheName. <code> Cache getCache ( String cacheName ) { ,if ( cache == null ) { cache = CacheManager . getInstance ( ) . getCache ( cacheName ) ; } return cache ; }
Maps to the URL of the capabilities document <code> URI getSource ( ) { ,"URL url = wfs . getCapabilitiesURL ( ) ; try { return url . toURI ( ) ; } catch ( URISyntaxException e ) { LOGGER . log ( Level . WARNING , ""converting to URI: "" + url . toExternalForm ( ) ) ; return null ; } }"
destruction of the link between the participant and the hub <code> void releaseHubPort ( ) { ,hubPort . release ( ) ; hubPort = null ; }
"when a getSkill is passed a string it will set the associated type with a true value. <code> Map < String , Boolean > getSkill ( String playerSkill ) { ","Map < String , Boolean > typeMap = PlayerFields . getSkill ( ) ; if ( isSkill ( playerSkill ) ) { typeMap . put ( playerSkill , true ) ; } return typeMap ; }"
Get the Horizontal Alignement for the Alignment property. <code> int getHorizontalAlignment ( int align ) { ,int v = align ; v = v % WMFConstants . TA_BASELINE ; v = v % WMFConstants . TA_BOTTOM ; if ( v >= 6 ) return WMFConstants . TA_CENTER ; else if ( v >= 2 ) return WMFConstants . TA_RIGHT ; else return WMFConstants . TA_LEFT ; }
JSONObject is built the first time the method is called. <code> JSONObject asJSONObject ( ) { ,if ( responseAsJSONObject == null ) { responseAsJSONObject = new JSONObject ( asString ( ) ) ; } return responseAsJSONObject ; }
"Creates a new empty palette chunk, queues it for write and return it to the caller, who should fill its entries <code> PngChunkPLTE createPLTEChunk ( ) { ",final PngChunkPLTE plte = new PngChunkPLTE ( chunkList . imageInfo ) ; queueChunk ( plte ) ; return plte ; }
Get the Y coordinate on the line of a point with the given X coordinate. <code> Double getYonLine ( double X ) { ,Double Y = new Double ( ( - coef_a * X - coef_c ) / coef_b ) ; if ( Y . isInfinite ( ) || Y . isNaN ( ) ) return Double . NaN ; else return Y ; }
"Adds a default attribute value to the initializer. <code> void addAttribute ( String ns , String prefix , String ln , String val ) { ","int len = keys . length ; if ( length == len ) { String [ ] t = new String [ len * 2 ] ; System . arraycopy ( keys , 0 , t , 0 , len ) ; keys = t ; } keys [ length ++ ] = ns ; keys [ length ++ ] = prefix ; keys [ length ++ ] = ln ; values . put ( ns , ln , val ) ; }"
"Gets an object value and transforms it into a double <code> double getDouble ( ITeiidServerVersion teiidVersion , Object value ) { ","if ( value == null ) { return 0 ; } return transform ( teiidVersion , value , Double . class ) ; }"
A simulation game when the player doesn't switch their choice. <code> long noSwitchSimulation ( ) { ,GamePlayer noSwitchPlayer = new GamePlayer ( false ) ; return gameSimulation ( noSwitchPlayer ) ; }
"find the correct operation for this turnout. If operations are globally disabled, return nothing <code> TurnoutOperation getMatchingOperation ( Turnout t , int apparentMode ) { ","if ( doOperations ) { return getMatchingOperationAlways ( t , apparentMode ) ; } return null ; }"
"Turns: - urlDecoder -> URLDecoder - url -> URL Warning: also turns: - uRLDecoder -> URLDecoder (which is then decoded to urlDecoder instead of the original, so we need to guard) <code> String getReverseJavaBeanName ( String name ) { ","for ( int i = 0 ; i < name . length ( ) ; i += Character . isSurrogate ( name . charAt ( i ) ) ? 2 : 1 ) { if ( Character . isUpperCase ( name . codePointAt ( i ) ) ) { return name . substring ( 0 , i ) . toUpperCase ( ) + name . substring ( i ) ; } } return name . toUpperCase ( ) ; }"
Returns the length squared of this half-edge. <code> double lengthSquared ( ) { ,if ( tail ( ) != null ) { return head ( ) . pnt . distanceSquared ( tail ( ) . pnt ) ; } else { return - 1 ; } }
"This method returns CUDA pointer object for this allocation. It can be either device pointer or pinned memory pointer, or null. PLEASE NOTE: Thread safety is guaranteed by reentrant read/write lock <code> Pointer getHostPointer ( ) { ",if ( pointerInfo == null ) return null ; return pointerInfo . getHostPointer ( ) ; }
Returns the visible view for the cards <code> List < CardViewWrapper > getVisibleViewsForCards ( List < Card > cardsCopy ) { ,List < CardViewWrapper > originalViews = new ArrayList < CardViewWrapper > ( ) ; for ( Card card : cardsCopy ) { originalViews . add ( card . getCardView ( ) ) ; } return originalViews ; }
"Sets a palette entry by RGB value. <code> void setEntryRGB ( int index , int rgb ) { ",entries [ index ] = codec . encode ( rgb ) ; rgbvalues [ index ] = codec . decode ( entries [ index ] ) ; setModified ( true ) ; }
"Loads the text content of a file into a list of strings, each string corresponding to a line. The line endings are either \n, \r or \r\n. <code> List < String > linesOf ( File file , Charset charset ) { ","if ( charset == null ) { throw new NullPointerException ( ""The charset should not be null"" ) ; } try { return loadLines ( file , charset ) ; } catch ( IOException e ) { throw new RuntimeIOException ( ""Unable to read "" + file . getAbsolutePath ( ) , e ) ; } }"
"Sets the jcifs service principal. <code> void setJcifsServicePrincipal ( @ Value ( ""${cas.spnego.service.principal:HTTP/cas.example.com@EXAMPLE.COM}"" ) final String jcifsServicePrincipal ) { ","if ( StringUtils . isNotBlank ( jcifsServicePrincipal ) ) { logger . debug ( ""jcifsServicePrincipal is set to {}"" , jcifsServicePrincipal ) ; Config . setProperty ( JCIFS_PROP_SERVICE_PRINCIPAL , jcifsServicePrincipal ) ; } }"
Shortcut to getInfo().getLastModified() with the same meaning as the File.lastModified api: returns 0L if the resource does not exist or if an IO error occurs. <code> long lastModified ( ) { ,init ( ) ; return _resourceInfo . getLastModified ( ) ; }
Returns a string representation of the object. <code> String toString ( ) { ,"StringBuffer b = new StringBuffer ( ""[ThreadId:"" ) ; for ( int i = 0 ; i < id . length ; ++ i ) { String n = Integer . toHexString ( id [ i ] & 0xFF ) ; if ( n . length ( ) == 1 ) { b . append ( '0' ) ; } b . append ( n ) ; } b . append ( ']' ) ; return b . toString ( ) ; }"
Returns the specified federation token for this Gitblit instance. <code> String getFederationToken ( String value ) { ,"String passphrase = settings . getString ( Keys . federation . passphrase , """" ) ; return StringUtils . getSHA1 ( passphrase + ""-"" + value ) ; }"
"Changes returned JSon object's id property name to match with type's id property name. <code> void changeIdPropertyName ( JsonObject element , String propertyName ) { ","if ( propertyName . equals ( ""id"" ) || propertyName . length ( ) == 0 ) return ; if ( element . has ( ""id"" ) ) { JsonElement idElement = element . get ( ""id"" ) ; String value = idElement . isJsonNull ( ) ? null : idElement . getAsString ( ) ; element . remove ( ""id"" ) ; element . addProperty ( propertyName , value ) ; } }"
Returns the JobManager instance. <code> JobManager getInstance ( ) { ,if ( instance == null ) { instance = new JobManager ( ) ; } return instance ; }
"Adds a new factor to this agent. <code> void addFactor ( NodeID id , Factor < NodeID > factor ) { ","factors . put ( id , factor ) ; factor . setMaxOperator ( MAX_OPERATOR ) ; factor . setIdentity ( id ) ; factor . setCommunicationAdapter ( communicationAdapter ) ; }"
"Return the computed integer list. <code> int [ ] getList ( Ability ability , Target tested , ContextEventListener context ) { ","final int [ ] result = new int [ values . length ] ; for ( int i = 0 ; i < values . length ; i ++ ) { result [ i ] = values [ i ] . getValue ( ability , ability . getCard ( ) , context ) ; } return listType . getList ( result ) ; }"
"Factory method for foreign keys <code> ForeignKey < R , U > createForeignKey ( UniqueKey < U > key , Table < R > table , String name , TableField < R , ? > ... fields ) { ","ForeignKey < R , U > result = new ReferenceImpl < R , U > ( key , table , name , fields ) ; if ( key instanceof UniqueKeyImpl ) { ( ( UniqueKeyImpl < U > ) key ) . references . add ( result ) ; } return result ; }"
"This method tests the merge sort algorithm that has been implemented. It runs the algorithm TEST_RUNS times on copies of list, and then returns the average time taken to sort the copies. <code> double testMergeSort ( Integer [ ] list ) { ","double totalTime = 0 ; for ( int i = 0 ; i < TEST_RUNS ; i ++ ) { Integer [ ] tmp = Arrays . copyOf ( list , list . length ) ; t . start ( ) ; MergeSort . sort ( tmp ) ; totalTime += t . getTime ( ) ; } return totalTime / TEST_RUNS ; }"
Creates FullIdent for given type node. <code> FullIdent createFullType ( DetailAST typeAST ) { ,final DetailAST arrayDeclAST = typeAST . findFirstToken ( TokenTypes . ARRAY_DECLARATOR ) ; return createFullTypeNoArrays ( arrayDeclAST == null ? typeAST : arrayDeclAST ) ; }
Returns a string representation of this object; useful for testing and debugging. <code> String toString ( ) { ,"StringBuilder sb = new StringBuilder ( ) ; sb . append ( ""{"" ) ; if ( getVpcId ( ) != null ) sb . append ( ""VpcId: "" + getVpcId ( ) + "","" ) ; if ( getSubnetIds ( ) != null ) sb . append ( ""SubnetIds: "" + getSubnetIds ( ) ) ; sb . append ( ""}"" ) ; return sb . toString ( ) ; }"
"Static method that helps parse the processorId substring from the ZK path Processor ID is prefixed by ""processor-"" and is an leaf node in ZK tree. Hence, this pattern is used to extract the processorId. <code> String parseIdFromPath ( String path ) { ","if ( ! Strings . isNullOrEmpty ( path ) ) return path . substring ( path . lastIndexOf ( ""/"" ) + 1 ) ; return null ; }"
Returns desktop directory or NULL if directory isn't known. <code> File getDesktopDirectory ( ) { ,"String path = System . getProperty ( ""user.home"" ) + File . separator + ""Desktop"" ; File dir = new File ( path ) ; return dir . exists ( ) ? dir : null ; }"
"Fills the given intent with the call container <code> void fillIntentWith ( final CallContainer callContainer , final Intent intent ) { ","intent . putExtra ( Globals . NUMBER_INTENT , callContainer . getPhoneNumber ( ) ) ; intent . putExtra ( Globals . NAME_INTENT , callContainer . getName ( ) ) ; intent . putExtra ( Globals . TYPE_INTENT , callContainer . getCallType ( ) ) ; intent . putExtra ( Globals . DATE_INTENT , callContainer . getCallTime ( ) ) ; }"
"Convenience to aid logging uses of Randoms. <code> int randomInt ( Logger logger , String logMe , Random random , int n ) { ","int ret = random . nextInt ( n ) ; if ( logger != null ) { logger . finest ( logMe + "" random("" + n + "") = "" + ret ) ; } return ret ; }"
Two objects that are equal are required to return the same hashCode. <code> void testHashCode ( ) { ,"ArcDialFrame f1 = new ArcDialFrame ( ) ; ArcDialFrame f2 = new ArcDialFrame ( ) ; assertTrue ( f1 . equals ( f2 ) ) ; int h1 = f1 . hashCode ( ) ; int h2 = f2 . hashCode ( ) ; assertEquals ( h1 , h2 ) ; }"
Returns all part of speech tags for a given terminal expression. <code> HashSet < NonTerminal > getPosTags ( ArrayList < Terminal > terminal ) { ,if ( ! posMap . containsKey ( terminal ) ) { return new HashSet < > ( ) ; } return posMap . get ( terminal ) ; }
Add the AuthzGroup(s) for context as a site. <code> void addSiteContextAuthzGroup ( Collection rv ) { ,"String context = getContext ( ) ; if ( context == null ) return ; rv . add ( ""/site/"" + context ) ; rv . add ( ""!site.helper"" ) ; }"
Deletes an aipor by id <code> void deleteAirport ( Long id ) { ,"try { airportDao . deletetAirport ( id ) ; } catch ( DatabaseException e ) { Logger . logError ( ""Database error deleting airport :"" , e ) ; throw e ; } catch ( Exception ex ) { Logger . logError ( ""Unkwon error deleting airport :"" , ex ) ; throw ex ; } }"
Tests case where metacard's thumbnail is null. <code> void testNullMetacardThumbnail ( ) { ,"Metacard mockMetacard = mock ( Metacard . class ) ; THUMBNAIL_TRANSFORMER . transform ( mockMetacard , null ) ; }"
API to get UTF-8 encoded value for a string. <code> String getEncodedString ( String toEncodeString ) { ,"String encodedString = null ; try { encodedString = URLEncoder . encode ( toEncodeString , ENCODING_UTF_8 ) ; } catch ( UnsupportedEncodingException e ) { LOGGER . error ( ""Unsupported encoding :"" , e ) ; } return encodedString ; }"
"Read a byte array from the underlying DataInputStream, storing it into the object that is passed in. Optionally trace the value. <code> void readBytes ( byte [ ] b ) { ","in_ . readFully ( b ) ; if ( Trace . isTraceOn ( ) ) Trace . log ( Trace . PROXY , ""  "" + Thread . currentThread ( ) . getName ( ) + "" in > "" , b ) ; }"
Show the console view for the given server <code> void displayConsoleView ( final IServer server ) { ,IConsoleUtility util = getDefault ( ) . getConsoleUtility ( ) ; if ( util != null ) util . displayServerConsoleView ( server ) ; }
Returns a string representation of this object; useful for testing and debugging. <code> String toString ( ) { ,"StringBuilder sb = new StringBuilder ( ) ; sb . append ( ""{"" ) ; if ( getAvailabilityOptions ( ) != null ) sb . append ( ""AvailabilityOptions: "" + getAvailabilityOptions ( ) ) ; sb . append ( ""}"" ) ; return sb . toString ( ) ; }"
"Set the current page for this message buffer. <code> void setPage ( int page , boolean wrap ) { ",if ( ( page < 1 || page > getPageCount ( ) ) && ! wrap ) { return ; } if ( page < 1 ) { page = getPageCount ( ) ; } else if ( page > getPageCount ( ) ) { page = 1 ; } currentPage = page ; }
To get the storage directory. This is return String. <code> String getStorageDirectory ( ) { ,File file = getStorageFile ( ) ; if ( file == null ) { return null ; } return file . getAbsolutePath ( ) ; }
Encodes an RSA Signature output as a signature BIT STRING as defined in the documentation of this class. <code> byte [ ] encodeSignature ( Object signature ) { ,byte [ ] result = ( byte [ ] ) signature ; return result ; }
Try to get element from cache. <code> V getImpl ( K key ) { ,Cache cache = ehcache ; if ( cache == null ) { return localStorage . get ( key ) ; } Element cached = cache . get ( key ) ; return cached == null ? null : ( V ) cached . getValue ( ) ; }
Is the given string a valid language code? <code> boolean isValidLanguageCode ( String str ) { ,for ( int i = 0 ; i < VALID_LANGUAGES . length ; i ++ ) { if ( str . equalsIgnoreCase ( VALID_LANGUAGES [ i ] ) ) { return true ; } } return false ; }
Get WOEID by country <code> int getWOEIDByLocation ( String strLocation ) { ,"if ( strLocation == null ) { Log . e ( TAG , ""Invalid input parameter"" ) ; return WOEID_NOTSUPPORT ; } int nWOEID = WOEID_NOTSUPPORT ; return nWOEID ; }"
"Gets the position of the value <code> int getPosition ( final long value , final boolean start ) { ",if ( value < minValue || value > maxValue ) { return - 1 ; } final int found = list . binarySearch ( value ) ; int pos ; if ( found < 0 ) { pos = - 1 * found - 2 ; } else { pos = found ; } return pos ; }
"Converts a relative application URL to another relative URL that contains the application URL. Example: ""my/page.jsf"" will be converted to ""/myservletname/my/page.jsf"" <code> String relUrlWithServletName ( String relUrl ) { ","String ctxtPath = StringUtils . defaultString ( getExternalContext ( ) . getRequestContextPath ( ) ) ; StringBuilder sb = new StringBuilder ( ctxtPath . length ( ) + 1 + relUrl . length ( ) ) ; sb . append ( ctxtPath ) ; if ( ! relUrl . startsWith ( ""/"" ) ) { sb . append ( ""/"" ) ; } sb . append ( relUrl ) ; return sb . toString ( ) ; }"
"Look up values for all keys beginning with any of the given prefixes. <code> Map < String , String > getStringsByPrefix ( ContentResolver cr , String ... prefixes ) { ","Cursor c = cr . query ( CONTENT_PREFIX_URI , null , null , prefixes , null ) ; TreeMap < String , String > out = new TreeMap < String , String > ( ) ; if ( c == null ) return out ; try { while ( c . moveToNext ( ) ) { out . put ( c . getString ( 0 ) , c . getString ( 1 ) ) ; } } finally { c . close ( ) ; } return out ; }"
Returns the MultiAbility the player has bound. Returns null if no multiability is bound and active. <code> String getBoundMultiAbility ( Player player ) { ,if ( playerBoundAbility . containsKey ( player ) ) return playerBoundAbility . get ( player ) ; return null ; }
Tests that a null context results in an NPE as per EL Javadoc. <code> void testGetValue01 ( ) { ,"MapELResolver mapELResolver = new MapELResolver ( ) ; mapELResolver . getValue ( null , new Object ( ) , new Object ( ) ) ; }"
Get index of main Statements <code> int getMainSqlIndex ( ) { ,if ( m_sql == null ) return - 1 ; else if ( m_sql . length == 1 ) return 0 ; for ( int i = m_sql . length - 1 ; i >= 0 ; i -- ) { if ( m_sql [ i ] . charAt ( 0 ) != '(' ) return i ; } return - 1 ; }
Sets whether the current file is writable. <code> void setWritable ( boolean writable ) { ,isWritable = writable ; markChangeTime ( ) ; }
Handles a click event from the view. <code> void handleClick ( ) { ,final boolean wasMaximized = maximized ; setMaximized ( ! wasMaximized ) ; if ( wasMaximized ) { if ( unmaximizeCommand != null ) { unmaximizeCommand . execute ( ) ; } } else { if ( maximizeCommand != null ) { maximizeCommand . execute ( ) ; } } }
Computes the hash code for this instance. <code> void computeHashCode ( ) { ,hashCode = 19 ; if ( type != null ) { hashCode = hashCode * 37 + type . hashCode ( ) ; } for ( int i = 0 ; i < attributes . length ; i ++ ) { hashCode = hashCode * 37 + attributes [ i ] . hashCode ( ) ; } }
Read in and return an array of ints from standard input. <code> int [ ] readInt1D ( ) { ,int N = StdIn . readInt ( ) ; int [ ] a = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { a [ i ] = StdIn . readInt ( ) ; } return a ; }
Checks whether the specified path is a Grails path. <code> boolean isGrailsPath ( String path ) { ,for ( Pattern pattern : patterns ) { Matcher m = pattern . matcher ( path ) ; if ( m . find ( ) ) { return true ; } } return false ; }
Set the projection matrix with top principal components that contain (more than) the given percentage of variance. <code> void setProjection ( double p ) { ,"if ( p <= 0 || p > 1 ) { throw new IllegalArgumentException ( ""Invalid percentage of variance: "" + p ) ; } for ( int k = 0 ; k < n ; k ++ ) { if ( cumulativeProportion [ k ] >= p ) { setProjection ( k + 1 ) ; break ; } } }"
Set this execution as the current being evaluated <code> void setCurrent ( ) { ,_current = true ; for ( RebotinolExecutionObserver obs : _observers ) { obs . setCurrent ( ) ; } }
"Method checks if two float numbers are similar. <code> boolean almostEqual ( float a , float b , float absoluteDiff , float relativeDiff ) { ",float diff = Math . abs ( a - b ) ; if ( diff <= absoluteDiff ) { return true ; } a = Math . abs ( a ) ; b = Math . abs ( b ) ; float largest = ( a > b ) ? a : b ; if ( diff <= largest * relativeDiff ) { return true ; } return false ; }
Get the specific Token. <code> Token getToken ( int index ) { ,Token t = token ; for ( int i = 0 ; i < index ; i ++ ) { if ( t . next != null ) t = t . next ; else t = t . next = token_source . getNextToken ( ) ; } return t ; }
"Returns the unique node id for a given x,y-coodinate and the gridsize <code> String getGridNodeIdForCoord ( Coord coord , double gridSize ) { ","int xSlot = GridNode . getSlotForCoord ( coord . getX ( ) , gridSize ) ; int ySlot = GridNode . getSlotForCoord ( coord . getY ( ) , gridSize ) ; return GridNode . createGridNodeId ( xSlot , ySlot ) ; }"
"Convert a Map into a JsonObjectBuilder. All elements are parsed to ensure they are correctly converted into json. <code> JsonObjectBuilder toObjectBuilder ( Map < String , Object > map ) { ","JsonObjectBuilder b = Json . createObjectBuilder ( ) ; map . forEach ( ( k , v ) -> add ( b , k , v ) ) ; return b ; }"
"Defines the key for a local image, that must be found below the icons directory in the plugin. <code> void localImage ( String key , String dir , String name ) { ","if ( dir == null || dir . equals ( """" ) ) fLocations . put ( key , new String [ ] { ""icons/"" + name } ) ; else fLocations . put ( key , new String [ ] { ""icons/"" + dir + ""/"" + name } ) ; }"
"This method retrieves all the keywords for a particular subject <code> PreparedStatement getKeyWordsForSubject ( Connection conn , String subjectName ) { ","PreparedStatement preparedStatement = conn . prepareStatement ( MaintainSubjectsQueries . RETRIEVE_ALL_KEYWORDS_FOR_SUBJECT ) ; preparedStatement . setString ( 1 , subjectName ) ; return preparedStatement ; }"
Test for removing a users flair <code> void testRemoveUserFlair ( ) { ,"when ( restClient . post ( anyString ( ) , anyString ( ) , eq ( COOKIE ) ) ) . thenReturn ( desiredResponse ) ; subject . deleteFlair ( USERNAME , SUBREDDIT_NAME ) ; verify ( restClient , times ( 1 ) ) . post ( anyString ( ) , anyString ( ) , eq ( COOKIE ) ) ; }"
"Get the preferred filename, from the URI or the filename etc. <code> String getPreferredFilenameSafe ( ) { ","String ret = getPreferredFilename ( ) ; if ( ret == null ) return NodeL10n . getBase ( ) . getString ( ""RequestStatus.unknownFilename"" ) ; else return ret ; }"
Returns the dummy log to use if none has been set <code> ILogger getDummyLog ( ) { ,return new ILogger ( ) { @ Override public void log ( IStatus status ) { System . err . println ( status . toString ( ) ) ; if ( status . getException ( ) != null ) { status . getException ( ) . printStackTrace ( System . err ) ; } } } ; }
Get the uncallback values <code> List < Uncallback > getUncallback ( ) { ,if ( uncallback == null ) uncallback = new ArrayList < Uncallback > ( 1 ) ; return uncallback ; }
"Checks if the attacking entity is in range of the victim. <code> boolean inRange ( Entity attacker , Entity victim , int distance ) { ","int offset = victim . getSize ( ) >> 1 ; Location center = victim . getLocation ( ) . transform ( offset , offset , 0 ) ; if ( ! attacker . getLocation ( ) . withinDistance ( center , offset + distance ) ) { return false ; } return true ; }"
"Test of findAll method, of class GradeFacade. <code> void testFindAll ( ) { ","Grade gradeT1 = new Grade ( ) ; gradeT1 . setId ( ""1"" ) ; Grade gradeT2 = new Grade ( ) ; gradeT2 . setId ( ""2"" ) ; List < Grade > gradeL = new ArrayList < > ( ) ; gradeL . add ( gradeT1 ) ; gradeL . add ( gradeT2 ) ; assertEquals ( gradeL , mockGradeFacade . findAll ( ) ) ; }"
"Return the property value for the contextual locale. If no value is found, the given key is returned. <code> String getProperty ( String key , Object ... args ) { ","if ( key == null ) { return """" ; } return messageSource . getMessage ( key , args , LocaleHolder . getLocale ( ) ) ; }"
Return an arbitrary vertex of this graph <code> Vertex aVertex ( ) { ,if ( vertexList . size ( ) > 0 ) return ( Vertex ) vertexList . getFirst ( ) ; else return null ; }
Escapes some special values so that they don't disturb console rendering and are easier to read. <code> String prettyPrintDefaultValue ( ConfigurationMetadataProperty o ) { ,"if ( o . getDefaultValue ( ) == null ) { return ""<none>"" ; } return o . getDefaultValue ( ) . toString ( ) . replace ( "" "" , ""|n"" ) . replace ( "" "" , ""|t"" ) . replace ( """" , ""|f"" ) ; }"
Generates a Key Element from this class. <code> Element generateElement ( Document document ) { ,"Element node = document . createElement ( mxGmlConstants . PORT ) ; node . setAttribute ( mxGmlConstants . PORT_NAME , name ) ; for ( mxGmlData data : portDataMap . values ( ) ) { Element dataElement = data . generateNodeElement ( document ) ; node . appendChild ( dataElement ) ; } return node ; }"
Unpack a double from the stream. If the next item in the buffer is not of the right type then an IOException is thrown. <code> double unpackDouble ( ) { ,if ( ! _valid ) throw new IOException ( tsLogger . i18NLogger . get_state_InputBuffer_9 ( ) ) ; _valid = false ; double d = _input . readDouble ( ) ; _valid = true ; return d ; }
Gets the content of the file from cache this is a synchronous operation since there is no blocking or I/O <code> String getFileFromCache ( String filename ) { ,"LRUCache . CacheEntry < String , T > cachedTemplate = cache . get ( filename ) ; if ( cachedTemplate == null ) { return null ; } return cache . get ( filename ) . raw ; }"
Return a URLName representing this service. The password field will not be returned. <code> URLName getURLName ( ) { ,"if ( url != null && ( url . getPassword ( ) != null || url . getFile ( ) != null ) ) { return new URLName ( url . getProtocol ( ) , url . getHost ( ) , url . getPort ( ) , null , url . getUsername ( ) , null ) ; } return url ; }"
Calculates the start date based on range and Settings <code> Date getStartDate ( ) { ,"if ( isStartDateFixed ( ) ) { if ( isAbsolute ( ) ) { return _fixDate ; } else { Date now = new Date ( ) ; now = calcDateOffset ( now , _fixUnit , _fixNum * - 1 ) ; return now ; } } else { Date end = getEndDate ( ) ; return calcDateOffset ( end , _rangeUnit , _rangeNum * - 1 ) ; } }"
"Checks that every component has really advertised version (in other words, we are not waiting for version advertising), and that no version mismatch occurred <code> boolean noComponentVersionMismatches ( Collection < HostComponentStateEntity > hostComponents ) { ",for ( HostComponentStateEntity hostComponent : hostComponents ) { if ( UpgradeState . VERSION_NON_ADVERTISED_STATES . contains ( hostComponent . getUpgradeState ( ) ) ) { return false ; } } return true ; }
"Get root from the document <code> LwRootContainer getRootContainerFromDocument ( Document document , PropertiesProvider provider ) { ","final LwRootContainer root = new LwRootContainer ( ) ; root . read ( document . getRootElement ( ) , provider ) ; return root ; }"
"Getting existing cache if the cache available, else returns a newly created cache. This logic handles by javax.cache implementation <code> Cache < AuthorizationKey , AuthorizeCacheEntry > getCustomAuthorizationCache ( ) { ","Cache < AuthorizationKey , AuthorizeCacheEntry > cache = null ; CacheManager cacheManager = Caching . getCacheManagerFactory ( ) . getCacheManager ( CUSTOM_AUTH_CACHE_MANAGER ) ; cache = cacheManager . getCache ( CUSTOM_AUTH_CACHE ) ; return cache ; }"
"Transforms an array of argument objects into an array of argument types. For each argument being null the argument is null, too. An argument type being null means: Accepts everything (although this can be ambigous). <code> Class [ ] getArgumentTypes ( Object [ ] arguments ) { ",if ( arguments == null ) return new Class [ 0 ] ; Class [ ] argumentTypes = new Class [ arguments . length ] ; for ( int i = 0 ; i < arguments . length ; i ++ ) argumentTypes [ i ] = ( arguments [ i ] == null ) ? null : arguments [ i ] . getClass ( ) ; return argumentTypes ; }
Returns the rightmost 16 bits of the BitBuf as an int. <code> short toShort ( ) { ,long r = 0 ; for ( int i = 0 ; i < 2 ; i ++ ) r |= ( getOctet ( bitlen - 8 * ( i + 1 ) ) & 0xFF ) << ( i * 8 ) ; return ( short ) r ; }
Load a comma separated value out of the configuration an split it into a string array. <code> String [ ] loadConfigurationArray ( String key ) { ,"String value = ( new DSpace ( ) ) . getConfigurationService ( ) . getProperty ( key ) ; if ( StringUtils . isEmpty ( value ) ) { return null ; } return value . split ( "",|s*"" ) ; }"
Test that RedirectRenderingPipelineTerminator throws IllegalStateException if invoked without the redirect target having been set. <code> void throwsIllegalStateExceptionWhenRedirectToNotSet ( ) { ,"final RedirectRenderingPipelineTerminator unconfiguredTerminator = new RedirectRenderingPipelineTerminator ( ) ; unconfiguredTerminator . renderState ( mockRequest , mockResponse ) ; }"
Returns the amount of free physical memory in bytes. <code> long getFreePhysicalMemorySize ( ) { ,if ( getFreePhysicalMemorySize == null ) { return - 1 ; } try { return ( long ) getFreePhysicalMemorySize . invoke ( osMxBean ) ; } catch ( Throwable t ) { return - 1 ; } }
"Extract region or resolution level from JPEG 2000 image file. <code> void extractImage ( InputStream input , OutputStream output , DjatokaDecodeParam params , String fmtId ) { ","IWriter w = fmtFactory . getWriter ( fmtId ) ; extractImage ( input , output , params , w ) ; }"
"Used in test to remove all documents containing some term <code> void removeByTerm ( Directory dir , String term ) { ","IndexWriterConfig indexWriterConfig = new IndexWriterConfig ( LuceneSettings . analyzer ) ; IndexWriter iw = new IndexWriter ( dir , indexWriterConfig ) ; iw . deleteDocuments ( new Term ( ""body"" , term ) ) ; iw . commit ( ) ; iw . close ( ) ; }"
Returns the indices of all scopes called by the given one. <code> int [ ] adjacentTo ( final int node ) { ,"int [ ] adj = adjacent . get ( node ) ; if ( adj == null ) { adj = neighbors ( scopes . get ( node ) ) ; adjacent . set ( node , adj ) ; } return adj ; }"
"Checks that a move from X, Y to TX, TY is valid, where MOVESTR is the type of move, printed for debugging reasons. <code> void collisionCheck ( int x , int y , int tx , int ty , String moveStr ) { ","Occupant from = getOccupant ( x , y ) ; Occupant to = getOccupant ( tx , ty ) ; if ( ! isEmpty ( tx , ty ) ) { String msg = String . format ( ""%s tried to %s from "" + ""(%d, %d) to (%d, %d) already occupied by %s."" , from . name ( ) , moveStr , x , y , tx , ty , to . name ( ) ) ; throw new IllegalArgumentException ( msg ) ; } }"
"Returns the CSS class for a given resource type name and file name extension. <code> String getResourceSubTypeIconClass ( String resourceTypeName , String suffix , boolean small ) { ","StringBuffer buffer = new StringBuffer ( TYPE_ICON_CLASS ) . append ( ""_"" ) . append ( resourceTypeName . hashCode ( ) ) . append ( ""_"" ) . append ( suffix ) ; if ( small ) { buffer . append ( SMALL_SUFFIX ) ; } return buffer . toString ( ) ; }"
Convert a 32 bit netmask to CIDR netmask number <code> int getCidrMask ( final int mask ) { ,int testMask = 0xffffffff ; for ( int i = 0 ; i < 33 ; i ++ ) { if ( mask == testMask ) { return 32 - i ; } testMask <<= 1 ; } return - 1 ; }
Returns a string representation of this object; useful for testing and debugging. <code> String toString ( ) { ,"StringBuilder sb = new StringBuilder ( ) ; sb . append ( ""{"" ) ; if ( getResults ( ) != null ) sb . append ( ""Results: "" + getResults ( ) + "","" ) ; if ( getNextToken ( ) != null ) sb . append ( ""NextToken: "" + getNextToken ( ) ) ; sb . append ( ""}"" ) ; return sb . toString ( ) ; }"
"1. Let's verify some behavior! Once created, mock will remember all interactions. Then you can selectively verify whatever interaction you are interested in. <code> void testMockitoVerify ( ) { ","List < String > mockedList = Mockito . mock ( List . class ) ; mockedList . add ( ""one"" ) ; mockedList . clear ( ) ; Mockito . verify ( mockedList ) . add ( ""one"" ) ; Mockito . verify ( mockedList ) . clear ( ) ; mockedList . add ( ""one"" ) ; Mockito . verify ( mockedList , Mockito . times ( 2 ) ) . add ( ""one"" ) ; }"
Get the size adjustment <code> BigDecimal getSizeAdjustment ( SizeAdjustment size ) { ,"if ( sizeMultiplierMap . containsKey ( size ) ) { return sizeMultiplierMap . get ( size ) ; } if ( Logging . isDebugMode ( ) ) { Logging . debugPrint ( ""Unable to find Load Multiplier for Size: "" + size . getKeyName ( ) ) ; } return BigDecimal . ONE ; }"
"Copies file src to dest using nio. <code> void fileCopy ( final File src , final File dest , final boolean overwrite ) { ","if ( ! dest . exists ( ) || ( dest . exists ( ) && overwrite ) ) { FileUtils . mkParentDirs ( dest ) ; if ( overwrite ) { Files . copy ( src . toPath ( ) , dest . toPath ( ) , StandardCopyOption . REPLACE_EXISTING ) ; } else { Files . copy ( src . toPath ( ) , dest . toPath ( ) ) ; } } }"
"Return the blog home URL setting or the host name if home URL is an empty string. <code> String getHomeURLOrHostNameFromAccountMap ( Map < String , Object > account ) { ","String homeURL = UrlUtils . removeScheme ( MapUtils . getMapStr ( account , ""homeURL"" ) ) ; homeURL = StringUtils . removeTrailingSlash ( homeURL ) ; if ( homeURL . length ( ) == 0 ) { return StringUtils . getHost ( MapUtils . getMapStr ( account , ""url"" ) ) ; } return homeURL ; }"
Currently this only handles the case where starting in OpenMRS 1.9 you are no longer allowed to modify a ConceptDatatype. <code> boolean canBeSaved ( Class < ? > clazz ) { ,"if ( clazz . equals ( ConceptDatatype . class ) && ModuleUtil . compareVersion ( OpenmrsConstants . OPENMRS_VERSION_SHORT , ""1.9"" ) >= 0 ) { return false ; } else { return true ; } }"
Get inputs of its outtransitions. <code> char [ ] getOutTransitionInputs ( ) { ,char [ ] inputs = new char [ outTransitions . size ( ) ] ; Iterator < Transition > it = outTransitions . iterator ( ) ; int i = 0 ; while ( it . hasNext ( ) ) { inputs [ i ++ ] = it . next ( ) . getInput ( ) ; } return inputs ; }
Enable jobs sla alert. <code> boolean enableAlert ( List < String > jobIds ) { ,"try { return calcImpl . enableAlert ( jobIds ) ; } catch ( JPAExecutorException jpe ) { LOG . error ( ""Exception while updating SLA alerting for Job [{0}]"" , jobIds . get ( 0 ) ) ; throw new ServiceException ( jpe ) ; } }"
"Returns the constant for the given String (the search for the constant is case insensitive). If the constant does not already exist, an IllegalArgumentException is thrown. <code> SubRace valueOf ( String name ) { ","initializeTypeMap ( ) ; SubRace subRace = typeMap . get ( name ) ; if ( subRace == null ) { throw new IllegalArgumentException ( name + "" is not a previously defined SubRace"" ) ; } return subRace ; }"
Retrieve the ocra suite for this service. <code> String getOCRASuite ( ) { ,if ( _ocraSuite == null ) { return DEFAULT_OCRA_SUITE ; } return _ocraSuite ; }
"Calculate the variance by a predefined mean of values stored as <code> double varianceForGivenMean ( Path input , Path output , double mean , Configuration baseConf ) { ","VarianceTotals varianceTotals = computeVarianceTotals ( input , output , baseConf ) ; return varianceTotals . computeVarianceForGivenMean ( mean ) ; }"
"Run CLI with vaulted keystore and truststore passwords. Vault expression should not exists, so NullPointerException is expected <code> void testNonExistingVaultPassword ( ) { ","String cliOutput = CustomCLIExecutor . execute ( NON_EXISTING_VAULT_PASSWORD_FILE , READ_ATTRIBUTE_OPERATION + "" server-state"" ) ; assertThat ( ""Password should not exists"" , cliOutput , containsString ( ""NullPointerException"" ) ) ; }"
Removes the user sessions. <code> void removeUserSessions ( String username ) { ,final StreamError error = new StreamError ( StreamError . Condition . not_authorized ) ; for ( ClientSession session : SessionManager . getInstance ( ) . getSessions ( username ) ) { session . deliverRawText ( error . toXML ( ) ) ; session . close ( ) ; } }
Metodo para comprobar si un valor ya existe en el hashmap <code> boolean containsValue ( int valor ) { ,boolean encontrada = false ; int indice = 0 ; while ( indice < diccionario . size ( ) && ! ( encontrada ) ) { Celdilla temp = diccionario . get ( indice ) ; if ( valor == temp . getValor ( ) ) { encontrada = true ; } indice ++ ; } return encontrada ; }
"Returns the localized issue map from the given base map. If the base map does not contains an issue map for the given locale, a new map is added for the locale. <code> Map < String , String > getLocalIssueMap ( Map < Locale , Map < String , String >> base , Locale locale ) { ","Map < String , String > result = base . get ( locale ) ; if ( result == null ) { result = new HashMap < String , String > ( ) ; base . put ( locale , result ) ; } return result ; }"
"Add a page to this word. <code> void addPage ( Page page , int weight ) { ","Weight w = pages . get ( page ) ; if ( w == null ) { w = new Weight ( ) ; w . page = page ; pages . put ( page , w ) ; } w . value += weight ; page . relations ++ ; }"
"Called by the request handler thread, because it needs specific shutdown code for this connection's protocol if the keep-alive period expires (ie closing sockets, etc). This implementation simply shuts down the socket and streams. <code> void releaseSocket ( Socket socket , InputStream inSocket , OutputStream outSocket ) { ",inSocket . close ( ) ; outSocket . close ( ) ; socket . close ( ) ; }
Get all matching resources as URLs. <code> URL [ ] getAllMatchesURL ( ) { ,URL urls [ ] = new URL [ resources . length ] ; for ( int i = 0 ; i < resources . length ; i ++ ) { urls [ i ] = getURL ( resources [ i ] ) ; } return urls ; }
Parses a boolean from a single value <code> boolean getBoolean ( String t ) { ,Objects . requireNonNull ( t ) ; return t . equals ( getString ( 1 ) ) ; }
"Returns the word as it was typed, without any correction applied. <code> String getTypedWord ( ) { ",if ( size ( ) == 0 ) { return null ; } return mTypedWord . toString ( ) ; }
Returns true if this collection contains all of the elements in the specified collection. <code> boolean containsAll ( Collection < ? > c ) { ,Iterator < ? > e = c . iterator ( ) ; try { while ( e . hasNext ( ) ) if ( ! contains ( e . next ( ) ) ) return false ; return true ; } finally { close ( e ) ; } }
Get the value of cell corresponding to a column name. <code> String getCell ( String columnName ) { ,"if ( ! cells . containsKey ( columnName ) ) { return """" ; } return cells . get ( columnName ) ; }"
Parses the specified JSON text. <code> GenericJson parseJson ( String json ) { ,"JsonObjectParser parser = new JsonObjectParser ( OAuth2Utils . JSON_FACTORY ) ; InputStream stateStream = new ByteArrayInputStream ( json . getBytes ( StandardCharsets . UTF_8 ) ) ; GenericJson stateJson = parser . parseAndClose ( stateStream , StandardCharsets . UTF_8 , GenericJson . class ) ; return stateJson ; }"
Get the thread context class loader <code> ClassLoader getThreadContextClassLoader ( ) { ,return AccessController . doPrivileged ( new PrivilegedAction < ClassLoader > ( ) { @ Override public ClassLoader run ( ) { return Thread . currentThread ( ) . getContextClassLoader ( ) ; } } ) ; }
Get a nice message from a IStatus. <code> String getStatusMessage ( IStatus status ) { ,"StringBuilder statusMessage = new StringBuilder ( status . getMessage ( ) ) ; if ( status . isMultiStatus ( ) ) { appendChildrenStatus ( status , statusMessage , 1 ) ; } return statusMessage . toString ( ) ; }"
Tests add operation of two Bandwidths. <code> void testAdd ( ) { ,"Bandwidth expected = Bandwidth . kbps ( 1100.0 ) ; assertThat ( small . add ( large ) , is ( expected ) ) ; }"
"In the test, we're just going to invoke the only available operation in the +EmployeeBean+ and assert a few details to confirm that the native query was successfully executed. <code> void testNativeSql ( ) { ","List < Employee > employees = employeeBean . get ( ) ; assertFalse ( employees . isEmpty ( ) ) ; assertEquals ( 8 , employees . size ( ) ) ; }"
"Checks if the directory is still valid, i.e. exists and is writable. <code> boolean checkDirectory ( ) { ",try { Path path = Paths . get ( deliveryDir ) ; if ( path == null || ! Files . isDirectory ( path ) || ! Files . isWritable ( path ) ) return false ; } catch ( Exception ex ) { return false ; } return true ; }
A recursive method that walks up the tree of pivot fields/values to build a list of the String representations of the values that lead down to this PivotFacetValue. <code> List < String > getValuePath ( ) { ,List < String > out = parentPivot . getValuePath ( ) ; if ( null == value ) { out . add ( null ) ; } else if ( value instanceof Date ) { out . add ( TrieDateField . formatExternal ( ( Date ) value ) ) ; } else { out . add ( value . toString ( ) ) ; } return out ; }
"Metodo de utilidad que devuelve el valor de una propiedad que contega de key k <code> String getPropertie ( Properties properties , String k ) { ",Iterator < Object > keys = properties . keySet ( ) . iterator ( ) ; while ( keys . hasNext ( ) ) { String key = ( String ) keys . next ( ) ; if ( key . contains ( k ) ) return properties . getProperty ( key ) ; } return null ; }
Add and remove trade to market. <code> void addTrade ( Trade trade ) { ,"if ( ! trades . containsKey ( trade . getSs ( ) . getSymbol ( ) ) ) { trades . put ( trade . getSs ( ) . getSymbol ( ) , Collections . synchronizedList ( new ArrayList < Trade > ( ) ) ) ; } trades . get ( trade . getSs ( ) . getSymbol ( ) ) . add ( trade ) ; }"
Test clearing approved sites for a client that doesn't have any stored approved sites. Ensure that the repository's remove() method is never called in this case. <code> void clearApprovedSitesForClient_null ( ) { ,"String otherId = ""a different id"" ; client . setClientId ( otherId ) ; service . clearApprovedSitesForClient ( client ) ; Mockito . when ( repository . getByClientId ( otherId ) ) . thenReturn ( new HashSet < ApprovedSite > ( ) ) ; Mockito . verify ( repository , never ( ) ) . remove ( any ( ApprovedSite . class ) ) ; }"
Metoda za dohvat imena korisnika. <code> String getIme ( ) { ,"login = login + """" ; zaporka = zaporka + """" ; return ime ; }"
"Returns all models that relate to a dependency which is also a published module <code> Set < ModuleLicenseModel > getPublishedModulesFromModelList ( Collection < ModuleLicenseModel > models , final Collection < Module > modules ) { ","if ( CollectionUtils . isNullOrEmpty ( models ) || CollectionUtils . isNullOrEmpty ( modules ) ) { return Sets . newHashSet ( ) ; } return Sets . newHashSet ( Iterables . filter ( models , new PublishedModuleFilterPredicate ( modules ) ) ) ; }"
Find the valid input from all the inputs. <code> T findFirstValidInput ( T [ ] inputs ) { ,"if ( inputs . length > 0 && inputs [ 0 ] != null ) { return inputs [ 0 ] ; } for ( T input : inputs ) { if ( input != null ) { return input ; } } throw new HadoopIllegalArgumentException ( ""Invalid inputs are found, all being null"" ) ; }"
"Create a paragraph with the given text and font. <code> Paragraph createParagraph ( String text , Font font ) { ",Paragraph p = new Paragraph ( ) ; final Chunk chunk = new Chunk ( text ) ; chunk . setFont ( font ) ; p . add ( chunk ) ; return p ; }
"getPropertyMapper This method returns a VuePropertyMapper for the given object. If not mapper can be found for the object, null is returned. <code> VuePropertyMapper getPropertyMapper ( Object pObject ) { ",VuePropertyManager mgr = VuePropertyManager . getManager ( ) ; VuePropertyMapper mapper = mgr . getPropertyMapper ( pObject ) ; return mapper ; }
"Returns min, if x < min, else x. <code> double clampMin ( double x , double min ) { ",if ( x < min ) return min ; else return x ; }
"Opens the font file, ready for reading. <code> void openFile ( File file ) { ","try { reader = new BufferedReader ( new FileReader ( file ) ) ; } catch ( Exception e ) { e . printStackTrace ( ) ; System . err . println ( ""Couldn't read font meta file!"" ) ; } }"
"Add an icon and description to a menu item if the image can be loaded, otherwise return false. <code> boolean maybeSetIcon ( AbstractButton button , String iconName , String description ) { ","if ( iconName == null ) { return false ; } final ImageIcon iconImage = getImageIcon ( iconName , description ) ; if ( iconImage == null ) { return false ; } button . setIcon ( iconImage ) ; return true ; }"
This method returns the list of departments to be shown in the department dropdown. <code> List selectRequest_no ( statusILDReportDTO dto ) { ,List reportList ; statusILDReportDAO commonreportdao = new statusILDReportDAO ( ) ; reportList = commonreportdao . selectRequest_no ( dto ) ; return reportList ; }
Get the current session <code> CPLSession getCurrentSession ( ) { ,if ( current == null ) { cpl_id_t id = new cpl_id_t ( ) ; int r = CPLDirect . cpl_get_current_session ( id ) ; CPLException . assertSuccess ( r ) ; current = new CPLSession ( id ) ; } return current ; }
Check whether this DRM object can be forwarded. <code> boolean isAllowedToForward ( ) { ,if ( DrmRawContent . DRM_SEPARATE_DELIVERY != mDrmObject . getRawType ( ) ) { return false ; } return true ; }
Returns a singleton instance of the version four UUID generator. <code> VersionFourGenerator getInstance ( ) { ,if ( generator == null ) { generator = new VersionFourGenerator ( ) ; } return generator ; }
Verifies that an error is printed when the command is called w/out server or group params <code> void testStartNoServerOrGroupParams ( ) { ,"int exitCode = startCommand . execute ( new String [ 0 ] ) ; final String output = errorStringWriter . getBuffer ( ) . toString ( ) . trim ( ) ; assertEquals ( ""Either the name or ID of a server or group must be specified"" , output ) ; assertEquals ( 1 , exitCode ) ; }"
Extract method parameter's value from cookies. <code> Object extractParameterFromCookies ( CookieParam cookieParam ) { ,"String value = cookieParam . value ( ) ; WebRequest webRequest = AbstractRestResource . getCurrentWebRequest ( ) ; if ( webRequest . getCookie ( value ) == null ) return null ; return AbstractRestResource . toObject ( parameterClass , webRequest . getCookie ( value ) . getValue ( ) ) ; }"
"Removes the int at the given index, shifting the other ints down. <code> int removeNondestructively ( final int index ) { ","if ( index >= numObjs ) throwIndexOutOfBoundsException ( index ) ; int ret = objs [ index ] ; if ( index < numObjs - 1 ) System . arraycopy ( objs , index + 1 , objs , index , numObjs - index - 1 ) ; numObjs -- ; return ret ; }"
Determine whether or not the maximum allowed time has passed. The termination time is determined after the first generation. <code> boolean isSatisfied ( final Population population ) { ,if ( endTime < 0 ) { endTime = System . nanoTime ( ) + maxTimePeriod ; } return System . nanoTime ( ) >= endTime ; }
"Removes a contact, and indicates if the contact has really been removed. <code> boolean deleteContact ( String contactId ) { ",Contact existing = contacts . remove ( contactId ) ; return existing != null ; }
Returns true if the entity's Content-Type header is application/x-www-form-urlencoded. <code> boolean isEncoded ( final HttpEntity entity ) { ,final Header contentType = entity . getContentType ( ) ; return ( contentType != null && contentType . getValue ( ) . equalsIgnoreCase ( CONTENT_TYPE ) ) ; }
"Logs the given exception <code> boolean handleException ( Throwable e , SCLoggable logger ) { ","if ( e instanceof SocketTimeoutException ) { return true ; } if ( isCloseConnectionException ( e ) ) { return true ; } if ( logger != null ) { logger . log ( ""Exception"" , e , true ) ; } return false ; }"
Get the RGB value for a given color. <code> RGB getColorValue ( String rawValue ) { ,if ( rawValue == null ) { return null ; } rawValue = rawValue . trim ( ) ; if ( ! isDirectValue ( rawValue ) ) { return process ( rawValue ) ; } return StringConverter . asRGB ( rawValue ) ; }
Get the time to live <code> long getTimeToLive ( ) { ,"if ( HornetQRAMessageProducer . trace ) { HornetQRALogger . LOGGER . trace ( ""getTimeToLive()"" ) ; } return producer . getTimeToLive ( ) ; }"
"Adds the input tile, defined by its x, y, maxX, maxY values, to this tile. <code> void addTile ( final int tx , final int ty , final int tmaxX , final int tmaxY ) { ",if ( tx < x ) { x = tx ; } if ( ty < y ) { y = ty ; } if ( tmaxX > maxX ) { maxX = tmaxX ; } if ( tmaxY > maxY ) { maxY = tmaxY ; } }
"Returns a single argument for a command line option. <code> String getArgument ( List < String > args , int i , String arg ) { ","if ( i + 1 < args . size ( ) ) { return args . get ( i + 1 ) ; } throw new IOException ( arg + "": missing argument"" ) ; }"
This test makes sure that the common namespace mapping for PLAY is at least non-empty. <code> void testGetNsPrefixMap ( ) { ,"Map < String , String > map = EventFormatHelpers . getNsPrefixMap ( ) ; assertTrue ( ! map . isEmpty ( ) ) ; }"
"Deletes all keys from the database. Should be used for development and testing, not production. <code> void deleteAllKeys ( ) { ","Set < String > keys = jedis . keys ( ""*"" ) ; Transaction t = jedis . multi ( ) ; for ( String key : keys ) { t . del ( key ) ; } t . exec ( ) ; }"
Gets the directory where the CSV files are created. <code> String getPollDir ( ) { ,String pollDir = mProperties . getProperty ( CSV_KEY_DIR ) ; return pollDir != null ? pollDir : CSV_DEFAULT_DIR ; }
Acquires a Buffered Writer usable to write a new file <code> BufferedWriter getWriter ( String fileName ) { ,BufferedWriter x = new BufferedWriter ( new FileWriter ( fileName ) ) ; return x ; }
Kick off this thread which will look for old objects and remove them. <code> void startExpiring ( ) { ,stateLock . writeLock ( ) . lock ( ) ; try { if ( ! running ) { running = true ; expirerThread . start ( ) ; } } finally { stateLock . writeLock ( ) . unlock ( ) ; } }
"Return data in wraparound order. i0 and stride are used to traverse data; the new array is in packed (i0=0, stride=2) format. <code> double [ ] toWraparoundOrder ( double data [ ] , int i0 , int stride ) { ",if ( ( i0 == 0 ) && ( stride == 2 ) ) return data ; double newdata [ ] = new double [ 2 * n ] ; for ( int i = 0 ; i < n ; i ++ ) { newdata [ 2 * i ] = data [ i0 + stride * i ] ; newdata [ 2 * i + 1 ] = data [ i0 + stride * i + 1 ] ; } return newdata ; }
This method is used to call a method of DAO class to create a sub-category <code> boolean createSubCategory ( SubCategoryVO object1 ) { ,boolean result = false ; SubCategoryDAO subCategoryDAO = new SubCategoryDAO ( ) ; result = subCategoryDAO . createSubCategory ( object1 ) ; return result ; }
get name from vCard string <code> String getNameFromVCard ( String vCardString ) { ,VCard vCard = Ezvcard . parse ( vCardString ) . first ( ) ; String name = vCard . getFormattedName ( ) . getValue ( ) ; return name ; }
Get the priority of the specified thread. Must be called with interrupts disabled. <code> int getPriority ( KThread thread ) { ,Lib . assertTrue ( Machine . interrupt ( ) . disabled ( ) ) ; return 0 ; }
Returns a list of protocol messages of a specific type <code> List < Integer > getProtocolMessagePositions ( ProtocolMessageType type ) { ,List < Integer > positions = new LinkedList < > ( ) ; int position = 0 ; for ( ProtocolMessage pm : protocolMessages ) { if ( pm . getProtocolMessageType ( ) == type ) { positions . add ( position ) ; } position ++ ; } return positions ; }
Verifies that the file exists. <code> boolean fileExists ( String uri ) { ,"Assert . hasText ( uri , ""uri can not be empty nor null"" ) ; return shell . test ( uri ) ; }"
returns the clicked button's id <code> String getContainerId ( ToggleButton clicked ) { ,"String id = null ; for ( Entry < String , String > entry : selectedCards . entrySet ( ) ) { if ( entry . getValue ( ) . equals ( clicked . getId ( ) . substring ( 1 ) ) ) { return entry . getKey ( ) ; } } return null ; }"
"Though this listener reacts to the extension point changes, there could have been contributions before it's been registered. This will parse these initial contributions. <code> void parseInitialContributions ( ) { ",final IExtensionRegistry registry = Platform . getExtensionRegistry ( ) ; IExtensionPoint extensionPoint = registry . getExtensionPoint ( VALIDITY_EXPORTER_EXTENSION_POINT ) ; for ( IExtension extension : extensionPoint . getExtensions ( ) ) { parseExtension ( extension ) ; } }
"Called only from postEdit and endUpdate. Calls undoableEditHappened in all listeners. No synchronization is performed here, since the two calling methods are synchronized. <code> void _postEdit ( UndoableEdit e ) { ","UndoableEditEvent ev = new UndoableEditEvent ( realSource , e ) ; Enumeration cursor = ( ( Vector ) listeners . clone ( ) ) . elements ( ) ; while ( cursor . hasMoreElements ( ) ) { ( ( UndoableEditListener ) cursor . nextElement ( ) ) . undoableEditHappened ( ev ) ; } }"
Removes a conditioning variable. <code> void removeConditioningVariable ( String variable ) { ,"Node node = dataSet . getVariable ( variable ) ; if ( ! ( continuousIntervals . containsKey ( node ) ) ) { throw new IllegalArgumentException ( ""Not a conditioning node: "" + variable ) ; } continuousIntervals . remove ( node ) ; }"
Check the current memory usage and record it if it is higher than the amount of memory previously recorded. <code> void checkMemory ( ) { ,double currentMemory = ( Runtime . getRuntime ( ) . totalMemory ( ) - Runtime . getRuntime ( ) . freeMemory ( ) ) / 1024d / 1024d ; if ( currentMemory > maxMemory ) { maxMemory = currentMemory ; } }
"Causes player to leave their job <code> void leaveJob ( JobsPlayer jPlayer , Job job ) { ","synchronized ( jPlayer . saveLock ) { if ( ! jPlayer . isInJob ( job ) ) return ; if ( ! jPlayer . leaveJob ( job ) ) return ; Jobs . getJobsDAO ( ) . quitJob ( jPlayer , job ) ; Jobs . leaveSlot ( job ) ; } }"
Gets a property from the INI file. <code> String getProperty ( String key ) { ,"long k = NativeHelper . toNativeString ( key , false ) ; long r = NativeHelper . call ( 0 , ""INI_GetProperty"" , k ) ; String res = null ; if ( r != 0 ) { res = NativeHelper . getString ( r , 4096 , false ) ; } NativeHelper . free ( k ) ; return res ; }"
Adds the specified byte arrays to the buffer of bytes to be used for MAC generation <code> void addBytes ( byte [ ] ... input ) { ,for ( byte [ ] b : input ) { if ( b == null ) { throw new NullPointerException ( ) ; } mac . update ( b ) ; } }
"Contact exists. Checks if a contact with the given id exists in the contacts set of this instance of ContactManagerImpl, returns the contact if exists else null <code> Contact contactExists ( int id ) { ",for ( Contact c : contacts ) { if ( c . getId ( ) == id ) { return c ; } } return null ; }
Gets the value of the eol property. <code> boolean isEol ( ) { ,if ( eol == null ) { return false ; } else { return eol ; } }
Returns index assigned to the value. For new values new index will be assigned and returned. <code> int getIndex ( T value ) { ,"Integer index = objMapping . get ( value ) ; if ( index == null ) { index = nextIndex ; objMapping . put ( value , index ) ; indexMapping . put ( index , value ) ; nextIndex ++ ; } return index ; }"
Returns the corresponding access flags of the given access level. <code> int accessFlags ( int accessLevel ) { ,switch ( accessLevel ) { case PRIVATE : return ClassConstants . ACC_PRIVATE ; default : return 0 ; case PROTECTED : return ClassConstants . ACC_PROTECTED ; case PUBLIC : return ClassConstants . ACC_PUBLIC ; } }
"Returns a list of available issue link types, if issue linking is enabled. Each issue link type has an id, a name and a label for the outward and inward link relationship. <code> ResponseEntity < Object > getIssueLink ( @ PathVariable String linkId , HttpServletRequest httpRequest ) { ",IssueLinkRequest request = new IssueLinkRequest ( ) ; request . setKey ( linkId ) ; return jiraIssueService . getIssueLink ( request ) ; }
Tries to auto associate hosts to host groups. <code> String autoAssign ( ) { ,"Map < String , List < String >> assignments = client . recommendAssignments ( context . getFocusValue ( ) ) ; if ( ! assignments . isEmpty ( ) ) { hostGroups = assignments ; context . setHint ( Hints . CREATE_CLUSTER ) ; } return showAssignments ( ) ; }"
Returns the classes and interfaces the given target class extends/implements. <code> ArrayList getClassTypes ( Class target ) { ,ArrayList result = new ArrayList ( ) ; List classes = computeClassOrder ( target ) ; for ( Iterator i = classes . iterator ( ) ; i . hasNext ( ) ; ) { result . add ( ( ( Class ) i . next ( ) ) . getName ( ) ) ; } result . addAll ( computeInterfaceOrder ( classes ) ) ; return result ; }
Converts string to byte array. This is loosy algorithm because it gets only first byte from each char. <code> byte [ ] convertToBytes ( String strValue ) { ,int length = strValue . length ( ) ; byte [ ] bytes = new byte [ length ] ; for ( int i = 0 ; i < length ; i ++ ) { int c = strValue . charAt ( i ) & 255 ; if ( c > 127 ) { c = - ( c - 127 ) ; } bytes [ i ] = ( byte ) c ; } return bytes ; }
Return the MTargetable object of this context considering it's timstamp. The returned object is the same as it was when this context has been created. <code> Target getTargetable ( ) { ,if ( timeStamp > targetToSave . getTimestamp ( ) ) { return targetToSave . getLastKnownTargetable ( targetToSave . getTimestamp ( ) ) ; } return targetToSave . getLastKnownTargetable ( timeStamp ) ; }
Write integer to little-endian <code> byte [ ] writeInt ( int value ) { ,byte [ ] b = new byte [ 4 ] ; b [ 0 ] = ( byte ) ( value & 0x000000FF ) ; b [ 1 ] = ( byte ) ( ( value & 0x0000FF00 ) >> 8 ) ; b [ 2 ] = ( byte ) ( ( value & 0x00FF0000 ) >> 16 ) ; b [ 3 ] = ( byte ) ( ( value & 0xFF000000 ) >> 24 ) ; return b ; }
"Returns list of groups for a user. The LdapCtx which underlies the DirContext object is not thread-safe, so we need to block around this whole method. The caching infrastructure will ensure that performance stays in an acceptable range. <code> List < String > getGroups ( String user ) { ","List < String > emptyResults = new ArrayList < String > ( ) ; try { return doGetGroups ( user ) ; } catch ( Exception e ) { String msg = ""Unable to get groups of user"" ; handleException ( msg , e ) ; return emptyResults ; } }"
PsBasic can request authentication. <code> void requestAuthentication ( ) { ,"final Take take = new TkForward ( new TkAuth ( new TkSecure ( new TkText ( ""secured area..."" ) ) , new PsBasic ( ""the realm 5"" , new PsBasic . Default ( ""bob pwd88 urn:users:bob"" ) ) ) ) ; MatcherAssert . assertThat ( new RsPrint ( take . act ( new RqFake ( ) ) ) . print ( ) , Matchers . containsString ( ""HTTP/1.1 401 Unauthorized  "" ) ) ; }"
"returns null if it's raw, else the type token <code> TypeToken < T > getTypeTokenIfNotRaw ( @ Nullable TypeToken < T > type ) { ",if ( type == null || type . equals ( TypeToken . of ( type . getRawType ( ) ) ) ) { return null ; } else { return type ; } }
Adds the context resource link. <code> void addContextResourceLink ( ) { ,"final Tomcat85ContainerAdapter adapter = new Tomcat85ContainerAdapter ( ) ; adapter . addContextResourceLink ( context , null , false ) ; }"
Converts an array of GrantedAuthority objects to a Set. <code> Set < String > authorityListToSet ( Collection < ? extends GrantedAuthority > userAuthorities ) { ,Set < String > set = new HashSet < String > ( userAuthorities . size ( ) ) ; for ( GrantedAuthority authority : userAuthorities ) { set . add ( authority . getAuthority ( ) ) ; } return set ; }
Construct a data:text/html URI for loading from an inline HTML. <code> String encodeHtmlDataUri ( String html ) { ,"try { String encoded = ""data:text/html;utf-8,"" + java . net . URLEncoder . encode ( html , ""UTF-8"" ) ; encoded = encoded . replace ( ""+"" , ""%20"" ) ; return encoded ; } catch ( java . io . UnsupportedEncodingException e ) { Assert . fail ( ""Unsupported encoding: "" + e . getMessage ( ) ) ; return null ; } }"
Get the graphical viewer of the editor. <code> EditPartViewer getGraphicalViewer ( IEditorPart editor ) { ,if ( editor == null ) { editor = getActiveEditor ( ) ; } if ( editor instanceof Modeler ) { return ( ( Modeler ) editor ) . getGraphicalViewer ( ) ; } return null ; }
"Check if a socket binding group is one of a host's known resources <code> boolean isSocketBindingGroupKnown ( Resource domainRoot , String hostName , String socketBindingGroup ) { ","DomainControllerRuntimeIgnoreTransformationEntry hostIgnore = hostEntries . get ( hostName ) ; return ! hostIgnore . ignoreResource ( domainRoot , PathAddress . pathAddress ( PathElement . pathElement ( SOCKET_BINDING_GROUP , socketBindingGroup ) ) ) ; }"
Set maximum frame payload size that will be accepted when receiving. DEFAULT: 4MB <code> void setMaxFramePayloadSize ( int size ) { ,if ( size > 0 ) { mMaxFramePayloadSize = size ; if ( mMaxMessagePayloadSize < mMaxFramePayloadSize ) { mMaxMessagePayloadSize = mMaxFramePayloadSize ; } } }
"Returns the value of a JSON property as a String if it exists otherwise returns the defaultValue. <code> String getString ( JSONObject json , String key , String defaultValue ) { ",if ( json . containsKey ( key ) ) { return json . getString ( key ) ; } else { return defaultValue ; } }
"Put set B in set A, the delete set B. <code> Set < T > unionSets ( final Set < T > setA , final Set < T > setB ) { ",setA . addAll ( setB ) ; sets . remove ( setB ) ; return setA ; }
"Create a new map of all client ids set to zero <code> Map < Long , Integer > getEmptyClientCountMap ( ) { ","Map < Long , Integer > counts = new HashMap < > ( ) ; Collection < ClientDetailsEntity > clients = clientService . getAllClients ( ) ; for ( ClientDetailsEntity client : clients ) { counts . put ( client . getId ( ) , 0 ) ; } return counts ; }"
"GET to retrieve notes for a specific scheduled program <code> ResponseEntity < ScheduledProgramNote > getNotes ( @ PathVariable ( ""id"" ) Long id ) { ","ScheduledProgram scheduledProgram = new ScheduledProgram ( id ) ; ScheduledProgramNote note = scheduleService . findNotes ( scheduledProgram ) ; if ( note != null ) { return new ResponseEntity < > ( note , OK ) ; } return new ResponseEntity < > ( NO_CONTENT ) ; }"
Finds the extension in the url <code> String findExtension ( String url ) { ,int dotPos = url . lastIndexOf ( '.' ) ; int slashPos = url . lastIndexOf ( '/' ) ; if ( dotPos > slashPos && dotPos > - 1 ) { return url . substring ( dotPos + 1 ) ; } return defaultExtension ; }
Create a horizontal bar chart with sample data in the range -3 to +3. <code> JFreeChart createChart ( ) { ,"XYSeries series1 = new XYSeries ( ""Series 1"" ) ; series1 . add ( 1.0 , 1.0 ) ; series1 . add ( 2.0 , 2.0 ) ; series1 . add ( 3.0 , 3.0 ) ; XYDataset dataset = new XYSeriesCollection ( series1 ) ; return ChartFactory . createXYLineChart ( ""XY Line Chart"" , ""Domain"" , ""Range"" , dataset ) ; }"
Generic method used to get all objects of a particular type. This is the same as lookup up all rows in a table. <code> List getObjects ( Class clazz ) { ,session = HibernateSessionFactory . currentSession ( ) ; try { return session . createCriteria ( clazz ) . list ( ) ; } catch ( Exception e ) { e . printStackTrace ( ) ; return null ; } finally { HibernateSessionFactory . closeSession ( ) ; } }
sets if the original char meta class is used <code> void setOrigChar ( boolean v ) { ,origChar = v ; origCharRes = withoutCustomHandle && origChar ; }
"Get rank1 value at specified index in serialized Long array. <code> int getRank1 ( LongArrayStream arrayBuf , int startPos , int size , long i ) { ","int sp = 0 , ep = size - 1 ; int m ; while ( sp <= ep ) { m = ( sp + ep ) / 2 ; if ( arrayBuf . get ( startPos + m ) == i ) { return m + 1 ; } else if ( i < arrayBuf . get ( startPos + m ) ) { ep = m - 1 ; } else { sp = m + 1 ; } } return ep + 1 ; }"
Returns the network parameters for the given string ID or NULL if not recognized. <code> NetworkParameters fromID ( String id ) { ,if ( id . equals ( ID_MAINNET ) ) { return MainNetParams . get ( ) ; } else if ( id . equals ( ID_TESTNET ) ) { return TestNet3Params . get ( ) ; } else if ( id . equals ( ID_UNITTESTNET ) ) { return UnitTestParams . get ( ) ; } else { return null ; } }
"Update outgoing message before sending. <code> void updateOutgoingMessage ( AbstractChat chat , Message message ) { ","if ( ! isSupported ( chat , true ) ) return ; message . addExtension ( new ChatStateExtension ( ChatState . active ) ) ; sent . put ( chat . getAccount ( ) , chat . getUser ( ) , ChatState . active ) ; cancelPauseIntent ( chat . getAccount ( ) , chat . getUser ( ) ) ; }"
Returns true iff there is an edge that has not been returned by a previous call of the next method. <code> boolean hasNext ( ) { ,if ( localIterator . hasNext ( ) ) { return true ; } else { if ( ! agenda . isEmpty ( ) ) { current = agenda . pop ( ) ; localIterator = lattice . upperNeighbors ( current ) ; return ( localIterator != null && localIterator . hasNext ( ) ) ; } else { return false ; } } }
"Write an integer to the buffer using variable length encoding. The maxSize constrains how many bytes (and therefore the maximum number) that will be written. <code> void writeVarInt ( ByteBuf to , int toWrite , int maxSize ) { ","Validate . isTrue ( varIntByteCount ( toWrite ) <= maxSize , ""Integer is too big for %d bytes"" , maxSize ) ; while ( ( toWrite & - 128 ) != 0 ) { to . writeByte ( toWrite & 127 | 128 ) ; toWrite >>>= 7 ; } to . writeByte ( toWrite ) ; }"
Retrives all recruiters from the database <code> List < User > getRecruiters ( ) { ,List < User > allRecruiters = new ArrayList < User > ( ) ; for ( User user : userService . findAllUsers ( ) ) { if ( user . getRole ( ) . getRoleId ( ) == 2 ) { allRecruiters . add ( user ) ; } } return allRecruiters ; }
Compute the number of bytes that would be needed to encode an unsigned varint. <code> int computeUnsignedVIntSize ( final long value ) { ,int magnitude = Long . numberOfLeadingZeros ( value | 1 ) ; return 9 - ( ( magnitude - 1 ) / 7 ) ; }
"Register a biome with ATG. <code> void addBiome ( BiomeType type , String group , BiomeGenBase biome , double weight ) { ","ATGBiomeEvent event = new ATGBiomeEvent ( type , group , biome , null , weight ) ; MinecraftForge . EVENT_BUS . post ( event ) ; }"
Helper method to convert a latin-1 String to an array of bytes for use as a delimiter Please do not use this for non latin-1 characters <code> Buffer latin1StringToBytes ( String str ) { ,byte [ ] bytes = new byte [ str . length ( ) ] ; for ( int i = 0 ; i < str . length ( ) ; i ++ ) { char c = str . charAt ( i ) ; bytes [ i ] = ( byte ) ( c & 0xFF ) ; } return Buffer . buffer ( bytes ) ; }
Constructor tests for default constructor <code> void testConstructor_noArgs_defaultStyleClass ( ) { ,"ProgressBarTableCell < Object > cell = new ProgressBarTableCell < > ( ) ; assertTrue ( cell . getStyleClass ( ) . contains ( ""progress-bar-table-cell"" ) ) ; }"
Creates the StorageFile object based on the user specified path (if any) or the default storage path. <code> StorageFile initializeStorage ( String [ ] launchArgs ) { ,boolean isStorageFileSpecifiedByUser = launchArgs . length > 0 ; return isStorageFileSpecifiedByUser ? new StorageFile ( launchArgs [ 0 ] ) : new StorageFile ( ) ; }
Returns the ID of a token for a given name. <code> int getTokenId ( String name ) { ,"final Integer id = TOKEN_NAME_TO_VALUE . get ( name ) ; if ( id == null ) { throw new IllegalArgumentException ( ""given name "" + name ) ; } return id ; }"
sRGB --> linear RGB Use the gamma curve (gamma=2.4 in sRGB) <code> float [ ] fromRGB ( float [ ] in ) { ,float [ ] out = new float [ 3 ] ; for ( int i = 0 ; i < 3 ; i ++ ) { float n = in [ i ] ; if ( n < 0 ) n = 0f ; if ( n > 1 ) n = 1f ; if ( n <= 0.03928f ) out [ i ] = ( float ) ( n / 12.92 ) ; else out [ i ] = ( float ) ( Math . exp ( 2.4 * Math . log ( ( n + 0.055 ) / 1.055 ) ) ) ; } return out ; }
Returns the name associated with an ordinal; the return value is null if the ordinal is not a member of the enumeration. <code> String getName ( int ordinal ) { ,Util . assertPrecondition ( isImmutable ( ) ) ; final Value value = ordinalToValueMap [ ordinal - min ] ; return ( value == null ) ? null : value . getName ( ) ; }
Handles all exception that do not match other handlers. Returns error code 500. The exception message is returned as the response body. <code> String handleException ( Exception e ) { ,"LOGGER . error ( ""Error processing template"" , e ) ; return e . getMessage ( ) ; }"
"Returns true if this chat transport supports typing notifications, otherwise returns false. <code> boolean allowsTypingNotifications ( ) { ",Object tnOpSet = chatRoom . getParentProvider ( ) . getOperationSet ( OperationSetTypingNotifications . class ) ; if ( tnOpSet != null ) return true ; else return false ; }
"Returns a configured NetworkConfiguration object, or null when an I/O error occurs. <code> NetworkConfiguration getInstance ( ) { ","if ( config == null ) { try { config = new NetworkConfiguration ( NetworkInterface . getNetworkInterfaces ( ) ) ; } catch ( SocketException e ) { logger . error ( ""Inspecting the network failed: "" + e . getMessage ( ) , e ) ; } } return config ; }"
"Utility method for null-safe conversion from String to byte[] <code> byte [ ] stringToBytes ( String value , String encoding ) { ",try { return value != null ? value . getBytes ( encoding ) : null ; } catch ( UnsupportedEncodingException e ) { throw new IllegalArgumentException ( e ) ; } }
Tests a priority in the director range. <code> void testDirectorPriorities ( ) { ,"int directorPriority = PacketProcessor . director ( 3 ) ; assertThat ( directorPriority , lessThan ( PacketProcessor . DIRECTOR_MAX ) ) ; assertThat ( directorPriority , greaterThanOrEqualTo ( PacketProcessor . ADVISOR_MAX ) ) ; }"
"Determine the folder ID when no knowledge of it currently exists. <code> long getFolderId ( long groupId , long dataRepositoryId ) { ",if ( groupId != dataRepositoryId ) { return dataRepositoryId ; } else { return DEFAULT_PARENT_FOLDER_ID ; } }
"Registers the given jolokia URL for the given container if its not null <code> void registerJolokiaUrl ( Container container , String jolokiaUrl ) { ","if ( Strings . isNotBlank ( jolokiaUrl ) ) { String currentUrl = container . getJolokiaUrl ( ) ; if ( ! Objects . equal ( jolokiaUrl , currentUrl ) ) { container . setJolokiaUrl ( jolokiaUrl ) ; } } }"
"Returns the bounds of the tile which covers the center of the map extent in the CRS of the map. <code> ReferencedEnvelope getBoundsOfCenterTileInMapCrs ( int zoomLevel , TileService wmtSource ) { ","Tile centerTile = getCenterTile ( zoomLevel , wmtSource ) ; ReferencedEnvelope boundsInTileCrs = centerTile . getExtent ( ) ; ReferencedEnvelope boundsInMapCrs = projectTileToMapCrs ( boundsInTileCrs ) ; return boundsInMapCrs ; }"
"get an int value from a byte array <code> int getInt ( byte [ ] data , int offset ) { ",int i = offset ; int b0 = data [ i ++ ] & 0xFF ; int b1 = data [ i ++ ] & 0xFF ; int b2 = data [ i ++ ] & 0xFF ; int b3 = data [ i ++ ] & 0xFF ; return ( b3 << 24 ) + ( b2 << 16 ) + ( b1 << 8 ) + ( b0 << 0 ) ; }
Converts a given amount of Objects to a single String representing a list in Prolog notation. <code> String objectsToArgList ( Object ... objects ) { ,List < Object > temp = new ArrayList < Object > ( ) ; for ( Object obj : objects ) { temp . add ( obj ) ; } return listToArgList ( temp ) ; }
Find all strongly connected components in the graph. <code> int [ ] [ ] componentsInMatrix ( int [ ] [ ] matrix ) { ,int [ ] [ ] list ; list = matrix2list . transform ( matrix ) ; return componentsInList ( list ) ; }
Updates an existing object. The changes to be made to the corresponding object within the directory indicated by the provided data. <code> void updateObject ( ExternalType modifiedObject ) { ,"if ( modifiedObject == null ) throw new GuacamoleClientException ( ""Data must be submitted when updating objects."" ) ; translator . applyExternalChanges ( object , modifiedObject ) ; directory . update ( object ) ; }"
"Set a selected property in the configuration. <code> void setProperty ( String key , String value ) { ","if ( key == null ) { LOGGER . severe ( ""Trying to set property with key == null"" ) ; return ; } ogaProperties . setProperty ( key , value ) ; saveProperties ( ) ; }"
Returns the earliest date in a collection of dates <code> Date getEarliest ( Collection < Date > dates ) { ,if ( dates . isEmpty ( ) ) { return null ; } return Collections . min ( dates ) ; }
"Updates the length, if and only if the length was previously unknown. <code> void updateLength ( long length ) { ","if ( mLength == Constants . UNKNOWN_SIZE ) { mLength = length ; } else if ( mLength != length ) { LOG . warn ( ""Attempting to update block length ({}) to a different length ({})."" , mLength , length ) ; } }"
This function finds the number of occurences of each character in the script. <code> void findCharactersCount ( ) { ,"Vector < String > script = movie . getScript ( ) ; for ( String i : characters ) { for ( String j : script ) { characters_count . put ( i , characters_count . get ( i ) + StringSupport . countWords ( i . toLowerCase ( ) , j . toLowerCase ( ) ) ) ; } } }"
Prints max number from an array of double elements. <code> double getMax ( double [ ] array ) { ,double max = 0 ; for ( int i = 0 ; i < array . length ; i ++ ) { if ( array [ i ] > max ) { max = array [ i ] ; } } return max ; }
"Stop all process and block until they complete or until time runs out <code> boolean closeAndWaitForCompletion ( long timeout , TimeUnit unit ) { ","close ( ) ; return executorService . awaitTermination ( timeout , unit ) ; }"
"Returns the index of the closest point to the current instance. Index is index in Instances object that is the second parameter. <code> int closestPoint ( Instance instance , Instances allPoints , int [ ] pointList ) { ","double minDist = Integer . MAX_VALUE ; int bestPoint = 0 ; for ( int i = 0 ; i < pointList . length ; i ++ ) { double dist = distance ( instance , allPoints . instance ( pointList [ i ] ) ) ; if ( dist < minDist ) { minDist = dist ; bestPoint = i ; } } return pointList [ bestPoint ] ; }"
Obtiene el valor de una propiedad dada por su nombre. <code> String getPropiedad ( String nombre_propiedad ) { ,checkFicheroPropiedadesCargado ( ) ; String valor = properties . getProperty ( nombre_propiedad ) ; valor = Cadenas . trim ( valor ) ; return valor ; }
Writes pending text (characters inside elements) to the writer. This method is called from startElement and endElement. <code> void writePendingText ( ) { ,"if ( textBuf . length ( ) != 0 ) writer . characters ( textBuf . toString ( ) . toCharArray ( ) , 0 , textBuf . length ( ) ) ; textBuf = null ; }"
"Writes the specified key in X509 encoding to a stream. Note: This method doesn't close the supplied stream. <code> void writeKey ( final SecretKey key , final OutputStream out ) { ","Validate . notNull ( key , ""Key must not be null"" ) ; Validate . notNull ( out , ""OutputStream must not be null"" ) ; X509EncodedKeySpec x509EncodedKeySpec = new X509EncodedKeySpec ( key . getEncoded ( ) ) ; out . write ( x509EncodedKeySpec . getEncoded ( ) ) ; }"
Updates the specified medical type. In case of error a message error is shown and a false value is returned. <code> boolean updateMedicalType ( MedicalType medicalType ) { ,"try { return ioOperations . updateMedicalType ( medicalType ) ; } catch ( OHException e ) { JOptionPane . showMessageDialog ( null , e . getMessage ( ) ) ; return false ; } }"
Ensure that a specific specialized method now exists. <code> void initializeSpecializedMethod ( int id ) { ,if ( VM . VerifyAssertions ) VM . _assert ( id >= 0 ) ; if ( VM . VerifyAssertions ) VM . _assert ( id < numSpecializedMethods ) ; if ( VM . VerifyAssertions ) VM . _assert ( methods [ id ] == null ) ; methods [ id ] = MemoryManager . createSpecializedMethod ( id ) ; }
Sets the specified ResultSegment to be the parent segment and sets the isSegmentActive switch to true. <code> void activateSegment ( final ResultSegment resultSegment ) { ,parentSegment = resultSegment ; isSegmentActive = true ; }
"Gets the smallest angle possible from 0. Converts stuff like 7pi/4, etc to the minimum angle with the same position. <code> float getRealAngle ( float theta ) { ",theta %= TrigMath . TWO_PI ; if ( theta < 0 ) { theta += TrigMath . TWO_PI ; } return theta ; }
imediateVal method extracts the number in immediate value. If there is any problem with the value it will return -10000. (-1 could be the real value in the immediate). <code> int immediateVal ( ) { ,"if ( ( name . toLowerCase ( ) . startsWith ( ""0x"" ) && ( isNumber . isNumberH ( name . substring ( 2 ) ) ) ) || ( name . toLowerCase ( ) . startsWith ( ""0x-"" ) && ( isNumber . isNumberH ( name . substring ( 3 ) ) ) ) ) return Integer . parseInt ( name . substring ( 2 ) , 16 ) ; else return - 10000 ; }"
Rounding of input to 2 digits decimal of CapChartFetcher.GRID_SIZE <code> double snapToGrid ( double in ) { ,double out = ( double ) Math . round ( in / CapChartFetcher . GRID_SIZE ) * CapChartFetcher . GRID_SIZE ; return ( double ) Math . round ( out * 100 ) / 100 ; }
Convert this object to an intent. <code> Intent toIntent ( final Context context ) { ,"final Intent intent = new Intent ( ) ; if ( null != context ) { intent . setClass ( context , DownloadService . class ) ; } intent . setAction ( DownloadService . ACTION_REMOVE_DOWNLOAD ) ; intent . putExtras ( extras ) ; intent . putExtra ( DownloadService . EXTRA_LONG_ID , downloadId ) ; return intent ; }"
Method to remove any tags the user may attempt to input from the UI An example of a troublesome tag would be a closing div tag as a nickname <code> String cleanTags ( String clean ) { ,"clean = clean . replaceAll ( ""<"" , ""&lt;"" ) ; clean = clean . replaceAll ( "">"" , ""&gt;"" ) ; clean = clean . replaceAll ( ""&"" , ""&amp;"" ) ; return ( clean ) ; }"
Tests that ThresholdEvent implements Serializable. <code> void testSerializable ( ) { ,ThresholdEvent event = new ThresholdEvent ( new Object ( ) ) ; Assert . assertTrue ( event instanceof Serializable ) ; }
Load the gzipped compound from the inputstream. <code> NBTTagCompound readCompressed ( InputStream par0InputStream ) { ,DataInputStream datainputstream = new DataInputStream ( new BufferedInputStream ( new GZIPInputStream ( par0InputStream ) ) ) ; try { NBTTagCompound nbttagcompound = read ( datainputstream ) ; return nbttagcompound ; } finally { datainputstream . close ( ) ; } }
"Plots line segments connecting points (i, a[i]) to standard draw. <code> void plotLines ( double [ ] a ) { ","int N = a . length ; StdDraw . setXscale ( 0 , N - 1 ) ; StdDraw . setPenRadius ( ) ; for ( int i = 1 ; i < N ; i ++ ) { StdDraw . line ( i - 1 , a [ i - 1 ] , i , a [ i ] ) ; } }"
Defines an audio format <code> AudioFormat getAudioFormat ( ) { ,"float sampleRate = 44100 ; int sampleSizeInBits = 8 ; int channels = 1 ; boolean signed = false ; boolean bigEndian = false ; return new AudioFormat ( sampleRate , sampleSizeInBits , channels , signed , bigEndian ) ; }"
Gets the value of the dataBound property. <code> boolean isDataBound ( ) { ,if ( dataBound == null ) { return true ; } else { return dataBound ; } }
Processes the given simple (or primitive) field and updates the meatadata. <code> void processSimpleField ( Field child ) { ,PropertyMetadata propertyMetadata = IntrospectionUtils . getPropertyMetadata ( child ) ; if ( propertyMetadata != null ) { processPropertyOverride ( propertyMetadata ) ; metadata . putPropertyMetadata ( propertyMetadata ) ; } }
Sets the resource list. <code> void setResourceList ( ResourceList resourceList ) { ,"if ( Trace . isTraceOn ( ) ) Trace . log ( Trace . INFORMATION , ""Setting the meta resource list."" ) ; resourceList_ = resourceList ; }"
Notification that the primary server has changed. <code> void primaryServer ( ServerSessionManager sessionManager ) { ,if ( getSessionManager ( ) == sessionManager ) { if ( ! isPrimary ( ) ) { setPrimary ( true ) ; activate ( ) ; } } else { if ( isPrimary ( ) ) { setPrimary ( false ) ; deactivate ( ) ; } } }
"format number with fixed width <code> String formatNumber ( Object n , int length ) { ","if ( length == 0 ) { length = 1 ; } if ( n instanceof Integer ) { return String . format ( ""%1$"" + length + ""d"" , ( int ) n ) ; } else if ( n instanceof Long ) { return String . format ( ""%1$"" + length + ""d"" , ( long ) n ) ; } else { return String . format ( ""%1$"" + length + ""s"" , n . toString ( ) ) ; } }"
get one month + one week before today date <code> String getBeginDate ( Date date ) { ,"DateFormat sdf = new SimpleDateFormat ( ""ddMMyyyy"" ) ; Calendar cal = new GregorianCalendar ( ) ; cal . setTime ( date ) ; cal . set ( Calendar . MONTH , cal . get ( Calendar . MONTH ) - 1 ) ; cal . set ( Calendar . DAY_OF_MONTH , cal . get ( Calendar . DAY_OF_MONTH ) - 7 ) ; return sdf . format ( cal . getTime ( ) ) ; }"
"verifies new and confirm passwords <code> String validateNewPassword ( String newPw , String confirmPw ) { ","Util . argCheckNull ( newPw ) ; Util . argCheckNull ( confirmPw ) ; String error = """" ; if ( newPw . length ( ) == 0 ) error = ERR_MUST_ENTER_PASSWORD . getText ( ) ; else if ( ! newPw . equals ( confirmPw ) ) error = ERR_PASSWORD_NOT_SAME . getText ( ) ; return error ; }"
Returns all the packages that are known to the callers class loader. It may return an empty array if the classloader of the caller is null. <code> Package [ ] getPackages ( ) { ,Class c = VMSecurityManager . getClassContext ( ) [ 1 ] ; ClassLoader cl = c . getClassLoader ( ) ; return cl != null ? cl . getPackages ( ) : new Package [ 0 ] ; }
"Gets the property descriptor for the named property from the bean info describing a particular class to which property belongs. <code> PropertyDescriptor getPropertyDescriptor ( final BeanInfo info , final String propertyName ) { ",for ( int i = 0 ; i < info . getPropertyDescriptors ( ) . length ; i ++ ) { final PropertyDescriptor pd = info . getPropertyDescriptors ( ) [ i ] ; if ( pd . getName ( ) . equals ( propertyName ) ) { return pd ; } } return null ; }
"Get best key that matches in the order: Exact, Wildcard, None <code> Key getBestMatchKey ( Class cls , Set < Key > keys ) { ","int match = compare ( cls , keys ) ; if ( match == MATCH_NONE ) { return null ; } return match == MATCH_EXACT ? new Key ( cls ) : new Key ( ) ; }"
Returns the adapter position of the last fully visible view. This position does not include adapter changes that were dispatched after the last layout pass. <code> int findLastCompletelyVisibleItemPosition ( ) { ,"final View child = findOneVisibleChild ( layoutManager . getChildCount ( ) - 1 , - 1 , true , false ) ; return child == null ? RecyclerView . NO_POSITION : recyclerView . getChildAdapterPosition ( child ) ; }"
Returns the easter sunday within the julian chronology. <code> LocalDate getJulianEasterSunday ( int year ) { ,"int a , b , c , d , e ; int x , month , day ; a = year % 4 ; b = year % 7 ; c = year % 19 ; d = ( 19 * c + 15 ) % 30 ; e = ( 2 * a + 4 * b - d + 34 ) % 7 ; x = d + e + 114 ; month = x / 31 ; day = ( x % 31 ) + 1 ; return LocalDate . from ( JulianChronology . INSTANCE . date ( year , ( month == 3 ? 3 : 4 ) , day ) ) ; }"
Returns the logger used by JFace Data Binding to log errors. The default logger prints the status to System.err. <code> ILogger getLog ( ) { ,if ( log == null ) { log = getDummyLog ( ) ; } return log ; }
"Convert star tsv text file to binary dat file <code> void convertTsvToDat ( String tsvFileName , String datFileName , float radius ) { ","ByteBuffer bbuf = convertTsvToByteBuffer ( tsvFileName , radius ) ; try { WWIO . saveBuffer ( bbuf , new File ( datFileName ) ) ; } catch ( IOException e ) { Logging . logger ( ) . log ( java . util . logging . Level . SEVERE , Logging . getMessage ( ""generic.ExceptionAttemptingToWriteTo"" , datFileName ) , e ) ; } }"
Gets the StrutsModel for the current context (=file) or combined model for current module. <code> StrutsModel getStrutsModelOrCombined ( final ConvertContext context ) { ,final StrutsModel modelByFile = getStrutsModel ( context ) ; if ( modelByFile != null ) { return modelByFile ; } return StrutsManager . getInstance ( context . getFile ( ) . getProject ( ) ) . getCombinedModel ( context . getModule ( ) ) ; }
Converts response of the service (in XML format) into valid result object. <code> CheckResult convertResponseToResult ( String aResponse ) { ,CheckResult result = null ; if ( ! StringUtils . isEmpty ( aResponse ) ) { Document doc = parse ( aResponse ) ; result = convertDocumentToResult ( doc ) ; } return result ; }
Predicate that matches RequestHandler with given annotation on the declaring class of the handler method <code> Predicate < RequestHandler > withClassAnnotation ( final Class < ? extends Annotation > annotation ) { ,return new Predicate < RequestHandler > ( ) { @ Override public boolean apply ( RequestHandler input ) { return declaringClass ( input ) . isAnnotationPresent ( annotation ) ; } } ; }
Checks the creation permissions of the current user and enables/disables the create buttons accordingly. <code> void checkCreationPermissions ( ) { ,"if ( ! SecurityUtils . isSuperuserOrUserInRoles ( UserRole . ROLE_CREATE_PROJECTS ) ) { Button createOrderButton = ( Button ) planner . getPage ( ) . getFellow ( ""createOrderButton"" ) ; if ( createOrderButton != null ) { createOrderButton . setDisabled ( true ) ; } } }"
Gets the value of the integrate property. <code> boolean isIntegrate ( ) { ,if ( integrate == null ) { return false ; } else { return integrate ; } }
Extract the list of possible attendee ids from the XML config. <code> Set < String > listPossibleAttendeeIds ( MeetingMinutesAsAService minutesAsAService ) { ,Set < String > result = minutesAsAService . getPossibleAttendees ( ) . getAttendee ( ) . stream ( ) . filter ( att -> att . isEnabled ( ) ) . map ( att -> att . getId ( ) ) . collect ( Collectors . toSet ( ) ) ; return result ; }
"Called internally to readBlock(). Don't use directly. Caller must ensure dataLen < buffer length This method will sanity check that you aren't reading past the end of the file. <code> int readFromFile ( byte [ ] buffer , long seekPos , int requestedLen ) { ","try { raFile . seek ( seekPos ) ; int bytesRead = raFile . read ( buffer , 0 , requestedLen ) ; return bytesRead ; } catch ( IOException e ) { if ( PrismFontFactory . debugFonts ) { e . printStackTrace ( ) ; } return 0 ; } }"
Retrieve an upper bound on the error associated with an estimate or null if errors have not been enabled. <code> Long getError ( @ Nonnull String key ) { ,if ( errors == null ) { return null ; } Long error = errors . get ( key ) ; if ( error != null ) { return error ; } else { return 0L ; } }
This method stops sending data to the given consumer <code> void abortConsumer ( ImageConsumer ic ) { ,ic . imageComplete ( ImageConsumer . IMAGEERROR ) ; consumers . remove ( ic ) ; }
This method does not allow you to set the value of alpha outside the designated range. <code> void setAlpha ( double val ) { ,if ( val < ALPHA_LOWER_BOUND ) { alpha = ALPHA_LOWER_BOUND ; } else if ( val > ALPHA_UPPER_BOUND ) { alpha = ALPHA_UPPER_BOUND ; } else alpha = val ; }
Check package access on the proxy interfaces that the given proxy class implements. <code> void checkProxyPackageAccess ( Class < ? > clazz ) { ,SecurityManager s = System . getSecurityManager ( ) ; if ( s != null ) { if ( Proxy . isProxyClass ( clazz ) ) { for ( Class < ? > intf : clazz . getInterfaces ( ) ) { checkPackageAccess ( intf ) ; } } } }
Make sure some constants are in sync. Because of some maven dependencies these variables cannot always be reused but are redefined. We are trying to avoid this. <code> void testStaticProperties ( ) { ,"assertEquals ( Event . ICON . toString ( ) , Stream . STREAM_ICON ) ; assertEquals ( Event . ICON . toString ( ) , eu . play_project . play_commons . constants . Event . EVENT_ICON ) ; }"
"Reads a population in binary form, from the format generated by writePopulation(...). The number of subpopulations and the species information must be identical. <code> void readPopulation ( final EvolutionState state , final DataInput dataInput ) { ","int numSubpopulations = dataInput . readInt ( ) ; if ( numSubpopulations != subpops . length ) state . output . fatal ( ""On reading subpopulation from binary stream, the number of subpopulations was wrong."" ) ; for ( int i = 0 ; i < subpops . length ; i ++ ) subpops [ i ] . readSubpopulation ( state , dataInput ) ; }"
"Returns user name and password pair as it is specified in the XML. If the credential type is password-file, the path name is returned. <code> Pair < String , String > getReadPasswordInfo ( Datasource db ) { ",for ( Interface ifs : db . getInterfaces ( ) . getInterfaces ( ) ) { if ( ( ifs . getType ( ) == Interfacetype . READONLY ) && ( ifs . getCredential ( ) != null ) ) { return getPasswordInfo ( ifs . getCredential ( ) ) ; } } return getDefaultPasswordInfo ( db . getInterfaces ( ) ) ; }
Extract name of drawable resource from path. <code> String getBaseName ( String resPath ) { ,"String drawable = resPath ; if ( drawable . contains ( ""/"" ) ) { drawable = drawable . substring ( drawable . lastIndexOf ( '/' ) + 1 ) ; } if ( resPath . contains ( ""."" ) ) { drawable = drawable . substring ( 0 , drawable . lastIndexOf ( '.' ) ) ; } return drawable ; }"
Add a ConditionFactor to a ConditionTerm. <code> void addConditionFactor ( ConditionFactor factor ) { ,"if ( conditionFactors . contains ( factor ) ) { throw new WebDAVException ( WebDAVStatus . SC_BAD_REQUEST , ""Error parsing If header: duplicate entry in list"" ) ; } conditionFactors . addElement ( factor ) ; }"
"Entered a new loop, Pushing the number of the starting bracket to the loop stack. <code> void pushLoopStartPointer ( int loopPointer ) { ",loopPointerIndex ++ ; loopPointerStack [ loopPointerIndex ] = loopPointer ; }
This method deletes all users and therefore renders logging impossible. <code> int deletePolsearchineUsers ( ) { ,"LOGGER . log ( Level . SEVERE , ""Deleting all users."" ) ; return entityManager . createQuery ( ""DELETE FROM PolsearchineUserEntity"" ) . executeUpdate ( ) ; }"
Returns the names of all defined user libraries. The corresponding classpath container path is the name appended to the CONTAINER_ID. <code> String [ ] getUserLibraryNames ( ) { ,Set set = getLibraryMap ( ) . keySet ( ) ; return ( String [ ] ) set . toArray ( new String [ set . size ( ) ] ) ; }
Return the most recent transitions's target state. <code> CharState lastChild ( ) { ,"assert hasChildren ( ) : ""No outgoing transitions."" ; return charStates [ charStates . length - 1 ] ; }"
Returns the message parameters. <code> Object [ ] getParameters ( ) { ,if ( parameters != null ) { return parameters ; } return serializedParameters ; }
"An array of four numbers in the form coordinate system (see below), giving the coordinates of the left, bottom, right, and top edges, respectively, of the shading's bounding box. <code> PDRectangle getBBox ( ) { ",if ( bBox == null ) { COSArray array = ( COSArray ) dictionary . getDictionaryObject ( COSName . BBOX ) ; if ( array != null ) { bBox = new PDRectangle ( array ) ; } } return bBox ; }
Generate a random key. <code> Key generateRandomKey ( ) { ,KeyGenerator generator ; try { generator = KeyGenerator . getInstance ( MASTER_KEY_ALGORITHM ) ; } catch ( NoSuchAlgorithmException e ) { throw new SecurityFeaturesException ( ) ; } generator . init ( new SecureRandom ( ) ) ; return generator . generateKey ( ) ; }
"Returns the space taken by the given key and value. <code> int spaceFor ( Object key , Object value ) { ",if ( value instanceof ILRUCacheable ) { return ( ( ILRUCacheable ) value ) . getCacheFootprint ( ) ; } return 1 ; }
jcmd -J-XX:+UsePerfData pid help help <code> void testJcmdPidHelpHelp ( ) { ,"OutputAnalyzer output = JcmdBase . jcmd ( VM_ARGS , new String [ ] { ""help"" , ""help"" } ) ; output . shouldHaveExitValue ( 0 ) ; verifyOutputAgainstFile ( output ) ; }"
"Parse a merge source line from a svn:mergeinfo property value (e.g. ""/trunk:1-100,104,108,110-115""). <code> void parseMergeinfoLine ( String line ) { ","int colon = line . indexOf ( ':' ) ; if ( colon > 0 ) { String pathElement = line . substring ( 0 , colon ) ; String revisions = line . substring ( colon + 1 ) ; parseRevisions ( pathElement , revisions ) ; } }"
"Register listener, that will receive events from currently active dataset <code> void addDatasetListener ( DataSetListener listener , FireMode fireMode ) { ","if ( fireMode == FireMode . IN_EDT || fireMode == FireMode . IN_EDT_CONSOLIDATED ) { inEDTListeners . addIfAbsent ( new ListenerInfo ( listener , fireMode == FireMode . IN_EDT_CONSOLIDATED ) ) ; } else { normalListeners . addIfAbsent ( new ListenerInfo ( listener , false ) ) ; } }"
Get all issue types <code> List < IssueType > getIssueTypes ( ) { ,"LOGGER . fine ( ""Fetching issue types"" ) ; return service . getIssueTypes ( ) ; }"
"Put an octet string with a specified tag. <code> void putOctetString ( byte [ ] s , int tag ) { ",putStringValue ( s ) ; putTag ( tag ) ; }
"Test of hashCode method, of class DefaultTemporalCoordinateSystem. <code> void testHashCode ( ) { ",int result = temporalCoordinateSystem1 . hashCode ( ) ; assertFalse ( temporalCoordinateSystem2 . hashCode ( ) == result ) ; }
"Test whether cache is found in cache name list of JCache API, fix pending Fix pending in ISPN-7095 <code> void testGetCacheNames ( ) { ","boolean passed = StreamSupport . stream ( cacheManager . getCacheNames ( ) . spliterator ( ) , true ) . anyMatch ( n -> getCacheNamesTestCacheName . equalsIgnoreCase ( n ) ) ; assertTrue ( getCacheNamesTestCacheName + "" cache name was not found in list retrieved from CacheManager"" , passed ) ; }"
Returns the directory to generate Maven POMs into. <code> File getMavenPomDir ( ) { ,"if ( pomDir == null ) { return new File ( project . getBuildDir ( ) , ""poms"" ) ; } return project . getFileResolver ( ) . resolve ( pomDir ) ; }"
Returns both OPD and IPDs diseases. In case of error a message error is shown and a null value is returned. <code> ArrayList < Disease > getDisease ( ) { ,"try { return ioOperations . getDiseases ( null , true , true , true ) ; } catch ( OHException e ) { JOptionPane . showMessageDialog ( null , e . getMessage ( ) ) ; return null ; } }"
begin REQUIRED insert(id=1) commit REQUIRED have 1 rows <code> void testRequired ( ) { ,process . required ( 1 ) ; checkCountRows ( 1 ) ; }
"used internally to refresh the ""first cell"" when the first cell is removed. <code> short findFirstCell ( short firstcell ) { ",short cellnum = ( short ) ( firstcell + 1 ) ; HSSFCell r = getCell ( cellnum ) ; while ( r == null && cellnum <= getLastCellNum ( ) ) { r = getCell ( ++ cellnum ) ; } if ( cellnum > getLastCellNum ( ) ) return - 1 ; return cellnum ; }
Call this when the result is ready and the result is a value. <code> void resultValue ( T result ) { ,"if ( ( result == null ) || ImmutableHelper . isImmutableType ( result . getClass ( ) ) || ( result instanceof Actor ) ) { resultReadyInternal ( State . DONE_IMMUTABLE , result ) ; } else { resultReadyInternal ( State . DONE_FROZEN , SerializableFreezer . freeze ( result ) ) ; } }"
"Place the ID at his place in the vector, increase order. <code> void indexID ( Vector releasedIdVector , int tempID ) { ","int index = 0 ; for ( Iterator iter = releasedIdVector . iterator ( ) ; iter . hasNext ( ) ; ) { Integer id = ( Integer ) iter . next ( ) ; if ( tempID < id . intValue ( ) ) { break ; } index ++ ; } releasedIdVector . insertElementAt ( new Integer ( tempID ) , index ) ; }"
Look up an argument by name <code> Argument forName ( String name ) { ,if ( named . containsKey ( name ) ) { return named . get ( name ) ; } else { for ( NamedArgumentFinder arguments : namedArgumentFinder ) { Argument arg = arguments . find ( name ) ; if ( arg != null ) { return arg ; } } } return null ; }
transforms multiple rects with all matrices <code> void rectValuesToPixel ( List < RectF > rects ) { ,for ( int i = 0 ; i < rects . size ( ) ; i ++ ) rectValueToPixel ( rects . get ( i ) ) ; }
Retrieves the data definition object based on its name. The id is a table name. If id has schema and the fully qualified id cannot be resolved the the table-only id is used <code> DatabaseRelationDefinition getDatabaseRelation ( RelationID id ) { ,DatabaseRelationDefinition def = tables . get ( id ) ; if ( def == null && id . hasSchema ( ) ) { def = tables . get ( id . getSchemalessID ( ) ) ; } return def ; }
Updates the line and column numbers. <code> void updateLineCol ( final char ch ) { ,if ( ch == '|r' ) { line ++ ; column = 0 ; lastCR = true ; } else { if ( ch == '|n' ) { if ( ! lastCR ) { line ++ ; column = 0 ; } } else { column ++ ; } lastCR = false ; } }
"Creates a new JScrollPane object with the given properties. <code> JScrollPane createJScrollPane ( Component component , Rectangle bounds , Color backgroundColor , boolean noBorder , boolean visible ) { ",JScrollPane pane = new JScrollPane ( ) ; if ( bounds != null ) { pane . setBounds ( bounds ) ; } pane . setBackground ( backgroundColor ) ; pane . setViewportView ( component ) ; if ( noBorder ) { pane . setBorder ( null ) ; } if ( ! visible ) { pane . setVisible ( false ) ; } return pane ; }
Constructs a polynomial using the bits from a long. Note that Java does not support unsigned longs. <code> CRCPolynomial createFromLong ( long l ) { ,TreeSet < BigInteger > dgrs = createDegreesCollection ( ) ; for ( int i = 0 ; i < 64 ; i ++ ) { if ( ( ( l >> i ) & 1 ) == 1 ) dgrs . add ( BigInteger . valueOf ( i ) ) ; } return new CRCPolynomial ( dgrs ) ; }
int to byte array <code> byte [ ] packInt ( int val ) { ,"byte [ ] valBytes = new byte [ Integer . SIZE / Byte . SIZE ] ; setInt ( val , valBytes , 0 ) ; return valBytes ; }"
Notify manager that the action of resetting the X axis has been selected. <code> void informResetXAxisActionSelected ( ) { ,resetX ( ) ; if ( plot . isTimeLabelEnabled ) { rescalePlotOnTimeAxis ( ) ; } plot . getPlotAbstraction ( ) . updateResetButtons ( ) ; plot . refreshDisplay ( ) ; }
Parse and execute a create statement from the token stream. <code> void createStatement ( ) { ,"_input . next ( ""create"" ) ; _input . next ( ""table"" ) ; String name = name ( ) ; Table table = tableDefinition ( ) ; _database . put ( name , table ) ; _input . next ( "";"" ) ; }"
Recupere un objet de type OdfCtrCand suivant son id <code> OdfCtrCand getCtrCandFromOffre ( CentreCandidature ctrCand ) { ,Optional < OdfCtrCand > centreOpt = offreDeFormation . stream ( ) . filter ( odfCtr -> odfCtr . getIdCtrCand ( ) . equals ( ctrCand . getIdCtrCand ( ) ) ) . findFirst ( ) ; if ( centreOpt . isPresent ( ) ) { return centreOpt . get ( ) ; } return null ; }
This test demonstrates how we can ensure that the method was invoked once and its method parameter was equal to 1L. Note: We shouldn't verify interactions between system under test and our test double if the method is a finder method. <code> void verifyThatMethodWasInvokedByPassing1LAsMethodParameter ( ) { ,repository . findById ( 1L ) ; verify ( repository ) . findById ( eq ( 1L ) ) ; }
"Returns a string identifier for this dictionary. While not required, the name should be unique to help users identify dictionaries which handle the same language. <code> String getName ( ) { ","NameInfo nameInfo = getExtension ( NameInfo . class ) ; String retVal = """" ; if ( nameInfo != null ) { retVal = nameInfo . getName ( ) ; } return retVal ; }"
"Binary annotations are tags applied to a Span to give it context. For example, a key ""your_app.version"" would let you lookup spans by version. <code> void submitBinaryAnnotation ( String key , String value ) { ","Span span = currentSpan ( ) . get ( ) ; if ( span == null ) return ; BinaryAnnotation ba = BinaryAnnotation . create ( key , value , endpoint ( ) ) ; synchronized ( span ) { span . addToBinary_annotations ( ba ) ; } }"
"Test of charAt method, of class Text. <code> void testCharAt ( ) { ","String s = ""One two three"" ; byte [ ] data = s . getBytes ( ) ; Text t = new Text ( ) ; t . strain ( data , 0 , data . length ) ; for ( int i = 0 ; i < data . length ; i ++ ) { assertEquals ( s . charAt ( i ) , t . charAt ( i ) ) ; } }"
"Loads some metadata about the type of the Homematic gateway. <code> void loadGatewayInfo ( HomematicConfig config , String id ) { ",RpcClient < String > rpcClient = new XmlRpcClient ( config ) ; try { config . setGatewayInfo ( rpcClient . getGatewayInfo ( id ) ) ; } finally { rpcClient . dispose ( ) ; } }
"Creates an new array of length arr+amount, identical to the original, arr, except with amount null bytes (0x00) padding the end. <code> byte [ ] padArrayEnd ( byte [ ] arr , int amount ) { ",byte [ ] arr2 = new byte [ arr . length + amount ] ; for ( int i = 0 ; i < arr . length ; i ++ ) { arr2 [ i ] = arr [ i ] ; } for ( int i = arr . length ; i < arr2 . length ; i ++ ) { arr2 [ i ] = 0 ; } return arr2 ; }
"clear the contents of the threads, and unblocks polling threads <code> void endOfLife ( ) { ",resultHolder . poisonPollers ( ) ; commandHolder . poisonPollers ( ) ; }
Function to make simple GET request directly from Tumblr api <code> String DirectHttpGET ( String targetUrl ) { ,"Request httpRequest = new Request ( Verb . GET , targetUrl ) ; httpRequest . setFollowRedirects ( false ) ; Response response = httpRequest . send ( ) ; return response . getBody ( ) ; }"
"Delete a given record from the dhcptab, and signal the server to reload the dhcptab if so requested <code> void deleteRecord ( DhcptabRecord rec , boolean signalServer , DhcpDatastore datastore ) { ","bridge . deleteDhcptabRecord ( rec , datastore ) ; if ( signalServer ) { bridge . reload ( ) ; } }"
Externalize this instance and handle obtaining the remoteInvoker stub <code> void writeExternal ( final ObjectOutput out ) { ,out . writeObject ( address ) ; out . writeInt ( maxPoolSize ) ; }
Reads in an externalized Portal <code> void readExternal ( ObjectInput in ) { ,int portalSetLength = in . readInt ( ) ; portalSet = new Triangle [ portalSetLength ] ; for ( int i = 0 ; i < portalSetLength ; i ++ ) { portalSet [ i ] = new Triangle ( ) ; portalSet [ i ] . readExternal ( in ) ; } center = new Vec3d ( ) ; center . readExternal ( in ) ; target = new Integer ( in . readInt ( ) ) ; }
"Returns the versioning selection options for display. <code> Map < String , String > getOptionsForDisplay ( ) { ","Map < String , String > map = new LinkedHashMap < String , String > ( ) ; if ( options != null ) { for ( VersioningActions option : options ) { String label = ""label.versioning.option."" + option . toString ( ) ; map . put ( option . name ( ) , label ) ; } } return map ; }"
"Converts the value to the correct type if necessary. <code> Object convertToType ( HmDatapoint dp , Object value ) { ",if ( dp . isBooleanType ( ) ) { return toBoolean ( value ) ; } else if ( dp . isIntegerType ( ) ) { return toInteger ( value ) ; } else if ( dp . isFloatType ( ) ) { return toNumber ( value ) ; } else if ( dp . isStringType ( ) ) { return toString ( value ) ; } else { return value ; } }
Events that affect the status of the associated Amazon EC2 instance. <code> java . util . List < InstanceStatusEvent > getEvents ( ) { ,if ( events == null ) { events = new java . util . ArrayList < InstanceStatusEvent > ( ) ; } return events ; }
Construct an empty list. <code> ListData newEmptyList ( ) { ,ListData result = new ListData ( ) ; result . setEditable ( false ) ; return result ; }
"Adds a new variable to the parser, or updates the value of an existing variable. This must be done before parsing an expression so the parser is aware that the new variable may be contained in the expression. <code> Double addVariable ( String name , double value ) { ","ASTVarNode toAdd = ( ASTVarNode ) symTab . get ( name ) ; if ( toAdd != null ) toAdd . setValue ( value ) ; else { toAdd = new ASTVarNode ( ParserTreeConstants . JJTVARNODE ) ; toAdd . setName ( name ) ; toAdd . setValue ( value ) ; symTab . put ( name , toAdd ) ; } return new Double ( value ) ; }"
This method was generated by CreditEase ibator-extending. This method corresponds to the database table personrel Sun Jan 13 16:31:41 CST 2013 <code> Criteria createCriteriaInternal ( ) { ,Criteria criteria = new Criteria ( ) ; return criteria ; }
"Find the raw query string parameter indicated and append it to the string builder. The appended value will be in the form 'paramName=paramValue' (minus the quotes). <code> boolean appendParameter ( StringBuilder builder , String queryString , String paramName ) { ","String rawParam = HTTPTransportUtils . getRawQueryStringParameter ( queryString , paramName ) ; if ( rawParam == null ) { return false ; } if ( builder . length ( ) > 0 ) { builder . append ( '&' ) ; } builder . append ( rawParam ) ; return true ; }"
"Updates the detail display to show how many more removes, and additions are needed in the grammar modification step. <code> void updateDisplay ( ) { ","int toRemove = lambdaProductions . size ( ) ; int toAdd = desiredProductions . size ( ) - currentProductions . size ( ) + lambdaProductions . size ( ) ; pane . detailLabel . setText ( toRemove + "" more remove(s), and "" + toAdd + "" more addition(s) needed."" ) ; if ( toAdd == 0 && toRemove == 0 ) nextStep ( ) ; }"
"Gets the latest versions of all suites that are either public, or owned by the current user. <code> SuiteInfo [ ] getLatestSuites ( ) { ",try { return adminDAO . getLatestSuitesForUser ( getUserName ( ) ) ; } catch ( AdminDAOSysException e ) { throw new WebServiceException ( e ) ; } }
Event handler for MenuItem one <code> void switchToOne ( ActionEvent event ) { ,"try { URL paneOneUrl = getClass ( ) . getResource ( ""/magrathea/marvin/desktop/app/view/main.fxml"" ) ; AnchorPane paneOne = FXMLLoader . load ( paneOneUrl ) ; BorderPane border = LoginService . getRoot ( ) ; border . setCenter ( paneOne ) ; } catch ( IOException e ) { e . printStackTrace ( ) ; } }"
"Generate a char index for the table, e.g, a = 0, b = 1, c = 2, etc. <code> int generateCharIdx ( char c ) { ",if ( c >= 'a' && c <= 'z' ) { return c - 'a' ; } return - 1 ; }
"Returns for each variable allowed in the template a corresponding values. The variable name should NOT include the $ prefix <code> Map < String , String > getTemplateVariables ( ) { ","Map < String , String > ret = new HashMap < String , String > ( ) ; ret . put ( ""westBoundLongitude"" , westBoundLongitude ) ; ret . put ( ""eastBoundLongitude"" , eastBoundLongitude ) ; ret . put ( ""southBoundLatitude"" , southBoundLatitude ) ; ret . put ( ""northBoundLatitude"" , northBoundLatitude ) ; return ret ; }"
"Returns true if the given port exists in the given ports list. <code> boolean portMatch ( int port , int [ ] ports ) { ","boolean portInList = false ; for ( int i = 0 , len = ports . length ; i < len ; i ++ ) { if ( port == ports [ i ] ) { portInList = true ; break ; } } return portInList ; }"
Parse an conditional expression. This is the expression after a where clause. <code> Expression parseCondExpression ( String condExpr ) { ,CCJSqlParser parser = new CCJSqlParser ( new StringReader ( condExpr ) ) ; try { return parser . Expression ( ) ; } catch ( Exception ex ) { throw new JSQLParserException ( ex ) ; } }
"Serialize an instance, restore it, and check for equality. <code> void testSerialization ( ) { ","OHLCSeries s1 = new OHLCSeries ( ""s1"" ) ; s1 . add ( new Year ( 2006 ) , 2.0 , 4.0 , 1.0 , 3.0 ) ; OHLCSeries s2 = ( OHLCSeries ) TestUtilities . serialised ( s1 ) ; assertEquals ( s1 , s2 ) ; }"
Returns whether this action node has a observed a given successor state node in the past <code> boolean referencesSuccessor ( UCTStateNode node ) { ,List < UCTStateNode > succesorsMatchingState = successorStates . get ( node . state ) ; if ( succesorsMatchingState == null ) { return false ; } else if ( succesorsMatchingState . contains ( node ) ) { return true ; } return false ; }
"Builds a CSV list from the String[]. <code> String getList ( String [ ] s , String separator , String quote ) { ",StringBuffer b = new StringBuffer ( s . length * 16 ) ; for ( int i = 0 ; i < s . length ; i ++ ) { b . append ( quote ) ; b . append ( s [ i ] ) ; b . append ( quote ) ; b . append ( separator ) ; } b . setLength ( b . length ( ) - separator . length ( ) ) ; return b . toString ( ) ; }
Get an XmlPathElement whose parent node is the segment name for this XmlPathElement. This method is used to create a node in a path when that node is not present in the Document. <code> XmlPathElement createPathElement ( ) { ,"Element el = node . getOwnerDocument ( ) . createElement ( getSegmentName ( ) ) ; node . appendChild ( el ) ; return new XmlPathElement ( el , getRemainingPath ( ) ) ; }"
Makes this instance immutable. <code> void setImmutable ( ) { ,locals . setImmutable ( ) ; stack . setImmutable ( ) ; }
"Checks whether table name and key column names of the given joinable and inverse collection persister match. <code> boolean isCollectionMatching ( Joinable mainSideJoinable , OgmCollectionPersister inverseSidePersister ) { ","boolean isSameTable = mainSideJoinable . getTableName ( ) . equals ( inverseSidePersister . getTableName ( ) ) ; if ( ! isSameTable ) { return false ; } return Arrays . equals ( mainSideJoinable . getKeyColumnNames ( ) , inverseSidePersister . getElementColumnNames ( ) ) ; }"
Processes the bundles and adds them to the treeIterator. <code> void processBundles ( ) { ,"while ( treeInput . hasNext ( ) ) { Bundle bundle = treeInput . next ( ) ; mapper . send ( bundle ) ; } mapper . sendComplete ( ) ; readTree = new ReadTree ( new File ( dir , ""data"" ) ) ; }"
Returns an array of the texture IDs. <code> int [ ] getTextures ( ) { ,int [ ] textureIds = new int [ textures ( ) ] ; int index = 0 ; for ( Integer id : m_textureIds ) { textureIds [ index ] = id ; index ++ ; } return textureIds ; }
Return an Enumeration of all available network interfaces <code> Enumeration getNetworkInterfaces ( ) { ,Vector networkInterfaces = VMNetworkInterface . getInterfaces ( ) ; if ( networkInterfaces . isEmpty ( ) ) return null ; Collection condensed = condense ( networkInterfaces ) ; return Collections . enumeration ( condensed ) ; }
"Halt the timing process and add the elapsed rewriting time. startRewriteTime() must be called for a particular context prior to calling stopAndAddRewriteTime(), otherwise the elapsed time will be negative and nonsensical <code> long stopAndAddRewriteTime ( ) { ","long time = Math . max ( 1 , System . nanoTime ( ) - rewriteScratch ) ; rewriteTime += time ; rewriteScratch = 0 ; return time ; }"
Get the index of the first character of the run with respect to the given attributes containing the current character. <code> int getRunStart ( Set attributes ) { ,int ndx = currentIndex ; try { while ( attributes . equals ( mapList . get ( ndx - 1 ) ) ) -- ndx ; } catch ( IndexOutOfBoundsException e ) { } return ndx ; }
Gets the properties of a given class. <code> Collection < BeanProperty > beanPropertiesOf ( final Class < ? > clazz ) { ,final Collection < BeanProperty > beanProperties = new ArrayList < BeanProperty > ( ) ; for ( final Method method : clazz . getMethods ( ) ) { if ( isBeanPropertyGetter ( method ) ) { beanProperties . add ( new BeanProperty ( method ) ) ; } } return beanProperties ; }
Converts the requested coordinate from double to fixed precision. <code> int convertToFixed ( double coordinate ) { ,int result ; result = ( int ) Math . round ( coordinate * MULTIPLICATION_FACTOR ) ; return result ; }
produces a normalized date. <code> DateValue toDate ( ) { ,"normalize ( ) ; return new DateValueImpl ( year , month , day ) ; }"
"Serialize an instance, restore it, and check for equality. <code> void testSerialization ( ) { ","DialPlot p1 = new DialPlot ( ) ; DialPlot p2 = ( DialPlot ) TestUtilities . serialised ( p1 ) ; assertEquals ( p1 , p2 ) ; }"
"Method to check if tile can be bought should check if tile is currently owned if the player has enough money to buy the tile sanity check to make sure it is not the town <code> boolean canTileBeBought ( Player player , Tile tile ) { ",if ( ! ( tile . isOwned ( ) ) && ( player . getMoney ( ) - MapManager . costOfTile ( ) >= 0 ) ) { return true ; } return false ; }
"Get a comparison key for an object. This must satisfy the rule that if two objects are equal, then their comparison keys are equal, and vice versa. There is no requirement that the comparison keys should reflect the ordering of the underlying objects. <code> ComparisonKey getComparisonKey ( AtomicValue a ) { ","if ( canReturnCollationKeys ) { return new ComparisonKey ( Type . STRING , platform . getCollationKey ( collator , a . getStringValue ( ) ) ) ; } else { return new ComparisonKey ( Type . STRING , a . getStringValue ( ) ) ; } }"
Return the events stored since the last request from the actor. <code> Vector getEvents ( ) { ,"cat . debug ( ""AS("" + actorSessionID + ""): calls getEvents(), from : "" + getLastId ( ) ) ; synchronized ( events ) { Vector v = new Vector ( events . subMap ( getLastId ( ) + 1 , max ) . values ( ) ) ; lastSentId = max - 1 ; cat . debug ( ""AS("" + actorSessionID + ""): size = "" + v . size ( ) ) ; return v ; } }"
"generate simple site model, for testing purposes <code> SiteModel getDefaultSiteModel ( ) { ","Parameter kappa = new Parameter . Default ( 1 , 2 ) ; Parameter freqs = new Parameter . Default ( new double [ ] { 0.25 , 0.25 , 0.25 , 0.25 } ) ; FrequencyModel f = new FrequencyModel ( Nucleotides . INSTANCE , freqs ) ; HKY hky = new HKY ( kappa , f ) ; return new GammaSiteModel ( hky ) ; }"
Remove deployment info saved for a project <code> void removeAll ( String projectName ) { ,List < DeploymentInfo > deployments = forProject ( projectName ) ; for ( int i = 0 ; i < deployments . size ( ) ; i ++ ) { deployments . remove ( i ) ; } }
Selects a value for grade from the Grade dropdown. <code> void selectGrade ( String grade ) { ,"FormActions dropdown = new FormActions ( driver ) ; dropdown . selectDropdownItemByID ( ""id_grade"" , grade ) ; }"
Scale must not contain units. <code> void testScaleFail ( ) { ,"try { PageScale . getScale ( ""0.5mm 0.5cm"" ) ; fail ( ""Expected IllegalArgumentException. Scale shouldn't contain units"" ) ; } catch ( IllegalArgumentException iae ) { } }"
"Writes backup OPML data to the file. <code> void writeBackupToFile ( Document aBackupOPMLDocument , File aBackupFile ) { ","FileOutputStream fos = new FileOutputStream ( aBackupFile ) ; XMLOutputter xo = new XMLOutputter ( ) ; xo . output ( aBackupOPMLDocument , fos ) ; fos . close ( ) ; }"
"Find a file by filename in the given directory (does not search recursively). NOTE: search is case-insensitive on filename. <code> File findFile ( String filename , File dir ) { ",if ( dir != null && dir . isDirectory ( ) ) { for ( File f : dir . listFiles ( ) ) { if ( f . getName ( ) . equalsIgnoreCase ( filename ) ) { return f ; } } } return null ; }
"Computes whether this ring is a hole. Due to the way the edges in the polyongization graph are linked, a ring is a hole if it is oriented counter-clockwise. <code> void computeHole ( ) { ",LinearRing ring = getRing ( ) ; isHole = CGAlgorithms . isCCW ( ring . getCoordinates ( ) ) ; }
"Returns the data for the given node. Creates a new NodeData if none exists yet. <code> DijkstraNodeData getData ( final Node n , Map < Id < Node > , DijkstraNodeData > nodeData ) { ","DijkstraNodeData r = nodeData . get ( n . getId ( ) ) ; if ( null == r ) { r = new DijkstraNodeData ( ) ; nodeData . put ( n . getId ( ) , r ) ; } return r ; }"
Checks if the type is void. <code> boolean isVoid ( Type type ) { ,final Class < ? > cls = TypeFactory . defaultInstance ( ) . constructType ( type ) . getRawClass ( ) ; return Void . class . isAssignableFrom ( cls ) || Void . TYPE . isAssignableFrom ( cls ) ; }
"Propagate all global keys matching a prefix <code> void propagateGlobalKeys ( ConfTree src , String prefix ) { ","Map < String , String > global = src . global ; for ( Map . Entry < String , String > entry : global . entrySet ( ) ) { String key = entry . getKey ( ) ; if ( key . startsWith ( prefix ) ) { set ( key , entry . getValue ( ) ) ; } } }"
Returns the base element type of an n-dimensional array class. <code> Class getElementClass ( Class arrayClass ) { ,Class elementClass = arrayClass ; while ( elementClass . getComponentType ( ) != null ) elementClass = elementClass . getComponentType ( ) ; return elementClass ; }
Get a 1D list from the 2D grid. <code> List < Element > toList ( ) { ,"final List < Element > list = new ArrayList < Element > ( SIZE * SIZE ) ; for ( byte row = 0 ; row < SudokuGrid . SIZE ; row ++ ) { for ( byte cell = 0 ; cell < SudokuGrid . SIZE ; cell ++ ) { list . add ( get ( row , cell ) ) ; } } return list ; }"
Marks this line empty. Also sets previous/next line's empty attributes. <code> void setEmpty ( ) { ,"m_sValue = """" ; m_nLeading = 0 ; m_nTrailing = 0 ; m_bIsEmpty = true ; if ( m_aNext != null ) m_aNext . m_bPrevEmpty = true ; }"
Find an enrolled subject byString name <code> Subject findEnrolledSubjects ( String subjectName ) { ,for ( Subject i : enrolledSubjects ) { if ( i . getName ( ) . equals ( subjectName ) ) { return i ; } } return null ; }
"This method recursively scans a node hierarchy to locate instances of a particular type. <code> List < T > findNodes ( List < Node > nodes , Class < T > cls ) { ","List < T > results = new ArrayList < > ( ) ; findNodes ( nodes , cls , results ) ; return results ; }"
"Removes all mappings with specified ""workItemId"" <code> void removeMapping ( String workItemId ) { ","Mapping mapping = ( Mapping ) _db . get ( Mapping . class , workItemId ) ; if ( mapping != null ) removeMapping ( mapping ) ; }"
Get the necessary bit shifts needed to align mask with 0. <code> int shiftCount ( int mask ) { ,if ( mask == 0 ) { return 0 ; } int i = 0 ; while ( ( mask & 0x1 ) == 0 ) { mask = mask >> 1 ; i ++ ; if ( i > 32 ) { throw new Error ( Integer . toHexString ( mask ) ) ; } } return i ; }
"Given a particular player, returns the opponent. <code> Rating getOpponent ( Rating player ) { ","Rating opponent ; if ( winner . equals ( player ) ) { opponent = loser ; } else if ( loser . equals ( player ) ) { opponent = winner ; } else { throw new IllegalArgumentException ( ""Player did not participate in match"" ) ; } return opponent ; }"
"If our size is >= than our max, we'll flush <code> void checkAndFlush ( ) { ","if ( target . getPendingMutationCount ( ) >= maxSize ) { logger . info ( ""Max mutation size of {} reached.  Flushing"" , maxSize ) ; target . execute ( ) ; } }"
Converts an integer result to a RESP integer. <code> ByteBuffer toInteger ( String integer ) { ,byte [ ] b = integer . getBytes ( ) ; ByteBuffer buf = ByteBuffer . allocate ( b . length + 3 ) ; buf . put ( INTEGER ) ; buf . put ( b ) ; buf . put ( CRLF ) ; buf . flip ( ) ; return buf ; }
Checks if experiment is worth to store (It's proposed experiment's value can be positive) <code> boolean isValuableExperiment ( Experiment e ) { ,"int match = e . experiment . size ( ) / 2 ; if ( match < 1 ) { return false ; } Experiment test = new Experiment ( e . experiment , match ) ; return test . valence >= 0 ; }"
Test that restoreCompanyById throws a ServiceLogicException if the company is not found <code> void testFindCompanyByIdNotFound ( ) { ,thrown . expect ( ServiceLogicException . class ) ; impl . restoreCompanyById ( - 999 ) ; }
"Clips the passed in String to the space provided. NOTE: this assumes the string does not fit in the available space. <code> String clipString ( JComponent c , FontMetrics fm , String string , int availTextWidth ) { ","string = ( String ) invokeSwingUtilities2StaticMethod ( ""clipString"" , new Class [ ] { JComponent . class , FontMetrics . class , String . class , int . class } , new Object [ ] { c , fm , string , availTextWidth } ) ; return string ; }"
Trigger animation from this one back to the previous screen <code> void triggerToPrev ( ) { ,if ( flyOut . isStopped ( ) ) { flyIn . setReverseMode ( ) ; flyIn . start ( ) ; } }
"Is currentClass present in the list of packages considered part of the logging framework? <code> boolean isInFrameworkSpaceList ( String currentClass , List < String > frameworkPackageList ) { ",if ( frameworkPackageList == null ) return false ; for ( String s : frameworkPackageList ) { if ( currentClass . startsWith ( s ) ) return true ; } return false ; }
"Queries, whether the given source is up-to-date relative to the given modification date. <code> boolean isUptodate ( long sourceDate , long destinationDate ) { ",if ( sourceDate == PlexusIoResource . UNKNOWN_MODIFICATION_DATE ) { return false ; } if ( destinationDate == 0 ) { return false ; } return destinationDate > sourceDate ; }
Determine if a string represents a Double <code> boolean isDouble ( String string ) { ,try { Double . parseDouble ( string ) ; return true ; } catch ( NumberFormatException nFE ) { return false ; } }
Returns the next element. <code> T nextElement ( ) { ,T temp = fElementQueue . fValue ; fElementQueue = fElementQueue . fNext ; return temp ; }
"Activate a particular loader, and deactivate any loader that was previously registered for the same file type <code> void activateLoader ( ModelLoaderFactory loader ) { ","if ( ! loaders . contains ( loader ) ) { throw new IllegalStateException ( ""Activating non-existant loader "" + loader ) ; } loader . setEnabled ( true ) ; if ( loader . getFileExtension ( ) != null ) activeLoaders . put ( loader . getFileExtension ( ) , loader ) ; }"
"DOC amaumont Comment method ""getExternalData"". <code> ExternalMapperData buildExternalData ( ) { ","ExternalDataConverter converter = new ExternalDataConverter ( mapperManager ) ; return converter . prepareExternalData ( mapperModel , mapperManager . getUiManager ( ) . getUiProperties ( ) ) ; }"
Restores this iterator to the position it had when getPos() returned the given object. <code> void setPos ( Object p ) { ,Object [ ] a = ( Object [ ] ) p ; buf = ( char [ ] ) a [ 0 ] ; int [ ] v = ( int [ ] ) a [ 1 ] ; pos . setIndex ( v [ 0 ] ) ; bufPos = v [ 1 ] ; }
"This method converts dp unit to equivalent pixels, depending on device density. <code> float convertDpToPixel ( float dp , Context context ) { ",Resources resources = context . getResources ( ) ; DisplayMetrics metrics = resources . getDisplayMetrics ( ) ; float px = dp * ( metrics . densityDpi / 160f ) ; return px ; }
Add a new row to the end of the sheet <code> Row addRow ( ) { ,lastRowNum ++ ; Row row = sheet . createRow ( lastRowNum ) ; return row ; }
"Called when a page is finished, just before being written to the document. <code> void onEndPage ( PdfWriter writer , Document document ) { ","PdfPageEvent event ; for ( Iterator i = events . iterator ( ) ; i . hasNext ( ) ; ) { event = ( PdfPageEvent ) i . next ( ) ; event . onEndPage ( writer , document ) ; } }"
returns a collection of all the companies registered on DB <code> Collection < Company > getAllCompanies ( ) { ,"Collection < Company > companies = new ArrayList < Company > ( ) ; try { companies = companyDAO . getAllCompanies ( ) ; } catch ( SQLException e1 ) { throw new CouponSystemException ( ""Failed reading companies"" , e1 ) ; } return companies ; }"
Gets the audio frequency of the data contained in this buffer. <code> int getFrequency ( ) { ,"al . alGetBufferi ( id , AL . AL_FREQUENCY , alResult , 0 ) ; return alResult [ 0 ] ; }"
"Return the cached RefReplicated associated with the specified parameters, if found. <code> RefReplicated getIfPresent ( String gerritServer , String gerritProject , String ref , String slaveHost ) { ","if ( events != null ) { RefReplicatedId refReplicatedId = new RefReplicatedId ( gerritServer , gerritProject , ref , slaveHost ) ; return events . getIfPresent ( refReplicatedId ) ; } else { return null ; } }"
"Creates a new User in the Data Base <code> BasicResult createUser ( UserSession userSession , User user ) { ","UserCommand userCommand = new UserCommand ( ) ; Object [ ] args = new Object [ 2 ] ; args [ 0 ] = userSession ; args [ 1 ] = user ; return userCommand . execute ( userSession , ResourceLocator . USER_CREATE , args ) ; }"
GithubProfile can accept YAML with script in merge command. <code> void acceptsYamlWithOnlyMerge ( ) { ,"final Repo repo = GithubProfileValidationTest . repo ( Joiner . on ( '|n' ) . join ( ""merge:"" , "" script:"" , ""  - pwd"" ) ) ; new GithubProfile ( repo ) . read ( ) ; }"
Verifies an error is printed when name argument is missing <code> void testDeleteGroupMissingName ( ) { ,"final int exitCode = deleteGroupCommand . execute ( new String [ 0 ] ) ; final String output = errorStringWriter . getBuffer ( ) . toString ( ) . trim ( ) ; assertEquals ( 1 , exitCode ) ; assertEquals ( ""Missing required argument --name"" , output ) ; }"
"Adjust (add) the color of the particle <code> void adjustColor ( int r , int g , int b , int a ) { ","if ( color == Color . white ) { color = new Color ( 1 , 1 , 1 , 1f ) ; } color . r += ( r / 255.0f ) ; color . g += ( g / 255.0f ) ; color . b += ( b / 255.0f ) ; color . a += ( a / 255.0f ) ; }"
Return the one-based line number associated with a given pos for the current source file. Zero is returned if no line exists for the given position. <code> int getLineNumber ( int pos ) { ,try { if ( findLine ( pos ) ) { return line ; } return 0 ; } finally { buf = null ; } }
Converts a color format of the form AABBGGRR to AARRGGBB <code> String convertColor ( String color ) { ,"String newColor ; if ( color . length ( ) > 6 ) { newColor = color . substring ( 0 , 2 ) + color . substring ( 6 , 8 ) + color . substring ( 4 , 6 ) + color . substring ( 2 , 4 ) ; } else { newColor = color . substring ( 4 , 6 ) + color . substring ( 2 , 4 ) + color . substring ( 0 , 2 ) ; } return newColor ; }"
"Create a URI form a no scheme Url, such as is returned by the AM. <code> URI getUriFromAMUrl ( String url ) { ",if ( getSchemeFromUrl ( url ) . isEmpty ( ) ) { return new URI ( HttpConfig . getSchemePrefix ( ) + url ) ; } else { return new URI ( url ) ; } }
Gets the value of the endPos property. <code> int getEndPos ( ) { ,if ( endPos == null ) { return 100000 ; } else { return endPos ; } }
Get the number of Datagrams in all Phones <code> int getNumberOfFrames ( ) { ,int totalNumberOfFrames = 0 ; for ( Phone phone : phones ) { totalNumberOfFrames += phone . getNumberOfFrames ( ) ; } return totalNumberOfFrames ; }
"Returns the singleton instance of ExternalAuthUtils, creating it if needed. <code> RevenueStats getInstance ( ) { ","if ( sInstance . get ( ) == null ) { ChromeApplication application = ( ChromeApplication ) ContextUtils . getApplicationContext ( ) ; sInstance . compareAndSet ( null , application . createRevenueStatsInstance ( ) ) ; } return sInstance . get ( ) ; }"
Validates and sets a given latitude value <code> void setLatitude ( double value ) { ,"if ( value > 90 || value < - 90 ) { throw new IllegalArgumentException ( ""latittude can not exceed +/- 90"" ) ; } location . setLatitude ( value ) ; }"
Compare this name to another name using basic string comparison logic. <code> int compareTo ( Named named ) { ,if ( named == null ) { return 1 ; } else if ( name == null ) { return - 1 ; } else { String otherName = named . getName ( ) ; if ( otherName == null ) { return 1 ; } else { return name . compareTo ( otherName ) ; } } }
"Check whether the given String looks like a waypoint type <code> boolean fieldLooksLikeWaypointType ( String inValue , boolean inIsHeader ) { ","if ( inValue == null || inValue . equals ( """" ) ) { return false ; } if ( inIsHeader ) { String upperValue = inValue . toUpperCase ( ) ; return ( upperValue . equals ( ""TYPE"" ) || upperValue . equals ( I18nManager . getText ( ""fieldname.waypointtype"" ) . toUpperCase ( ) ) ) ; } else { return false ; } }"
"Set String field record value <code> void setStringValue ( String columnName , String value ) { ",if ( values == null ) values = new ArrayList < DatabaseRecord > ( ) ; DatabaseRecord record = new AndroidRecord ( ) ; record . setName ( columnName ) ; record . setValue ( value ) ; record . setChange ( true ) ; values . add ( record ) ; }
Sets the connection timer values based on the active usage state of the connection. <code> void setInUse ( boolean inUse ) { ,if ( inUse ) { timeIdleInPool_ = 0 ; lastUseTime_ = System . currentTimeMillis ( ) ; timesUsedCount_ ++ ; } else { timeIdleInPool_ = System . currentTimeMillis ( ) ; lastUseTime_ = 0 ; } }
"At injection time of a XPC, register the XPC (step 1 of 2) finishRegistrationOfPersistenceContext is step 2 <code> void registerPersistenceContext ( ExtendedEntityManager xpc ) { ","if ( xpc == null ) { throw JpaLogger . ROOT_LOGGER . nullParameter ( ""SFSBXPCMap.RegisterPersistenceContext"" , ""EntityManager"" ) ; } final List < ExtendedEntityManager > store = deferToPostConstruct . get ( ) ; store . add ( xpc ) ; }"
"Returns the Unicode value for a subset index (character selector). If there's no such Unicode value, the ""NOT A CHARACTER"" (0xFFFF) is returned. <code> char getUnicodeForSubsetIndex ( int subsetIndex ) { ",Character mapValue = ( Character ) usedCharsIndex . get ( new Integer ( subsetIndex ) ) ; if ( mapValue != null ) { return mapValue . charValue ( ) ; } else { return CharUtilities . NOT_A_CHARACTER ; } }
Add not yet running machine <code> void addMachine ( MachineImpl machine ) { ,"if ( machines . containsKey ( machine . getId ( ) ) ) { throw new ConflictException ( ""Machine with id "" + machine . getId ( ) + "" is already exist"" ) ; } machines . put ( machine . getId ( ) , machine ) ; }"
Returns a set from comma delimted Strings. <code> Set < String > commaDelimitedStringToSet ( String s ) { ,"Set < String > set = new HashSet < String > ( ) ; String [ ] split = s . split ( "","" ) ; for ( String aSplit : split ) { String trimmed = aSplit . trim ( ) ; if ( trimmed . length ( ) > 0 ) set . add ( trimmed ) ; } return set ; }"
Create a context attribute from a string (convenience method). <code> ContextAttribute createContextAttribute ( String attributeName ) { ,ContextAttribute ca = new ContextAttribute ( ) ; ca . setName ( attributeName ) ; return ca ; }
Load the given class by name <code> Class loadClass ( String className ) { ,"Class clazz ; try { clazz = Class . forName ( className , true , getStandardClassLoader ( ) ) ; } catch ( ClassNotFoundException e ) { clazz = Class . forName ( className , true , getFallbackClassLoader ( ) ) ; } return clazz ; }"
Validate descriptor is already defined or not. <code> boolean isDescriptorRegistered ( ResourceDescriptor reference ) { ,ResourceDescriptor descriptor = getResourcesDescriptor ( reference . getName ( ) ) ; if ( descriptor != null ) { return true ; } return false ; }
Create the directory structure. <code> void createOutputFolderStructure ( Path destinationPath ) { ,"Path parentPath = destinationPath . getParent ( ) ; try { Files . createDirectories ( parentPath ) ; } catch ( IOException e ) { throw new Exception ( ""Error occurred while creating the directory '"" + parentPath + ""'."" , e ) ; } }"
Verifies that the path to the same square is empty. <code> void testShortestPathEmpty ( ) { ,"Board b = parser . parseMap ( Lists . newArrayList ( "" "" ) ) . getBoard ( ) ; Square s1 = b . squareAt ( 0 , 0 ) ; Square s2 = b . squareAt ( 0 , 0 ) ; List < Direction > path = Navigation . shortestPath ( s1 , s2 , mock ( Unit . class ) ) ; assertEquals ( 0 , path . size ( ) ) ; }"
"Provides an association URL. An association between the Relying Party and the OpenID Provider establishes a shared secret between them, which is used to verify subsequent protocol messages and reduce round trips. <code> String getAssociationURL ( final String url ) { ",String param = HttpUtil . buildParams ( associationMap ) ; char separator = url . indexOf ( '?' ) == - 1 ? '?' : '&' ; return url + separator + param ; }
"Encodes a string to be a valid path segment, which means it can contain PCHAR only (do not put path parameters or they will be escaped. Uses UTF-8. <code> String encodePathSegment ( final String pathSegment ) { ","try { return encodePart ( pathSegment , ""UTF-8"" , PATH_SEGMENT ) ; } catch ( final UnsupportedEncodingException e ) { throw new RuntimeException ( e ) ; } }"
"Start monitoring the given port, and return the port number to tunnel requests through. <code> int startMonitoring ( IServer server , ServerPort port , int monitorPort ) { ","try { return getDelegate ( ) . startMonitoring ( server , port , monitorPort ) ; } catch ( CoreException ce ) { throw ce ; } catch ( Exception e ) { if ( Trace . SEVERE ) { Trace . trace ( Trace . STRING_SEVERE , ""Error calling delegate "" + toString ( ) , e ) ; } return - 1 ; } }"
Returns true if the URL contains any invalid characters. <code> boolean containsInvalidURLCharacters ( final String url ) { ,for ( int i = 0 ; i < url . length ( ) ; i ++ ) { final char ch = url . charAt ( i ) ; if ( ch > URLUtility . SPECIAL_CHAR_LIMIT ) { return true ; } } return false ; }
Compute the base64 encoded size for a stream whose size is specified in the incoming parameter <code> int computeEncodedSize ( int size ) { ,int encodedSize ; int modulus = size % 3 ; if ( modulus == 0 ) { encodedSize = 4 * size / 3 ; } else { encodedSize = 4 * ( ( size / 3 ) + 1 ) ; } return encodedSize ; }
Acknowledge that batch work has been performed. <code> void workloadDone ( final int batch ) { ,workload -= batch ; completed -= batch ; }
A list of FilteredLogEvent objects representing the matched events from the request. <code> java . util . List < FilteredLogEvent > getEvents ( ) { ,if ( events == null ) { events = new com . amazonaws . internal . SdkInternalList < FilteredLogEvent > ( ) ; } return events ; }
Loads an existing profile application. <code> ProfileApplicationDecorator loadProfileApplication ( IFile profileApplicationFile ) { ,"ProfileApplicationDecorator profileApplication = new ProfileApplicationDecoratorImpl ( profileApplicationFile , resourceSet ) ; profileApplications . add ( profileApplication ) ; return profileApplication ; }"
"Get the data in this glyf as a byte buffer. Return the basic glyf data only, since there is no specific data. This method returns the data un-flipped, so subclasses can simply append to the allocated buffer. <code> ByteBuffer getData ( ) { ",ByteBuffer buf = ByteBuffer . allocate ( getLength ( ) ) ; buf . putShort ( getNumContours ( ) ) ; buf . putShort ( getMinX ( ) ) ; buf . putShort ( getMinY ( ) ) ; buf . putShort ( getMaxX ( ) ) ; buf . putShort ( getMaxY ( ) ) ; return buf ; }
Gets a message (can be used as an Exception message) for a particular error code. <code> String getErrorCodeMessage ( int errorCode ) { ,"switch ( errorCode ) { case ERROR_CODE_GLS_NOT_FOUND : return ""The Google login service cannot be found."" ; case ERROR_CODE_GLS_VERIFICATION_FAILED : return ""The Google login service cannot be verified."" ; default : return ""Unknown error"" ; } }"
"Calculates the preferred size dimensions for the specified container, given the components it contains. <code> Dimension preferredLayoutSize ( Container parent ) { ",if ( m_size == null ) layoutContainer ( parent ) ; return m_size ; }
"Create a pattern that will match any element that is matched by all of the given patterns. If no patterns are given, then the resulting pattern will not match any elements. <code> SearchPattern createAndPattern ( SearchPattern ... patterns ) { ",if ( patterns . length == 1 ) { return patterns [ 0 ] ; } return new AndSearchPattern ( patterns ) ; }
"Whether or not this state has _not_ occurred and is enabled -- i.e., whether this state's remote dependencies have been satisfied (occurred), and if the local preceding state has also occurred. <code> boolean isEnabled ( ) { ",assert isInitialized ( ) ; if ( hasOccurred ( ) ) { return false ; } if ( prevState != null && ! prevState . hasOccurred ( ) ) { return false ; } for ( ObsDAGNode rNode : remoteDependencies ) { if ( ! rNode . hasOccurred ( ) ) { return false ; } } return true ; }
"Returns the list of nodes which match the expression xpathExpr in the Document dom. <code> NodeList evaluateXpathExpression ( Document dom , String xpathExpr ) { ","XPathFactory factory = XPathFactory . newInstance ( ) ; XPath xpath = factory . newXPath ( ) ; XPathExpression expr = xpath . compile ( xpathExpr ) ; Object result = expr . evaluate ( dom , XPathConstants . NODESET ) ; NodeList nodes = ( NodeList ) result ; return nodes ; }"
Check if running on Windows <code> boolean isWindows ( ) { ,"String opSys = System . getProperty ( ""os.name"" ) ; return ( opSys . startsWith ( WINDOWS ) ) ; }"
"Invoke KeyProvider APIs to generate an encrypted data encryption key for an encryption zone. Should not be called with any locks held. <code> EncryptedKeyVersion generateEncryptedDataEncryptionKey ( final FSDirectory fsd , final String ezKeyName ) { ",if ( ezKeyName == null ) { return null ; } EncryptedKeyVersion edek = null ; try { edek = fsd . getProvider ( ) . generateEncryptedKey ( ezKeyName ) ; } catch ( GeneralSecurityException e ) { throw new IOException ( e ) ; } Preconditions . checkNotNull ( edek ) ; return edek ; }
"check the type of return, single vs multiple values <code> void testReturnsBag ( ) { ",FunctionDefinition fdNotBag = StdFunctions . FD_BOOLEAN_EQUAL ; assertFalse ( fdNotBag . returnsBag ( ) ) ; FunctionDefinitionBag < ? > fdBag = ( FunctionDefinitionBag < ? > ) StdFunctions . FD_STRING_BAG ; assertTrue ( fdBag . returnsBag ( ) ) ; }
Update predToPair cache map which could be out-of-sync due to external setUnit or clone operations on the UnitBoxes. <code> void updateCache ( ) { ,"predToPair = new HashMap ( ) ; Iterator pairsIt = argPairs . iterator ( ) ; while ( pairsIt . hasNext ( ) ) { ValueUnitPair vup = ( ValueUnitPair ) pairsIt . next ( ) ; predToPair . put ( vup . getUnit ( ) , vup ) ; } }"
"Returns the set token for the given object, or null if the object does not belong to any set. All object in the same set have an identical set token. <code> T findSet ( Object o ) { ",DisjointSet . Node < T > node = objectsToNodes . get ( o ) ; if ( node == null ) { return null ; } if ( o != node . parent ) { node . parent = findSet ( node . parent ) ; } return node . parent ; }
"Invoked just before writing, waits until writing is allowed. <code> void beforeWrite ( ) { ",while ( activeReaders > 0 || activeWriters > 0 ) { try { wait ( ) ; } catch ( InterruptedException iex ) { } } ++ activeWriters ; }
"Base64-encode the given byte array using the RFC 4868 ""URL and Filename Safe Alphabet"". <code> byte [ ] encodeUrlSafe ( byte [ ] src ) { ",assertDelegateAvailable ( ) ; return delegate . encodeUrlSafe ( src ) ; }
"Any URI which has a prefix before the ""mvn:"" part of the URI, such as ""fab:mvn:..."" or ""war:mvn:..."" gets the prefix removed so that the URI is just ""mvn:..."" <code> String removeUriPrefixBeforeMaven ( String rawUrl ) { ","String answer = rawUrl ; int idx = answer . indexOf ( "":mvn:"" ) ; if ( idx > 0 ) { answer = answer . substring ( idx + 1 ) ; } return answer ; }"
Persist album entity to database <code> void addAlbum ( Album album ) { ,try { em . persist ( album ) ; album . getShelf ( ) . addAlbum ( album ) ; em . flush ( ) ; } catch ( Exception e ) { throw new PhotoAlbumException ( e . getMessage ( ) ) ; } }
Retrieves a timestamp from the extended data. <code> Date getTimestamp ( Integer type ) { ,"Date result = null ; byte [ ] item = m_map . get ( type ) ; if ( item != null ) { result = MPPUtility . getTimestamp ( item , 0 ) ; } return ( result ) ; }"
"Begin monitoring data connectivity. <code> void startMonitoring ( Context context , Handler target ) { ",mTarget = target ; mContext = context ; }
Return the Queue to an empty state. <code> void makeEmpty ( ) { ,data . makeEmpty ( ) ; size = 0 ; }
"Get a boolean property from the underlying properties. <code> boolean getBoolean ( String property , boolean defaultValue ) { ",String value = getProperty ( property ) ; if ( value == null ) return defaultValue ; try { return Boolean . valueOf ( value ) . booleanValue ( ) ; } catch ( NumberFormatException e ) { return defaultValue ; } }
"Remove all values from the specified array from the set, if present. <code> boolean removeAll ( long [ ] values ) { ",int originalSize = size ( ) ; int n = values . length ; for ( int i = 0 ; i < n ; i ++ ) { mMap . remove ( values [ i ] ) ; } return size ( ) != originalSize ; }
Split the current cipher transformation and return the requested part. <code> String getFromCipherXform ( CipherTransformationComponent component ) { ,"int part = component . ordinal ( ) ; String [ ] parts = getCipherTransformation ( ) . split ( ""/"" ) ; assert parts . length == 3 : ""Invalid cipher transformation: "" + getCipherTransformation ( ) ; return parts [ part ] ; }"
"Return the time this task spent being run. If the task is still running or has not yet been run, returns -1. <code> long getTotalExecutionNanos ( ) { ",if ( startTimeNanos == - 1 || finishTimeNanos == - 1 ) { return - 1 ; } return finishTimeNanos - startTimeNanos ; }
"Get the string from the configuration files <code> String getString ( @ Nonnull final String sKey , @ Nullable final String sDefault ) { ",final String sValue = m_aProps . getProperty ( sKey ) ; return sValue != null ? StringHelper . trim ( sValue ) : sDefault ; }
Converts spreadsheet column name to position number. <code> int convertColumnIDtoInt ( String id ) { ,"String normID = id . toUpperCase ( ) . trim ( ) ; int result = 0 ; for ( int counter = 0 , i = normID . length ( ) - 1 ; i >= 0 ; i -- , counter ++ ) { int partial = normID . charAt ( i ) - 64 ; result = ( int ) ( result + ( partial * Math . pow ( 26 , counter ) ) ) ; } return result ; }"
Primarily for debugger support <code> String toString ( ) { ,"StringBuilder sb = new StringBuilder ( ) ; sb . append ( type . toString ( ) ) ; sb . append ( ' ' ) ; sb . append ( loadedClass . toString ( ) ) ; if ( subops . size ( ) > 0 ) { sb . append ( "" ("" ) ; sb . append ( subops . size ( ) ) ; sb . append ( "" sub ops)"" ) ; } return sb . toString ( ) ; }"
"Track the given document ID for eventual obsolescence and deletion, and give it priority since we know this ID has made it to the server, and we definitely don't want to orphan it. <code> void markIdAsUploaded ( String id ) { ","ExtendedJSONObject ids = getObsoleteIds ( ) ; ids . put ( id , HealthReportConstants . DELETION_ATTEMPTS_PER_KNOWN_TO_BE_ON_SERVER_DOCUMENT_ID ) ; setObsoleteIds ( ids ) ; }"
Remove object at head. <code> Object removeFirst ( ) { ,Object r = elements [ head ] ; head = ( head + 1 ) % elements . length ; count -- ; return r ; }
returns a random free location using isFree to test the availability of some possible location (it means free of agents and obstacles) <code> Location getFreePos ( ) { ,"for ( int i = 0 ; i < ( getWidth ( ) * getHeight ( ) * 5 ) ; i ++ ) { int x = random . nextInt ( getWidth ( ) ) ; int y = random . nextInt ( getHeight ( ) ) ; Location l = new Location ( x , y ) ; if ( isFree ( l ) ) { return l ; } } return null ; }"
"Add a type which may later in construction be referred to via a LazyType with this key. lazyKey may be null. <code> void addType ( Object lazyKey , Type type ) { ","if ( Assert . ASSERTS_ENABLED ) { Assert . that ( state == CONSTRUCTION_STATE , ""wrong state"" ) ; } if ( lazyKey != null ) { if ( lazyTypeMap . put ( lazyKey , type ) != null ) { throw new RuntimeException ( ""Type redefined for lazy key "" + lazyKey ) ; } } else { types . add ( type ) ; } }"
Adds a Connection object to the collection of connections associated with this object <code> void addConnection ( Connection connection ) { ,"connections . put ( connection . handle ( ) , connection ) ; try { persistence . persistConnection ( connection ) ; } catch ( PersistenceException e ) { e . printStackTrace ( ) ; } }"
Extracts the physical and logical values from an HT timestamp. <code> long [ ] HTTimestampToPhysicalAndLogical ( long htTimestamp ) { ,"long timestampInMicros = htTimestamp >> hybridTimeNumBitsToShift ; long logicalValues = htTimestamp & hybridTimeLogicalBitsMask ; return new long [ ] { timestampInMicros , logicalValues } ; }"
"Launches settings, either on the top-level page or on a subpage. <code> void launchSettingsPage ( Context context , String fragmentName ) { ","Intent intent = createIntentForSettingsPage ( context , fragmentName ) ; context . startActivity ( intent ) ; }"
Converts the attribute to a string. <code> String toAttributeValue ( final Object o ) { ,"if ( o == null ) { throw new NullPointerException ( ) ; } if ( o instanceof BigInteger ) { return o . toString ( ) ; } throw new BeanException ( ""Failed to convert object of type "" + o . getClass ( ) + "": Not a big-integer."" ) ; }"
Get head branch ref for outside repository pull requests <code> String getHeadBranch ( PullRequest request ) { ,"PullRequestMarker head = request . getHead ( ) ; return Constants . R_REMOTES + head . getRepo ( ) . getOwner ( ) . getLogin ( ) + ""/"" + head . getRef ( ) ; }"
Mutator for digestValue attribute <code> void setDigestValue ( byte [ ] data ) { ,DigiDocException ex = validateDigestValue ( data ) ; if ( ex != null ) throw ex ; digestValue = data ; }
Legger til en rekke med musikk <code> void addMusic ( String [ ] musicNames ) { ,for ( int i = 0 ; i < musicNames . length ; i ++ ) { addMusic ( musicNames [ i ] ) ; } }
If parent and uncle are red. <code> void insertNode3 ( RBNode node ) { ,RBNode uncle = findUncle ( node ) ; if ( uncle != null && uncle . isRed ) { node . parent . isRed = false ; uncle . isRed = false ; RBNode grandfather = findGrandfather ( node ) ; grandfather . isRed = true ; insertNode1 ( grandfather ) ; } else { insertNode4 ( node ) ; } }
Discards the current local scope. <code> void exitScope ( ) { ,"if ( scopes . size ( ) == 0 ) { throw new IllegalStateException ( ""There is no state to exit"" ) ; } scopes . pop ( ) ; }"
Return the HttpSession object. <code> HttpSession getHttpSession ( ) { ,HttpServletRequest request = getHttpServletRequest ( ) ; return request . getSession ( ) ; }
Re-order DESC a list History 14/11/2013 SYO : INIT <code> List < T > reverseList ( List < T > p_turnoversList ) { ,List < T > turnoversList = new ArrayList < T > ( ) ; int nb = p_turnoversList . size ( ) ; for ( int i = nb - 1 ; i != - 1 ; i -- ) { turnoversList . add ( p_turnoversList . get ( i ) ) ; } return turnoversList ; }
Initializes the micro-service Spring profiles can be configured with a program arguments --spring.profiles.active=your-active-profile or by setting the environment property SPRING_PROFILES_ACTIVE=your-active-profile <code> void initApplication ( ) { ,"if ( env . getActiveProfiles ( ) . length == 0 ) { LOG . warn ( ""No Spring profile configured, running with default configuration"" ) ; } else { LOG . info ( ""Running with Spring profile(s) : {}"" , Arrays . toString ( env . getActiveProfiles ( ) ) ) ; } }"
"divideToLeftRight function is called after performing inverse permutation (IP). After IP, this function divides the data to Left block & Right block <code> void divideToLeftRight ( ) { ",left = getData ( ) >> 32 ; left = left & 0xffffffffL ; right = getData ( ) ^ ( left << 32 ) ; }
"Report action before action invoking when the common request coming <code> boolean reportCommonRequest ( Controller controller , Action action ) { ","String content_type = controller . getRequest ( ) . getContentType ( ) ; if ( content_type == null || content_type . toLowerCase ( ) . indexOf ( ""multipart"" ) == - 1 ) { doReport ( controller , action ) ; return false ; } return true ; }"
"Applies the given ClassVisitor to all classes in the class pool, in random order. <code> void classesAccept ( ClassVisitor classVisitor ) { ",Iterator iterator = classes . values ( ) . iterator ( ) ; while ( iterator . hasNext ( ) ) { Clazz clazz = ( Clazz ) iterator . next ( ) ; clazz . accept ( classVisitor ) ; } }
"Parsers the exclude dependency filter of the form """" for match none, """" for all, or a space separated list of ""groupId:artifactId"" allowing wildcards. By default it excludes all test scoped dependencies. <code> Filter < DependencyTree > parseExcludeFilter ( String dependencyFilterText , Filter excludeOptionalDependenciesFilter ) { ","Filter < DependencyTree > filter = parse ( dependencyFilterText ) ; if ( Filters . isEmpty ( filter ) ) { return Filters . or ( testScopeFilter , excludeOptionalDependenciesFilter ) ; } return Filters . or ( testScopeFilter , excludeOptionalDependenciesFilter , filter ) ; }"
get an automata from a stored file. <code> SDFA getSDFAFromFile ( String inFN ) { ,ObjectInputStream in ; try { in = new ObjectInputStream ( new BufferedInputStream ( new FileInputStream ( inFN ) ) ) ; SDFA auto = ( SDFA ) in . readObject ( ) ; in . close ( ) ; return auto ; } catch ( ClassNotFoundException | IOException ex ) { ex . printStackTrace ( ) ; return null ; } }
Returns a new (deterministic) automaton with the empty language. <code> Automaton makeEmpty ( ) { ,Automaton a = new Automaton ( ) ; State s = new State ( ) ; a . initial = s ; a . deterministic = true ; return a ; }
Creates two SimpleToken objects with identical auth_values and authenticates one against the other Test fails if an exception is thrown or authentication fails <code> void testSimpleToken ( ) { ,"SimpleToken token1 = new SimpleToken ( ) ; token1 . setAuthValue ( ""chris"" ) ; SimpleToken token2 = new SimpleToken ( ) ; token2 . setAuthValue ( ""chris"" ) ; assert token1 . authenticate ( token2 , null ) ; }"
Adds a drawing to the drawing group <code> void addDrawing ( DrawingGroupObject d ) { ,"drawings . add ( d ) ; maxObjectId = Math . max ( maxObjectId , d . getObjectId ( ) ) ; maxShapeId = Math . max ( maxShapeId , d . getShapeId ( ) ) ; }"
Returns a table by its identifier i.e. 1 means universal codon tables <code> IUPACTable getTable ( Integer id ) { ,populateLookups ( ) ; return idLookup . get ( id ) ; }
Returns all the admissions for the specified patient. <code> ArrayList < Admission > getAdmissions ( Patient patient ) { ,"try { return ioOperations . getAdmissions ( patient ) ; } catch ( OHException e ) { JOptionPane . showMessageDialog ( null , e . getMessage ( ) ) ; return null ; } }"
Get the value of the given key. <code> String getAttribute ( String key ) { ,if ( values != null ) { key = key . toLowerCase ( ) ; final int vsize = values . size ( ) ; for ( int i = 0 ; i < vsize ; i ++ ) { final Pair p = values . get ( i ) ; if ( p . getLowerCaseKey ( ) . equals ( key ) ) return p . value ; } } return null ; }
Test the DecrementBomb method works correctly <code> void testDecrementBomb ( ) { ,"testCanPlaceBombBehavior . decrementBomb ( ) ; assertEquals ( 2 , testCanPlaceBombBehavior . countBomb ( ) ) ; testCanPlaceBombBehavior . decrementBomb ( ) ; assertEquals ( 1 , testCanPlaceBombBehavior . countBomb ( ) ) ; }"
"Exemple tab = [1,4,6,-5,7,5] <code> int [ ] inverserTableau ( int [ ] tab ) { ",int [ ] tabFinal = tab . clone ( ) ; for ( int i = 0 ; i < tabFinal . length ; i ++ ) { tabFinal [ i ] = tab [ ( tab . length - 1 ) - i ] ; } return tabFinal ; }
Returns a string representation of this object; useful for testing and debugging. <code> String toString ( ) { ,"StringBuilder sb = new StringBuilder ( ) ; sb . append ( ""{"" ) ; if ( getScheduledEventId ( ) != null ) sb . append ( ""ScheduledEventId: "" + getScheduledEventId ( ) ) ; sb . append ( ""}"" ) ; return sb . toString ( ) ; }"
Close the given JMS Session and ignore any thrown exception. This is useful for typical finally blocks in manual JMS code. <code> void closeSession ( Session session ) { ,"if ( session != null ) { try { session . close ( ) ; } catch ( JMSException ex ) { logger . trace ( ""Could not close JMS Session"" , ex ) ; } catch ( Throwable ex ) { logger . trace ( ""Unexpected exception on closing JMS Session"" , ex ) ; } } }"
Returns a string representation of this object; useful for testing and debugging. <code> String toString ( ) { ,"StringBuilder sb = new StringBuilder ( ) ; sb . append ( ""{"" ) ; if ( getNextMarker ( ) != null ) sb . append ( ""NextMarker: "" + getNextMarker ( ) + "","" ) ; if ( getVersions ( ) != null ) sb . append ( ""Versions: "" + getVersions ( ) ) ; sb . append ( ""}"" ) ; return sb . toString ( ) ; }"
"generate security key base on some seed, and result key as base64 present string <code> String initKey ( String seed ) { ",SecretKey secretKey = genRandomeKey ( Base64 . decodeBase64 ( seed ) ) ; return Base64 . encodeBase64String ( secretKey . getEncoded ( ) ) ; }
Build the NameIDPolicy object <code> NameIDPolicy buildNameIDPolicy ( ) { ,NameIDPolicy nameIDPolicy = new NameIDPolicyBuilder ( ) . buildObject ( ) ; nameIDPolicy . setFormat ( SSOConstants . SAML2_NAME_ID_POLICY ) ; nameIDPolicy . setAllowCreate ( true ) ; return nameIDPolicy ; }
Configures the scanner with the given sequence of rules. <code> void setRules ( IRule [ ] rules ) { ,"if ( rules != null ) { fRules = new IRule [ rules . length ] ; System . arraycopy ( rules , 0 , fRules , 0 , rules . length ) ; } else { fRules = null ; } }"
"Renders the view that shows the information of an existing task. <code> String showTask ( @ PathVariable ( ""taskId"" ) Long taskId , Model model ) { ","LOGGER . info ( ""Rendering task view for task with id: {}"" , taskId ) ; TaskDTO task = crudService . findById ( taskId ) ; LOGGER . info ( ""Found task: {}"" , task ) ; model . addAttribute ( MODEL_ATTRIBUTE_NAME_TASK , task ) ; return VIEW_NAME_VIEW_TASK ; }"
Get a random position(object) from a list of generic objects. Using generics saves the trouble of casting the return object. <code> T getRandomPosition ( List < T > list ) { ,if ( list == null || list . isEmpty ( ) ) { return null ; } return list . get ( getRandomInteger ( list . size ( ) - 1 ) ) ; }
"Metodo de utilidad que devuelve un String con la lista de acciones realizadas y el estado del Movable en cada momento <code> String printActions ( List < Action > actions , Movable movable ) { ","StringBuffer sb = new StringBuffer ( ""Estado Inicial"" + newLine + movable ) ; for ( int i = 0 ; i < actions . size ( ) ; i ++ ) { Action a = actions . get ( i ) ; movable . move ( a ) ; sb . append ( a . toString ( ) + newLine + movable ) ; } return sb . toString ( ) ; }"
Calls close() on all SpanReceivers created by this SpanReceiverHost. <code> void closeReceivers ( ) { ,"if ( closed ) return ; closed = true ; for ( SpanReceiver rcvr : receivers . values ( ) ) { try { rcvr . close ( ) ; } catch ( IOException e ) { LOG . warn ( ""Unable to close SpanReceiver correctly: "" + e . getMessage ( ) , e ) ; } } receivers . clear ( ) ; }"
restituisce tutte le sale pesi presenti su db <code> ArrayList < SalaPesi > getSalePesi ( ) { ,salaPesi = new M_SalaPesi ( ) ; return salaPesi . getSalePesi ( ) ; }
Gets the current system time. <code> long getTime ( ) { ,if ( null == _systemTime ) { initialize ( ) ; } return _systemTime . getTime ( ) ; }
Returns the list index of the user with the given ID. <code> int findUser ( int id ) { ,"for ( int i = 0 ; i < users . size ( ) ; i ++ ) { if ( users . get ( i ) . getId ( ) == id ) { return i ; } } throw new NotFoundException ( ""No user "" + id ) ; }"
"Writes the entire ResultSet to a CSV file. The caller is responsible for closing the ResultSet. <code> void writeAll ( java . sql . ResultSet rs , boolean includeColumnNames ) { ",if ( includeColumnNames ) { writeColumnNames ( rs ) ; } while ( rs . next ( ) ) { writeNext ( resultService . getColumnValues ( rs ) ) ; } }
"Constructs the key for the hyphenation pattern file. <code> String constructLlccKey ( String lang , String country ) { ","String key = lang ; if ( country != null && ! country . equals ( ""none"" ) ) { key += ""_"" + country ; } return key ; }"
Returns the offset in a four byte array. <code> byte [ ] getValue ( ) { ,byte [ ] v = new byte [ 4 ] ; v [ 0 ] = ( byte ) ( ( offset >> 24 ) % 256 ) ; v [ 1 ] = ( byte ) ( ( offset >> 16 ) % 256 ) ; v [ 2 ] = ( byte ) ( ( offset >> 8 ) % 256 ) ; v [ 3 ] = ( byte ) ( offset % 256 ) ; return v ; }
"Encode an invalidation into a bundle. <code> Bundle createBundle ( String id , int source , long version , String payload ) { ","Bundle bundle = new Bundle ( ) ; bundle . putString ( INVALIDATION_OBJECT_ID_KEY , id ) ; bundle . putInt ( INVALIDATION_OBJECT_SOURCE_KEY , source ) ; bundle . putLong ( INVALIDATION_VERSION_KEY , version ) ; bundle . putString ( INVALIDATION_PAYLOAD_KEY , payload ) ; return bundle ; }"
"Converts S value to NISO color space. Return -1 if there is no matching color space in NISO, or the S value is out of bounds. <code> int colorSpaceToNiso ( int s ) { ",if ( s < 0 || s > nisoColor . length ) { return - 1 ; } return nisoColor [ s ] ; }
Write short to little-endian byte array <code> byte [ ] writeShort ( short value ) { ,byte [ ] b = new byte [ 2 ] ; b [ 0 ] = ( byte ) ( value & 0x00FF ) ; b [ 1 ] = ( byte ) ( ( value & 0xFF00 ) >> 8 ) ; return b ; }
Determine the content type of the given message. This method will try the registered rules in turn until the first rule matches. <code> ContentTypeInfo getContentTypeInfo ( Message message ) { ,for ( ContentTypeRule rule : rules ) { ContentTypeInfo contentTypeInfo = rule . getContentType ( message ) ; if ( contentTypeInfo != null ) { return contentTypeInfo ; } } return null ; }
Returns the elements of all containers in this page. <code> List < CmsContainerElementBean > getElements ( ) { ,if ( m_elements == null ) { m_elements = new ArrayList < CmsContainerElementBean > ( ) ; for ( CmsContainerBean container : m_containers . values ( ) ) { m_elements . addAll ( container . getElements ( ) ) ; } } return m_elements ; }
Making requirement more restrictive is incompatible <code> void testReuirementChange ( ) { ,"verifyCompatible ( StructV1 . class , OptionalStructV1 . class , true ) ; verifyCompatible ( StructV1 . class , DefaultStructV1 . class , true ) ; verifyCompatible ( OptionalStructV1 . class , StructV1 . class , false ) ; verifyCompatible ( DefaultStructV1 . class , StructV1 . class , false ) ; }"
Guesses the content type based on the provided char sequence. <code> XContentType xContentType ( CharSequence content ) { ,int length = content . length ( ) < GUESS_HEADER_LENGTH ? content . length ( ) : GUESS_HEADER_LENGTH ; for ( int i = 0 ; i < length ; i ++ ) { char c = content . charAt ( i ) ; if ( c == '{' ) { return XContentType . JSON ; } } return null ; }
execute a command that returns with an error code that will be converted into a number <code> List < String > exitFalse ( ) { ,"List < String > commands = new ArrayList < String > ( 2 ) ; commands . add ( ""false"" ) ; return commands ; }"
"Add the list of contributors to the item. This will include the authors, and any other contributors that are supplied in the bibliographic metadata <code> void addContributors ( ) { ",if ( deposit != null ) { String obo = deposit . getOnBehalfOf ( ) ; if ( obo != null ) { Contributor cont = new Contributor ( ) ; cont . setName ( obo ) ; entry . addContributor ( cont ) ; } } }
Returns the string value of the entry. <code> String getStringValue ( ) { ,String value ; if ( _value instanceof String ) { value = ( String ) _value ; } else { value = String . valueOf ( _value ) ; } return value . trim ( ) ; }
Return the singleton output factory to get XML writers configured to StAX. <code> XMLOutputFactory2 getStreamWriterFactory ( ) { ,synchronized ( Stax2Factory . class ) { if ( instance == null ) { instance = new Stax2Factory ( ) ; } } return instance . outputFact ; }
Muestra las alineaciones de ambos equipos. <code> void mostrarAlineaciones ( ) { ,mostrarAlineacionLocal ( ) ; mostrarAlineacionVisitante ( ) ; }
"Build an interval set from two points. <code> IntervalsSet buildIntervalSet ( final Vector3D start , final Vector3D end ) { ","final Line line = new Line ( start , end ) ; return new IntervalsSet ( line . toSubSpace ( start ) . getX ( ) , line . toSubSpace ( end ) . getX ( ) ) ; }"
"Close a InputStream passed in. <code> void closeBufferedReader ( BufferedReader stream , String tag ) { ","if ( stream != null ) { try { stream . close ( ) ; } catch ( IOException e ) { Log . e ( tag , ""Exception occured when closing BufferedReader."" + e ) ; } } }"
Returns a copy of this token information without the information of being in the shortest path <code> TokenInformation copyNoShortestPath ( ) { ,TokenInformation result = new TokenInformation ( ) ; result . features = features ; result . isEntity1 = isEntity1 ; result . isEntity2 = isEntity2 ; return result ; }
Intermediate state that populates world and prepares game for the next level <code> void updateNextLevelState ( ) { ,++ currentLevel ; levelSeed = System . currentTimeMillis ( ) ; world . populate ( currentLevel ) ; setState ( GAME ) ; }
Returns a string representation of this object; useful for testing and debugging. <code> String toString ( ) { ,"StringBuilder sb = new StringBuilder ( ) ; sb . append ( ""{"" ) ; if ( getData ( ) != null ) sb . append ( ""Data: "" + getData ( ) + "","" ) ; if ( getCharset ( ) != null ) sb . append ( ""Charset: "" + getCharset ( ) ) ; sb . append ( ""}"" ) ; return sb . toString ( ) ; }"
Return the next value. <code> int nextValue ( ) { ,int curValue = value ++ ; if ( curValue == Integer . MAX_VALUE ) { value = 1 ; } return curValue ; }
Tests if the currently visible page is stale and needs refreshing. <code> boolean isStale ( ) { ,IDetailsPage page = getCurrentPage ( ) ; if ( page != null ) return page . isStale ( ) ; return false ; }
"Only update the refresh date and elapsed time if it is the first start to make sure we have initial data, but updateStatus and trackChanged will take care of that afterwards. <code> void updateSeekTime ( final long elapsedTime ) { ","mLastStatusRefresh = new Date ( ) . getTime ( ) ; mLastKnownElapsed = elapsedTime * DateUtils . SECOND_IN_MILLIS ; mRemoteControlClient . setPlaybackState ( mPlaybackState , mLastKnownElapsed , 1.0f ) ; }"
"Determines if the register map information for the entry passed is true <code> boolean registerIsSet ( int entry , int registerNumber , int [ ] gcMap ) { ","if ( VM . VerifyAssertions ) { VM . _assert ( registerNumber >= FIRST_GCMAP_REG && registerNumber <= LAST_GCMAP_REG , ""Bad registerNumber"" ) ; } int bitPosition = getRegBitPosition ( registerNumber ) ; return ( gcMap [ entry ] & ( NEXT_BIT >>> bitPosition ) ) > 0 ; }"
"This method is used to trim the string to a specified lenght <code> String trimString ( String inputString , Integer length ) { ","if ( inputString != null && inputString . length ( ) > length ) { return inputString . substring ( 0 , length ) ; } else { return inputString ; } }"
Create and setup the remoting connection <code> void beforeTestClass ( ) { ,"nodeName = EJBManagementUtil . getNodeName ( ) ; logger . trace ( ""Using node name "" + nodeName ) ; }"
Returns the id for this feature. <code> String getFeatureId ( ) { ,"String id = null ; if ( productProperties != null ) { id = productProperties . getProductId ( ) ; } else if ( bundleGroupProperties != null ) { id = bundleGroupProperties . getFeatureId ( ) ; } return id != null ? id : """" ; }"
Sets the enabled status of this message. <code> void setEnabled ( boolean enabled ) { ,checkFrozen ( ) ; m_enabled = enabled ; }
Encode a string using Base64 encoding. Used when storing passwords as cookies. This is weak encoding in that anyone can use the decodeString routine to reverse the encoding. <code> String encodeString ( String str ) { ,Base64 encoder = new Base64 ( ) ; return String . valueOf ( encoder . encode ( str . getBytes ( ) ) ) . trim ( ) ; }
"Returns an XML fragment representing the specified canonical grantee. <code> XmlWriter convertToXml ( CanonicalGrantee grantee , XmlWriter xml ) { ","xml . start ( ""Grantee"" , new String [ ] { ""xmlns:xsi"" , ""xsi:type"" } , new String [ ] { ""http://www.w3.org/2001/XMLSchema-instance"" , ""CanonicalUser"" } ) ; xml . start ( ""ID"" ) . value ( grantee . getIdentifier ( ) ) . end ( ) ; xml . end ( ) ; return xml ; }"
Returns an ArrayList of WebElements currently shown in the active WebView. <code> ArrayList < WebElement > getWebElements ( boolean onlySufficientlyVisible ) { ,"boolean javaScriptWasExecuted = executeJavaScriptFunction ( ""allWebElements();"" ) ; return getWebElements ( javaScriptWasExecuted , onlySufficientlyVisible ) ; }"
Analiza la orden introducida por el usuario y genera el comando correspondiente. <code> PromptCommand parseCommand ( String line ) { ,"PromptCommand comand = null ; int i ; for ( i = 0 ; i < cmds . length ; i ++ ) { comand = cmds [ i ] . parse ( line . trim ( ) ) ; if ( comand != null ) { return comand ; } } throw new ParseException ( ""Error: Comando no reconocido"" ) ; }"
Call this to save this filter to a file. <code> void exportToFile ( DOM4JSerializer . ExportInteraction exportInteraction ) { ,"BasicProjectAndTaskFilter basicProjectAndTaskFilter = createFilter ( ) ; DOM4JSerializer . exportToFile ( ""basic-filter"" , exportInteraction , createFileFilter ( ) , basicProjectAndTaskFilter ) ; }"
"Returns this element's annotation for the specified type if such an annotation is present, else null. <code> T getAnnotation ( Class < T > annotationClass ) { ",final Annotation declaredAnnotation = getDeclaredAnnotation ( annotationClass ) ; return declaredAnnotation != null ? declaredAnnotation . getAnnotation ( annotationClass ) : null ; }
"Gives the simple principal with the given name from the given collection of principals <code> SimplePrincipalProvider getSimplePrincipalByName ( Collection < PrincipalProvider < ? >> principalProviders , String principalName ) { ",for ( SimplePrincipalProvider principal : getSimplePrincipals ( principalProviders ) ) { if ( principal . getName ( ) . equals ( principalName ) ) { return principal ; } } return null ; }
Gets the value of the errorStyle property. <code> STDataValidationErrorStyle getErrorStyle ( ) { ,if ( errorStyle == null ) { return STDataValidationErrorStyle . STOP ; } else { return errorStyle ; } }
Convert eBus Type DATA1B <code> int decodeDATA1b ( byte data ) { ,if ( ( data & ( byte ) 0x80 ) == ( byte ) 0x80 ) { return - 1 * ( ( short ) ( ( data ^ 0xFF ) & 0xFF ) + 1 ) ; } else { return ( short ) ( data & 0xFF ) ; } }
Checks if the pin should appear in the current item. This happens when it is in position 0 <code> boolean isVisible ( ) { ,if ( relativePosition == 0 ) { return true ; } else { return false ; } }
Set the maximum value of the progress bar <code> void setMaximum ( int inMax ) { ,_progressBar . setMaximum ( inMax ) ; _progressBar . setIndeterminate ( inMax <= 1 ) ; }
whether the current entry will be encrypted using strong encryption. <code> void useStrongEncryption ( final boolean b ) { ,strongEncryptionFlag = b ; if ( b ) { useEncryption ( true ) ; } }
"Utility method to get the formitems of a form object. Note that the entering json object has to be one object of the main array, not THE main array itself, i.e. a choice was already done. <code> JSONArray getFormItems ( JSONObject formObj ) { ",if ( formObj . has ( TAG_FORMITEMS ) ) { return formObj . getJSONArray ( TAG_FORMITEMS ) ; } return new JSONArray ( ) ; }
Removes a role from all members <code> void removeRoleFromMembers ( String name ) { ,Iterator it = map . values ( ) . iterator ( ) ; Grantee g ; for ( ; it . hasNext ( ) ; ) { g = ( Grantee ) it . next ( ) ; if ( g . hasRoleDirect ( name ) ) { g . revoke ( name ) ; } } }
Updates host info on all clients <code> void setHost ( Host host ) { ,info . setHost ( host ) ; music . setHost ( host ) ; video . setHost ( host ) ; control . setHost ( host ) ; shows . setHost ( host ) ; }
"Creates a new chat using the specified thread ID, then returns it. <code> Chat createChat ( String userJID , String thread , MessageListener listener ) { ","if ( thread == null ) { thread = nextID ( ) ; } Chat chat = threadChats . get ( thread ) ; if ( chat != null ) { throw new IllegalArgumentException ( ""ThreadID is already used"" ) ; } chat = createChat ( userJID , thread , true ) ; chat . addMessageListener ( listener ) ; return chat ; }"
"Invokes MotionEvent.getX(int) if possible. Eclair (v5) and above. <code> float getX ( MotionEvent caller , int index ) { ","try { return ( Float ) invokeByReflection ( caller , new Class < ? > [ ] { int . class } , new Object [ ] { index } , ""getX"" ) ; } catch ( UnsupportedOperationException e ) { return caller . getX ( ) ; } }"
"DO NOT USE this recurses to lower components <code> void clickComponents ( int button , int x , int y , int clickcount ) { ","for ( int i = 0 ; i < components . size ( ) ; i ++ ) { MenuComponent mc = components . get ( i ) ; if ( mc . boundingBox . contains ( x , y ) ) { mc . click ( button , x - mc . boundingBox . x , y - mc . boundingBox . y , clickcount ) ; } } click ( button , x , y , clickcount ) ; }"
Helper method to get a filename without its extension <code> String getFileNameWithoutExtension ( String fileName ) { ,"String name = fileName ; int index = fileName . lastIndexOf ( '.' ) ; if ( index != - 1 ) { name = fileName . substring ( 0 , index ) ; } return name ; }"
"Creates a standard Openbravo root element for a xml document and set ths namespace. Ads the new root element to the Dom4j document. <code> Element addRootElement ( Document doc , String elementName ) { ","final Namespace ns = new Namespace ( ""ob"" , ""http://www.openbravo.com"" ) ; final QName qName = new QName ( elementName , ns ) ; final Element root = doc . addElement ( qName ) ; root . addNamespace ( ""ob"" , ""http://www.openbravo.com"" ) ; return root ; }"
"Return an object mapper if available. <code> JsonObjectMapper < ? , ? > newInstance ( ) { ","if ( JacksonJsonUtils . isJackson2Present ( ) ) { return new Jackson2JsonObjectMapper ( ) ; } else if ( boonPresent ) { return new BoonJsonObjectMapper ( ) ; } else { throw new IllegalStateException ( ""Neither jackson-databind.jar, nor boon.jar is present in the classpath."" ) ; } }"
"Get an approximate distance to the target position in Pixel coordinates. Uses Starcraft's approximated distance function, which is reasonably accurate yet avoids a sqrt operation and saves some CPU cycles. <code> int getApproxPDistance ( Position target ) { ",int min = Math . abs ( x - target . x ) ; int max = Math . abs ( y - target . y ) ; if ( max < min ) { int temp = max ; max = min ; min = temp ; } if ( min < ( max >> 2 ) ) return max ; int minCalc = ( 3 * min ) >> 3 ; return ( ( minCalc >> 5 ) + minCalc + max - ( max >> 4 ) - ( max >> 6 ) ) ; }
Linux specific test to exercise Files.readAllLines(Path) on /proc. This is special because file sizes are reported as 0 even though the file has content. <code> void testReadAllLinesOnProcFS ( ) { ,"if ( System . getProperty ( ""os.name"" ) . equals ( ""Linux"" ) ) { Path statFile = Paths . get ( ""/proc/self/stat"" ) ; List < String > lines = Files . readAllLines ( statFile ) ; assertTrue ( lines . size ( ) > 0 , ""Files.readAllLines('"" + statFile + ""') failed to read"" ) ; } }"
Returns how often the connection to the given address failed. <code> int getConnectionFailures ( String address ) { ,Integer count = ADDRESS_BLACKLIST . get ( address ) ; return count != null ? count : 0 ; }
Calculates the length of a recording file in milliseconds from the size of the given file. <code> long calculateLength ( File file ) { ,"if ( file == null ) throw new IllegalArgumentException ( ""The parameter 'file' cannot be empty."" ) ; return ( Math . round ( file . length ( ) / AudioInterface . FORMAT . getFrameRate ( ) / AudioInterface . FORMAT . getFrameSize ( ) * 1000 ) ) ; }"
Testing that the same entry is not accepted twice <code> void addSameEntry ( ) { ,assertTrue ( ft . addForwardRouteEntry ( fe1 ) ) ; assertFalse ( ft . addForwardRouteEntry ( fe1 ) ) ; }
"Get a read only copy of the attributes <code> Map < String , Object > getAttributes ( ) { ",checkIfIsInvalid ( ) ; return Collections . unmodifiableMap ( attributes ) ; }
"Map from T t to Integer index. If the mapping from t doesn't exist, then create a new mapping from t to a unique index. <code> Integer getIndex ( T t ) { ","Integer index = map_ . get ( t ) ; if ( index == null ) { list_ . add ( t ) ; index = list_ . size ( ) - 1 ; map_ . put ( t , index ) ; } return index ; }"
Returns true if stone can be added; false if move would be suicide <code> boolean isSuicide ( Stone stone ) { ,"for ( Chain chain : getNeighborChains ( stone . coords , stone . color ) ) { if ( ! chain . isLastLiberty ( stone . coords ) ) { return false ; } } return getLiberties ( stone . coords ) . size ( ) == 0 ; }"
Clear client cert lookup table. Should only be called from UI thread. <code> void clearClientCertPreferences ( Runnable callback ) { ,ThreadUtils . assertOnUiThread ( ) ; getClientCertLookupTable ( ) . clear ( ) ; nativeClearClientCertPreferences ( callback ) ; }
"Copies entries from one map to another and deletes those entries in the target map for which the value in the source map is null. <code> void updateMapAndRemoveNulls ( Map < A , B > source , Map < A , B > target ) { ","assert source != target ; for ( Map . Entry < A , B > entry : source . entrySet ( ) ) { A key = entry . getKey ( ) ; B value = entry . getValue ( ) ; if ( value != null ) { target . put ( key , value ) ; } else { target . remove ( key ) ; } } }"
"Consume an attribute key off the queue (letter, digit, -, _, :"") <code> String consumeAttributeKey ( ) { ","int start = pos ; while ( ! isEmpty ( ) && ( matchesWord ( ) || matchesAny ( '-' , '_' , ':' ) ) ) pos ++ ; return queue . substring ( start , pos ) ; }"
Returns verification string in this format: Tempo: tempo={#} <code> String getVerifyString ( ) { ,"StringBuffer buffy = new StringBuffer ( ) ; buffy . append ( ""Tempo: tempo="" ) ; buffy . append ( getTempo ( ) ) ; return buffy . toString ( ) ; }"
Sets the default editor/renderer for Date objets to provided JTable. <code> void setDefaultEditor ( JTable table ) { ,"DateFormat format = DateFormat . getDateInstance ( DateFormat . SHORT ) ; setDefaultEditor ( table , format ) ; }"
Returns whether the given object has a value. <code> boolean hasValue ( Object obj ) { ,"if ( obj == null ) { return false ; } if ( LAZY_IF_EMPTY && """" . equals ( obj ) ) { return false ; } return true ; }"
Finds a view that was identified by the id attribute from the XML that was processed in onCreate(Bundle). <code> View findViewById ( int id ) { ,View v ; if ( mSlidingMenu != null ) { v = mSlidingMenu . findViewById ( id ) ; if ( v != null ) return v ; } return null ; }
returns the process linked with the metric <code> int getMetricMapping ( int metricID ) { ,for ( int i = 0 ; i < MetricDescInfo . trackedEffortProcessId . length ; i ++ ) { if ( MetricDescInfo . trackedEffortProcessId [ i ] == metricID ) return trackedProcessId [ i ] ; } return - 1 ; }
Updates the priority if it is higher (which means lower number) <code> boolean updateSinkPriority ( int priority ) { ,if ( priority < sinkPriority ) { sinkPriority = priority ; return true ; } return false ; }
Test updating tree fields <code> void updateFields ( ) { ,"Tree tree = new Tree ( ) ; assertEquals ( ""1234"" , tree . setSha ( ""1234"" ) . getSha ( ) ) ; List < TreeEntry > entries = Collections . singletonList ( new TreeEntry ( ) ) ; assertEquals ( entries , tree . setTree ( entries ) . getTree ( ) ) ; assertEquals ( ""url"" , tree . setUrl ( ""url"" ) . getUrl ( ) ) ; }"
Increase the amount of units used to separate nested cards. <code> void increaseCardLayout ( int amount ) { ,attachmentDx += amount * PIXEL_UNTIT ; attachmentDy += amount * PIXEL_UNTIT ; if ( attachmentDx > CardFactory . cardWidth ) { attachmentDx = CardFactory . cardWidth ; } if ( attachmentDy > CardFactory . cardHeight ) { attachmentDy = CardFactory . cardHeight ; } }
Creates a domain model from the given scene. The method has three phases: extraction (using the Extractor instance) simplification (using the Simplifier instance) recorder registration (using the RecorderRegistrator instance) <code> DomainModel createDomainModel ( Scene < ? > scene ) { ,createDefaultDomainModel ( scene . getName ( ) ) ; scene . setDomainModel ( domainModel ) ; extractor . eXTRACT ( scene ) ; simplifier . sIMPLIFY ( domainModel ) ; registrator . rEGISTER_RECORDER ( scene ) ; return domainModel ; }
A list of volumes. <code> java . util . List < VolumeStatusItem > getVolumeStatuses ( ) { ,if ( volumeStatuses == null ) { volumeStatuses = new com . amazonaws . internal . SdkInternalList < VolumeStatusItem > ( ) ; } return volumeStatuses ; }
Sets this Goal Sketching Node's parent. <code> void setParent ( GSnode node ) { ,parent = node ; hasParent = true ; }
Parses coordinates into a Spatial4j point shape. <code> Point parsePoint ( String point ) { ,"int comma = point . indexOf ( ',' ) ; if ( comma == - 1 ) return null ; float lat = Float . valueOf ( point . substring ( 0 , comma ) ) ; float lng = Float . valueOf ( point . substring ( comma + 1 ) ) ; return spatialctx . makePoint ( lng , lat ) ; }"
Returns the name of the data object if created with a DataSource. <code> String getName ( ) { ,if ( dataSource != null ) { return dataSource . getName ( ) ; } return null ; }
Returns the content of the input stream <code> String getContent ( InputStream inputStream ) { ,StringBuilder stringBuilder = new StringBuilder ( ) ; InputStreamReader reader = new InputStreamReader ( inputStream ) ; int data ; while ( ( data = reader . read ( ) ) != - 1 ) { stringBuilder . append ( ( char ) data ) ; } return stringBuilder . toString ( ) ; }
Gets a two byte array from an integer <code> byte [ ] getTwoBytes ( int i ) { ,byte [ ] bytes = new byte [ 2 ] ; bytes [ 0 ] = ( byte ) ( i & 0xff ) ; bytes [ 1 ] = ( byte ) ( ( i & 0xff00 ) >> 8 ) ; return bytes ; }
"Typically called from the Data View Node provider to create Data Source menu It creates pop up menu items, with each item being an available data source <code> void createNewDataSourceMenus ( IMenuManager menu ) { ","NewDataSourceAction action = new NewDataSourceAction ( Messages . getString ( ""datasource.new"" ) ) ; menu . add ( action ) ; }"
get points for the particular link id <code> List < Point > getPoints ( int l_id ) { ,point = rf . readPointOnLinkFile ( l_id ) ; return point ; }
Gets a property scribe by name. <code> VCardPropertyScribe < ? extends VCardProperty > getPropertyScribe ( String propertyName ) { ,propertyName = propertyName . toUpperCase ( ) ; VCardPropertyScribe < ? extends VCardProperty > scribe = extendedByName . get ( propertyName ) ; if ( scribe != null ) { return scribe ; } return standardByName . get ( propertyName ) ; }
"Given an index in the range 0...size()-1, returns the value from the indexth key-value mapping that this SparseIntIntArray stores. <code> int valueAt ( int index ) { ",if ( mGarbage ) { gc ( ) ; } return mValues [ index ] ; }
"DOC ycbai Comment method ""appendExtraJars"". Add the extra jars which hive connection needed like when creating a hive embedded connection with kerberos. <code> void appendExtraJars ( IMetadataConnection metadataConn , ClassLoader classLoader ) { ","if ( classLoader instanceof DynamicClassLoader ) { DynamicClassLoader loader = ( DynamicClassLoader ) classLoader ; loadConfigurationJars ( metadataConn , loader ) ; loadAuthDriverJars ( metadataConn , loader ) ; } }"
Check if the given attribute is defined in this set (not in the parent). <code> boolean isDefined ( Object attrName ) { ,if ( attrName instanceof String ) attrName = ( ( String ) attrName ) . toLowerCase ( ) ; for ( int i = 0 ; i < keys . length ; i ++ ) { if ( attrName . equals ( keys [ i ] ) ) return true ; } return false ; }
"add some weight to a list of hosts, update the value of unique block weight <code> void addHostsAndBlockWeight ( String [ ] hosts , long weight ) { ","if ( hosts == null || hosts . length == 0 ) { return ; } addUniqueWeight ( weight ) ; for ( String hostname : hosts ) { addHostAndBlockWeight ( hostname , weight ) ; } }"
"Returns the indicated part of the given java.util.Date object. <code> int getDateTimePart ( long m , int part ) { ",synchronized ( tempCalGMT ) { tempCalGMT . setTimeInMillis ( m ) ; return tempCalGMT . get ( part ) ; } }
"Sets the current Transform's clip rect <code> void setClipRect ( int l , int t , int r , int b ) { ","mClipRect . set ( l , t , r , b ) ; mHasClipRect = true ; }"
"Returns this city's offset from UTC, taking summer/daylight savigns time into account. <code> float getOffset ( ) { ",long now = System . currentTimeMillis ( ) ; if ( timeZone == null ) { timeZone = TimeZone . getTimeZone ( timeZoneID ) ; } return timeZone . getOffset ( now ) / 3600000.0f ; }
"GET To get tag by id <code> ResponseEntity < TagResource > getTagById ( @ PathVariable ( ""id"" ) Long id ) { ","Tag tag = new Tag ( ) ; tag . setId ( id ) ; tag = tagService . reload ( tag ) ; if ( tag == null ) { return new ResponseEntity < > ( HttpStatus . NO_CONTENT ) ; } else { return new ResponseEntity < > ( tagResourceAssembler . toResource ( tag ) , HttpStatus . OK ) ; } }"
"Function for global logging. <code> void androidLog ( int logLevel , String message , Throwable exception ) { ","if ( ! LOG_ANDROID ) return ; if ( exception != null ) { message += "" "" + Log . getStackTraceString ( exception ) ; } androidLog ( logLevel , message ) ; }"
"Changes position of an element in array <code> boolean [ ] changePosition ( boolean [ ] values , int oldPosition , int newPosition ) { ","boolean value = values [ oldPosition ] ; boolean result [ ] = remove ( values , oldPosition ) ; return insert ( result , newPosition , value ) ; }"
test saving of account. <code> void saveAccount ( ) { ,"User acc = ServiceTestConfiguration . user ( ) ; when ( repo . save ( acc ) ) . thenReturn ( acc ) ; assertEquals ( service . saveUser ( acc ) , acc . getId ( ) ) ; }"
translate a glyph name into the possible unicode values that it might represent. It is possible to have more than one unicode value for a single glyph name. <code> int [ ] getUnicodeValues ( String glyphName ) { ,while ( glyphLoaderThread != null && glyphLoaderThread . isAlive ( ) ) { synchronized ( glyphToUnicodes ) { try { glyphToUnicodes . wait ( 250 ) ; } catch ( InterruptedException ex ) { } } } return glyphToUnicodes . get ( glyphName ) ; }
"Returns the exclusive time of this method in a particular thread in the given time units. <code> long getExclusiveTime ( ThreadInfo thread , ClockType clockType , TimeUnit unit ) { ","MethodStats stats = mPerThreadCumulativeStats . get ( thread . getId ( ) ) ; return getExclusiveTime ( stats , clockType , unit ) ; }"
Begin a new element. <code> void beginElement ( ) { ,"if ( ! isFirstElement ) { data . append ( ',' ) ; } isFirstElement = false ; }"
Quotes and escapes a list of values so that they can be used in a SimpleDB query. <code> String quoteValues ( Collection < String > values ) { ,"StringBuilder sb = new StringBuilder ( ) ; boolean first = true ; for ( String s : values ) { if ( ! first ) sb . append ( "","" ) ; first = false ; sb . append ( quoteValue ( s ) ) ; } return sb . toString ( ) ; }"
Sets the timestamp to check against. <code> void setIfModifiedSince ( long ifModifiedSince ) { ,"if ( ifModifiedSince != 0 ) { put ( CTX_CONDITION_IF_MODIFIED_SINCE , Long . valueOf ( ifModifiedSince ) ) ; } else { remove ( CTX_CONDITION_IF_MODIFIED_SINCE ) ; } }"
The main method to call for generating metadata for all published views/appsetups <code> void migratePublishedAppsetups ( Connection conn ) { ,"int page = 1 ; while ( updateViews ( page , conn ) ) { page ++ ; } LOG . info ( ""Updated views:"" , updatedViewCount ) ; }"
"Undo the effect of the rename operation, once or repeatedly. This assumes the op was renamed by VarRename.rename <code> Op reverseVarRename ( Op op , boolean repeatedly ) { ","NodeTransform renamer = new UnrenameAnyVars ( prefix , repeatedly ) ; return NodeTransformLib . transform ( renamer , op ) ; }"
"Tests that we split the string early, with the correct # of fields, and modified values <code> void testGetRapidDefaultReadNameRegexSplit ( ) { ","final OpticalDuplicateFinder opticalDuplicateFinder = new OpticalDuplicateFinder ( ) ; for ( int i = 1 ; i < 10 ; i ++ ) { doTestGetRapidDefaultReadNameRegexSplit ( ( i <= 5 ) ? i : 5 , opticalDuplicateFinder ) ; } }"
Returns Huffman index for specified label <code> int indexOf ( String label ) { ,if ( containsWord ( label ) ) { return tokenFor ( label ) . getIndex ( ) ; } else return - 2 ; }
"Connects this instance to the given instance using role ""Graph"". If the given collection of instances is null, nothing happens. <code> void addGraphs ( Collection < PDGraph > graphs ) { ",if ( graphs == null ) return ; for ( PDGraph instance : graphs ) addGraph ( instance ) ; }
Read the data from the InputStream so it can be used to populate the current objects state. <code> void readFromDataInput ( InputStream in ) { ,DataInput di = new DataInputStream ( in ) ; readFromDataInput ( di ) ; return ; }
Returns a default URL to grab FFMpeg libraries. <code> String getUrl ( ) { ,"String baseURL ; if ( Session . getInstance ( ) == null || Session . getInstance ( ) . user . getBaseURL ( ) . length ( ) == 0 ) { baseURL = ""http://screenbird.com/"" ; } else { baseURL = Session . getInstance ( ) . user . getBaseURL ( ) ; } return baseURL ; }"
Determines whether a given REIL instruction is a function call. <code> boolean isFunctionCall ( final ReilInstruction instruction ) { ,"Preconditions . checkNotNull ( instruction , ""Error: Instruction argument can not be null"" ) ; return com . google . security . zynamics . reil . ReilHelpers . isFunctionCall ( instruction . getNative ( ) ) ; }"
Get first section of printable characters stopped on first non-printable character. <code> String getFirstFieldValue ( byte [ ] buffer ) { ,"int charsLen ; for ( charsLen = offset ; charsLen < offset + length ; charsLen += 1 ) { if ( buffer [ charsLen ] < 32 || buffer [ charsLen ] >= 127 ) { break ; } } return new String ( Arrays . copyOfRange ( buffer , offset , charsLen ) , ""UTF-8"" ) ; }"
Translates all points in the data set by the centroid S. <code> void weightSet ( ) { ,"weightedSet = new PointND [ set . length ] ; for ( int i = 0 ; i < set . length ; i ++ ) { weightedSet [ i ] = new PointND ( set [ i ] . get ( 0 ) - S . get ( 0 ) , set [ i ] . get ( 1 ) - S . get ( 1 ) ) ; } }"
check if an accident exist in the markers manager <code> boolean isAccidentExist ( Accident toCheck ) { ,if ( toCheck == null ) return false ; for ( Accident a : accidentsList ) if ( a . getId ( ) == toCheck . getId ( ) ) { return true ; } return false ; }
"Returns the Card of the given ID, which can be ""1"", ""2"", ... ""6"". <code> Card getCard ( String id ) { ",for ( Iterator i = cards . iterator ( ) ; i . hasNext ( ) ; ) { Card card = ( Card ) i . next ( ) ; if ( card . getID ( ) . equals ( id ) ) { return card ; } } return null ; }
"Calcuate 12:00am by zeroing out hour, minute, second, millisecond <code> void beginningOfDay ( Calendar c ) { ","c . set ( Calendar . HOUR_OF_DAY , 0 ) ; c . set ( Calendar . MINUTE , 0 ) ; c . set ( Calendar . SECOND , 0 ) ; c . set ( Calendar . MILLISECOND , 0 ) ; }"
"Parses the short date text. Return the backup value if parsing failed. <code> Date parseShortDate ( String date , Date backup ) { ","if ( date == null ) { return backup ; } try { return new SimpleDateFormat ( SHORT_DATE_FORMAT , DATE_LOCALE ) . parse ( date ) ; } catch ( Exception e ) { return backup ; } }"
readObject is called to restore the state of the SignedObject from a stream. <code> void readObject ( java . io . ObjectInputStream s ) { ,"java . io . ObjectInputStream . GetField fields = s . readFields ( ) ; content = ( ( byte [ ] ) fields . get ( ""content"" , null ) ) . clone ( ) ; signature = ( ( byte [ ] ) fields . get ( ""signature"" , null ) ) . clone ( ) ; thealgorithm = ( String ) fields . get ( ""thealgorithm"" , null ) ; }"
Gets the size of the original calls array. <code> int getOrigCallsSize ( ) { ,if ( gcosResult != null ) { return gcosResult . getOrigCallsSize ( ) ; } else if ( calvinResult != null ) { return calvinResult . getOrigCnt ( ) ; } return 0 ; }
read the response body as String <code> String getResponseBody ( HttpResponse response ) { ,"BufferedReader rd = new BufferedReader ( new InputStreamReader ( response . getEntity ( ) . getContent ( ) , ""UTF-8"" ) ) ; String line ; StringBuffer sb = new StringBuffer ( ) ; while ( ( line = rd . readLine ( ) ) != null ) { sb . append ( line ) ; } rd . close ( ) ; return sb . toString ( ) ; }"
Gets the value of the entries property. <code> List < EntryType > getEntries ( ) { ,if ( entries == null ) { entries = new ArrayList < EntryType > ( ) ; } return entries ; }
"Gets the maximum number of times a resource of the type described by this registration can occur under its parent resource (or, for a root resource, the minimum number of times it can occur at all.) <code> int getMaxOccurs ( ) { ",PathAddress pa = getPathAddress ( ) ; return pa . size ( ) == 0 || ! pa . getLastElement ( ) . isWildcard ( ) ? 1 : Integer . MAX_VALUE ; }
"This method asks the user if they want to see a chart for today's homework. If they do, then it calls the playGame method. <code> void askAboutTodaysChart ( Scanner input , double [ ] hours ) { ","String answer = askUserString ( input , ""Would you like to see a graph of today's hours (yes/no)? "" ) ; if ( answer . startsWith ( ""y"" ) || answer . startsWith ( ""Y"" ) ) { CreateDayChartClient . createDayChart ( classes , hours ) ; } }"
"Update local coreness value from coreness map received from worker <code> void updateCorenessTable ( HashMap < Integer , Integer > map ) { ",for ( FrontierEdge db : list ) { if ( map . containsKey ( db . node1 ) ) { db . coreness1 = map . get ( db . node1 ) ; } if ( map . containsKey ( db . node2 ) ) { db . coreness2 = map . get ( db . node2 ) ; } } }
Tests ethernet destination criterion. <code> void matchEthDstTest ( ) { ,"Criterion criterion = Criteria . matchEthDst ( mac1 ) ; ObjectNode result = criterionCodec . encode ( criterion , context ) ; assertThat ( result , matchesCriterion ( criterion ) ) ; }"
Tests failure to upload of a file to a Galaxy Library. <code> void testFileToLibraryFailure ( ) { ,"Library library = buildEmptyLibrary ( ""testFileToLibraryFailure"" ) ; library . setId ( ""invalid"" ) ; galaxyLibrariesService . fileToLibrary ( dataFile , FILE_TYPE , library , DataStorage . LOCAL ) ; }"
This method returns the formatted date of the date parameter <code> String formatDateToMMDDYYYY ( String dateToformat ) { ,SimpleDateFormat format1 = new SimpleDateFormat ( dateFormatyyyyMMdd ) ; SimpleDateFormat format2 = new SimpleDateFormat ( dateFormatMMddyyyy ) ; Date date = format1 . parse ( dateToformat ) ; return format2 . format ( date ) ; }
Returns a string representation of this object; useful for testing and debugging. <code> String toString ( ) { ,"StringBuilder sb = new StringBuilder ( ) ; sb . append ( ""{"" ) ; if ( getScalingParameters ( ) != null ) sb . append ( ""ScalingParameters: "" + getScalingParameters ( ) ) ; sb . append ( ""}"" ) ; return sb . toString ( ) ; }"
Tests if the specified object is a key in this hashtable. <code> boolean containsKey ( Object key ) { ,HashtableEntry tab [ ] = table ; int hash = key . hashCode ( ) ; int index = ( hash & 0x7FFFFFFF ) % tab . length ; for ( HashtableEntry e = tab [ index ] ; e != null ; e = e . next ) { if ( ( e . hash == hash ) && e . key . equals ( key ) ) { return true ; } } return false ; }
"Restore object state from a map of key-value string pairs <code> void restorePersistentState ( Map < String , String > values ) { ","String colorMapString = values . get ( ""colorMap"" ) ; if ( colorMapString != null ) { restoreMapFromString ( colorMapString ) ; } }"
Get utf8 byte array. <code> byte [ ] getUTF8Bytes ( String str ) { ,"try { return str . getBytes ( ""UTF-8"" ) ; } catch ( Exception ex ) { return null ; } }"
make an long from the ip so we can do simple test later on <code> long getLongFromIP ( final InetAddress ia ) { ,final byte [ ] address = ia . getAddress ( ) ; long ret = 0 ; for ( final byte addres : address ) { ret <<= 8 ; ret |= ( addres & 0xffL ) ; } return ret ; }
Returns a string representation of this object; useful for testing and debugging. <code> String toString ( ) { ,"StringBuilder sb = new StringBuilder ( ) ; sb . append ( ""{"" ) ; if ( items != null ) sb . append ( ""Items: "" + items + "", "" ) ; if ( nextToken != null ) sb . append ( ""NextToken: "" + nextToken + "", "" ) ; sb . append ( ""}"" ) ; return sb . toString ( ) ; }"
Client side. Reads available bytes from the InputStream. <code> byte [ ] readInput ( InputStream in ) { ,"byte [ ] buf = new byte [ 2000 ] ; int i = 0 ; while ( in . available ( ) > 0 ) { buf [ i ++ ] = ( byte ) in . read ( ) ; } return Arrays . copyOf ( buf , i ) ; }"
"deletePermissions delete permission(s) for given action on given resource involving given principals <code> void deletePermissions ( CSpaceResource res , CSpaceAction action , String [ ] principals ) { ","provider . getPermissionManager ( ) . deletePermissions ( res , action , principals ) ; provider . clearAclCache ( ) ; }"
Gets connection from the factory. Opens the connection if needed. <code> Connection createConnection ( final ConnectionFactory connectionFactory ) { ,final Connection c = connectionFactory . getConnection ( ) ; if ( ! c . isOpen ( ) ) { c . open ( ) ; } return c ; }
"Load snapshots and snapshotQuota for a Snapshottable directory. <code> void loadSnapshotList ( INodeDirectorySnapshottable snapshottableParent , int numSnapshots , DataInput in , FSImageFormat . Loader loader ) { ",for ( int i = 0 ; i < numSnapshots ; i ++ ) { final Snapshot s = loader . getSnapshot ( in ) ; s . getRoot ( ) . setParent ( snapshottableParent ) ; snapshottableParent . addSnapshot ( s ) ; } int snapshotQuota = in . readInt ( ) ; snapshottableParent . setSnapshotQuota ( snapshotQuota ) ; }
Returns the hash code of this object. <code> int hashCode ( ) { ,int hash = 0 ; if ( enabledCipherSuites != null ) for ( int i = 0 ; i < enabledCipherSuites . length ; i ++ ) hash = hash ^ enabledCipherSuites [ i ] . hashCode ( ) ; if ( enabledProtocols != null ) for ( int i = 0 ; i < enabledProtocols . length ; i ++ ) hash = hash ^ enabledProtocols [ i ] . hashCode ( ) ; return hash ; }
Instantiate a new Tuple instance for the given row index. <code> TableTuple newTuple ( int row ) { ,"try { TableTuple t = ( TableTuple ) m_tupleType . newInstance ( ) ; t . init ( m_table , m_graph , row ) ; return t ; } catch ( Exception e ) { Logger . getLogger ( getClass ( ) . getName ( ) ) . warning ( e . getMessage ( ) + "" "" + StringLib . getStackTrace ( e ) ) ; return null ; } }"
Returns true if the iteration has more elements <code> boolean hasNext ( ) { ,if ( index <= rsListSize && index < bottom ) { return true ; } return false ; }
"Given our input flags, figure out what kind of page cursor setup we'll need <code> int pageCursorFlags ( int storeCursorFlags ) { ",int flags = PF_SHARED_LOCK ; if ( ( storeCursorFlags & SF_SCAN ) != 0 ) { flags |= PF_TRANSIENT ; if ( ( storeCursorFlags & SF_REVERSE_CURSOR ) == 0 ) { flags |= PF_READ_AHEAD ; } } return flags ; }
Uses the system property java.class.path to determine the runtime classpath. (Note: this is inherently unreliable as a Classloader is free to ignore java.class.path) <code> FileCollection getClasspathAsFileCollectionFromClasspath ( String cp ) { ,"StringTokenizer tokenizer = new StringTokenizer ( cp , File . pathSeparator ) ; FileCollectionCollection collection = new FileCollectionCollection ( ) ; while ( tokenizer . hasMoreTokens ( ) ) { collection . addJarOrDirectory ( new File ( tokenizer . nextToken ( ) ) ) ; } return collection ; }"
Revert to vertical component of this movement vector. <code> void revertVertical ( ) { ,dy = - dy ; updatePolar ( ) ; }
Called immediately before population initialization occurs. <code> void preInitializationStatistics ( final EvolutionState state ) { ,for ( int x = 0 ; x < children . length ; x ++ ) children [ x ] . preInitializationStatistics ( state ) ; }
Return string representation of this VMID. <code> String toString ( ) { ,"StringBuffer result = new StringBuffer ( ) ; if ( addr != null ) for ( int i = 0 ; i < addr . length ; ++ i ) { int x = ( int ) ( addr [ i ] & 0xFF ) ; result . append ( ( x < 0x10 ? ""0"" : """" ) + Integer . toString ( x , 16 ) ) ; } result . append ( ':' ) ; result . append ( uid . toString ( ) ) ; return result . toString ( ) ; }"
Convience method to convert a String value from a Properties file into an integer <code> int getIntegerProperty ( String base ) { ,if ( base != null ) { try { return Integer . parseInt ( base ) ; } catch ( NumberFormatException nfe ) { } } return 0 ; }
"Create a new List with two members. <code> List < T > newList ( final T m1 , final T m2 ) { ",final List < T > list = new ArrayList < T > ( ) ; list . add ( m1 ) ; list . add ( m2 ) ; return ( list ) ; }
Two objects that are equal are required to return the same hashCode. <code> void testHashcode ( ) { ,"ClusteredXYBarRenderer r1 = new ClusteredXYBarRenderer ( ) ; ClusteredXYBarRenderer r2 = new ClusteredXYBarRenderer ( ) ; assertTrue ( r1 . equals ( r2 ) ) ; int h1 = r1 . hashCode ( ) ; int h2 = r2 . hashCode ( ) ; assertEquals ( h1 , h2 ) ; }"
"Cut first (length-maxLength) characters and replace it with ""..."" <code> String cutBegin ( String data , int maxLength ) { ","if ( data . length ( ) > maxLength ) { return ""..."" + data . substring ( data . length ( ) - maxLength , data . length ( ) ) ; } else { return data ; } }"
Test conversion from bytes. <code> void testBIFromBytes ( ) { ,"final byte [ ] val = new byte [ ] { ( byte ) 0xFE , ( byte ) 0xFF , ( byte ) 0xFF , ( byte ) 0xFF , ( byte ) 0xFF , ( byte ) 0xFF , ( byte ) 0xFF , ( byte ) 0xFF } ; final ZipEightByteInteger zl = new ZipEightByteInteger ( val ) ; assertEquals ( ""value from bytes"" , BigInteger . valueOf ( Long . MAX_VALUE ) . shiftLeft ( 1 ) , zl . getValue ( ) ) ; }"
"Gets the C register number, as a nibble. This will throw if the value is out of the range of an unsigned nibble. <code> short getCNibble ( ) { ","int c = getC ( ) ; if ( ( c & ~ 0xf ) != 0 ) { throw new DexException ( ""Register C out of range: "" + Hex . u8 ( c ) ) ; } return ( short ) c ; }"
"metoda preveri praznost na podanem mestu <code> boolean lahkoPostavimNa ( int [ ] [ ] a , int x , int y ) { ",if ( a [ x ] [ y ] == 0 ) return true ; else return false ; }
"This helper method wraps a String around a byte array returned from the bitstream method further down <code> String getStringFromBitstream ( Context context , Item item , String bitstream_name ) { ","byte [ ] bytes = getBytesFromBitstream ( context , item , bitstream_name ) ; if ( bytes == null ) { return null ; } return new String ( bytes ) ; }"
"Check if a string is a valid GUID. GUID is RFC 4122 compliant, it should have format xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx. TODO(qinmin): move this to base/. <code> boolean isValidGUID ( String guid ) { ",if ( guid == null ) return false ; try { UUID uuid = UUID . fromString ( guid ) ; String uuidString = uuid . toString ( ) ; return guid . equalsIgnoreCase ( uuidString ) ; } catch ( IllegalArgumentException e ) { return false ; } }
"Coordinates several formula evaluators together so that formulas that involve external references can be evaluated. <code> void setupEnvironment ( String [ ] workbookNames , ForkedEvaluator [ ] evaluators ) { ","WorkbookEvaluator [ ] wbEvals = new WorkbookEvaluator [ evaluators . length ] ; for ( int i = 0 ; i < wbEvals . length ; i ++ ) { wbEvals [ i ] = evaluators [ i ] . _evaluator ; } CollaboratingWorkbooksEnvironment . setup ( workbookNames , wbEvals ) ; }"
"Retrieve a string from a given resource bundle for the default locale. <code> String getString ( String resourceID , String resource , String fallback ) { ",try { ResourceBundle resourceBundle = ResourceBundle . getBundle ( resource ) ; return resourceBundle . getString ( resourceID ) ; } catch ( MissingResourceException e ) { _logger . error ( e ) ; } return fallback ; }
"Construct a FermatPacketCommunication encrypted with the destination identity public key and signed whit the private key passed as an argument <code> FMPPacket constructCloudFMPPacketEncryptedAndSinged ( final String sender , final String destination , final String message , final FMPPacketType fmpPacketType , final NetworkServices networkServicesType , final String privateKey ) { ","String messageHash = AsymmetricCryptography . encryptMessagePublicKey ( message , destination ) ; String signature = AsymmetricCryptography . createMessageSignature ( messageHash , privateKey ) ; return new CloudFMPPacket ( destination , sender , fmpPacketType , messageHash , signature , networkServicesType ) ; }"
returns the normal where the wheel collides with the ground (world space) <code> Vector3f getCollisionNormal ( Vector3f vec ) { ,"Converter . convert ( wheelInfo . raycastInfo . contactNormalWS , vec ) ; return vec ; }"
Strips the query parameters from the uri <code> String stripQuery ( String uri ) { ,"int idx = uri . indexOf ( '?' ) ; if ( idx > - 1 ) { uri = uri . substring ( 0 , idx ) ; } return uri ; }"
Macht das GUI spielbereit. <code> void makeGuiReady ( ) { ,"gui = new GUI ( ""Tic Tac Toe - Philipp Schuster (@phip1611 | 2015)"" ) ; gui . buildGUI ( ) ; gui . show ( ) ; setActionListeners ( ) ; }"
Sets the position of the active cell. <code> void setCursor ( Point activeCell ) { ,cursorX = ( int ) activeCell . getX ( ) ; cursorY = ( int ) activeCell . getY ( ) ; }
"Add an HTTP header line containing a field name, a literal colon, and a value. <code> void addLine ( String line ) { ","int index = line . indexOf ( "":"" ) ; if ( index == - 1 ) { addLenient ( """" , line ) ; } else { addLenient ( line . substring ( 0 , index ) , line . substring ( index + 1 ) ) ; } }"
"get the String value according to the tag name, if the TaggedValue is null, return empty string. <code> String getValueString ( String tag , ModelElement element ) { ","TaggedValue taggedValue = TaggedValueHelper . getTaggedValue ( tag , element . getTaggedValue ( ) ) ; return taggedValue == null ? """" : taggedValue . getValue ( ) ; }"
Confirm that cloning works. <code> void testCloning ( ) { ,FastScatterPlot p1 = new FastScatterPlot ( ) ; FastScatterPlot p2 = ( FastScatterPlot ) p1 . clone ( ) ; assertTrue ( p1 != p2 ) ; assertTrue ( p1 . getClass ( ) == p2 . getClass ( ) ) ; assertTrue ( p1 . equals ( p2 ) ) ; }
"Setter for the ""JvmThreadContentionMonitoring"" variable. <code> void setJvmThreadContentionMonitoring ( EnumJvmThreadContentionMonitoring x ) { ",ThreadMXBean mbean = getThreadMXBean ( ) ; if ( JvmThreadContentionMonitoringEnabled . intValue ( ) == x . intValue ( ) ) mbean . setThreadContentionMonitoringEnabled ( true ) ; else mbean . setThreadContentionMonitoringEnabled ( false ) ; }
"utility that converts a dictionary ID to string, preserving order <code> String dictIdToString ( byte [ ] idBytes , int offset , int length ) { ","try { return new String ( idBytes , offset , length , ""ISO-8859-1"" ) ; } catch ( UnsupportedEncodingException e ) { return null ; } }"
"get the AppManager instance, the AppManager is singleton. <code> ActivityPageManager getInstance ( ) { ",if ( instance == null ) { instance = new ActivityPageManager ( ) ; } return instance ; }
"Returns the ObjectType of the given ProducerMember object. The object type is central service if member class is not defined. If member class is defined, the object type is service. <code> ObjectType getObjectType ( ProducerMember producer ) { ",if ( producer . getMemberClass ( ) == null ) { return ObjectType . CENTRALSERVICE ; } return ObjectType . SERVICE ; }
Return the node that matches a given pattern. This is useful for as pattern. <code> Node getMatch ( Analyzer . NodeMatch nm ) { ,for ( Object n : target ) { if ( nm . apply ( ( Node ) n ) ) return ( Node ) n ; } return null ; }
SPI method used by Broker embedded applications to get list of subscribers. Returns null if the broker is not started. <code> List < Subscription > getSubscriptions ( ) { ,if ( m_processorBootstrapper == null ) { return null ; } return m_processorBootstrapper . getSubscriptions ( ) ; }
Create a new copy of an array of data <code> String [ ] copyArray ( String [ ] data ) { ,String [ ] newData = new String [ data . length ] ; for ( int i = 0 ; i < data . length ; i ++ ) { newData [ i ] = data [ i ] ; } return newData ; }
"Upload using a user-provided executor, or the jclouds userExecutor <code> String putMultipartBlob ( String container , Blob blob , PutOptions overrides ) { ","if ( overrides . getUseCustomExecutor ( ) ) { return putMultipartBlob ( container , blob , overrides , overrides . getCustomExecutor ( ) ) ; } else { return putMultipartBlob ( container , blob , overrides , userExecutor ) ; } }"
"Convert a byte to an integer. Needed because in Java bytes are signed, and for Base64 purposes they are not. If not done this way, when converted to an int, 0xFF will become -127 <code> int convertUnsignedByteToInt ( byte b ) { ",if ( b >= 0 ) { return ( int ) b ; } return 256 + b ; }
"Find the UDF class for given function name and check if it accepts the given input argument types. If a match is found, create a holder and return <code> HiveFuncHolder getFunction ( FunctionCall call ) { ","HiveFuncHolder h ; h = resolveFunction ( call , false ) ; if ( h != null ) { return h ; } return resolveFunction ( call , true ) ; }"
Get the adjacencies of the workflow <code> String getWorkflowAdjacencies ( ) { ,if ( datum . workflowAdjacencies != null ) { return datum . workflowAdjacencies . toString ( ) ; } return null ; }
"Merge a map by prefixed keys <code> void mergeMapPrefixedKeys ( Map < String , String > that , String prefix , boolean overwrite ) { ","for ( Map . Entry < String , String > entry : that . entrySet ( ) ) { String key = entry . getKey ( ) ; if ( key . startsWith ( prefix ) ) { if ( overwrite || get ( key ) == null ) { put ( key , entry . getValue ( ) ) ; } } } }"
Test if beeline prompts for a password when optional password option is at the beginning of arguments <code> void testPromptPasswordOptionAsFirst ( ) { ,"List < String > argList = new ArrayList < > ( ) ; argList . add ( ""-p"" ) ; argList . addAll ( getBaseArgs ( miniHS2 . getBaseJdbcURL ( ) ) ) ; argList . add ( ""-n"" ) ; argList . add ( ""hive"" ) ; connectBeelineWithUserPrompt ( argList , ""hivepassword"" ) ; }"
"Implements quicksort according to Manber's ""Introduction to Algorithms"". <code> void quickSort ( float [ ] array , int [ ] index , int left , int right ) { ","if ( left < right ) { int middle = partition ( array , index , left , right ) ; quickSort ( array , index , left , middle ) ; quickSort ( array , index , middle + 1 , right ) ; } }"
"Parses double from String <code> double getDouble ( final String strToParse , final double defaultValue ) { ",try { return Double . parseDouble ( strToParse ) ; } catch ( Exception e ) { return defaultValue ; } }
insertFront() inserts an item at the front of a DList2. <code> void insertFront ( int i ) { ,head . next = new DListNode2 ( ) ; head . next . item = i ; head . next . prev = head ; head . next . next = head . prev ; head . prev . prev = head . next ; size ++ ; }
Asserts that any string parameter is set. <code> void assertNotNull ( Object param ) { ,"if ( param == null ) { throw new XMPException ( ""Parameter must not be null"" , XMPError . BADPARAM ) ; } else if ( ( param instanceof String ) && ( ( String ) param ) . length ( ) == 0 ) { throw new XMPException ( ""Parameter must not be null or empty"" , XMPError . BADPARAM ) ; } }"
Get a list of root roles <code> List < String > getRootRoles ( ) { ,List < String > result = new ArrayList < String > ( ) ; for ( String roleName : parentMappings . keySet ( ) ) { if ( isRoot ( roleName ) ) result . add ( roleName ) ; } return result ; }
Add a state to the game. The state will be updated and maintained by the game <code> void addState ( GameState state ) { ,"states . put ( new Integer ( state . getID ( ) ) , state ) ; if ( currentState . getID ( ) == - 1 ) { currentState = state ; } }"
Returns third (from right) object name from optionally schema qualified name. <code> String getThirdObjectName ( final String name ) { ,final String [ ] names = splitNames ( name ) ; return names . length >= 3 ? names [ names . length - 3 ] : null ; }
"Sets a callback that will be executed when the initialization is done. <code> void setOnInitializeAsyncFinished ( final Runnable callback , long timeoutMs ) { ","sInitializeAsyncCallbacks . add ( callback ) ; ThreadUtils . postOnUiThreadDelayed ( new Runnable ( ) { @ Override public void run ( ) { if ( sInitializeAsyncCallbacks . remove ( callback ) ) callback . run ( ) ; } } , sIsInitialized ? 0 : timeoutMs ) ; }"
"Returns true if the given file is on a network drive. If wasSuccessful() returns false, this will generally return false. <code> boolean onNetworkDrive ( String filename ) { ","if ( filename . startsWith ( ""||"" ) ) return true ; boolean result = ( toUNCName ( filename ) != null ) ; logger . finer ( ""onNetworkDrive("" + filename + "") = '"" + result + ""'"" ) ; return result ; }"
Tests is user is loggin in. True if UserContainer exists has been created. <code> boolean isLoggedIn ( HttpServletRequest request ) { ,Authentication authentication = SecurityContextHolder . getContext ( ) . getAuthentication ( ) ; return ( authentication != null ) && ! ( authentication instanceof AnonymousAuthenticationToken ) ; }
Returns vector as a string <code> String toString ( ) { ,"StringBuilder sb = new StringBuilder ( ) ; sb . append ( ""IntegerVector=(["" ) ; for ( int i = 0 ; i < _vector . length ; i ++ ) { sb . append ( _vector [ i ] ) ; if ( i < _vector . length - 1 ) { sb . append ( "", "" ) ; } } sb . append ( ""], size="" + getSize ( ) + "")"" ) ; return sb . toString ( ) ; }"
Find keys (search words) with a particuar prefix. <code> Iterable < String > prefixMatch ( String prefix ) { ,"Queue < String > queue = new LinkedList < String > ( ) ; Node x = get ( root , prefix , 0 ) ; if ( x . val != - 1 ) { queue . add ( prefix ) ; } collect ( x . mid , prefix , queue ) ; return queue ; }"
Get a singleton instance of hash function of a type defined in the configuration. <code> Hash getInstance ( Configuration conf ) { ,int type = getHashType ( conf ) ; return getInstance ( type ) ; }
"Returns the index of the first character in the run, defined by the specified attribute, that contains the current character. <code> int getRunStart ( AttributedCharacterIterator . Attribute attrib ) { ",if ( attrib == null ) return ci . getBeginIndex ( ) ; HashSet s = new HashSet ( ) ; s . add ( attrib ) ; return ( getRunStart ( s ) ) ; }
Retrieves the hash code for this sort order. <code> int hashCode ( ) { ,int hashCode = 0 ; for ( SortKey sortKey : sortKeys ) { hashCode += sortKey . hashCode ( ) ; } return hashCode ; }
Test that readRawVarint32 is compatible with the varints encoded by ProtoBuf's CodedOutputStream. <code> void testVarInt ( ) { ,for ( int value : TEST_VINT_VALUES ) { doVarIntTest ( value ) ; } for ( int i = 1 ; i != 0 ; i <<= 1 ) { doVarIntTest ( i ) ; doVarIntTest ( - i ) ; doVarIntTest ( i - 1 ) ; doVarIntTest ( ~ i ) ; } }
Returns network availability status. <code> boolean isNetworkAvailable ( Context context ) { ,ConnectivityManager connectivityManager = ( ConnectivityManager ) context . getSystemService ( Context . CONNECTIVITY_SERVICE ) ; NetworkInfo info = connectivityManager . getActiveNetworkInfo ( ) ; if ( info == null ) { return false ; } return info . isConnected ( ) ; }
"Translate the string value for outputType to the enum OutputType value. <code> DataFormat getOutputTypeFromString ( String typeString , DataFormat defaultValue ) { ","if ( typeString . equalsIgnoreCase ( ""xml"" ) ) return DataFormat . XML ; if ( typeString . equalsIgnoreCase ( ""json"" ) ) return DataFormat . JSON ; logger . warn ( ""Onbekend outputtype gevraagd: "" + typeString ) ; return defaultValue ; }"
Gets the IV being used. Only works with algorithms that support IVs. <code> IvParameterSpec getIv ( ) { ,if ( type . ivlen == - 1 ) { throw new UnsupportedTypeException ( type ) ; } return iv ; }
Sets the connection on which this ModbusTransaction should be executed. An implementation should be able to handle open and closed connections. <code> void setConnection ( TCPMasterConnection con ) { ,m_Connection = con ; m_IO = con . getModbusTransport ( ) ; }
"Test for public static Callback, TreeCell> forTreeView(T... items) <code> void testStatic_forTreeView_noArgs_ensureCellFactoryIsNotNull ( ) { ","Callback < TreeView < String > , TreeCell < String >> cellFactory = ChoiceBoxTreeCell . forTreeView ( ) ; assertNotNull ( cellFactory ) ; }"
"Append several slots onto the vector, but do not set the values. <code> void addElements ( int numberOfElements ) { ","if ( ( m_firstFree + numberOfElements ) >= m_mapSize ) { m_mapSize += ( m_blocksize + numberOfElements ) ; int newMap [ ] = new int [ m_mapSize ] ; System . arraycopy ( m_map , 0 , newMap , 0 , m_firstFree + 1 ) ; m_map = newMap ; } m_firstFree += numberOfElements ; }"
Gets the value of the disabled property. <code> boolean isDisabled ( ) { ,if ( disabled == null ) { return false ; } else { return disabled ; } }
Changes to the notes plugin as the active tab <code> void toolMenuItem ( ActionEvent evt ) { ,JTabbedPane tp = GMGenSystemView . getTabPane ( ) ; for ( int i = 0 ; i < tp . getTabCount ( ) ; i ++ ) { if ( tp . getComponentAt ( i ) instanceof NotesView ) { tp . setSelectedIndex ( i ) ; } } }
"Converts a latitude coordinate (in degrees) to a pixel Y coordinate at a certain zoom level. <code> double latitudeToPixelY ( double latitude , int zoomLevel ) { ",double sinLatitude = Math . sin ( latitude * ( Math . PI / 180 ) ) ; return ( 0.5 - Math . log ( ( 1 + sinLatitude ) / ( 1 - sinLatitude ) ) / ( 4 * Math . PI ) ) * ( ( long ) Tile . SIZE << zoomLevel ) ; }
Sets a logger to use to log messages (default is a logger with this class' name). This can be used to redirect logs to a differently named logger instead. <code> void setLogger ( Logger theLogger ) { ,"Validate . notNull ( theLogger , ""theLogger can not be null"" ) ; myLog = theLogger ; }"
Testing compare with one empty tag <code> void compareWithOneEmptyTagTest ( ) { ,"Tag tag1 = new Tag ( ""k1"" , ""v1"" ) ; Tag tag2 = new Tag ( ) ; assertFalse ( tag1 . equals ( tag2 ) ) ; }"
Test will timeout if secure random implementation always returns a constant value. <code> void testRandomFloat ( ) { ,OsSecureRandom random = getOsSecureRandom ( ) ; float rand1 = random . nextFloat ( ) ; float rand2 = random . nextFloat ( ) ; while ( rand1 == rand2 ) { rand2 = random . nextFloat ( ) ; } random . close ( ) ; }
Retorna o atributo cidade da morada estrangeira <code> String getForeignCity ( ) { ,checkNLoad ( ) ; return cityF ; }
"handles new userAssignment request. In the jsp we are using spring's form:form tags Spring expects a model called by default 'command' or any name we set to it: in this case ""userAssignment"" <code> ModelAndView newUserAssignment ( ) { ","logger . info ( ""new userAssignment "" ) ; UserAssignment userAssignment = new UserAssignment ( ) ; return new ModelAndView ( ""NewUserAssignment"" , ""userAssignment"" , userAssignment ) ; }"
"Add a set of abbreviations to a phrase. <code> void addPhrase ( String phrase , List < String > alternatives ) { ","phrases . add ( phrase ) ; abbreviations . put ( phrase , alternatives ) ; }"
"Get integer value from property file <code> int getInt ( String key , int i ) { ",String token = getSystemString ( key ) ; if ( token == null ) { return i ; } return Integer . parseInt ( token ) ; }
Set the thread context class loader <code> void setThreadContextClassLoader ( final ClassLoader cl ) { ,AccessController . doPrivileged ( new PrivilegedAction < ClassLoader > ( ) { public ClassLoader run ( ) { Thread . currentThread ( ) . setContextClassLoader ( cl ) ; return null ; } } ) ; }
"This method will return the value of the parameter <code> String getImportedWSDL ( CarbonHttpRequest request , String paramName ) { ","String paramValue = request . getParameter ( paramName ) ; if ( paramValue != null && paramValue . length ( ) != 0 ) { return paramValue ; } return """" ; }"
"Returns a BeanIO configuration setting as an integer. <code> int getInt ( String key , int defaultValue ) { ",try { String value = properties . getProperty ( key ) ; if ( value != null ) { return Integer . parseInt ( value ) ; } } catch ( NumberFormatException ex ) { } return defaultValue ; }
Generate the unique permutation id for this permutation. <code> int generatePermutationId ( int [ ] data ) { ,int permutationId = 0 ; for ( int c = 0 ; c < dimensions ; c ++ ) { permutationId *= dimensions ; permutationId += data [ c ] ; } return permutationId ; }
"When the OpenGL ES device is lost, GL handles become invalidated. In that case, we just want to ""forget"" the old handles (without explicitly deleting them) and make new ones. <code> void invalidateHardwareBuffers ( ) { ",mVertBufferIndex = 0 ; mIndexBufferIndex = 0 ; mTextureCoordBufferIndex = 0 ; mUseHardwareBuffers = false ; }
Retrieve a value from the map. <code> Object getObject ( String name ) { ,Object result = m_map . get ( name ) ; return ( result ) ; }
Indicates that the test case with the given key was skipped <code> void testSkipped ( Description description ) { ,TestNode test = getTest ( description ) ; if ( test != null ) { test . testSkipped ( currentMillis ( ) ) ; } }
Calculates a score against the given feature. The score can be retrieved with get score. The token will keep a reference to the scored feature-vector. <code> float calculateScore ( Data feature ) { ,logAcousticScore = ( ( ScoreProvider ) searchState ) . getScore ( feature ) ; logTotalScore += logAcousticScore ; setData ( feature ) ; return logTotalScore ; }
"Sets a block type, data and add it to the BlockState list. <code> void setTypeAndRawData ( World world , int x , int y , int z , Material type , int data ) { ","final GlowBlockState state = ( GlowBlockState ) world . getBlockAt ( x , y , z ) . getState ( ) ; state . setType ( type ) ; state . setRawData ( ( byte ) data ) ; blockStateMap . put ( world . getBlockAt ( x , y , z ) . getLocation ( ) , state ) ; }"
"Returns the number of occurrences of a specific character. <code> int countChar ( String str , char chr ) { ",int count = 0 ; for ( char c : str . toCharArray ( ) ) { if ( c == chr ) { count ++ ; } } return count ; }
Handles the general error case. Report server-side error. <code> VndErrors onException ( Exception e ) { ,"String logref = logError ( e ) ; String msg = StringUtils . hasText ( e . getMessage ( ) ) ? e . getMessage ( ) : e . getClass ( ) . getSimpleName ( ) ; return new VndErrors ( logref , msg ) ; }"
"return the best fragments. <code> String [ ] getBestFragments ( final FieldQuery fieldQuery , IndexReader reader , int docId , String fieldName , int fragCharSize , int maxNumFragments , FragListBuilder fragListBuilder , FragmentsBuilder fragmentsBuilder , String [ ] preTags , String [ ] postTags , Encoder encoder ) { ","FieldFragList fieldFragList = getFieldFragList ( fragListBuilder , fieldQuery , reader , docId , fieldName , fragCharSize ) ; return fragmentsBuilder . createFragments ( reader , docId , fieldName , fieldFragList , maxNumFragments , preTags , postTags , encoder ) ; }"
Check how many bytes is required to store value. <code> int intFitsIn ( final int value ) { ,if ( value < 0 ) { return 4 ; } if ( value < ( 1 << 2 * 8 ) ) { if ( value < ( 1 << 1 * 8 ) ) { return 1 ; } return 2 ; } if ( value <= ( 1 << 3 * 8 ) ) { return 3 ; } return 4 ; }
Gets the selected tabSet index for the currently selected node. <code> int getSelectedTabIndex ( ) { ,TabState tabState = tabContents . get ( currentNode ) ; return tabState . getTabIndex ( ) ; }
"Remember the account name and authToken in prefs. <code> void persistCredentials ( SharedPreferences settings , String accountName , String authToken ) { ","Log . i ( TAG , ""Persisting credentials, acct ="" + accountName ) ; SharedPreferences . Editor editor = settings . edit ( ) ; editor . putString ( PREF_ACCOUNT_NAME , accountName ) ; editor . putString ( PREF_AUTH_TOKEN , authToken ) ; editor . commit ( ) ; }"
Get active tenants list <code> List < String > getAllActiveTenantDomains ( ) { ,if ( initialized && tenantDomainList . isEmpty ( ) ) { refreshActiveTenantDomainsList ( ) ; } return tenantDomainList ; }
Get the average waiting time for customers that have been served. <code> double averageOfServed ( ) { ,double total = 0.0 ; int count = 0 ; Iterator < Customer > iter = served . iterator ( ) ; while ( iter . hasNext ( ) ) { Customer c = iter . next ( ) ; double waitSoFar = c . waitTime ( ) ; count ++ ; total += waitSoFar ; } return total / count ; }
Returns the size of the color index if the given image has one. <code> int getColorIndexSize ( RenderedImage img ) { ,ColorModel cm = img . getColorModel ( ) ; if ( cm instanceof IndexColorModel ) { IndexColorModel icm = ( IndexColorModel ) cm ; return icm . getMapSize ( ) ; } else { return 0 ; } }
"Crea el archivo para un html de un test. <code> PrintStream archivoHtmlTest ( Test . eTipoTest tipoTest , String idBloqueTematica , Integer idTest ) { ","checkAndCreateDir ( pathHtml ) ; String filename = htmlTestFilename ( tipoTest , idBloqueTematica , idTest ) ; return filenameToPrintStream ( filename ) ; }"
Returns the features (label attribute excluded). <code> double [ ] getFeatures ( ) { ,double [ ] filteredFeatures = new double [ features . length - 1 ] ; for ( int i = 0 ; i < filteredFeatures . length ; i ++ ) filteredFeatures [ i ] = features [ i ] ; return filteredFeatures ; }
Returns true if the operating system is windows. <code> boolean isWindows ( ) { ,"final String os2 = System . getProperty ( ""os.name"" ) ; if ( os2 != null && os2 . toLowerCase ( ) . indexOf ( ""windows"" ) != - 1 ) { return true ; } return false ; }"
"RSA encrypt function (RSA / ECB / PKCS1-Padding) <code> byte [ ] rsaEncrypt ( byte [ ] original , PublicKey key ) { ","try { Cipher cipher = Cipher . getInstance ( ""RSA/ECB/PKCS1Padding"" ) ; cipher . init ( Cipher . ENCRYPT_MODE , key ) ; return cipher . doFinal ( original ) ; } catch ( Exception e ) { } return null ; }"
Returns an InputStream obtained from the data source <code> InputStream getInputStream ( ) { ,if ( barr == null ) { barr = IOUtil . toBytes ( url . openStream ( ) ) ; } return new ByteArrayInputStream ( barr ) ; }
Counts the number of invisible nodes in a list of nodes. <code> int countInvisibleNodes ( final Collection < NaviNode > nodes ) { ,"return CollectionHelpers . countIf ( nodes , new ICollectionFilter < NaviNode > ( ) { @ Override public boolean qualifies ( final NaviNode item ) { return ! item . isVisible ( ) ; } } ) ; }"
"Returns a new GOP. <code> GoalOrientedProposition createGOP ( GoalType prefix , String statement ) { ","GoalOrientedProposition gop = new GoalOrientedProposition ( prefix , statement ) ; return gop ; }"
Returns true if the specified vertex is in the minimum vertex cover computed by the algorithm. <code> boolean inMinVertexCover ( int v ) { ,validate ( v ) ; return inMinVertexCover [ v ] ; }
Get the schema grammar for the specified namespace <code> SchemaGrammar getGrammar ( String namespace ) { ,if ( namespace == null ) return fNoNSGrammar ; return ( SchemaGrammar ) fGrammarRegistry . get ( namespace ) ; }
Extracts the ten random words required for testing and stores it inside the private ArrayList of words that can be accessed by the getter. <code> void generateWords ( ) { ,Collections . shuffle ( originalList ) ; for ( int i = 0 ; i < 10 ; i ++ ) { Word currentWord = new Word ( originalList . get ( i ) ) ; wordList . add ( currentWord ) ; } }
"Encodes the time to the raw BSON bytes. <code> IRubyObject toBson ( final IRubyObject time , final IRubyObject bytes ) { ","final long millis = ( ( RubyTime ) time ) . getJavaDate ( ) . getTime ( ) ; return ( ( RubyString ) bytes ) . append ( toBsonTime ( time . getRuntime ( ) , millis ) ) ; }"
The action associated with this listener has been successful. <code> void onSuccess ( IMqttToken asyncActionToken ) { ,switch ( action ) { case CONNECT : connect ( ) ; break ; case DISCONNECT : disconnect ( ) ; break ; case SUBSCRIBE : subscribe ( ) ; break ; case PUBLISH : publish ( ) ; break ; } }
Returns a string representation of this object. <code> String toString ( ) { ,"switch ( current ) { case 0 : return """" ; case 1 : return array [ 0 ] ; default : boolean not_done = true ; int i = 0 ; StringBuffer buf = new StringBuffer ( 50 ) ; do { buf . append ( array [ i ++ ] ) ; if ( i == current ) { not_done = false ; } else { buf . append ( "", "" ) ; } } while ( not_done ) ; return buf . toString ( ) ; } }"
Creates a behavior that sleeps a specified amount of time before each client request. <code> OClientBehavior rateLimit ( final long millis ) { ,return new OClientBehavior ( ) { @ Override public ODataClientRequest transform ( ODataClientRequest request ) { try { Thread . sleep ( millis ) ; } catch ( InterruptedException e ) { throw Throwables . propagate ( e ) ; } return request ; } } ; }
"Sets the selected state of a toggle action. If the id doesn't correspond to a toggle action then it will fail silently. <code> void setSelected ( Object id , boolean selected ) { ",AbstractActionExt action = getStateChangeAction ( id ) ; if ( action != null ) { action . setSelected ( selected ) ; } }
Creates the necessary directories for the installation of LaTeXDraw. <code> void checkInstallDirectories ( ) { ,try { ( new File ( PATH_SHARED ) ) . mkdirs ( ) ; ( new File ( PATH_TEMPLATES_SHARED ) ) . mkdirs ( ) ; } catch ( SecurityException e ) { e . printStackTrace ( ) ; } }
Returns a string representation of this object; useful for testing and debugging. <code> String toString ( ) { ,"StringBuilder sb = new StringBuilder ( ) ; sb . append ( ""{"" ) ; if ( getActivities ( ) != null ) sb . append ( ""Activities: "" + getActivities ( ) + "","" ) ; if ( getNextToken ( ) != null ) sb . append ( ""NextToken: "" + getNextToken ( ) ) ; sb . append ( ""}"" ) ; return sb . toString ( ) ; }"
Snaps segments to all vertices. <code> void computeVertexSnaps ( Collection edges ) { ,for ( Iterator i0 = edges . iterator ( ) ; i0 . hasNext ( ) ; ) { NodedSegmentString edge0 = ( NodedSegmentString ) i0 . next ( ) ; computeVertexSnaps ( edge0 ) ; } }
How many has player bore. <code> int howManyHasPlayerBore ( final boolean black ) { ,if ( black ) { return blackBore ; } else { return redBore ; } }
Helper method to get a String representation of the Locale <code> String getLocaleAsString ( Locale locale ) { ,"if ( locale . getCountry ( ) . length ( ) == 0 ) return locale . getLanguage ( ) ; return locale . getLanguage ( ) + ""_"" + locale . getCountry ( ) ; }"
Set the final node <code> void setFinalNode ( Node node ) { ,"if ( isNodeInGraph ( node ) ) { finalNode = node ; } else { throw new IllegalArgumentException ( ""Final node not in graph"" ) ; } }"
"Encode the buffer in aBuffer and write the encoded result to the OutputStream aStream. <code> void encodeBuffer ( byte aBuffer [ ] , OutputStream aStream ) { ","ByteArrayInputStream inStream = new ByteArrayInputStream ( aBuffer ) ; encodeBuffer ( inStream , aStream ) ; }"
Test should read succesfully. <code> void testSuccessfulReading ( ) { ,"List < String > testData = new TestDataFactoryBean ( ) . getObject ( ) ; reader = new ListItemReader < String > ( testData ) ; int count = 0 ; String line ; while ( ( line = reader . read ( ) ) != null ) { assertEquals ( String . valueOf ( count ) , line ) ; count ++ ; } assertEquals ( testData . size ( ) , count ) ; }"
"Get the current class for a meta tag keyword, as the first and only element of an array list. <code> ArrayList < String > getClassKeyword ( ClassDoc classdoc ) { ","String cltypelower = classdoc . isInterface ( ) ? ""interface"" : ""class"" ; ArrayList < String > metakeywords = new ArrayList < String > ( 1 ) ; metakeywords . add ( classdoc . qualifiedName ( ) + "" "" + cltypelower ) ; return metakeywords ; }"
Returns the flavors that are supported by this Transferable. <code> DataFlavor [ ] getTransferDataFlavors ( ) { ,DataFlavor [ ] flavors = { DefaultTransferHandler . flavor } ; return flavors ; }
"Serialize an instance, restore it, and check for equality. <code> void testSerialization ( ) { ","StackedXYBarRenderer r1 = new StackedXYBarRenderer ( ) ; r1 . setSeriesPaint ( 0 , new GradientPaint ( 1.0f , 2.0f , Color . red , 3.0f , 4.0f , Color . yellow ) ) ; StackedXYBarRenderer r2 = ( StackedXYBarRenderer ) TestUtilities . serialised ( r1 ) ; assertEquals ( r1 , r2 ) ; }"
Returns a string representation of this object; useful for testing and debugging. <code> String toString ( ) { ,"StringBuilder sb = new StringBuilder ( ) ; sb . append ( ""{"" ) ; if ( getCost ( ) != null ) sb . append ( ""Cost: "" + getCost ( ) + "","" ) ; if ( getFrequency ( ) != null ) sb . append ( ""Frequency: "" + getFrequency ( ) ) ; sb . append ( ""}"" ) ; return sb . toString ( ) ; }"
"Calls caseXXX for each class of the model until one returns a non null result; it yields that result. <code> Object doSwitch ( EClass theEClass , EObject theEObject ) { ","if ( theEClass . eContainer ( ) == modelPackage ) { return doSwitch ( theEClass . getClassifierID ( ) , theEObject ) ; } else { List eSuperTypes = theEClass . getESuperTypes ( ) ; return eSuperTypes . isEmpty ( ) ? defaultCase ( theEObject ) : doSwitch ( ( EClass ) eSuperTypes . get ( 0 ) , theEObject ) ; } }"
Calls isLeapYear to print correct statement. <code> void checkLeapYear ( int year ) { ,"if ( isLeapYear ( year ) ) { System . out . printf ( ""%d is a leap year. "" , year ) ; } else { System . out . printf ( ""%d is not a leap year. "" , year ) ; } }"
Returns the string resource id for a given ContentSetting to show with a permission category. <code> int getCategorySummary ( ContentSetting value ) { ,switch ( value ) { case ALLOW : return R . string . website_settings_category_allowed ; case BLOCK : return R . string . website_settings_category_blocked ; case ASK : return R . string . website_settings_category_ask ; default : return 0 ; } }
Counts how many times a given word occurs in this book. <code> int occurrencesOf ( String word ) { ,"int numOccurrences = 0 ; int lengthWithoutWord = bookText . replace ( word , """" ) . length ( ) ; numOccurrences = ( bookText . length ( ) - lengthWithoutWord ) / word . length ( ) ; return numOccurrences ; }"
Convert a string (e.g. the name of an experiment) to something more suitable for use as a filename. <code> String cleanString ( String s ) { ,StringBuilder sb = new StringBuilder ( ) ; for ( char c : s . toCharArray ( ) ) { if ( Character . isWhitespace ( c ) ) sb . append ( '_' ) ; else if ( Character . isLetterOrDigit ( c ) ) sb . append ( c ) ; } return sb . toString ( ) ; }
return true if the deployment unit is either itself a process application or part of a process application. <code> boolean isPartOfProcessApplication ( DeploymentUnit unit ) { ,if ( isProcessApplication ( unit ) ) { return true ; } if ( unit . getParent ( ) != null && unit . getParent ( ) != unit ) { return unit . getParent ( ) . hasAttachment ( PART_OF_MARKER ) ; } return false ; }
Redisplays a control. Single-line helper that handles the display issues of controls with changed content. <code> T reDisplay ( T control ) { ,Point p = control . getSize ( ) ; control . pack ( ) ; control . setSize ( p ) ; return control ; }
Legger til en rekke med lyder <code> void addSounds ( String [ ] soundNames ) { ,for ( int i = 0 ; i < soundNames . length ; i ++ ) { addSound ( soundNames [ i ] ) ; } }
"Return a random integer, with type long, uniformly distributed over the interval [min,max). Assume max - min <= Integer.MAX_VALUE. <code> long nextRandomLong ( final long min , final long max ) { ","final long d = max - min ; if ( d <= 0 || d > Integer . MAX_VALUE ) { throw new IllegalArgumentException ( ""d <= 0 || d > Integer.MAX_VALUE, min="" + min + "", max="" + max ) ; } return d == 1 ? min : min + RANDOM . get ( ) . nextInt ( ( int ) d ) ; }"
Method to create DB Connection <code> Connection createConnection ( ) { ,"Connection con = null ; try { Class . forName ( Constants . dbClass ) ; con = DriverManager . getConnection ( Constants . dbUrl , Constants . dbUser , Constants . dbPwd ) ; } catch ( Exception e ) { throw e ; } finally { return con ; } }"
Runs in the background thread. <code> void handleLocaleChange ( ) { ,"ThreadUtils . assertOnBackgroundThread ( ) ; mPendingChanges . add ( new ConfigChange ( ChangeType . REFRESH ) ) ; if ( DEBUG ) { Log . d ( LOGTAG , ""handleLocaleChange: "" + mPendingChanges . size ( ) ) ; } scheduleInvalidation ( InvalidationMode . IMMEDIATE ) ; }"
"Return the modified class, add it to a class loader <code> Class < ? > toClass ( ClassLoader loader ) { ","try { return cc . toClass ( loader , null ) ; } catch ( CannotCompileException e ) { throw new ClassModificationException ( ""Cannot compile class "" + cc . getName ( ) , e ) ; } }"
"Replacing traces. This, of course, assumes a sparse feature vector. <code> void replaceTraces ( double [ ] traces , double factor , double [ ] state ) { ",for ( int f = 0 ; f < traces . length ; f ++ ) { if ( state [ f ] == 0 ) traces [ f ] *= factor ; else traces [ f ] = state [ f ] ; } }
This method implements the AtractFilter using the 1-D Implementation of the AtractKernel <code> void applyToGrid1D ( Grid3D input ) { ,int maxU = input . getSize ( ) [ 0 ] ; LaplaceKernel1D lap = new LaplaceKernel1D ( maxU ) ; lap . applyToGrid ( input ) ; BorderRemoval1D bord = new BorderRemoval1D ( ) ; bord . applyToGridLap1D ( input ) ; AtractKernel1D atract = new AtractKernel1D ( maxU ) ; atract . applyToGrid ( input ) ; }
"Decodes an encoded integer from the stream. This method does bounds checking, to ensure values fit, since some values may be encoded as unsigned values, and Java types are all signed. <code> int unpackInt ( boolean signed ) { ","long ret = unpackLong ( true ) ; if ( ( signed && ( ret > Integer . MAX_VALUE || ret < Integer . MIN_VALUE ) ) || ( ! signed && ( int ) ret < 0 ) ) { throw new WiredTigerPackingException ( ""Overflow unpacking integer."" ) ; } return ( int ) ret ; }"
Get the names of all parameters stored in this context hierarchy. <code> String [ ] getValueNames ( ) { ,SortedSet < String > lNamesSet = new TreeSet < String > ( ) ; lNamesSet . addAll ( getNames ( ) ) ; return lNamesSet . toArray ( new String [ lNamesSet . size ( ) ] ) ; }
Check whether one of the provided addresses belongs to one of the contacts. <code> boolean isAnyInContacts ( final Address [ ] addresses ) { ,if ( addresses == null ) { return false ; } for ( Address addr : addresses ) { if ( isInContacts ( addr . getAddress ( ) ) ) { return true ; } } return false ; }
"Render a report in PDF format using the supplied report data. Writes the results to the supplied OutputStream. <code> void renderAsPdf ( JasperReport report , Map parameters , Object reportData , OutputStream stream , Map exporterParameters ) { ","JasperPrint print = JasperFillManager . fillReport ( report , parameters , convertReportData ( reportData ) ) ; JRPdfExporter exporter = new JRPdfExporter ( ) ; exporter . setParameters ( exporterParameters ) ; render ( exporter , print , stream ) ; }"
Test node logic emits correct results <code> void testNodeProcessing ( ) { ,"testNodeProcessingSchema ( new QuotientMap < String , Integer > ( ) ) ; testNodeProcessingSchema ( new QuotientMap < String , Double > ( ) ) ; }"
Searches for the property with the specified key in this property list. The method returns null if the property is not found. <code> String getProperty ( String key ) { ,if ( _properties == null ) { load ( ) ; } return _properties . getProperty ( key ) ; }
Method to return the authentication protocol given the property <code> OID getAuth ( String authProtocol ) { ,"switch ( authProtocol ) { case ""SHA"" : return AuthSHA . ID ; case ""MD5"" : return AuthMD5 . ID ; default : return null ; } }"
Returns the four direct children of this tile <code> Tile [ ] getChildren ( ) { ,"Tile [ ] result = new Tile [ 4 ] ; result [ 0 ] = new Tile ( x * 2 , y * 2 , z + 1 ) ; result [ 1 ] = new Tile ( x * 2 + 1 , y * 2 , z + 1 ) ; result [ 2 ] = new Tile ( x * 2 , y * 2 + 1 , z + 1 ) ; result [ 3 ] = new Tile ( x * 2 + 1 , y * 2 + 1 , z + 1 ) ; return result ; }"
Converts a char array to a bytes array. <code> byte [ ] charsToBytes ( char [ ] value ) { ,"try { return value . toString ( ) . getBytes ( ""ISO-8859-1"" ) ; } catch ( UnsupportedEncodingException e ) { Log . d ( TAG , e . getLocalizedMessage ( ) ) ; } return null ; }"
tries to drop table that doesn't exist (with ifExists=true) <code> void dropTableIfExists ( ) { ,"MethodCallRetVal p = doHttpCall ( templetonBaseUrl + ""/ddl/database/default/table/no_such_table"" , HTTP_METHOD_TYPE . DELETE , null , new NameValuePair [ ] { new NameValuePair ( ""ifExists"" , ""true"" ) } ) ; Assert . assertEquals ( p . getAssertMsg ( ) , HttpStatus . OK_200 , p . httpStatusCode ) ; }"
See NexusReferenceFactory impl which provides real behavior for this at runtime this impl here mainly for legacy test support. <code> Reference createThisReference ( Request request ) { ,"String uriPart = request . getResourceRef ( ) . getTargetRef ( ) . toString ( ) . substring ( request . getRootRef ( ) . getTargetRef ( ) . toString ( ) . length ( ) ) ; if ( uriPart . startsWith ( ""/"" ) ) { uriPart = uriPart . substring ( 1 ) ; } return updateBaseRefPath ( new Reference ( getContextRoot ( request ) , uriPart ) ) ; }"
"Generates a GT2 feature id given its feature type and an OGR feature <code> String convertOGRFID ( SimpleFeatureType schema , Object ogrFeature ) { ","long id = ogr . FeatureGetFID ( ogrFeature ) ; return schema . getTypeName ( ) + ""."" + id ; }"
Starts the acquisition thread <code> void startJobAcquisitionThread ( ) { ,if ( jobAcquisitionThread == null ) { jobAcquisitionThread = new Thread ( acquireJobsRunnable ) ; } jobAcquisitionThread . start ( ) ; }
"Create relation between ""LESSONS"" and ""FLASHCARDS"" tables <code> void bidirectionalOneToManyRelation ( Entity lesson , Entity word ) { ","Property lessonIdProperty = word . addLongProperty ( ""lessonId"" ) . getProperty ( ) ; word . addToOne ( lesson , lessonIdProperty ) ; lesson . addToMany ( word , lessonIdProperty ) ; }"
unplace students who belong to a group which has min student capacity is not reached <code> void unplaceStudentsOfGroupsWithHasMinLimitIsNotReached ( ) { ,subjectGroupService . fetchAllSubjectGroupsWhichHasMinCapacityNotReached ( ) . forEach ( subjectGroup -> { subjectGroup . getStudentList ( ) . forEach ( student -> { student . setPlaced ( false ) ; } ) ; } ) ; }
"Tests the supplied object to see if it is not a type of the supplied class. <code> E checkNotInstanceOf ( Class type , E object , String errorMessage ) { ","isNotNull ( type , ""type"" ) ; if ( type . isInstance ( object ) ) { throw new IllegalArgumentException ( errorMessage ) ; } return object ; }"
"Check if a location is any part of any board including the frame & enclosure. <code> BoardView partOfChessBoard ( Location loc , int fudge ) { ","for ( BoardView bv : listBoardViews ( ) ) { if ( bv . isPartOfBoard ( loc , fudge ) ) { return bv ; } } return null ; }"
Returns a boolean indicating if the mapping is empty. <code> boolean isEmpty ( ) { ,backwardCompatibilityFix ( ) ; return forwardBoundaries . isEmpty ( ) ; }
"This is a simple example of an Observable Iterable using ""reactive pull"". <code> Observable < Integer > getData ( int id ) { ",final ArrayList < Integer > data = new ArrayList < Integer > ( ) ; for ( int i = 0 ; i < 5000 ; i ++ ) { data . add ( i + id ) ; } return fromIterable ( data ) . subscribeOn ( Schedulers . computation ( ) ) ; }
Visualize the YAWL model <code> JComponent getVisualization ( ) { ,"mainPanel . add ( netContainer , BorderLayout . CENTER ) ; return mainPanel ; }"
"Calculate the probability of two actors communicating according to a given space. <code> double getScore ( int space , int a , int r , int y , double [ ] [ ] [ ] latentSpaces , double [ ] intercepts ) { ","double eta = 0.0 ; for ( int k = 0 ; k < latentDim ; k ++ ) { eta += Math . pow ( latentSpaces [ space ] [ a ] [ k ] - latentSpaces [ space ] [ r ] [ k ] , 2 ) ; } eta = intercepts [ space ] - Math . sqrt ( eta ) ; return y == 1 ? Math . exp ( eta ) / ( 1 + Math . exp ( eta ) ) : 1 / ( 1 + Math . exp ( eta ) ) ; }"
Gets the attribute node that defines the binding for the prefix. <code> Attr getMapping ( String prefix ) { ,"NameSpaceSymbEntry entry = symb . get ( prefix ) ; if ( entry == null ) { return null ; } if ( entry . rendered ) { return null ; } entry = ( NameSpaceSymbEntry ) entry . clone ( ) ; needsClone ( ) ; symb . put ( prefix , entry ) ; entry . rendered = true ; entry . lastrendered = entry . uri ; return entry . n ; }"
Prime the PackageAdmin service tracker and return the service (if available). <code> PackageAdmin getPackageAdmin ( ) { ,"if ( packageTracker == null ) { packageTracker = new ServiceTracker ( WorkbenchPlugin . getDefault ( ) . getBundleContext ( ) , PackageAdmin . class . getName ( ) , null ) ; packageTracker . open ( ) ; } return ( PackageAdmin ) packageTracker . getService ( ) ; }"
"Return table name for a given soup or null if the soup doesn't exist <code> String getSoupTableName ( SQLiteDatabase db , String soupName ) { ","String soupTableName = getCachedTableName ( soupName ) ; if ( soupTableName == null ) { soupTableName = getSoupTableNameFromDb ( db , soupName ) ; if ( soupTableName != null ) { cacheTableName ( soupName , soupTableName ) ; } } return soupTableName ; }"
"Writes the input stream to a temporary file, and returns a new input stream connected to the file. <code> InputStream saveTmp ( InputStream in ) { ","File tmpFile = File . createTempFile ( ""dvs"" , null ) ; tmpFile . deleteOnExit ( ) ; try ( FileOutputStream out = new FileOutputStream ( tmpFile ) ) { IOUtils . copy ( in , out ) ; } return new BufferedInputStream ( new FileInputStream ( tmpFile ) ) ; }"
"Prepare the weather high/lows for presentation. <code> String formatHighLows ( double high , double low ) { ","long roundedHigh = Math . round ( high ) ; long roundedLow = Math . round ( low ) ; String highLowStr = roundedHigh + ""/"" + roundedLow ; return highLowStr ; }"
Ensures the main menu method navigates to the main menu screen. <code> void testMultiplayerNavigates ( ) { ,"creditsController . mainMenu ( ) ; verify ( mockNavigator , times ( 1 ) ) . pop ( ) ; }"
This method is used by the iBATIS2 generators to know if the XML element should be placed before the insert SQL statement. <code> boolean isPlacedBeforeInsertInIbatis2 ( ) { ,boolean rc ; if ( stringHasValue ( type ) ) { rc = true ; } else { rc = ! isIdentity ; } return rc ; }
Gets the value of the classes property. <code> List < ClassType > getClasses ( ) { ,if ( classes == null ) { classes = new ArrayList < ClassType > ( ) ; } return classes ; }
"Map the keys of the given source map to a new key set, preserving the type of the values. <code> Map < K , V > mapKeys ( Map < ? , V > sourceMap , Class < K > destinationClass ) { ","Map < K , V > destinationMap = new HashMap < > ( ) ; for ( Map . Entry < ? , V > sourceEntry : sourceMap . entrySet ( ) ) { K key = dozerSimpleMapper . map ( sourceEntry . getKey ( ) , destinationClass ) ; destinationMap . put ( key , sourceEntry . getValue ( ) ) ; } return destinationMap ; }"
Converts the user data that is to be exported to a byte[]. If a read-only user store is being used a user's password will be the same as their username. <code> byte [ ] exportUsersToByteArray ( boolean xep227Support ) { ,"ByteArrayOutputStream out = new ByteArrayOutputStream ( ) ; XMLWriter writer = new XMLWriter ( out , OutputFormat . createPrettyPrint ( ) ) ; writer . write ( exportUsers ( xep227Support ) ) ; return out . toByteArray ( ) ; }"
"Percent decodes a string <code> String percentDecode ( String encodedString , String messageEncoding ) { ","try { return URLDecoder . decode ( encodedString , messageEncoding ) ; } catch ( UnsupportedEncodingException uee ) { uee . printStackTrace ( ) ; } return null ; }"
"setup the mail server (and port) to which the e-mail will be sent <code> void setMailServer ( String mailServer , int port ) { ",sMailServer = mailServer ; iPort = port ; }
Return a simple string representation of this object. <code> String toString ( ) { ,"try { return getSummary ( ) ; } catch ( SchedulerException se ) { return ""SchedulerMetaData: undeterminable."" ; } }"
Hook method called when a new ServiceModel instance is created. Simply forward to the implementation. <code> void onCreate ( MVP . RequiredPresenterOps presenter ) { ,mImagePresenter = new WeakReference < > ( presenter ) ; File directoryPath = new File ( DIR_PATH . getPath ( ) ) ; if ( ! directoryPath . exists ( ) ) directoryPath . mkdirs ( ) ; setServiceType ( STARTED_SERVICE ) ; mUrlList = new ArrayList < Uri > ( ) ; }
Updates the unit fields. <code> void updateUnits ( ) { ,"setSpeedUnits ( R . id . speed_unit_label_top , R . id . speed_unit_label_bottom ) ; updateWaypointUnits ( ) ; }"
Handle a contents change request. <code> void handleChangeContents ( ChangeContentsMessage message ) { ,CellMO cellMO = CellManagerMO . getCell ( new CellID ( message . getCellID ( ) ) ) ; if ( cellMO == null ) { return ; } PosterCellMO posterCell = ( PosterCellMO ) cellMO ; posterCell . setPosterText ( message . getContents ( ) ) ; }
Gets custom duration of a time period specified by seconds. <code> TimePeriod getCustom ( long seconds ) { ,"if ( seconds < 0 ) { throw new IllegalArgumentException ( ""Time in seconds has to be positive number"" ) ; } return new TimePeriod ( seconds ) ; }"
Invert all PWM values for this SpeedControllerGroup. <code> void setInversion ( final boolean isinverted ) { ,if ( isinverted ) inversion = - 1.0f ; else inversion = 1.0f ; }
Initialisation called before each test. <code> void setUp ( ) { ,"systemState = Py . getSystemState ( ) ; dict = new PyStringMap ( ) ; interp = new PythonInterpreter ( dict , systemState ) ; }"
Modifies value of this object. <code> void setValue ( Text text ) { ,"text . duplicate ( fqn ) ; fqn . divide ( '@' , notifiedEntity ) ; domainName . divide ( ':' , domain ) ; port = portNumber . toInteger ( ) ; }"
Is the node a neighbor? <code> boolean isNeighbor ( int n ) { ,for ( int i = 0 ; i < nNeighbor ; i ++ ) if ( n == neighbor [ i ] ) return true ; return false ; }
get resources relative paths where simple name (key) matches given namePredicate <code> Set < String > getResources ( final Predicate < String > namePredicate ) { ,"final Set < String > keys = get ( ResourcesScanner . class ) . keySet ( ) ; final Collection < String > matches = Collections2 . filter ( keys , namePredicate ) ; return get ( ResourcesScanner . class , matches . toArray ( new String [ matches . size ( ) ] ) ) ; }"
Get basic info for pools(just id and title) for displaying in pulldown . <code> List getBasicInfoOfAllPools ( String agentId ) { ,try { QuestionPoolService service = new QuestionPoolService ( ) ; return service . getBasicInfoOfAllPools ( agentId ) ; } catch ( Exception ex ) { throw new QuestionPoolServiceException ( ex ) ; } }
"Returns the angle to the provided coordinates <code> float getAngle ( float xp , float yp ) { ","float side = xpos - xp ; float height = ypos - yp ; float distance = getDistance ( xp , yp ) ; float angle = ( float ) ( Math . asin ( side / distance ) + Math . PI / 2 ) ; if ( height < 0 ) angle = 2.0f * ( float ) Math . PI - angle ; return angle ; }"
Determine if the supplied hexadecimal string is potentially a binary key by checking the format of the string. <code> boolean isProperlyFormattedKey ( String hexadecimalStr ) { ,if ( hexadecimalStr == null ) return false ; final int length = hexadecimalStr . length ( ) ; if ( length != ALGORITHM . getHexadecimalStringLength ( ) ) return false ; return StringUtil . isHexString ( hexadecimalStr ) ; }
Creates an input event representing the manual pick of a punctuation suggestion. <code> Event createPunctuationSuggestionPickedEvent ( final SuggestedWordInfo suggestedWordInfo ) { ,"final int primaryCode = suggestedWordInfo . mWord . charAt ( 0 ) ; return new Event ( EVENT_TYPE_SUGGESTION_PICKED , suggestedWordInfo . mWord , primaryCode , NOT_A_KEY_CODE , Constants . SUGGESTION_STRIP_COORDINATE , Constants . SUGGESTION_STRIP_COORDINATE , suggestedWordInfo , FLAG_NONE , null ) ; }"
"Severs the link between the specified end-points in both directions. <code> void severLink ( ConnectPoint one , ConnectPoint two ) { ","LinkDescription link = new DefaultLinkDescription ( one , two , DIRECT ) ; linkProviderService . linkVanished ( link ) ; linkProviderService . linkVanished ( reverse ( link ) ) ; }"
"This function takes instances, and returns an array of integers 0..(num_attributes-1) <code> int [ ] getAttrIdxs ( Instances instances ) { ",int [ ] attrIdxs ; attrIdxs = new int [ instances . numAttributes ( ) ] ; for ( int i = 0 ; i < attrIdxs . length ; i ++ ) { attrIdxs [ i ] = i ; } return attrIdxs ; }
Create a new Builder scoped to statuses. <code> Builder byStatus ( Iterable < ScheduleStatus > statuses ) { ,requireNonNull ( statuses ) ; return new Builder ( query . deepCopy ( ) . setStatuses ( EnumSet . copyOf ( ImmutableSet . copyOf ( statuses ) ) ) ) ; }
"Return the number of attributes in the list. Once you know the number of attributes, you can iterate through the list. <code> int getLength ( ) { ",if ( mLength < 0 ) update ( ) ; return mLength ; }
"Places the string representation of extension value into the StringBuffer object. <code> void dumpValue ( StringBuffer buffer , String prefix ) { ","buffer . append ( prefix ) ; buffer . append ( ""ReasonFlags [ "" ) ; for ( int i = 0 ; i < flags . length ; i ++ ) { if ( flags [ i ] ) { buffer . append ( prefix ) . append ( ""  "" ) . append ( REASONS [ i ] ) . append ( '|n' ) ; } } buffer . append ( prefix ) ; buffer . append ( ""] "" ) ; }"
Tests NTLM authentication scheme. <code> void testNtlmAuth ( ) { ,"startServer ( 47501 ) ; fetchPage ( ""/ntlm.jsp"" , 200 ) ; }"
Lazy initialization for dependencieProperties. <code> void loadDependecyProperties ( ) { ,"if ( dependencyProperties != null ) { return ; } dependencyProperties = new Properties ( ) ; try { dependencyProperties . load ( PomGenerator . class . getResourceAsStream ( ""/bootstrap.properties"" ) ) ; } catch ( IOException exception ) { exception . printStackTrace ( ) ; } }"
Returns an Iterator for the XHTML bodies in the message. Returns null if the message does not contain an XHTML extension. <code> List < CharSequence > getBodies ( Message message ) { ,XHTMLExtension xhtmlExtension = XHTMLExtension . from ( message ) ; if ( xhtmlExtension != null ) return xhtmlExtension . getBodies ( ) ; else return null ; }
Get the contents of the list at the specified index. <code> List getListValuesAt ( final int a_index ) { ,ListData ld = ( ListData ) m_listData . get ( a_index ) ; return ld . getListData ( ) ; }
Stems all tokens in a string of space-delimited English words. <code> String stemAllTokens ( String tokens ) { ,"String [ ] tokenArray = tokens . split ( "" "" ) ; String stemmed = """" ; if ( tokenArray . length > 0 ) stemmed += stem ( tokenArray [ 0 ] ) ; for ( int i = 1 ; i < tokenArray . length ; i ++ ) stemmed += "" "" + stem ( tokenArray [ i ] ) ; return stemmed ; }"
"Use for delete batch. <code> String deleteCatageory ( ModelMap model , @ RequestParam ( required = false ) Integer batchId ) { ","batchService . deleteBatch ( batchId ) ; model . addAttribute ( ""message"" , IConstant . BATCH_DELETE_MESSAGE ) ; return ""redirect:/batch.do"" ; }"
"DOC amaumont Comment method ""getTableItemFromPosition"". <code> TableItem getTableItemFromDraggingPosition ( Table table , Point cursorPosition ) { ","Point pointCursor = table . toControl ( cursorPosition . x , cursorPosition . y ) ; return table . getItem ( pointCursor ) ; }"
"Get LinhVucVanBan by TrangThai <code> List < LoaiVanBan > getByTrangThai ( long groupId , boolean trangThai , int start , int end ) { ","List < LoaiVanBan > ls = new ArrayList < LoaiVanBan > ( ) ; try { ls = LoaiVanBanLocalServiceUtil . getByTrangThai ( groupId , trangThai , start , end ) ; } catch ( Exception e ) { LOG . error ( e ) ; } return ls ; }"
"returns the hash for the specified namespace, and if it doesn't exist will create a new one and add it to the namespaces <code> Hashtable getNamespace ( String namespace , boolean addIfNew ) { ",Hashtable h = ( Hashtable ) namespaceHash . get ( namespace ) ; if ( h == null && addIfNew ) { h = addNamespace ( namespace ) ; } return h ; }
Gets the value of the preferRelativeResize property. <code> boolean isPreferRelativeResize ( ) { ,if ( preferRelativeResize == null ) { return true ; } else { return preferRelativeResize ; } }
Returns a string representation of this object; useful for testing and debugging. <code> String toString ( ) { ,"StringBuilder sb = new StringBuilder ( ) ; sb . append ( ""{"" ) ; if ( getDocumentIdentifiers ( ) != null ) sb . append ( ""DocumentIdentifiers: "" + getDocumentIdentifiers ( ) + "","" ) ; if ( getNextToken ( ) != null ) sb . append ( ""NextToken: "" + getNextToken ( ) ) ; sb . append ( ""}"" ) ; return sb . toString ( ) ; }"
Test updating ForkApplyPayload fields <code> void updateFields ( ) { ,"ForkApplyPayload payload = new ForkApplyPayload ( ) ; assertEquals ( ""head"" , payload . setHead ( ""head"" ) . getHead ( ) ) ; assertEquals ( ""000"" , payload . setBefore ( ""000"" ) . getBefore ( ) ) ; assertEquals ( ""001"" , payload . setAfter ( ""001"" ) . getAfter ( ) ) ; }"
"Create a new CachedThreadPool with a bounded number as the maximum thread size in the pool. <code> ThreadPoolExecutor getBoundedCachedThreadPool ( int maxCachedThread , long timeout , TimeUnit unit , ThreadFactory threadFactory ) { ","ThreadPoolExecutor boundedCachedThreadPool = new ThreadPoolExecutor ( maxCachedThread , maxCachedThread , timeout , unit , new LinkedBlockingQueue < Runnable > ( ) , threadFactory ) ; boundedCachedThreadPool . allowCoreThreadTimeOut ( true ) ; return boundedCachedThreadPool ; }"
Store the sharedObject in the object map. It is possible to have 2 different types of shared object with the same name. They will be stored separately. <code> void storeObject ( SharedObjectInterface sharedObject ) { ,"SharedEntry key = new SharedEntry ( sharedObject . getClass ( ) . getName ( ) , sharedObject . getName ( ) ) ; objectsMap . put ( key , sharedObject ) ; }"
Get count for counter associated with enum value passed. <code> long getCount ( E e ) { ,if ( counters . containsKey ( e ) ) { return counters . get ( e ) . getCount ( ) ; } else { return 0l ; } }
A list that contains the status of each requested domain. <code> java . util . List < DomainStatus > getDomainStatusList ( ) { ,if ( domainStatusList == null ) { domainStatusList = new com . amazonaws . internal . ListWithAutoConstructFlag < DomainStatus > ( ) ; domainStatusList . setAutoConstruct ( true ) ; } return domainStatusList ; }
Sets this field editor's label text. The label is typically presented to the left of the entry field. <code> void setLabelText ( String text ) { ,Assert . isNotNull ( text ) ; labelText = text ; if ( displayLabel != null ) { displayLabel . setText ( text ) ; } }
"Faster RGBtoCIEXYZ method which uses the provided output array. <code> float [ ] RGBtoCIEXYZ ( float [ ] rgb , float [ ] xyz ) { ","float [ ] tmp = sRGB . toCIEXYZ ( rgb ) ; System . arraycopy ( tmp , 0 , xyz , 0 , 3 ) ; return xyz ; }"
Get the connection pool associated with the given host. <code> VSphereIOThreadPool getPool ( ServiceHost host ) { ,"URI key = host . getPublicUri ( ) ; return poolsPerHost . computeIfAbsent ( key , u -> { return VSphereIOThreadPool . createDefault ( host , DEFAULT_THREAD_POOL_SIZE ) ; } ) ; }"
Format a date String for Loyalbit <code> Date parseDate ( String dateString ) { ,"try { return DATE_FORMAT . parse ( dateString ) ; } catch ( ParseException e ) { throw new ExchangeException ( ""Illegal date/time format"" , e ) ; } }"
Returns the URL represented by str. <code> URL createURL ( String str ) { ,"try { return new URL ( str ) ; } catch ( MalformedURLException mue ) { System . err . println ( ""Unable to parse: "" + str ) ; return null ; } }"
Return the internal error message stored in instance variable msg. <code> String getErrorMsg ( ) { ,String r = new String ( errormsg ) ; errormsg = null ; return r ; }
"Make a request that will return String <code> String callAsRaw ( String method , String path , Map < String , String > query , Object body ) { ","PostmenUrl url = getUrl ( ) . appendPath ( path ) . addQueries ( query ) ; return handler . callAndParseAsString ( method , url , body ) ; }"
Check to see if the given auth object has ROLE_ADMIN assigned to it or not <code> boolean isAdmin ( Authentication auth ) { ,"for ( GrantedAuthority grantedAuthority : auth . getAuthorities ( ) ) { if ( grantedAuthority . getAuthority ( ) . equals ( ""ROLE_ADMIN"" ) ) { return true ; } } return false ; }"
Returns maximum available MIPS among all the PEs. <code> double getMaxAvailableMips ( ) { ,"if ( getPeList ( ) == null ) { Log . printLine ( ""Pe list is empty"" ) ; return 0 ; } double max = 0.0 ; for ( Pe pe : getPeList ( ) ) { double tmp = pe . getPeProvisioner ( ) . getAvailableMips ( ) ; if ( tmp > max ) { max = tmp ; } } return max ; }"
L2 norm of OpenCLGrid3D <code> double openCLGrid3DNorm ( OpenCLGrid3D reconCL ) { ,"OpenCLGrid3D tempReconCL = new OpenCLGrid3D ( reconCL ) ; tempReconCL . getGridOperator ( ) . multiplyBy ( tempReconCL , tempReconCL ) ; double n = reconCL . getGridOperator ( ) . sum ( tempReconCL ) ; tempReconCL . release ( ) ; return n ; }"
"Sets the specified parameter. <code> void setParameter ( String name , String value ) { ","if ( list == null ) { list = new ParameterList ( ) ; } list . set ( name , value ) ; }"
"Writes a ""slim"" Point (without endiannes, srid ant type, only the ordinates and measure. Used by writeGeometry as ell as writePointArray. <code> void writePoint ( Point geom , ValueSetter dest ) { ",dest . setDouble ( geom . x ) ; dest . setDouble ( geom . y ) ; if ( geom . dimension == 3 ) { dest . setDouble ( geom . z ) ; } if ( geom . haveMeasure ) { dest . setDouble ( geom . m ) ; } }
Handle refresh event when issued to this CAS server locally. <code> void handleRefreshEvent ( final EnvironmentChangeEvent event ) { ,"LOGGER . debug ( ""Received event {}"" , event ) ; rebindCasConfigurationProperties ( ) ; }"
Locates a numeric node <code> NumericOptionModelNode safeGetNumericModelNode ( String name ) { ,"AnnotationModelNode node = model . getModelNode ( name ) ; if ( ( node != null ) && ! ( node instanceof NumericOptionModelNode ) ) { throw new Exception ( ""Variable has unexpected type "" + name ) ; } return ( NumericOptionModelNode ) node ; }"
Convert interval to string <code> String toString ( ) { ,"StringBuilder s = new StringBuilder ( ) ; if ( days != 0 ) { s . append ( days ) ; s . append ( "" days"" ) ; } if ( milliseconds != 0 ) { s . append ( milliseconds ) ; s . append ( "" milliseconds"" ) ; } return s . toString ( ) ; }"
"Move all selected primitives. <code> void moveAllSelected ( int dx , int dy ) { ","int i ; for ( GraphicPrimitive g : P . getPrimitiveVector ( ) ) { if ( g . getSelected ( ) ) g . movePrimitive ( dx , dy ) ; } if ( ua != null ) ua . saveUndoState ( ) ; }"
Creates an XMLAttributes object. <code> XMLAttributes createAttributes ( Attributes att ) { ,"xa . removeAllAttributes ( ) ; int len = att . getLength ( ) ; for ( int i = 0 ; i < len ; i ++ ) xa . addAttribute ( createQName ( att . getURI ( i ) , att . getLocalName ( i ) , att . getQName ( i ) ) , att . getType ( i ) , att . getValue ( i ) ) ; return xa ; }"
Forwards this event to the current listener if there is one. <code> void dropAccept ( final DropTargetEvent event ) { ,if ( getCurrentListener ( ) != null ) { SafeRunner . run ( new SafeRunnable ( ) { public void run ( ) throws Exception { getCurrentListener ( ) . dropAccept ( event ) ; } } ) ; } }
Get next 'lsid_suite' value. <code> void getNextSuiteLsid ( ) { ,"try { final int seqVal = HibernateUtil . getNextSequenceValue ( mgr , gpConfig , suiteLsid_seqName ) ; assertEquals ( ""nextSequenceVal="" + seqVal + "" for '"" + taskLsid_seqName + ""', nextSequenceVal>0"" , true , seqVal > 0 ) ; } finally { mgr . closeCurrentSession ( ) ; } }"
Updates the evidenceVector with the particular evidence <code> byte [ ] getEvidenceVector ( ) { ,for ( StringProteinInteractionEvidenceCodeEnum evidence : mapEvidenceCodeScores . keySet ( ) ) { if ( mapEvidenceCodeScores . get ( evidence ) > 0 ) { evidenceVector [ evidence . getPositionInArray ( ) ] = 1 ; } } return evidenceVector ; }
Adds all the specified descriptors. <code> boolean addSelectors ( final Collection < Object > selectors ) { ,if ( selectors == null ) { return true ; } boolean ret = true ; for ( final Object selector : selectors ) { if ( ! addSelector ( selector ) ) { ret = false ; } } return ret ; }
Load the version properties from a resource. <code> Properties loadProperties ( ) { ,"props = new Properties ( ) ; try { InputStream in = VersionProperties . class . getResourceAsStream ( ""/META-INF/version.properties"" ) ; props . load ( in ) ; in . close ( ) ; } catch ( Exception e ) { props . put ( ""vendor"" , ""Mobicents"" ) ; props . put ( ""version"" , ""UN.DEFINED"" ) ; } return props ; }"
"Parses comment from parser. If comment is ""null"" string then null is returned, otherwise the parsed string is returned. <code> String getComment ( final Parser parser ) { ","final String comment = parser . parseString ( ) ; if ( ""null"" . equalsIgnoreCase ( comment ) ) { return null ; } return comment ; }"
Utility of processing a number state. <code> void numberStart ( ) { ,"startTokenPos = pos ; while ( pos < numRead ) { if ( isDelimiter ( buf [ pos ] ) ) { break ; } pos ++ ; } if ( pos < numRead ) { stack . push ( Float . parseFloat ( new String ( buf , startTokenPos , pos - startTokenPos ) ) ) ; } parseNextState ( ) ; }"
Removes trailing ` and trims spaces. <code> String getMetaFromFence ( final String fenceLine ) { ,"for ( int i = 0 ; i < fenceLine . length ( ) ; i ++ ) { final char c = fenceLine . charAt ( i ) ; if ( ! Character . isWhitespace ( c ) && c != '`' && c != '~' && c != '%' ) { return fenceLine . substring ( i ) . trim ( ) ; } } return """" ; }"
Retrieves the generated ID for the savepoint that this Savepoint object represents. <code> int getSavepointId ( ) { ,if ( id != - 1 ) { return id ; } throw Util . notSupported ( ) ; }
Run test assuming UnknownScannerException (which is a type of DoNotRetryIOException) using newer mapreduce api <code> void testTableRecordReaderScannerTimeoutMapreduceTwice ( ) { ,"Table htable = createDNRIOEScannerTable ( ""table5-mr"" . getBytes ( ) , 2 ) ; runTestMapreduce ( htable ) ; }"
"Test of containsKey method, of class HeadersMap. <code> void testContainsKey ( ) { ","map . add ( ""foo"" , ""bar"" ) ; assertTrue ( map . containsKey ( ""foo"" ) ) ; assertTrue ( map . containsKey ( ""FOO"" ) ) ; assertTrue ( map . containsKey ( ""Foo"" ) ) ; assertTrue ( map . containsKey ( ""fOo"" ) ) ; assertTrue ( map . containsKey ( ""foO"" ) ) ; assertTrue ( ! map . containsKey ( ""bar"" ) ) ; }"
Returns the lang-version attribute that was specified in the root node (BlockLangDef) of ya_lang_def.xml; 0 if there was no lang-version. <code> int getBlocksLanguageVersion ( Element langDefRoot ) { ,"String version = langDefRoot . getAttribute ( ""lang-version"" ) ; try { return Integer . parseInt ( version ) ; } catch ( NumberFormatException e ) { return 0 ; } }"
Returns a specific handler for a given parameter <code> Optional < FlagHandler > getFlagHandler ( String flag ) { ,FlagHandler result = null ; for ( FlagHandler handler : Prism . getFlagHandlers ( ) ) { if ( handler . handles ( flag ) ) { result = handler ; } } return Optional . ofNullable ( result ) ; }
"Returns true iff the value is neither of the following: false, 0, off, no otherwise false <code> boolean parseBoolean ( String value , boolean defaultValue ) { ","if ( value == null ) { return defaultValue ; } return ! ( value . equals ( ""false"" ) || value . equals ( ""0"" ) || value . equals ( ""off"" ) || value . equals ( ""no"" ) ) ; }"
"Return an URL representing the installation directory of the plug-in with the given identifier, or null if there is no plug-in with the given identifier. <code> URL getInstallUrl ( String pluginId ) { ","Bundle bundle ; bundle = Platform . getBundle ( pluginId ) ; if ( bundle == null ) { return null ; } return bundle . getEntry ( ""/"" ) ; }"
Ping the download server <code> boolean pingServer ( ) { ,"try { WebDownload wd = new WebDownload ( URL_BASE ) ; wd . doGet ( ) ; int rc = wd . getResponseCode ( ) ; Log . d ( TAG , ""PingServer Response:"" + rc ) ; return rc == 200 ; } catch ( Exception e ) { Log . e ( TAG , ""PingServer: "" + e . toString ( ) ) ; return false ; } }"
Returns a Matcher that matches definitions of any enum. <code> Matcher enumDefinition ( ) { ,"return new Matcher ( ) { @ Override public boolean matches ( Node node , NodeMetadata metadata ) { JSType jsType = node . getJSType ( ) ; return jsType != null && jsType . isEnumType ( ) ; } } ; }"
"Replaces composite element at the specified position in segment. <code> void setCompositeElement ( int index , String ... ces ) { ","StringBuilder dump = new StringBuilder ( ) ; for ( String s : ces ) { dump . append ( s ) ; dump . append ( context . getCompositeElementSeparator ( ) ) ; } elements . set ( index , dump . substring ( 0 , dump . length ( ) - 1 ) ) ; }"
Return a context-aware URl for the given relative URL. <code> String getContextUrl ( String relativeUrl ) { ,String url = getContextPath ( ) + relativeUrl ; return getExchange ( ) . getResponse ( ) . encodeUrl ( url ) ; }
calculates the order price <code> BigDecimal countOrderPrice ( Order order ) { ,double orderPrice = 0 ; if ( order . getGoodsInOrders ( ) != null ) for ( GoodsInOrder goodInOrder : order . getGoodsInOrders ( ) ) { orderPrice += ( goodInOrder . getPrice ( ) . doubleValue ( ) * goodInOrder . getQuantity ( ) ) ; } return new BigDecimal ( orderPrice ) ; }
"The method is used to delete a user. Accepts a user login, searches for the desired record in the database and deletes. <code> void delUser ( String login ) { ","User user = em . find ( User . class , login ) ; em . remove ( user ) ; }"
Sets the icon for the Cancel button. <code> void setCancelButtonIcon ( Icon newIcon ) { ,"Icon oldIcon = getCancelButtonIcon ( ) ; if ( ! newIcon . equals ( oldIcon ) ) { buttonIconHashmap . put ( CANCEL_BUTTON_ICON_PROPERTY , newIcon ) ; firePropertyChange ( CANCEL_BUTTON_ICON_PROPERTY , oldIcon , newIcon ) ; } }"
"This method is used to call a method of DAO class to return a list FaultCode based on search criteria <code> List searchFaultCode ( FaultCodeVO object1 , int lowerBound , int upperBound ) { ","ArrayList < FaultCodeVO > arrayList = new ArrayList < FaultCodeVO > ( ) ; FaultCodeDAO dao = new FaultCodeDAO ( ) ; arrayList = ( ArrayList < FaultCodeVO > ) dao . searchFaultCode ( object1 , lowerBound , upperBound ) ; return arrayList ; }"
"Method ""setValidStatus"" sets the status on the given element. <code> boolean setValidStatus ( Boolean status , ModelElement element ) { ","String statusStr = String . valueOf ( status ) ; return TaggedValueHelper . setTaggedValue ( element , TaggedValueHelper . VALID_STATUS , statusStr ) ; }"
"Checks the UI for text containing ""Signed in"" to determine if the user is signed in. <code> boolean isSignedIn ( ) { ","mDevice . wait ( Until . hasObject ( By . clazz ( CLASS_BUTTON ) . enabled ( true ) ) , UI_TIMEOUT ) ; String signedInText = mContext . getString ( R . string . signed_in_fmt , """" ) ; BySelector signedInTextSelector = By . textContains ( signedInText ) ; return mDevice . wait ( Until . hasObject ( signedInTextSelector ) , UI_TIMEOUT ) ; }"
Is there another element in one of the Iterator's still to consider. <code> boolean hasNext ( ) { ,while ( currentMember == null || ! currentMember . hasNext ( ) ) { if ( ! top . hasNext ( ) ) return false ; currentMember = top . next ( ) ; } return true ; }
Check if the proxy or persistent collection is initialized. <code> boolean isInitialized ( Object proxy ) { ,if ( proxy instanceof HibernateProxy ) { return ! ( ( HibernateProxy ) proxy ) . getHibernateLazyInitializer ( ) . isUninitialized ( ) ; } else if ( proxy instanceof PersistentCollection ) { return ( ( PersistentCollection ) proxy ) . wasInitialized ( ) ; } else { return true ; } }
Insert an unmatched bid into the appropriate heap. <code> void insertUnmatchedBid ( Order bid ) { ,"assert bid . isBid ( ) ; insertShout ( bOut , bid ) ; }"
"Skip a number of bytes in an input stream. <code> void skipFully ( InputStream in , long skip ) { ",while ( skip > 0 ) { long skipped = in . skip ( skip ) ; if ( skipped <= 0 ) { throw new EOFException ( ) ; } skip -= skipped ; } }
"Retrieves a resource representing the GuacamoleSession associated with the given authentication token. <code> SessionResource getSessionResource ( @ QueryParam ( ""token"" ) String authToken ) { ",GuacamoleSession session = authenticationService . getGuacamoleSession ( authToken ) ; return sessionResourceFactory . create ( session ) ; }
Performs a shutdown now (aggressively) on the thread pool. <code> void shutdownNow ( ) { ,if ( executor != null ) { ThreadPoolUtils . shutdownNow ( executor ) ; executor = null ; } initDone . set ( false ) ; }
Return an Enumeration of all available network interfaces <code> Enumeration getNetworkInterfaces ( ) { ,Vector networkInterfaces = getRealNetworkInterfaces ( ) ; if ( networkInterfaces . isEmpty ( ) ) return null ; return networkInterfaces . elements ( ) ; }
returns all HiveQueryIDs from ATS for the given user. <code> List < HiveQueryId > getHiveQueryIdsForUser ( String username ) { ,JSONObject entities = delegate . hiveQueryIdsForUser ( username ) ; return parseHqidJsonFromATS ( entities ) ; }
Push a log context onto the stack. <code> void pushLogContext ( String context ) { ,Deque < org . apache . log4j . Logger > queue = LOG . get ( ) ; queue . addLast ( LogManager . getLogger ( context ) ) ; }
Return picture of the given object. <code> Image getObjectPicture ( String objectName ) { ,"if ( objectPictures . get ( objectName ) == null ) { try { objectPictures . put ( objectName , Picture . loadImage ( MToolKit . getTbsPicture ( ""objects/"" + objectName . replaceAll ( ""/"" , """" ) + "".gif"" ) ) ) ; } catch ( MalformedURLException e ) { } } return objectPictures . get ( objectName ) ; }"
"""locks"" the camera on the given coordinates. The camera tries to keep the location in its center. <code> void centerOn ( float x , float y ) { ",cameraX = x - gc . getWidth ( ) / 2 ; cameraY = y - gc . getHeight ( ) / 2 ; if ( cameraX < 0 ) cameraX = 0 ; if ( cameraX + gc . getWidth ( ) > mapWidth ) cameraX = mapWidth - gc . getWidth ( ) ; if ( cameraY < 0 ) cameraY = 0 ; if ( cameraY + gc . getHeight ( ) > mapHeight ) cameraY = mapHeight - gc . getHeight ( ) ; }
Returns a valid ContentWS instance <code> IPSContentWs getContentService ( ) { ,if ( mCws == null ) mCws = PSContentWsLocator . getContentWebservice ( ) ; return mCws ; }
DecisionNode shall have exactly one outgoing ActivityEdge but may have multiple incoming ActivityEdges. <code> void decisionNodeHaveOneOutgoingControlFlow ( ) { ,DecisionNode node = UMLFactory . eINSTANCE . createDecisionNode ( ) ; ControlFlow flow = UMLFactory . eINSTANCE . createControlFlow ( ) ; node . getOutgoings ( ) . add ( flow ) ; assertFalse ( services . isValidControlFlowStart ( node ) ) ; }
"Removes a suffix from a filename, if it has it. <code> String removeSuffix ( String filename , String suffix ) { ","if ( filename . endsWith ( suffix ) ) { return filename . substring ( 0 , filename . length ( ) - suffix . length ( ) ) ; } return filename ; }"
"Takes two vectors of descriptor points and populates the third vector, matchPoints, with matched points from both vectors. <code> void compareDescriptors ( IpointVector firstSet , IpointVector secondSet , IpPairVector matchSet ) { ","Log . d ( TAG , ""Comparing Descriptors"" ) ; if ( firstSet != null ) { surfjnimodule . getMatches ( firstSet , secondSet , matchSet ) ; Log . d ( TAG , ""Matches found: "" + matchSet . size ( ) ) ; } else { Log . d ( TAG , ""Old set does not exist, yet!"" ) ; } }"
"Synchronizes session state between two connections. <code> void syncSessionState ( Connection source , Connection target ) { ","if ( source == null || target == null ) { return ; } syncSessionState ( source , target , source . isReadOnly ( ) ) ; }"
Seeks to the position of the last mark + offset. <code> void seekMarkOffset ( int offset ) { ,"fileIndex = markedPos + offset ; if ( fileIndex < 0 || fileIndex > fileContents . length ) { throw new IOException ( ""Illegal offset value. "" + offset ) ; } }"
"Finds a method with the given name and descriptor. It searches only the class of self. <code> Method findMethod ( Class clazz , String name , String desc ) { ","Method m = findMethod2 ( clazz , name , desc ) ; if ( m == null ) error ( clazz , name , desc ) ; return m ; }"
"formatDate Dinh dang ngay kieu java.util.Date thanh String theo mau ""dd/MM/yyyy"" <code> String formatDate ( java . util . Date uDate ) { ","if ( uDate == null ) { return null ; } else { SimpleDateFormat dateFormat = new SimpleDateFormat ( ""dd/MM/yyyy"" ) ; return dateFormat . format ( uDate ) ; } }"
This method exists to hide the CP_IP_TTL value from higher levels. Always think of JNode ... :) <code> void setTimeToLive ( int ttl ) { ,"try { setOption ( nfd . getNativeFD ( ) , CP_IP_TTL , ttl ) ; } catch ( IOException ioe ) { SocketException se = new SocketException ( ) ; se . initCause ( ioe ) ; throw se ; } }"
"Convert an AbbreviatedObjectId from hex characters (US-ASCII). <code> AbbreviatedLongObjectId fromString ( final byte [ ] buf , final int offset , final int end ) { ","if ( end - offset > Constants . LONG_OBJECT_ID_STRING_LENGTH ) throw new IllegalArgumentException ( MessageFormat . format ( LfsText . get ( ) . invalidLongIdLength , Integer . valueOf ( end - offset ) , Integer . valueOf ( Constants . LONG_OBJECT_ID_STRING_LENGTH ) ) ) ; return fromHexString ( buf , offset , end ) ; }"
Load data from GUI panel to a Person instance. <code> void copyFormValues ( Ujo ujo ) { ,"for ( Key p : binding . keySet ( ) ) { UIComponent component = binding . get ( p ) ; if ( component . isValid ( ) ) { p . setValue ( ujo , component . getValue ( ) ) ; } else { throw new IllegalStateException ( ""Invalid input for: "" + p ) ; } } }"
Get value of request. <code> Request getRequest ( ) { ,if ( request == null ) { request = new Request ( ) ; } else { } return request ; }
"Whether to raise a fatal bind exception on validation errors. <code> boolean isBindExceptionRequired ( WebDataBinder binder , MethodParameter parameter ) { ",int i = parameter . getParameterIndex ( ) ; Class < ? > [ ] paramTypes = parameter . getMethod ( ) . getParameterTypes ( ) ; boolean hasBindingResult = ( paramTypes . length > ( i + 1 ) && Errors . class . isAssignableFrom ( paramTypes [ i + 1 ] ) ) ; return ! hasBindingResult ; }
"Remove the lease for the specified holder and src <code> void removeLease ( String holder , INodeFile src ) { ","Lease lease = getLease ( holder ) ; if ( lease != null ) { removeLease ( lease , src . getId ( ) ) ; } else { LOG . warn ( ""Removing non-existent lease! holder="" + holder + "" src="" + src . getFullPathName ( ) ) ; } }"
"Utility to scale the image to a rough size of 96x96 pixels but still maintaining the original aspect ratio. <code> double calculateSmallImageSize ( int width , int height ) { ","double thumbSize = 320 ; return calculateImageSize ( thumbSize , width , height ) ; }"
Resolves a resource id from the entities of a cost driver into a set of participant ids (as stored in the log). <code> Set < String > resolveResource ( String resourceID ) { ,"if ( resolvedResources . containsKey ( resourceID ) ) { return resolvedResources . get ( resourceID ) ; } Set < String > resolved = CostService . getInstance ( ) . resolveResources ( resourceID ) ; resolvedResources . put ( resourceID , resolved ) ; return resolved ; }"
Reinitializes the event on reuse (after recycling). <code> void prepareForReuse ( ) { ,mRecycled = false ; mRecycledLocation = null ; mSeq = mNextSeq . getAndIncrement ( ) ; }
inv: clasificaciones!=null No puede haber dos clasificaciones con el mismo nombre. <code> void verificarInvariante ( ) { ,"assert clasificaciones != null : ""Las clasificaciones deben estar inicializadas"" ; assert hayClasificacionesRepetidas ( ) == false : ""No pueden haber dos clasificaciones con el mismo nombre"" ; }"
"This method should be avoided. DOM object trees take a lot of memory and they are not thread-safe, so they should not be cached. <code> Element getXmlRootElement ( String xmlFilename ) { ",Document document = ResourceLoader . getXmlDocument ( xmlFilename ) ; if ( document != null ) { return document . getDocumentElement ( ) ; } else { return null ; } }
Adds a column to the string of columns participating in the index <code> void addColumn ( String column ) { ,"columns += "", "" + column ; columnCount ++ ; }"
This is effectively like doing local dom manipulations. <code> void setDocument ( Document doc ) { ,VersionInfo localInfo = getThreadLocal ( ) ; localInfo . setDocument ( doc ) ; }
A list of EventDescription. <code> java . util . List < EventDescription > getEvents ( ) { ,if ( events == null ) { events = new com . amazonaws . internal . SdkInternalList < EventDescription > ( ) ; } return events ; }
Support for reading a log entry out of a still-in-memory log <code> boolean containsLsn ( long lsn ) { ,readLatch . acquire ( ) ; return original ( lsn ) ; }
Sends a request to the specified URL and obtains the result from the sever. <code> String getResult ( URL url ) { ,HttpURLConnection conn = ( HttpURLConnection ) url . openConnection ( ) ; conn . setDoInput ( true ) ; conn . setDoOutput ( true ) ; InputStream is = conn . getInputStream ( ) ; String result = toString ( is ) ; return result ; }
Converti un tableau de short en ShortBuffer <code> ShortBuffer getShortBuffer ( short [ ] array ) { ,ShortBuffer buffer = ByteBuffer . allocateDirect ( array . length * 2 ) . order ( ByteOrder . nativeOrder ( ) ) . asShortBuffer ( ) ; buffer . put ( array ) ; buffer . position ( 0 ) ; return buffer ; }
Return the default value of the specified additional domain <code> String getDefaultValue ( String domainName ) { ,if ( additionalDimensions != null && ! additionalDimensions . isEmpty ( ) && additionalDimensions . containsKey ( domainName ) ) { return accessor . getCustomDomainDefaultValue ( domainName ) ; } return null ; }
"Recomputes the ending PCs of each interval based on the starting PC of the next one. If this needs to be called, must be called after sort(). <code> void recomputeEndPCs ( ) { ",if ( infoList == null ) return ; for ( int i = 0 ; i < infoList . size ( ) - 1 ; i ++ ) { BasicLineNumberInfo i1 = get ( i ) ; BasicLineNumberInfo i2 = get ( i + 1 ) ; i1 . setEndPC ( i2 . getStartPC ( ) ) ; } }
Parses an XML document from a file. <code> Document toDocument ( File file ) { ,InputStream in = new BufferedInputStream ( new FileInputStream ( file ) ) ; try { return XmlUtils . toDocument ( in ) ; } finally { in . close ( ) ; } }
"Adds a ShoppingCartItem to the ShoppingCart's items list. If item of the specified product already exists in shopping cart list, the quantity of that item is incremented. <code> void addItem ( Product product ) { ",boolean newItem = true ; for ( ShoppingCartItem scItem : items ) { if ( scItem . getProduct ( ) . getId ( ) == product . getId ( ) ) { newItem = false ; scItem . incrementQuantity ( ) ; } } if ( newItem ) { ShoppingCartItem scItem = new ShoppingCartItem ( product ) ; items . add ( scItem ) ; } }
Get the offset into a bin from the total index <code> int getOffset ( long index ) { ,int answer = 0 ; if ( firstIndex >= 0 ) { answer = ( int ) ( ( index - firstIndex ) - ( BitArray . LONG_SIZE * getBin ( index ) ) ) ; } return answer ; }
Globally enabled or disable the cache. <code> void setCacheEnabled ( final boolean bCacheEnabled ) { ,"s_aRWLock . writeLocked ( ( ) -> s_bCacheEnabled = bCacheEnabled ) ; s_aLogger . info ( ""WebSiteResourceCache is now: "" + ( bCacheEnabled ? ""enabled"" : ""disabled"" ) ) ; }"
"Write an analog value (PWM-wave) to a digital pin. <code> void analogWrite ( int pin , int value ) { ","pinMode ( pin , PWM ) ; out . write ( ANALOG_MESSAGE | ( pin & 0x0F ) ) ; out . write ( value & 0x7F ) ; out . write ( value >> 7 ) ; }"
"Adds a time interval to the given date. <code> void DateAdd ( Calendar date , int intervalKind , int interval ) { ","switch ( intervalKind ) { default : throw new IllegalArgumentException ( ""illegal date/time interval kind in function DateAdd()"" ) ; case DATE_YEAR : case DATE_MONTH : case DATE_DAY : case DATE_WEEK : case DATE_HOUR : case DATE_MINUTE : case DATE_SECOND : date . add ( intervalKind , interval ) ; break ; } }"
"Return null if the attribute is not present rather than the empty string. <code> String getAttribute ( Element element , String attributeName ) { ",if ( element . hasAttribute ( attributeName ) ) { return element . getAttribute ( attributeName ) ; } else { return null ; } }
Converts a Java array of Blobs to a JavaScript array of Blobs. <code> JsArray < Blob > toJavaScriptArray ( Blob [ ] elements ) { ,"JsArray < Blob > array = JavaScriptObject . createArray ( ) . cast ( ) ; for ( int i = 0 , l = elements . length ; i < l ; ++ i ) { array . set ( i , elements [ i ] ) ; } return array ; }"
Returns a random device token from the device tokens. <code> String getSingleDeviceToken ( ) { ,if ( ! deviceTokens . isEmpty ( ) ) { return ( String ) deviceTokens . toArray ( ) [ 0 ] ; } else { return null ; } }
Check if this synchronization point has its request already sent. <code> boolean requestSent ( ) { ,connectionLock . lock ( ) ; try { return state == State . RequestSent ; } finally { connectionLock . unlock ( ) ; } }
Get the singleton instance to access properties of Computational Omics tools. <code> PropertiesManager getInstance ( ) { ,if ( singleton == null ) { singleton = new PropertiesManager ( ) ; } return singleton ; }
Returns object of Java primitives. This method converts the effective data to an object of Java primitives. The object can be a single primitive or an array of primitives. <code> Object toIntPrimitive ( ) { ,"Object retval = null ; if ( ! m_isArray ) { int retval2 = ( Integer ) m_VectorData . get ( 0 ) ; return retval2 ; } retval = new int [ m_VectorData . size ( ) ] ; for ( int i = 0 ; i < m_VectorData . size ( ) ; i ++ ) Array . setInt ( retval , i , ( Integer ) m_VectorData . get ( i ) ) ; return retval ; }"
"Copies file from it's location to destination dir. <code> void copyFileToDir ( File file , File destDir ) { ","String name = file . getName ( ) ; String filename = destDir . getAbsolutePath ( ) + File . separator + name ; File destFile = new File ( filename ) ; destFile . createNewFile ( ) ; copyFileToFile ( file , destFile ) ; }"
"Register the given directory, and all its sub-directories, with the WatchService. <code> void _registerDirRecursive ( @ Nonnull final Path aStartDir ) { ","Files . walkFileTree ( aStartDir , new SimpleFileVisitor < Path > ( ) { @ Override public FileVisitResult preVisitDirectory ( final Path dir , final BasicFileAttributes attrs ) throws IOException { _registerDir ( dir ) ; return FileVisitResult . CONTINUE ; } } ) ; }"
This method makes a copy of an itemset <code> ItemsetGen < T > cloneItemSet ( ) { ,ItemsetGen < T > itemset = new ItemsetGen < T > ( ) ; itemset . getItems ( ) . addAll ( items ) ; return itemset ; }
"Checks String lists for equality independent of the order of elements in the lists. Note that order of the elements in the lists will be changed as a result of sorting, but this is not a concern usually since the order does not matter. <code> boolean isListsEqualIgnoreOrder ( List < String > list1 , List < String > list2 ) { ",if ( list1 == null && list2 == null ) { return true ; } if ( list1 == null || list2 == null || list1 . size ( ) != list2 . size ( ) ) { return false ; } Collections . sort ( list1 ) ; Collections . sort ( list2 ) ; return list1 . equals ( list2 ) ; }
"Calculates the sample likelihood and BIC score for i given its parents in a simple SEM model <code> double localScore ( int i , int [ ] parents ) { ","double sum = 0.0 ; for ( BDeuScore score : scores ) { sum += score . localScore ( i , parents ) ; } return sum / scores . size ( ) ; }"
Method to return the user manager <code> MaintainUserManager getMaintainUserManager ( ) { ,if ( maintainUserManager == null ) { maintainUserManager = new MaintainUserManager ( ) ; } return maintainUserManager ; }
"Test of setDimension2 method, of class TwoDimData. Test case: successfull change of dimension. <code> void testSetDimension2Success ( ) { ","Dimension dim = new Dimension ( ""Miles"" ) ; two . setDimension2 ( dim ) ; assertEquals ( dim , two . getDimension2 ( ) ) ; }"
Test that collection iteration does not generate exceptions. <code> void assertNoExceptionsOnCollectionIteration ( final Collection objs ) { ,for ( final Iterator iter = objs . iterator ( ) ; iter . hasNext ( ) ; ) { final Object obj = iter . next ( ) ; assertNoExceptionsOnGetters ( obj ) ; } }
Returns a string representation of this object; useful for testing and debugging. <code> String toString ( ) { ,"StringBuilder sb = new StringBuilder ( ) ; sb . append ( ""{"" ) ; if ( getTelemetryMetadata ( ) != null ) sb . append ( ""TelemetryMetadata: "" + getTelemetryMetadata ( ) ) ; sb . append ( ""}"" ) ; return sb . toString ( ) ; }"
Add the viewer to the list of viewers that are listening for selection changes. <code> void addViewer ( EditPartViewer viewer ) { ,viewers . add ( viewer ) ; viewer . addSelectionChangedListener ( new ISelectionChangedListener ( ) { public void selectionChanged ( SelectionChangedEvent event ) { if ( changingSelection ) { return ; } setSelection ( event . getSelection ( ) ) ; } } ) ; }
Converts a list of byte buffers to a list of base64-encoded Strings. <code> List < String > byteBufferListToBase64 ( List < ByteBuffer > bufs ) { ,if ( bufs == null ) { return null ; } List < String > bytes = Lists . newArrayListWithCapacity ( bufs . size ( ) ) ; for ( ByteBuffer buf : bufs ) { bytes . add ( byteBufferToBase64 ( buf ) ) ; } return bytes ; }
Returns the Plug & Play status string. <code> String getPlugAndPlayStatus ( ) { ,"try { CardTerminals _terms = TerminalFactory . getDefault ( ) . terminals ( ) ; if ( _terms != null ) { if ( _terms . isPlugAndPlaySupported ( ) ) return ""Enabled"" ; else return ""Disabled"" ; } return ""Disabled"" ; } catch ( CardException ex ) { return ""Disabled"" ; } }"
Makes sure the pluginConfig instance gets created correctly. <code> void testSetDefaults ( ) { ,"serviceUnderTest . setDefaults ( ) ; PluginConfig config = pluginConfigRepo . findByRoleName ( ""Generic"" ) ; assertNotNull ( ""found config"" , config ) ; assertEquals ( ""correct parameter"" , ""42"" , config . getConfigurationValue ( ""parameter"" ) ) ; }"
Waits for a file to be created. <code> boolean waitForFile ( File file ) { ,if ( file . isFile ( ) ) { return true ; } else { long timeout = System . currentTimeMillis ( ) + FILE_WAIT_TIMEOUT ; while ( System . currentTimeMillis ( ) <= timeout ) { sleepQuietly ( 10 ) ; if ( file . isFile ( ) ) { return true ; } } } return false ; }
Compares the type and label of this edge and the passed edge. <code> int lexicographicOrder ( Edge edge ) { ,int result = type . compareTo ( edge . type ) ; if ( result == 0 ) { result = - label . compareTo ( edge . label ) ; if ( result == 0 && note != null ) result = - note . compareTo ( edge . note ) ; } return result ; }
Map the Node's type to DOMWrapper's simplified concept of type. <code> int getType ( ) { ,int nodeType = node . getNodeType ( ) ; switch ( nodeType ) { case Node . ELEMENT_NODE : return ELEMENT ; case Node . COMMENT_NODE : return COMMENT ; case Node . CDATA_SECTION_NODE : return CDATA ; case Node . TEXT_NODE : return FREETEXT ; default : return UNKNOWN ; } }
"Populates the map passed as the first parameter with entries from the map passed as the second parameter. <code> Map < String , BeanDescriptor > mergeDescriptorMaps ( Map < String , BeanDescriptor > map1 , Map < String , BeanDescriptor > map2 ) { ","for ( Map . Entry < String , BeanDescriptor > entry : map2 . entrySet ( ) ) { if ( map1 . containsKey ( entry . getKey ( ) ) ) { throw new IllegalStateException ( ""Map already contains key "" + entry . getKey ( ) ) ; } map1 . put ( entry . getKey ( ) , entry . getValue ( ) ) ; } return map1 ; }"
Gets the value of the type property. <code> FileType getType ( ) { ,if ( type == null ) { return FileType . VNA ; } else { return type ; } }
Convert a pointer representing a Core Foundations LongLong into its long <code> long cfPointerToLong ( Pointer p ) { ,"LongByReference lbr = new LongByReference ( ) ; CoreFoundation . INSTANCE . CFNumberGetValue ( p , CFNumberType . kCFNumberLongLongType . ordinal ( ) , lbr ) ; return lbr . getValue ( ) ; }"
"Factory to create the predicate. If the array is size zero, the predicate always returns false. If the array is size one, then that predicate is returned. <code> Predicate getInstance ( Predicate [ ] predicates ) { ",FunctorUtils . validate ( predicates ) ; if ( predicates . length == 0 ) { return FalsePredicate . INSTANCE ; } if ( predicates . length == 1 ) { return predicates [ 0 ] ; } return new AnyPredicate ( FunctorUtils . copy ( predicates ) ) ; }
"Sends a testmessage to specified gateway, when a response gets intercepted we consider gateway configured <code> void testAdminConfiguration ( String gateway ) { ","unconfiguredGateways . add ( gateway ) ; Message message = generateCommand ( gateway , ""config_check"" ) ; message . setBody ( ""status"" ) ; router . route ( message ) ; Log . info ( ""Checking for admin configuration on "" + gateway ) ; }"
There can be multiple objects with the same key. This will return the first String from them <code> String getFirstProperty ( String key ) { ,List < String > value = configuration . get ( key ) ; if ( value == null ) { return null ; } return value . get ( 0 ) ; }
"Used when DynamicFieldInstance is involved in a Relation 1 1 Association and is the ReverseRelationField of the Relation Return all instance of DynamicFieldInstance non affected regarding specified property. <code> List < DynamicFieldInstance > listNonAffectedDynamicFieldInstanceReverse ( int i , int j , String sortProperty , boolean sortOrder , ImogJunction criterions , String property ) { ","ImogActor actor = HttpSessionUtil . getCurrentUser ( ) ; ImogJunction junction = createFilterJuntion ( actor ) ; if ( criterions != null ) junction . add ( criterions ) ; List < DynamicFieldInstance > beans = dao . loadNonAffectedReverse ( i , j , sortProperty , sortOrder , property , junction ) ; return beans ; }"
Returns the number of days between this day and another day. <code> int daysFrom ( Day other ) { ,"int n = 0 ; Day d = new Day ( year , month , date ) ; while ( d . compareTo ( other ) > 0 ) { d . previousDay ( ) ; n ++ ; } while ( d . compareTo ( other ) < 0 ) { d . nextDay ( ) ; n -- ; } return n ; }"
Checks whether verbose logging should be output for a given tag. <code> boolean isTagEnabled ( String tag ) { ,if ( enableAllTags ) { return true ; } String [ ] tags = enabledTags ; if ( tags == null || tags . length == 0 ) { return false ; } for ( int i = 0 ; i < tags . length ; i ++ ) { if ( tags [ i ] . equals ( tag ) ) { return true ; } } return false ; }
Tests that a null context results in an NPE as per EL Javadoc. <code> void testGetType01 ( ) { ,"ArrayELResolver resolver = new ArrayELResolver ( ) ; resolver . getType ( null , new Object ( ) , new Object ( ) ) ; }"
"Returns true if the given edge is equivalent to this edge. Two edges are equivalent only if they have their 'fromNode' and 'toNode' are equivalent, and that their acoustic and language scores are the same. <code> boolean isEquivalent ( Edge other ) { ",double diff = Math . abs ( acousticScore ) * 0.00001 ; return ( ( Math . abs ( acousticScore - other . getAcousticScore ( ) ) <= diff && lmScore == other . getLMScore ( ) ) && ( fromNode . isEquivalent ( other . getFromNode ( ) ) && toNode . isEquivalent ( other . getToNode ( ) ) ) ) ; }
Casts the array to a long array. <code> long [ ] castArrayToLong ( final Object [ ] objects ) { ,final long [ ] casted = new long [ objects . length ] ; for ( int i = 0 ; i < objects . length ; i ++ ) { final Object castedObject = objects [ i ] ; if ( castedObject instanceof Number ) { casted [ i ] = Numbers . castToLong ( ( Number ) castedObject ) ; } } return casted ; }
Find the index of the input item in this MyList. <code> int indexOf ( Object item ) { ,int index = - 1 ; for ( int i = 0 ; i < size ; i ++ ) { if ( array [ i ] . equals ( item ) ) { index = i ; } } return index ; }
Trims the capacity of this array to its current size. <code> void trimToSize ( ) { ,"if ( elements . length < size ) { elements = Arrays . copyOf ( elements , size ) ; indices = Arrays . copyOf ( indices , size ) ; } }"
Returns the DbFile that can be used to read the contents of the specified table. <code> DbFile getDatabaseFile ( int tableid ) { ,"if ( m_tid_map . containsKey ( tableid ) ) return m_tid_map . get ( tableid ) . getDbFile ( ) ; throw new NoSuchElementException ( ""Table ID doesn't exist. "" ) ; }"
Checks if all the urls in the array contains protocol <code> boolean hasProtocol ( String [ ] urls ) { ,for ( String url : urls ) { if ( ! hasProtocol ( url ) ) return false ; } return true ; }
Returns the key from its id. Null if not found. <code> SearchGUIPathKey getKeyFromId ( String id ) { ,for ( SearchGUIPathKey pathKey : values ( ) ) { if ( pathKey . id . equals ( id ) ) { return pathKey ; } } return null ; }
Save the settings related to Access List not write the settings in XML <code> void saveSettings ( ) { ,settings . setAE ( AETitle ) ; settings . setPermitAllAETitles ( permitAllAETitles ) ; String [ ] CAET = new String [ list . size ( ) ] ; CAET = list . toArray ( CAET ) ; settings . setCAET ( CAET ) ; }
Test chunk filling with blob size not a multiple of the chunk size. <code> void testChunkFillingBlobSizeNotMultipleOfChunkSize ( ) { ,blobSize = chunkSize * ( random . nextInt ( 10 ) + 1 ) + random . nextInt ( chunkSize - 1 ) + 1 ; fillChunksAndAssertSuccess ( ) ; }
"Get the value of a given state by querying the CIL2P shef.network. <code> double getStateValue ( final MachineState state , int playerID ) { ",propagateInput ( state ) ; return getPlayerScore ( playerList . get ( playerID ) ) ; }
"Returns the next child UINode that will be rendered after the passed in index. <code> UINode getNextRenderedChildNode ( UIXRenderingContext context , UINode parentNode , int afterChildIndex ) { ","int nextVisIndex = getNextRenderedChildIndex ( context , parentNode , afterChildIndex ) ; if ( nextVisIndex != NO_CHILD_INDEX ) { return parentNode . getIndexedChild ( context , nextVisIndex ) ; } else { return null ; } }"
Returns the database connection from data-source <code> Connection getDBConnection ( ) { ,Connection c = dataSource . getConnection ( ) ; c . setTransactionIsolation ( 2 ) ; return c ; }
"Stores the declaration information of an rhnSet so as to be used by the list tag while rendering a set. <code> void bindElaboratorTo ( String listName , Elaborator elab , ServletRequest request ) { ","String uniqueName = TagHelper . generateUniqueName ( listName ) ; String selectedName = ""list_"" + uniqueName + ELAB_TAG ; HttpSession session = ( ( HttpServletRequest ) request ) . getSession ( true ) ; session . setAttribute ( selectedName , elab ) ; }"
Checks if request should be handled as expired. <code> boolean isRequestAsExpired ( ) { ,if ( containsKey ( CTX_AS_EXPIRED_FLAG ) ) { return ( Boolean ) get ( CTX_AS_EXPIRED_FLAG ) ; } else { return false ; } }
Factory to create the identity predicate. <code> Predicate < T > identityPredicate ( final T object ) { ,if ( object == null ) { return NullPredicate . < T > nullPredicate ( ) ; } return new IdentityPredicate < T > ( object ) ; }
Read a String from a file. The default encoding for this platform is used. <code> String readTextFile ( String fileName ) { ,byte [ ] buff = readFile ( fileName ) ; String s = new String ( buff ) ; return s ; }
Lazily creates the scaling requirements for the ssh container provider <code> SshScalingRequirements sshScaling ( ) { ,if ( sshScalingRequirements == null ) { sshScalingRequirements = new SshScalingRequirements ( ) ; } return getSshScalingRequirements ( ) ; }
Remove a Publisher from the MamaDQPublisherManager <code> void destroyPublisher ( String symbol ) { ,"checkIsCreated ( ""destroyPublisher"" ) ; _destroyPublisher ( symbol ) ; }"
"Tests if the given request URI matches the given pattern. <code> boolean matchUriRequestPattern ( final String pattern , final String requestUri ) { ","if ( pattern . equals ( ""*"" ) ) { return true ; } else { return ( pattern . endsWith ( ""*"" ) && requestUri . startsWith ( pattern . substring ( 0 , pattern . length ( ) - 1 ) ) ) || ( pattern . startsWith ( ""*"" ) && requestUri . endsWith ( pattern . substring ( 1 , pattern . length ( ) ) ) ) ; } }"
"Create a GET request. This will apply any eligible directives supplied in the URI. <code> Request createGetRequest ( HttpHeaders headers , RequestBody body , UriInfo uriInfo , ResourceInstance resource ) { ","applyDirectives ( Request . Type . GET , body , uriInfo , resource ) ; return new GetRequest ( headers , body , uriInfo , resource ) ; }"
"Internal update scheduler, shouldn't be called directly Called if there is a high rate of join/leaves after some time to avoid db spamming <code> void addUpdate ( ) { ","try { HashMap < String , String > i = getInfo ( ) ; sBuffer . add ( new DataElem ( Integer . valueOf ( i . get ( ""virtualserver_clientsonline"" ) ) , Integer . valueOf ( i . get ( ""virtualserver_queryclientsonline"" ) ) ) ) ; } catch ( TS3ServerQueryException e ) { logger . error ( e ) ; } }"
Example of updating a dataset. <code> Dataset updateDataset ( String friendlyName ) { ,Builder builder = dataset . toBuilder ( ) ; builder . setFriendlyName ( friendlyName ) ; Dataset updatedDataset = builder . build ( ) . update ( ) ; return updatedDataset ; }
"Alerts the server tools framework that this factory's list of modules has changed, and caches may no longer be accurate <code> void modulesChanged ( ) { ",IServer [ ] allServers = ServerCore . getServers ( ) ; for ( int i = 0 ; i < allServers . length ; i ++ ) { ( ( Server ) allServers [ i ] ) . clearModuleCache ( ) ; } }
"Gets the title associated to total of messages the user have <code> String getRankTitle ( int rankId , int total ) { ",String title = null ; if ( rankId > 0 ) { title = getRankTitleById ( rankId ) ; } if ( title == null ) { title = getRankTitleByPosts ( total ) ; } return title ; }
Gets total MIPS Rating for all PEs. <code> int getTotalMips ( List < T > peList ) { ,int totalMips = 0 ; for ( Pe pe : peList ) { totalMips += pe . getMips ( ) ; } return totalMips ; }
gets the cartsian Point2D corresponding to this point <code> Point3D getCartesian ( ) { ,"double x = radius * Math . sin ( getInclination ( ) ) * Math . cos ( getAzimuth ( ) ) ; double y = radius * Math . sin ( getInclination ( ) ) * Math . sin ( getAzimuth ( ) ) ; double z = radius * Math . cos ( getInclination ( ) ) ; Point3D rval = new Point3D ( x , y , z ) ; return rval ; }"
"Verify that if the reader is given something that isn't a BoundingBox, then an exception is raised. <code> void testNonBoundingBox ( ) { ","HierarchicalStreamReader hReader = mock ( HierarchicalStreamReader . class ) ; when ( hReader . getNodeName ( ) ) . thenReturn ( ""NOT_A_BOUNDING_BOX"" ) ; BoundingBoxReader boundingBoxReader = new BoundingBoxReader ( hReader , CswAxisOrder . LON_LAT ) ; boundingBoxReader . getWkt ( ) ; }"
Checks if given text is a palindrome. <code> boolean isPalindrome ( String text ) { ,"String sanitizedText = text . toLowerCase ( ) . toLowerCase ( ) . replaceAll ( ""[^a-zA-Z0-9]"" , """" ) ; StringBuilder newStr = new StringBuilder ( sanitizedText ) ; return sanitizedText . equals ( String . valueOf ( newStr . reverse ( ) ) ) ; }"
Returns the micro version of the running JVM if it's 1.6 or newer or any RE VM build. It will return 0 if it's an internal 1.5 or 1.4.x build. <code> int jvmMicroVersion ( ) { ,if ( ! versionsInitialized ) { initVersions ( ) ; } return jvm_micro_version ; }
Waits for specified amount of time. <code> void waitFor ( long millis ) { ,try { Thread . sleep ( millis ) ; } catch ( Exception ex ) { ex . printStackTrace ( ) ; } }
"This method can be overridden to have different animations for each card when a click event happens on any card view. This method will be called for every <code> Animator getAnimatorForView ( View view , int currentCardPosition , int selectedCardPosition ) { ","if ( currentCardPosition != selectedCardPosition ) { return ObjectAnimator . ofFloat ( view , View . Y , ( int ) view . getY ( ) , getCardFinalY ( currentCardPosition ) ) ; } else { return ObjectAnimator . ofFloat ( view , View . Y , ( int ) view . getY ( ) , getCardOriginalY ( 0 ) + ( currentCardPosition * mCardGapBottom ) ) ; } }"
Gets the type of the ith field of this TupleDesc. <code> Type getFieldType ( int i ) { ,try { return TDList . get ( i ) . fieldType ; } catch ( IndexOutOfBoundsException bad ) { throw new NoSuchElementException ( ) ; } }
The SQL UPDATE statement for logically deleting entities. <code> String getSqlDelete ( boolean filterByEntityId ) { ,"StringBuilder resultSql ; resultSql = new StringBuilder ( ) ; resultSql . append ( ""DELETE FROM "" ) . append ( getEntityName ( ) ) . append ( ""s"" ) ; if ( filterByEntityId ) { resultSql . append ( "" WHERE id = ?"" ) ; } return resultSql . toString ( ) ; }"
"Returns the first node with the specified uri and local. <code> ListNode getListNode ( String uri , String local ) { ",if ( uri != null && local != null ) { ListNode place = head ; while ( place != null ) { if ( place . uri != null && place . local != null && place . uri . equals ( uri ) && place . local . equals ( local ) ) { return place ; } place = place . next ; } } return null ; }
"A person bids above minimum bid, then a second person bids exactly the first person's bid. <code> void testSameBid ( ) { ","my_item . addBid ( my_bidder_1 , 30000 ) ; my_item . addBid ( my_bidder_2 , 30000 ) ; assertEquals ( ""Juan"" , my_item . getHighBidder ( ) . getName ( ) ) ; assertTrue ( 30000.00 == my_item . getHighBid ( ) ) ; }"
This function returns a list of Classification Details <code> List getClassificationDetails ( ) { ,final List < AvgElapsedTimeSummaryDTO > classificationDetails = ReportDAO . getClassificationDetails ( ) ; return classificationDetails ; }
"check whether this is just the servlet engine precompiling jsp pages. This must be a request coming from the localhost, with only the one parameter set 'jsp_precompile' <code> boolean isJspPrecompile ( HttpServletRequest request ) { ","String rh = request . getRemoteHost ( ) ; String p = request . getParameter ( ""jsp_precompile"" ) ; int numParams = request . getParameterMap ( ) . keySet ( ) . size ( ) ; return ( ( p != null ) && ( ""localhost"" . equals ( rh ) ) && ( numParams == 1 ) ) ; }"
"Converts a byte sequence into its hexadecimal notation. <code> String valueOf ( byte [ ] seq , char separator ) { ","if ( seq == null ) { return null ; } StringBuffer buff = new StringBuffer ( ) ; for ( int i = 0 ; i < seq . length ; i ++ ) { if ( i > 0 ) { buff . append ( separator ) ; } buff . append ( valueOf ( seq [ i ] , true ) ) ; } return buff . toString ( ) ; }"
"Sets up the frame <code> void setUp ( int width , int height , int x_loc , int y_loc ) { ","menu . setDefaultCloseOperation ( JFrame . EXIT_ON_CLOSE ) ; menu . setLocation ( x_loc , y_loc ) ; cPane . setLayout ( new BoxLayout ( cPane , BoxLayout . Y_AXIS ) ) ; menu . setResizable ( false ) ; menu . setSize ( width , height ) ; }"
query session for authentication token <code> String getAuthToken ( HttpSession session ) { ,String authToken = ( String ) session . getAttribute ( AUTH_TOKEN ) ; authToken = EncryptionUtil . decrypt ( authToken ) ; return authToken ; }
"Set global error status (effects all target databases) <code> void setGlobalError ( SessionContext sessionContext , String message ) { ","String statusMessage = ""*unknown*"" ; if ( ! StringUtils . isNull ( message ) ) { statusMessage = message ; } setGlobalStatus ( sessionContext , ""ERROR"" , statusMessage ) ; }"
"Call wait() on the given object with the specified timeout. Avoid boilerplate code like synchronized or try..catch. <code> void waitOn ( Object lock , long timeout ) { ",synchronized ( lock ) { try { lock . wait ( timeout ) ; } catch ( InterruptedException e ) { e . printStackTrace ( ) ; } } }
Simple utility method that obtains the text of an XML node. <code> String getXMLText ( final Node n ) { ,final NodeList list = n . getChildNodes ( ) ; for ( int i = 0 ; i < list . getLength ( ) ; i ++ ) { final Node n2 = list . item ( i ) ; if ( n2 . getNodeType ( ) == Node . TEXT_NODE ) { return n2 . getNodeValue ( ) ; } } return null ; }
Find an Employee somewhere <code> Employee findEmployee ( ) { ,"Employee result = new Employee ( ) ; result . set ( ID , 10L ) ; result . set ( NAME , ""Pavel"" ) ; result . set ( WAGE , 50.00 ) ; result . set ( COMPANY , findCompany ( ) ) ; return result ; }"
Set the white balance to hold current. <code> void setWhiteBalanceHoldCurrent ( ) { ,"m_whiteBalance = ""manual"" ; m_whiteBalanceValue = - 1 ; m_needSettingsUpdate = true ; }"
"This method checks to see if the federate associated with this LRC is joined to a federation. If it is not, a FederateNotExecutionMember exception is thrown. <code> void checkJoined ( ) { ",try { state . checkJoined ( ) ; } catch ( JFederateNotExecutionMember nem ) { throw new FederateNotExecutionMember ( nem . getMessage ( ) ) ; } }
"Persists a new VAT Identification Number value for a given account. <code> boolean saveAccountVatin ( @ Nonnull UUID accountId , @ Nonnull VATINRsc vatinRsc , Tenant tenant ) { ","TenantContext tenantContext = new PluginTenantContext ( tenant . getId ( ) ) ; String newValue = vatinRsc . vatin . getNumber ( ) ; return customFieldService . saveAccountField ( newValue , VATIN_CUSTOM_FIELD_NAME , accountId , tenantContext ) ; }"
"Asserts that a given value is not null. <code> T assertNotNull ( T value , String assertMessage , Object ... args ) { ","if ( value == null ) { throw new AssertionException ( assertMessage , args ) ; } return value ; }"
"Returns the page at the specified index in the parent page hierarchy. 0 is the front page of the site, 1 is the subpage of that page etc. <code> USHierarchy parentNodeAtLevel ( USHierarchy anObject , int aLevel ) { ","try { NSArray anArray = everyParentNode ( anObject , true ) ; return ( USHierarchy ) anArray . objectAtIndex ( anArray . count ( ) - aLevel ) ; } catch ( Exception e ) { return null ; } }"
From a value returns the enum. <code> T getEnum ( String value ) { ,"try { return ( T ) _createFromValueMethod . invoke ( null , value ) ; } catch ( IllegalAccessException e ) { throw new RuntimeException ( e ) ; } catch ( InvocationTargetException e ) { throw new RuntimeException ( e ) ; } }"
"Create a compression instance using the codec specified by codecClassName <code> FSImageCompression createCompression ( Configuration conf , String codecClassName ) { ","CompressionCodecFactory factory = new CompressionCodecFactory ( conf ) ; CompressionCodec codec = factory . getCodecByClassName ( codecClassName ) ; if ( codec == null ) { throw new IOException ( ""Not a supported codec: "" + codecClassName ) ; } return new FSImageCompression ( codec ) ; }"
Retrieve a copy of the Java date for a TimeStamp with millisecond granularity. The returned date is a copy; this object will not be affected by modifications of the returned instance. <code> Date asExactJavaDate ( ) { ,"if ( m_usecs != 0 ) { throw new RuntimeException ( ""Can't convert to java Date from TimestampType with fractional milliseconds"" ) ; } return ( Date ) m_date . clone ( ) ; }"
"If the specified key is not already associated with a value (or is mapped to null) associates it with a new List and returns it, else returns the current value. <code> List < V > createNewListIfAbsent ( Map < K , List < V >> map , K key ) { ","synchronized ( map ) { List < V > value = map . get ( key ) ; if ( value != null ) { return value ; } value = new ArrayList < > ( ) ; map . put ( key , value ) ; return value ; } }"
Writes an unsigned (32 bit) integer to a byte new array encoded as ITF8. The sign bit is interpreted as a value bit. <code> byte [ ] writeUnsignedITF8 ( final int value ) { ,"final ByteBuffer buffer = ByteBuffer . allocate ( 10 ) ; writeUnsignedITF8 ( value , buffer ) ; buffer . flip ( ) ; final byte [ ] array = new byte [ buffer . limit ( ) ] ; buffer . get ( array ) ; buffer . clear ( ) ; return array ; }"
"Begins recording time interval if the timer is idle. Stops recording time interval if the timer is running, compares the stored time intervals, and then begins recording a new time interval. <code> void recordTimeInterval ( ) { ",if ( timerIsIdle ( ) ) { start ( ) ; } else { stop ( ) ; compareTimeIntervals ( ) ; start ( ) ; } }
transform a path with all the given matrices VERY IMPORTANT: keep order to value-touch-offset <code> void pathValueToPixel ( Path path ) { ,path . transform ( mMatrixValueToPx ) ; path . transform ( mViewPortHandler . getMatrixTouch ( ) ) ; path . transform ( mMatrixOffset ) ; }
Advance over any EOLN chars (CR or LF) <code> boolean skipNewlines ( ) { ,boolean sawEoln = false ; while ( atEoln ( ) ) { sawEoln = true ; ++ nextByte ; } return sawEoln ; }
"Get all of the fields in the specified class and super classes. <code> void getAllFields ( final Class < ? > c , final Collection < Field > fields ) { ","for ( final Field field : c . getDeclaredFields ( ) ) { fields . add ( field ) ; } final Class < ? > s = c . getSuperclass ( ) ; if ( s != null ) { ReflectionUtil . getAllFields ( s , fields ) ; } }"
Returns the short name of this class. <code> String getShortName ( ) { ,String longName = TestClass . class . getName ( ) ; return longName . substring ( longName . lastIndexOf ( '.' ) + 1 ) ; }
Gets the registration information JSON object <code> JSONObject getRegistrationInformation ( ) { ,"JSONObject regInfo = new JSONObject ( ) ; regInfo . put ( REGISTRATIONID_JSON_PROPERTY , getRegistrationId ( ) ) ; regInfo . put ( REGISTRATION_NAME_JSON_PROPERTY , getName ( ) ) ; return regInfo ; }"
Close the redirected stdout and restore it to what it was before we redirected it. <code> void closeStdout ( ) { ,System . out . close ( ) ; System . setOut ( oldOut ) ; }
"Get min object of a array <code> int getMinResultObject ( IResultObject [ ] objects , int length ) { ","IResultObject minObject = null ; int minObjectPos = - 1 ; for ( int i = 0 ; i < length ; i ++ ) { if ( objects [ i ] != null && ( minObject == null || ( compareResultObject ( minObject , objects [ i ] ) > 0 ) ) ) { minObject = objects [ i ] ; minObjectPos = i ; } } return minObjectPos ; }"
Returns the specified action. <code> F getAction ( String name ) { ,E set = actionHash . get ( name ) ; if ( set == null ) return null ; else return set . getAction ( name ) ; }
Gets the price value (when applicable) for the content associated with a notification. The value will be provided as a String containing the price in the appropriate currency for the current locale. <code> String getPricingValue ( ) { ,if ( mPricingType == null ) { return null ; } return mPricingValue ; }
"Replaces the first occurence of oldString in string with newString. The methods returns either a new string instance (in the case oldString is included in the string) or the origial string itself (in the case oldString is not included). <code> String replaceFirst ( String string , String oldString , String newString ) { ","int index = string . indexOf ( oldString ) ; if ( index != - 1 ) { StringBuffer sb = new StringBuffer ( string . length ( ) ) ; sb . append ( string . substring ( 0 , index ) ) ; sb . append ( newString ) ; sb . append ( string . substring ( index + oldString . length ( ) ) ) ; return sb . toString ( ) ; } return string ; }"
This method takes an AMF3 object in byte array form and converts it to a corresponding java object. <code> T fromAmf ( final ByteArrayInputStream amf ) { ,Amf3Input amf3Input = new Amf3Input ( context ) ; amf3Input . setInputStream ( amf ) ; T object = ( T ) amf3Input . readObject ( ) ; amf3Input . close ( ) ; return object ; }
"Handle APIfaults for axis services <code> void handleAPIFaultForAxisservice ( APIFaultException e , String namespace , String namespaceprefix , MessageContext msgContext ) { ","String faultPayload = getFaultPayload ( e , namespace , namespaceprefix ) . toString ( ) ; MessageContext faultContext = getFaultMessagecontext ( msgContext , faultPayload ) ; AxisEngine . sendFault ( faultContext ) ; }"
Checks if is valid regex pattern. <code> boolean isValidRegexPattern ( final String pattern ) { ,"try { Pattern . compile ( pattern ) ; } catch ( final PatternSyntaxException e ) { LOGGER . debug ( ""Failed to identify [{}] as a regular expression"" , pattern ) ; return false ; } return true ; }"
"Set the value of a parameter to a PreparedStatement. <code> void setParameterValue ( PreparedStatement statement , int i , int type , String value ) { ","if ( ( value == null ) || ( value . length ( ) == 0 ) ) { statement . setNull ( i , type ) ; } else if ( type == java . sql . Types . TIMESTAMP ) { statement . setTimestamp ( i , java . sql . Timestamp . valueOf ( value ) , java . util . Calendar . getInstance ( ) ) ; } else { statement . setObject ( i , value , type ) ; } }"
Returns the most probable peptide identity of this scan (collection of data points). <code> Peptide getHighScorePeptide ( ) { ,"Peptide [ ] sortedPeptides = peptides . toArray ( new Peptide [ 0 ] ) ; Arrays . sort ( sortedPeptides , new PeptideSorter ( SortingDirection . Descending ) ) ; return sortedPeptides [ 0 ] ; }"
Get EventSource by name <code> EventSourceDTO getEventSource ( String eventSourceName ) { ,"try { return stub . getEventSource ( eventSourceName ) ; } catch ( RemoteException e ) { handleException ( ""Error while retreiving the eventsource "" + eventSourceName , e ) ; } return null ; }"
"Return a translated exception if this is appropriate, otherwise return the input exception. <code> RuntimeException translateIfNecessary ( RuntimeException rawException , PersistenceExceptionTranslator pet ) { ","Assert . notNull ( pet , ""PersistenceExceptionTranslator must not be null"" ) ; DataAccessException dex = pet . translateExceptionIfPossible ( rawException ) ; return ( dex != null ? dex : rawException ) ; }"
"register events handlers for event. <code> void addEventHandler ( final EventTypes event , final Class < ? extends IEventHandler > eventHandler ) { ",EventCommandData eventCommandData = new EventCommandData ( eventHandler ) ; eventHandlers . get ( event ) . add ( eventCommandData ) ; }
"Returns DOM element ID for a table cell element. <code> String createTableCellElementId ( String prefix , String columnId , Context context ) { ","StringBuilder sb = new StringBuilder ( prefix ) ; sb . append ( ""_"" ) ; sb . append ( columnId != null ? columnId : ""col"" + String . valueOf ( context . getColumn ( ) ) ) ; sb . append ( ""_row"" ) ; sb . append ( String . valueOf ( context . getIndex ( ) ) ) ; return sb . toString ( ) ; }"
Decodes a String where each char of the String represents an ascii '0' or '1'. <code> byte [ ] toByteArray ( String ascii ) { ,if ( ascii == null ) { return EMPTY_BYTE_ARRAY ; } return fromAscii ( ascii . toCharArray ( ) ) ; }
"Retrieves a url from the ""href"" tag nested within an ""Icon"" tag, read by the XmlPullParser. <code> String getImageUrl ( XmlPullParser parser ) { ","int eventType = parser . getEventType ( ) ; while ( ! ( eventType == END_TAG && parser . getName ( ) . equals ( ""Icon"" ) ) ) { if ( eventType == START_TAG && parser . getName ( ) . equals ( ""href"" ) ) { return parser . nextText ( ) ; } eventType = parser . next ( ) ; } return null ; }"
Utility method used to get the 'actual' class of a given field. This method uses a IdentityVisitor instance to visit the field. <code> T getIdentity ( T pObj ) { ,if ( ! ( pObj instanceof AttributesContainer ) ) { return ( T ) pObj ; } IdentityVisitor < T > lVisitor = new IdentityVisitor < T > ( ) ; ( ( AttributesContainer ) pObj ) . accept ( lVisitor ) ; return lVisitor . get ( ) ; }
"add key-value pair to map, key need not null or empty <code> boolean putMapNotEmptyKeyAndValue ( Map < String , String > map , String key , String value , String defaultValue ) { ","if ( map == null || StringUtils . isEmpty ( key ) ) { return false ; } map . put ( key , StringUtils . isEmpty ( value ) ? defaultValue : value ) ; return true ; }"
DomParser can parse XML text properly. <code> void parsesIncomingXmlDocumentComment ( ) { ,"final String xml = ""<?xml version='1.0'?><!-- test --><root/>"" ; final DomParser parser = new DomParser ( DocumentBuilderFactory . newInstance ( ) , xml ) ; MatcherAssert . assertThat ( parser . document ( ) , XhtmlMatchers . hasXPath ( ""/root"" ) ) ; }"
"Updates the last committed seqno for a single channel. This is a client call used by appliers to mark the restart position. <code> void updateLastCommitSeqno ( ReplDBMSHeader header , long appliedLatency ) { ","String fname = commitSeqno . getPrefix ( ) + ""."" + taskId ; commitSeqno . store ( fname , header , appliedLatency , true ) ; }"
Formats a number of seconds into hours:minutes:seconds. <code> String formatElapseTime ( final long seconds ) { ,"final long s = seconds % 60 ; final long allMinutes = seconds / 60 ; final long m = allMinutes % 60 ; final long h = allMinutes / 60 ; return timeFmt . format ( h ) + "":"" + timeFmt . format ( m ) + "":"" + timeFmt . format ( s ) ; }"
"causes the TileEntity to reset all it's cached values for it's container block, blockID, metaData and in the case of chests, the adjcacent chest check <code> void updateContainingBlockInfo ( ) { ",blockType = null ; blockMetadata = - 1 ; }
Returns the message which says who won (i.e. who has the most pieces or a tie). <code> String getWinnerMessage ( ) { ,"if ( whiteCount == blackCount ) { return BUNDLE . getString ( ""Tie"" ) ; } else { if ( whiteCount > blackCount ) { return BUNDLE . getString ( ""White_Wins"" ) ; } return BUNDLE . getString ( ""Black_Wins"" ) ; } }"
"Set the dataDomain in the route so that it can be retrieved when needed during route runtime <code> void setDataDomainInRoute ( Route route , String dataDomain ) { ","Map routeProperties = route . getProperties ( ) ; routeProperties . put ( ""dataDomain"" , dataDomain ) ; }"
Returns the date after formatting <code> String returnDate ( Date date ) { ,"SimpleDateFormat format = new SimpleDateFormat ( ""EEE, dd MMM yyyy"" ) ; return format . format ( date ) ; }"
Retrieves a queue by its name. <code> AsteriskQueueImpl getQueueByName ( String queueName ) { ,"AsteriskQueueImpl queue ; synchronized ( queues ) { queue = queues . get ( queueName ) ; } if ( queue == null ) { logger . error ( ""Requested queue '"" + queueName + ""' not found!"" ) ; } return queue ; }"
Notification that the primary server has changed. Update our maps accordingly. <code> void primaryServer ( ServerSessionManager server ) { ,unregisterFactories ( ) ; if ( server != null ) { registerFactories ( server ) ; } fireCellRegistryListener ( ) ; }
Gets a list of Date Keys and sorts them in descending order <code> List < String > getDateList ( ) { ,"Collections . sort ( dateList , Collections . reverseOrder ( ) ) ; return dateList ; }"
"Returns the round trip time for this ping in nanoseconds, or -1 if the response was cancelled, or -2 if the timeout elapsed before the round trip completed. <code> long roundTripTime ( long timeout , TimeUnit unit ) { ","if ( latch . await ( timeout , unit ) ) { return received - sent ; } else { return - 2 ; } }"
"Converts length bytes of data pointed by data into byte array Returns null if data is zero <code> long [ ] toLongs ( long data , int length ) { ","if ( data == 0 ) { return null ; } long [ ] res = new long [ length ] ; for ( int i = 0 ; i < length ; i ++ , data += getLongSize ( ) ) { res [ i ] = getLong ( data ) ; } return res ; }"
Gets the track's trip statistics. <code> TripStatistics getTripStatistics ( ) { ,TripStatistics stats = new TripStatistics ( tripStatistics ) ; stats . merge ( currentSegment ) ; return stats ; }
"Encodes the specified long in 4 consecutive bytes (big-endian) in the specified array, beginning at the specified offset. <code> void toArray ( long l , byte [ ] b , int offset ) { ",b [ offset + 3 ] = ( byte ) ( l % 256 ) ; l >>>= 8 ; b [ offset + 2 ] = ( byte ) ( l % 256 ) ; l >>>= 8 ; b [ offset + 1 ] = ( byte ) ( l % 256 ) ; l >>>= 8 ; b [ 0 ] = ( byte ) ( l % 256 ) ; }
"Sets the indicators in robotsMeta to appropriate values, based on any META tags found under the given node. <code> void getMetaTags ( HTMLMetaTags metaTags , Node node , URL currURL ) { ","metaTags . reset ( ) ; getMetaTagsHelper ( metaTags , node , currURL ) ; }"
Test that the service starts with the expected options. <code> void testServiceOptions ( ) { ,"EnumSet < Service . ServiceOption > expected = EnumSet . of ( Service . ServiceOption . INSTRUMENTATION , Service . ServiceOption . PERIODIC_MAINTENANCE ) ; assertThat ( service . getOptions ( ) , is ( expected ) ) ; }"
This function is invoked via JNI; be careful when modifying signature. <code> void beginDrawing ( ) { ,"mFrameStartTime = System . nanoTime ( ) ; runRenderTasks ( mTasks , false , mFrameStartTime ) ; }"
Create a Half edge triangle mesh from a regular mesh. <code> HalfEdgeTriangleMesh fromMesh ( ITriangleMesh mesh ) { ,"HalfEdgeTriangleMesh heMesh = new HalfEdgeTriangleMesh ( ) ; fromMesh ( heMesh , mesh ) ; return heMesh ; }"
"Analyze litepal.xml, and store the analyzed result in LitePalParser. Use DomParse to parse the configuration file as default. SAXParser and XmlPullParser is also optional, but not visible to developers. <code> void parseLitePalConfiguration ( ) { ",if ( parser == null ) { parser = new LitePalParser ( ) ; } parser . useSAXParser ( ) ; }
"Encodes bitmap into byte array <code> byte [ ] encodeBitmap ( Bitmap bitmap , int quality ) { ","if ( available ( ) ) { return nativeEncodeBitmap ( bitmap , quality ) ; } else { ByteArrayOutputStream out = new ByteArrayOutputStream ( ) ; bitmap . compress ( Bitmap . CompressFormat . WEBP , quality , out ) ; return out . toByteArray ( ) ; } }"
"Rotates the anchor around (u, v) = (0, 0). <code> float rotateAnchor ( float u , float v ) { ",switch ( mRotation ) { case 0 : return u ; case 1 : return 1 - v ; case 2 : return 1 - u ; case 3 : return v ; default : } throw new IllegalStateException ( ) ; }
Utility to get the gps status extras from an intent. <code> int [ ] getGpsStatusExtras ( Intent intent ) { ,if ( intent == null ) { return null ; } int [ ] gpsstatusExtras = intent . getIntArrayExtra ( GPS_SERVICE_GPSSTATUS_EXTRAS ) ; return gpsstatusExtras ; }
Print output as decoded fields <code> void printFormattedPayload ( ) { ,"logger . debug ( "" Printing raw payload:"" ) ; printDebugPayload ( ) ; }"
"Set a java.sql.Timestamp in a prepared triple <code> void setTimestamp ( PreparedStatement p , int pos , DateFormat format , String value ) { ","Timestamp t = convertToTimestamp ( format , value ) ; p . setTimestamp ( pos , t ) ; }"
Note: parent class ReducibleAnnotationData is non-allele specific and stores all values with the no-call allele <code> List < Allele > getAlleles ( ) { ,final List < Allele > ret = new ArrayList < > ( ) ; ret . addAll ( attributeMap . keySet ( ) ) ; return ret ; }
"Clients produced by this method will be completely unsecured. Since there is no security information to expire, this client may be reused. <code> T getUnsecuredClient ( ) { ","String asciiString = clientFactory . getAddress ( ) ; if ( StringUtils . startsWithIgnoreCase ( asciiString , ""https"" ) ) { throw new SecurityServiceException ( ""Cannot connect insecurely to https url "" + asciiString ) ; } return getNewClient ( null , null ) ; }"
Gets the value of the sep property. <code> boolean isSep ( ) { ,if ( sep == null ) { return true ; } else { return sep ; } }
Gives the argument associated with the given option. This method recognizes only instances of options returned from the fluent interface methods. <code> V valueOf ( OptionSpec < V > option ) { ,requireNonNull ( option ) ; List < V > values = valuesOf ( option ) ; switch ( values . size ( ) ) { case 0 : return null ; case 1 : return values . get ( 0 ) ; default : throw new MultipleArgumentsForOptionException ( option ) ; } }
This implementation depends only on the lock holder and not on the lock expiration time. <code> int hashCode ( ) { ,if ( 0 == hashCode ) hashCode = holder . hashCode ( ) ; return hashCode ; }
Returns the iterator over className of the children that are attached to the UIComponent that this TreeStructure represents. <code> Iterator getChildren ( ) { ,if ( children != null ) { return ( children . iterator ( ) ) ; } else { return ( Collections . EMPTY_LIST . iterator ( ) ) ; } }
Is this string in Unicode Normal Form C. <code> boolean isNormalFormC ( String str ) { ,"try { return SWITCH_OFF || Normalizer . isNormalized ( str , Normalizer . Form . NFC ) ; } catch ( ArrayIndexOutOfBoundsException e ) { String normalized = Normalizer . normalize ( str , Normalizer . Form . NFC ) ; return normalized . equals ( str ) ; } }"
"We can use a function in distinct to determine for example if the key/value has been emitted, returning the value of a map to make the distinction. Shall print hello reactive world <code> void testDistinctFunc ( ) { ","Map < Integer , String > words = new HashMap < > ( ) ; words . put ( 1 , ""hello"" ) ; words . put ( 2 , ""reactive"" ) ; words . put ( 3 , ""world"" ) ; List < Integer > numbers = Arrays . asList ( 1 , 2 , 2 , 3 ) ; Observable . from ( numbers ) . distinct ( words :: get ) . map ( words :: get ) . subscribe ( System . out :: println ) ; }"
Returns the string representation of the telnet protocol option corresponding to the given option code. <code> String getOption ( int code ) { ,"if ( __optionString [ code ] . length ( ) == 0 ) { return ""UNASSIGNED"" ; } else { return __optionString [ code ] ; } }"
check if current time slot is available for adding more people <code> boolean isAvailable ( ) { ,if ( attendees == null ) return true ; return ( attendees . size ( ) < maxNoOfAttendees ) ; }
Load file and return an ArrayList of Strings which equates to the contents of the file. <code> ArrayList < String > loadFile ( String fileName ) { ,ArrayList < String > lines = new ArrayList < String > ( ) ; try { File f = new File ( fileName ) ; Scanner sc = new Scanner ( f ) ; while ( sc . hasNextLine ( ) ) { lines . add ( sc . nextLine ( ) ) ; } sc . close ( ) ; } catch ( FileNotFoundException fnfex ) { return null ; } return lines ; }
setUp method before tests <code> void setUp ( ) { ,tester = new OutForRepair ( ) ; mgr = new NuxCarRental ( ) ; }
"Starts (synchronously) a drag motion. Normally followed by dragTo() and dragEnd(). <code> void dragStart ( Activity activity , float x , float y , long downTime ) { ","View root = getRootViewForActivity ( activity ) ; float [ ] windowXY = screenToWindowCoordinates ( root , x , y ) ; float windowX = windowXY [ 0 ] ; float windowY = windowXY [ 1 ] ; MotionEvent event = MotionEvent . obtain ( downTime , downTime , MotionEvent . ACTION_DOWN , windowX , windowY , 0 ) ; dispatchTouchEvent ( root , event ) ; }"
Converts this IP address to a InetAddress. <code> InetAddress toInetAddress ( ) { ,try { return InetAddress . getByAddress ( toBytes ( ) ) ; } catch ( UnknownHostException e ) { return null ; } }
Caught system exception and print error info to console <code> String exceptionInfo ( Throwable throwable ) { ,StringWriter mStringWriter = new StringWriter ( ) ; PrintWriter mPrintWriter = new PrintWriter ( mStringWriter ) ; throwable . printStackTrace ( mPrintWriter ) ; mPrintWriter . close ( ) ; Logger . e ( mStringWriter . toString ( ) ) ; return mStringWriter . toString ( ) ; }
"Returns the mass associated with the given bin, the middle of the bin. <code> Double getMass ( int bin ) { ",if ( ppm ) { return FastMath . exp ( ( scalingFactor * bin ) + mzAnchorLog ) ; } else { return precursorTolerance * ( 0.5 + bin ) ; } }
"Gets the parameters as a map of strings. <code> Map < String , String > getParamsMap ( ) { ","if ( m_params == null ) { return Collections . emptyMap ( ) ; } return CmsStringUtil . splitAsMap ( m_params , ""|"" , ""="" ) ; }"
Read a string from the byte stream. <code> String readString ( ) { ,int strLen = lengthOfCurrentString ( ) ; char [ ] stringChars = new char [ strLen ] ; for ( int i = 0 ; i < strLen ; i ++ ) stringChars [ i ] = ( char ) bytes [ streamPosition ++ ] ; moveToFourByteBoundry ( ) ; return new String ( stringChars ) ; }
This function checks if the person is sleeping. <code> boolean isSleeping ( ) { ,if ( status == Status . Sleeping ) return true ; else return false ; }
Applies the default parameter to the currently loaded config <code> void defaultConfiguration ( ) { ,config . defaultConfiguration ( ) ; applyConfig ( ) ; }
get SIM slot according to input id <code> int getSimSlotById ( int id ) { ,SIMInfo simInfo = mAllSimInfoMap . get ( id ) ; return ( simInfo == null ) ? - 1 : simInfo . mSlot ; }
Add the class to the element. <code> boolean addClass ( String name ) { ,"String className = element . getClassName ( ) ; if ( ! isClassPresent ( name ) ) { element . setClassName ( className + "" "" + name ) ; return true ; } return false ; }"
"Atomically clears a bit (or bits) for an AtomicInteger. If the bit(s) are already cleared, the method returns false If any of the bits are zero, then the method will fail and clear none of the bits <code> boolean clearBit ( AtomicInteger i , int mask ) { ","boolean success = false ; while ( ! success ) { int current = i . get ( ) ; if ( ( current & mask ) != mask ) { return false ; } int next = current & ( ~ mask ) ; success = i . compareAndSet ( current , next ) ; } return true ; }"
Gets the value of the ptType property. <code> STElementType getPtType ( ) { ,if ( ptType == null ) { return STElementType . ALL ; } else { return ptType ; } }
"Deletes a node that has no children <code> void deleteNoChildren ( Node parent , boolean parentsLeftChild ) { ",if ( parent == root && parent . getLeftChild ( ) == null ) { root = null ; } else if ( parentsLeftChild ) { parent . setLeftChild ( null ) ; } else { parent . setRightChild ( null ) ; } }
Helper method to determines whether a notification is an AlertNotification that is showing progress This method will be deprecated when AlertNotifications are removed (bug 893289). <code> boolean isProgressStyle ( Notification notification ) { ,if ( notification instanceof AlertNotification ) { return ( ( AlertNotification ) notification ) . isProgressStyle ( ) ; } return false ; }
Remove the smallest item from the priority queue. <code> int deleteMin ( ) { ,int val = findMin ( ) ; if ( root . getLeftChild ( ) == null ) root = null ; else root = combineSiblings ( root . getLeftChild ( ) ) ; size -- ; return val ; }
Change the sort order at the given index in the ComparatorChain to a reverse sort. <code> void setReverseSort ( final int index ) { ,checkLocked ( ) ; orderingBits . set ( index ) ; }
Increases the size of the backing array to accommodate the specified number of additional items. Useful before adding many items to avoid multiple backing array resizes. <code> float [ ] ensureCapacity ( int additionalCapacity ) { ,"int sizeNeeded = size + additionalCapacity ; if ( sizeNeeded > items . length ) resize ( Math . max ( 8 , sizeNeeded ) ) ; return items ; }"
"Returns Encoder parameters for the ""dayOfWeek"" test encoder. <code> Parameters getDayDemoTestEncoderParams ( ) { ","Map < String , Map < String , Object >> fieldEncodings = getDayDemoFieldEncodingMap ( ) ; Parameters p = Parameters . getEncoderDefaultParameters ( ) ; p . setParameterByKey ( KEY . FIELD_ENCODING_MAP , fieldEncodings ) ; return p ; }"
Check if we are running in a JDK v1.3 virtual machine or better. <code> boolean jdk13Enabled ( ) { ,"String javaVersion = System . getProperty ( ""java.vm.version"" ) ; return javaVersion . compareTo ( ""1.3"" ) >= 0 ; }"
"Handling a received call by sending an ack <code> void newCall ( Call call , ProtocolControlFrame recvCallFrame ) { ","CallCommandSendFacade . accept ( call , recvCallFrame ) ; CallCommandSendFacade . ringing ( call ) ; }"
Builds uri for a given uri fragment. <code> URI buildUri ( String uri ) { ,"try { return new URI ( uri ) ; } catch ( URISyntaxException e ) { throw new IllegalStateException ( String . format ( ""Failed to build uri: %s"" , uri ) ) ; } }"
"Return the furthst possible distance between this rectangle and the passed rectangle. Find the distance between this rectangle and each corner of the passed rectangle, and use the maximum. <code> float furthestDistance ( final Rectangle r ) { ","float distanceSquared = 0 ; for ( int i = 0 ; i < DIMENSIONS ; i ++ ) { distanceSquared += Math . max ( distanceSquared ( i , r . min [ i ] ) , distanceSquared ( i , r . max [ i ] ) ) ; } return ( float ) Math . sqrt ( distanceSquared ) ; }"
Returns a string representation of this object; useful for testing and debugging. <code> String toString ( ) { ,"StringBuilder sb = new StringBuilder ( ) ; sb . append ( ""{"" ) ; if ( ownerAlias != null ) sb . append ( ""OwnerAlias: "" + ownerAlias + "", "" ) ; if ( groupName != null ) sb . append ( ""GroupName: "" + groupName + "", "" ) ; sb . append ( ""}"" ) ; return sb . toString ( ) ; }"
"Save a given Chunk, recording the time in lastSaveTime <code> void saveChunk ( Chunk par1Chunk ) { ","if ( chunkLoader == null ) { return ; } try { par1Chunk . lastSaveTime = worldObj . getWorldTime ( ) ; chunkLoader . saveChunk ( worldObj , par1Chunk ) ; } catch ( IOException ioexception ) { ioexception . printStackTrace ( ) ; } }"
"Retypes a filter making sure the fids are using the internal typename prefix <code> Filter retypeFilter ( Filter filter , FeatureTypeMap typeMap ) { ","FidTransformeVisitor visitor = new FidTransformeVisitor ( typeMap ) ; return ( Filter ) filter . accept ( visitor , null ) ; }"
Determine if a URI string has a scheme component. <code> boolean hasScheme ( StringBuffer uri ) { ,int len = uri . length ( ) ; for ( int i = 0 ; i < len ; i ++ ) { char c = uri . charAt ( i ) ; if ( c == ':' ) { return i > 0 ; } else if ( ! isSchemeChar ( c ) ) { return false ; } } return false ; }
odstrani kontakt ze seznamu <code> void removeContact ( String username ) { ,int i = 0 ; while ( i < contacts . size ( ) ) { if ( contacts . get ( i ) [ 0 ] . equals ( username ) ) { contacts . remove ( i ) ; break ; } i ++ ; } }
"This method is used to return name valu pair for Spiral class input from user <code> Map < String , String > getSpiralInput ( ) { ","String [ ] valuetitle = { ""row"" , ""column"" , ""xPosition"" , ""yPosition"" } ; String delim = "" ,"" ; String message = ""Please enter row,colum,Xposition and YPosition for Spiral"" + ""Followed by space or comma in between: "" ; return input . getInputWithToken ( message , delim , valuetitle ) ; }"
geeft een lijst met alle hashtag entities <code> ArrayList < Hashtags_Entity > getHashtags ( ) { ,ArrayList < Hashtags_Entity > returnArray = new ArrayList < Hashtags_Entity > ( ) ; for ( Entity e : entities ) { if ( e instanceof Hashtags_Entity ) { returnArray . add ( ( Hashtags_Entity ) e ) ; } } return returnArray ; }
"Puts trigger conditions into the input bundle. <code> void packTriggerConditionsInBundle ( Bundle bundle , TriggerConditions conditions ) { ","bundle . putBoolean ( POWER_CONNECTED_TAG , conditions . requirePowerConnected ( ) ) ; bundle . putInt ( BATTERY_PERCENTAGE_TAG , conditions . getMinimumBatteryPercentage ( ) ) ; bundle . putBoolean ( UNMETERED_NETWORK_TAG , conditions . requireUnmeteredNetwork ( ) ) ; }"
returns the value for a vehicle property. <code> D getVehiclePropertyValue ( VehiclePropertyType < D > vehicleProperty ) { ,"assert vehicleProperty != null ; @ SuppressWarnings ( ""unchecked"" ) D value = ( D ) vehiclePropertyValues . get ( vehicleProperty ) ; return value ; }"
"Visit current node. Generate Java code, that represent current node. <code> ITreeNode getChild ( int index , ELVisitor visitor ) { ","Node childNode = getNode ( ) . jjtGetChild ( index ) ; if ( null != childNode ) { ITreeNode treeNode = visitor . determineNodeType ( childNode ) ; return treeNode ; } else { throw new ParsingException ( ""Child node not found of node "" + node . getImage ( ) ) ; } }"
Connects to existing registry on localhost on given port. Registry has to be running when calling this. It has to have access to remote object classes. They are either on classpath or available on the http for fetch. <code> Registry lookupRegistry ( int port ) { ,"registry = LocateRegistry . getRegistry ( ""localhost"" , port <= 0 ? Registry . REGISTRY_PORT : port ) ; return registry ; }"
Convert a url to a file object. No checks are made to see if file exists but there are some hacks that are needed to convert uris to files across platforms. <code> File platformIndependentUriToFile ( final URI fileURI ) { ,"File file ; try { file = new File ( fileURI ) ; } catch ( IllegalArgumentException e ) { if ( fileURI . toString ( ) . startsWith ( ""file://"" ) ) { file = new File ( fileURI . toString ( ) . substring ( ""file://"" . length ( ) ) ) ; } else { throw e ; } } return file ; }"
"Will attempt to split a label into its name / value pair, or set it all as name if it is not a two-state label. <code> void setLabelText ( String labelText ) { ","if ( labelText == null ) { name = null ; value = null ; } else { String [ ] split = labelText . split ( ""-"" , 2 ) ; if ( split . length > 0 ) { name = split [ 0 ] ; if ( split . length > 1 ) { value = split [ 1 ] ; } } } }"
"Sets the type, length, and name for the given field; this automatically calculates its offset, provided that fields are set in ascending order. <code> void initField ( int fldno , int type , int length , String name ) { ",types [ fldno ] = type ; lengths [ fldno ] = length ; names [ fldno ] = name ; if ( fldno > 0 ) { offsets [ fldno ] = offsets [ fldno - 1 ] + lengths [ fldno - 1 ] ; } else { offsets [ fldno ] = 0 ; } }
"Given the absolute path of a class file, return the class name. <code> String getClassName ( String className ) { ","int classNameEnd = className . length ( ) - CLASS_EXTENSION . length ( ) ; return className . substring ( 0 , classNameEnd ) . replace ( '/' , '.' ) ; }"
"internal: execute a request and return its result The params argument is treated as: name1,value1,name2,value2,... <code> HttpResponse executeGET ( String request , String ... params ) { ","ensureOpen ( ) ; HttpGet m = new HttpGet ( queryString ( request , params ) ) ; HttpResponse response = httpc . execute ( m ) ; verifyStatus ( response ) ; return response ; }"
Formats the specified date as an ISO 8601 string. <code> String formatISO8601Date ( Date date ) { ,try { return iso8601DateFormat . print ( date . getTime ( ) ) ; } catch ( RuntimeException ex ) { throw handleException ( ex ) ; } }
Register the start of tab switch latency timing. Called when setIndex() indicates a tab switch event. <code> void startTabSwitchLatencyTiming ( final TabSelectionType type ) { ,sTabSwitchStartTime = SystemClock . uptimeMillis ( ) ; sTabSelectionType = type ; sTabSwitchLatencyMetricRequired = false ; sPerceivedTabSwitchLatencyMetricLogged = false ; }
"Sends a command as a string on the command socket passed <code> void sendCommandOPEN ( final Socket sk , final String command ) { ",if ( command != null ) { PrintWriter output = new PrintWriter ( sk . getOutputStream ( ) ) ; output . write ( command ) ; output . flush ( ) ; } }
Creates a brand new group <code> Group makeNewRandomGroup ( Client client ) { ,Group group = new Group ( ) ; group . setName ( RandomStringUtils . randomAlphabetic ( 10 ) ) ; group . setClient ( client != null ? client : makeNewRandomClient ( ) ) ; return groupPersistence . save ( group ) ; }
Skips the whitespaces in the current reader. <code> void skipSpaces ( ) { ,for ( ; ; ) { switch ( current ) { default : return ; case 0x20 : case 0x09 : case 0x0D : case 0x0A : } current = ( currentPos < length ) ? s . charAt ( currentPos ++ ) : - 1 ; } }
The list of attributes returned by the operation. <code> java . util . List < Attribute > getAttributes ( ) { ,if ( attributes == null ) { attributes = new java . util . ArrayList < Attribute > ( ) ; } return attributes ; }
"Create a new standard label. <code> Label createLabel ( Composite comp , String text ) { ","Label label = new Label ( comp , SWT . NONE ) ; label . setText ( text ) ; label . setLayoutData ( new GridData ( GridData . HORIZONTAL_ALIGN_BEGINNING | GridData . VERTICAL_ALIGN_BEGINNING ) ) ; return label ; }"
Tests a greater than one damping ratio value. <code> void setGreaterThan1DampingRatio ( ) { ,"WeldJoint wj = new WeldJoint ( b1 , b2 , new Vector2 ( ) ) ; wj . setDampingRatio ( 2.0 ) ; }"
A list of tags. <code> java . util . List < TagDescription > getTags ( ) { ,if ( tags == null ) { tags = new com . amazonaws . internal . ListWithAutoConstructFlag < TagDescription > ( ) ; tags . setAutoConstruct ( true ) ; } return tags ; }
This Method takes the asset Type and Id and returns the corresponding AssetBean. <code> String getAssetNameGlobal ( String url ) { ,"String assetName = null ; assetName = url . split ( ""/"" ) [ 2 ] . split ( ""|."" ) [ 0 ] ; return WordUtils . capitalize ( assetName ) ; }"
"This method is referenced and called via reflection. When the parser processes a field like: HTTP.URI:request.firstline.uri.query. where star is an arbitrary field that the parser found this method will be invoked. <code> void setWildcard ( final String field , final Long value ) { ","if ( value != null ) { final MapWriter mapWriter = getWildcardWriter ( field ) ; LOG . trace ( ""Parsed wildcard field: {}, as long: {}"" , field , value ) ; final BigIntWriter w = mapWriter . bigInt ( cleanExtensions . get ( field ) ) ; w . writeBigInt ( value ) ; } }"
"Get the most popular tracks on Last.fm by country <code> Collection < Track > getTopTracks ( String country , String apiKey ) { ","Result result = Caller . getInstance ( ) . call ( ""geo.getTopTracks"" , apiKey , ""country"" , country ) ; return ResponseBuilder . buildCollection ( result , Track . class ) ; }"
"Creates a new accounting line, based on what the source accounting line class for the document is <code> SourceAccountingLine createNewAccountingLineForDocument ( DistributionOfIncomeAndExpenseDocument document ) { ","try { Class < ? extends SourceAccountingLine > accountingLineClass = document . getSourceAccountingLineClass ( ) ; return accountingLineClass . newInstance ( ) ; } catch ( Exception ex ) { throw new RuntimeException ( ""Unable to create source accounting line for document: "" + document , ex ) ; } }"
Example of creating a topic. <code> Topic createTopic ( String topicId ) { ,"try ( TopicAdminClient topicAdminClient = TopicAdminClient . create ( ) ) { TopicName topicName = TopicName . create ( projectId , topicId ) ; Topic topic = topicAdminClient . createTopic ( topicName ) ; return topic ; } }"
Need to keep consistent with JdbcColumn.columnScale() <code> int getScaleForType ( PrimitiveTypeInfo typeInfo ) { ,switch ( typeInfo . getPrimitiveCategory ( ) ) { case DECIMAL : return ( ( DecimalTypeInfo ) typeInfo ) . scale ( ) ; case FLOAT : return 7 ; case DOUBLE : return 15 ; case BYTE : case SHORT : case INT : case LONG : case VOID : return 0 ; default : return HiveDecimal . MAX_SCALE ; } }
"Initializes the Crosswalk environment asynchronously This method must be invoked on the UI thread. <code> boolean initAsync ( XWalkInitListener listener , Context context ) { ","if ( sInstance != null ) return false ; new XWalkInitializer ( listener , context ) . start ( ) ; return true ; }"
Transforms the category series to an XY series. <code> XYSeries toXYSeries ( ) { ,"XYSeries xySeries = new XYSeries ( mTitle ) ; int k = 0 ; for ( Number value : mValues ) { xySeries . add ( ++ k , value ) ; } return xySeries ; }"
"Test of findall method, of class DriverOperations. <code> void testFindall ( ) { ","Log . level4Debug ( ""Testing DriverOperations.findall()"" ) ; DriverOperations instance = new DriverOperations ( ) ; assert ( instance . findall ( ""=USB*"" ) . contains ( """" ) ) ; }"
Test add brand = new Brand() <code> void testAddNewBrand ( ) { ,Brand brand = new Brand ( ) ; brandDao . addBrand ( brand ) ; EasyMock . expectLastCall ( ) . times ( 1 ) ; replay ( brandDao ) ; brandServiceImpl . addBrand ( brand ) ; verify ( brandDao ) ; }
"Adds a commit to the activity object as long as the commit is not a duplicate. <code> RepositoryCommit addCommit ( String repository , String branch , RevCommit commit ) { ","RepositoryCommit commitModel = new RepositoryCommit ( repository , branch , commit ) ; return addCommit ( commitModel ) ; }"
Is this surface a line? <code> boolean isLine ( ) { ,if ( type != POLYGON ) { return true ; } else { return false ; } }
"Write one attribute to our Writer <code> void writeOneAttribute ( String name , Object value ) { ","String cw = name ; if ( value instanceof Integer ) { cw += value ; } else if ( value instanceof String ) { cw += value ; } else if ( value instanceof RtfAttributes ) { writeControlWord ( cw ) ; writeAttributes ( ( RtfAttributes ) value , null ) ; return ; } writeControlWord ( cw ) ; }"
Returns the shared instance. <code> Implementors getInstance ( ) { ,if ( SINGLETON == null ) { SINGLETON = new Implementors ( ) ; } return SINGLETON ; }
"Fire a selection event. <code> void fireSelectedEndEvent ( int sourceNode , ElemTemplateElement styleNode , String attributeName , XPath xpath , XObject selection ) { ","if ( hasTraceListeners ( ) ) { Node source = getDOMNodeFromDTM ( sourceNode ) ; fireSelectedEndEvent ( new EndSelectionEvent ( m_transformer , source , styleNode , attributeName , xpath , selection ) ) ; } }"
Only reads the first line <code> String readSingle ( ) { ,String s ; try { setup ( ) ; s = reader . readLine ( ) ; lastConnectionHeaders = connection . getHeaderFields ( ) . entrySet ( ) ; } catch ( Exception e ) { cleanup ( ) ; throw e ; } finally { cleanup ( ) ; } return s ; }
Enables the zoom UI with zoom in/zoom out buttons. <code> void showZoomUI ( float maxZoom ) { ,mMaxZoom = maxZoom ; mZoomPlusButton . setVisibility ( View . VISIBLE ) ; mZoomMinusButton . setVisibility ( View . VISIBLE ) ; mZoomMinusButton . setEnabled ( false ) ; }
Returns true if the AMP support is enabled for the given connection. <code> boolean isServiceEnabled ( XMPPConnection connection ) { ,connection . getXMPPServiceDomain ( ) ; return ServiceDiscoveryManager . getInstanceFor ( connection ) . includesFeature ( AMPExtension . NAMESPACE ) ; }
"Presents datum as a double <code> double toDouble ( Datum datum , final double defaultValue ) { ",if ( datum == null ) return defaultValue ; return ( ( NUMBER ) datum ) . doubleValue ( ) ; }
Go to next page. <code> void nextPage ( ) { ,"if ( currentPage == pageCount ) { throw new PageSwitchException ( currentPage , ""Currently in last page"" ) ; } currentPage ++ ; gotoPage ( currentPage ) ; }"
"Decrements the retain count of a local id on disk. If the retain count hits zero, the id is forgotten forever. <code> void releaseLocalIdOnDisk ( String localId ) { ","MapEntry entry = getMapEntry ( localId ) ; entry . retainCount -- ; if ( entry . retainCount > 0 ) { putMapEntry ( localId , entry ) ; } else { removeMapEntry ( localId ) ; } }"
"Is this interval a single real-valued point (min==max, up to a small tolerance). <code> boolean isPoint ( ) { ",boolean rv = false ; double TOL = 0.0000000001 ; if ( ! Double . isInfinite ( max ) && ! Double . isNaN ( max ) && ( max == min || ( max >= min && max - min < TOL ) ) ) rv = true ; return rv ; }
"Gets the named property as a boolean value. <code> boolean getBooleanProperty ( final String name , final boolean defaultValue ) { ","final String prop = getStringProperty ( name ) ; return ( prop == null ) ? defaultValue : ""true"" . equalsIgnoreCase ( prop ) ; }"
This method detects duplicates in the vector <code> boolean hasDuplicates ( ) { ,if ( _vector . size ( ) <= 1 ) { return false ; } Set < T > set = new HashSet < T > ( _vector ) ; return set . size ( ) < _vector . size ( ) ; }
"Return true if it has a next element. Automatically close the wrapped Iterable if there are no more elements, and it is CloseableIterable. <code> boolean hasNext ( ) { ",if ( ! open ) return false ; lastHasNext = iterator . hasNext ( ) ; if ( ! lastHasNext ) { if ( iterable instanceof CloseableIterable < ? > ) { ( ( CloseableIterable < ? > ) iterable ) . close ( ) ; open = false ; } } return lastHasNext ; }
"set vector v to (x,y,z) <code> void setVector ( Coords v ) { ",x = v . getX ( ) ; y = v . getY ( ) ; z = v . getZ ( ) ; }
Test across several different matrix sizes and upper/lower decompositions using the definition of cholesky. <code> void checkWithDefinition ( ) { ,"for ( int i = 0 ; i < 2 ; i ++ ) { boolean lower = i == 0 ; if ( lower && ! canL ) continue ; if ( ! lower && ! canR ) continue ; for ( int size = 1 ; size < 10 ; size ++ ) { checkWithDefinition ( lower , size ) ; } checkWithDefinition ( lower , 5 ) ; } }"
"Returns the byte length of a null terminated UTF string, not including the terminator. <code> int getZeroTerminatedByteLength ( byte [ ] bytes , int offset ) { ",int len = 0 ; while ( bytes [ offset ++ ] != 0 ) { len ++ ; } return len ; }
Is this player holding a goddamn wrench? <code> boolean isPlayerHoldingWrench ( EntityPlayer player ) { ,if ( player . inventory . getCurrentItem ( ) == null ) { return false ; } Item currentItem = Item . itemsList [ player . inventory . getCurrentItem ( ) . itemID ] ; return currentItem instanceof IToolWrench ; }
"Calculates the basis functions and its derivatives up to the given grade. <code> float [ ] [ ] derivBasisFunctions ( float u , int grade ) { ","int span = findSpan ( u ) ; return derivBasisFunctions ( span , u , grade ) ; }"
"This method return all images, belongs to user <code> List < Image > getSharedImages ( ) { ",final List < Image > images = new ArrayList < Image > ( ) ; for ( Shelf s : getShelves ( ) ) { if ( ! s . isShared ( ) ) { continue ; } for ( Album a : s . getAlbums ( ) ) { images . addAll ( a . getImages ( ) ) ; } } return images ; }
Retrieves a Map of protein id to List for use in post processing. <code> SeedAlignmentData retrieveSeedAlignmentData ( Set < String > proteinIds ) { ,SeedAlignmentData seedAlignmentData = null ; return seedAlignmentData ; }
"This method is called in the constructor of LabelledParameterized. Since getTestFiles (and thus calculateTestFiles()) should have already been called by the Parameterized constructor, the test script names should already have been computed. <code> List < String > getTestLabels ( ) { ","if ( ScriptFileTests . testScriptNames == null ) throw new IllegalStateException ( ""Must initialize list of test names before creating tests."" ) ; return ScriptFileTests . testScriptNames ; }"
Obtiene la informacion de las unidades de medida de la bd y la devuelve en un ResultSet <code> ResultSet getTiemposBackup ( ) { ,"String query = ""SELECT *FROM TB_PARAMETROS"" ; ResultSet rset = db . ejecutar ( conn , query ) ; return rset ; }"
Multiplies this polynomial by 2 and applies an AND mask to the upper and lower halves of each coefficients. <code> void mult2And ( int mask ) { ,long longMask = ( ( ( long ) mask ) << 24 ) + mask ; for ( int i = 0 ; i < coeffs . length ; i ++ ) { coeffs [ i ] = ( coeffs [ i ] << 1 ) & longMask ; } }
Evaluates an enablement expression. <code> boolean evaluateEnablement ( Expression expression ) { ,if ( expression == null ) { return true ; } SafeEvaluator evaluator = new SafeEvaluator ( expression ) ; SafeRunner . run ( evaluator ) ; return evaluator . getResult ( ) ; }
Approach to navigation that will try to grab f:attributes that were specified on a command component This is meant to be used with a commandLink <code> void navigateActionListener ( ActionEvent event ) { ,"Object newGroup = FacesUtils . getFAttribute ( event , NavigationModel . GROUP_PARAM ) ; Object newExample = FacesUtils . getFAttribute ( event , NavigationModel . EXAMPLE_PARAM ) ; navigate ( newGroup == null ? null : newGroup . toString ( ) , newExample == null ? null : newExample . toString ( ) ) ; }"
Dispose all of the cached fonts <code> void disposeFonts ( ) { ,for ( Iterator < Font > iter = m_FontMap . values ( ) . iterator ( ) ; iter . hasNext ( ) ; ) { iter . next ( ) . dispose ( ) ; } m_FontMap . clear ( ) ; }
Parse stop info from line in GTFS file. <code> GTFSStop fromGTFS ( String line ) { ,"String tokens [ ] = line . split ( "","" ) ; return new GTFSStop ( tokens [ STOP_ID ] , tokens [ STOP_NAME ] , Double . parseDouble ( tokens [ STOP_LAT ] ) , Double . parseDouble ( tokens [ STOP_LON ] ) ) ; }"
"Return a new Set of all items in both set1 and set2. <code> Set < T > intersectSets ( final Set < T > set1 , final Set < T > set2 ) { ",final Set < T > result = newSet ( set1 ) ; result . retainAll ( set2 ) ; return ( result ) ; }
Returns a string representation of this object; useful for testing and debugging. <code> String toString ( ) { ,"StringBuilder sb = new StringBuilder ( ) ; sb . append ( ""{"" ) ; if ( getFamilies ( ) != null ) sb . append ( ""Families: "" + getFamilies ( ) + "","" ) ; if ( getNextToken ( ) != null ) sb . append ( ""NextToken: "" + getNextToken ( ) ) ; sb . append ( ""}"" ) ; return sb . toString ( ) ; }"
Checks whether the driver child process is currently running. <code> boolean isRunning ( ) { ,lock . lock ( ) ; try { if ( process == null ) { return false ; } return process . isRunning ( ) ; } catch ( IllegalThreadStateException e ) { return true ; } finally { lock . unlock ( ) ; } }
On move base center. For better base planing and cashe update. <code> void onBaseMoving ( ) { ,cashe_LastCanBuildPoint = null ; cashe_GeoPoints = null ; cashe_MetalPoints = null ; }
"Creates a single element lying within a certain default namespace. <code> XMLElement createXMLElement ( String elementName , String namespace ) { ","XMLElement element = new XMLElement ( namespace , elementName , null , null , ( XMLFragment [ ] ) null ) ; return element ; }"
Looks for a project whose directory contains the given file <code> GramlabProject getProject ( File f ) { ,"for ( GramlabProject p : projects ) { if ( null != FileUtil . isAncestor ( p . getProjectDirectory ( ) , f ) ) { return p ; } } return null ; }"
"Returns the value for a given row and column <code> Number getValue ( final int a_row , final int a_column ) { ",Number result = null ; final KeyedValues rowData = ( KeyedValues ) m_rows . get ( a_row ) ; final Comparable columnKey = ( Comparable ) m_columnKeys . get ( a_column ) ; if ( columnKey != null ) { result = rowData . getValue ( columnKey ) ; } return result ; }
Get the NAME_PROJECTION for PhoneNumberPicker. <code> String [ ] getNameProjection ( ) { ,"String [ ] nameProjection = { Data . CONTACT_ID , ContactsContract . Contacts . DISPLAY_NAME , ContactsContract . Contacts . PHOTO_THUMBNAIL_URI , Phone . NUMBER } ; return nameProjection ; }"
Generates a secure state token <code> void generateStateToken ( ) { ,"SecureRandom sr1 = new SecureRandom ( ) ; stateToken = ""google;"" + sr1 . nextInt ( ) ; }"
"Get the adjusted property. Apply the provided property, to the property already stored in the request object. <code> String getAdjustedProperty ( HttpServletRequest request , String property ) { ","String parent = getCurrentProperty ( request ) ; return calculateRelativeProperty ( property , parent ) ; }"
Some properties need a translation from the property name in openHAB to the actual command we need to send to the receiver. <code> String getActualProperty ( ) { ,if ( isZoneCommand ( ) ) { if ( getZoneCommand ( ) . equals ( DenonProperty . ZONE_VOLUME . getCode ( ) ) ) { return getZone ( ) ; } } return getProperty ( ) ; }
Convert a long into a byte array. <code> byte [ ] convertToByteArray ( long n ) { ,"n = ( n ^ 0x8000000000000000L ) ; byte [ ] key = new byte [ 8 ] ; pack8 ( key , 0 , n ) ; return key ; }"
"Calculates linear value of byte in the scale <code> float calculateValue ( byte source , float scaleMin , float scaleMax , float byteRangeMin , float byteRangeMax ) { ",int rawValue = source & 0xFF ; float multiplier = ( scaleMax - scaleMin ) / ( byteRangeMax - byteRangeMin ) ; return multiplier * ( rawValue - byteRangeMin ) + scaleMin ; }
Sets current values to be a rotation matrix of given angle <code> void loadRotate ( float rot ) { ,"float c , s ; rot *= ( float ) ( java . lang . Math . PI / 180.0f ) ; c = ( float ) java . lang . Math . cos ( rot ) ; s = ( float ) java . lang . Math . sin ( rot ) ; mMat [ 0 ] = c ; mMat [ 1 ] = - s ; mMat [ 2 ] = s ; mMat [ 3 ] = c ; }"
Parse the string as a websocket request and return the value from WebSocket-Protocol header (See RFC 6455). Return empty string if not found. <code> String getClientWebSocketProtocol ( String request ) { ,"String [ ] headers = request . split ( ""  "" ) ; String protocol = """" ; for ( int i = 0 ; i < headers . length ; i ++ ) { if ( headers [ i ] . contains ( ""WebSocket-Protocol"" ) ) { protocol = ( headers [ i ] . split ( "":"" ) [ 1 ] ) . trim ( ) ; break ; } } return protocol ; }"
Just another method to demonstrate one controller with many actions. <code> ModelAndView hiController ( ) { ,"ModelAndView modelAndView = new ModelAndView ( ""HelloPage"" ) ; modelAndView . addObject ( ""welcomeMessage"" , ""Hi, Spring MVC."" ) ; return modelAndView ; }"
Returns a string representation of this object; useful for testing and debugging. <code> String toString ( ) { ,"StringBuilder sb = new StringBuilder ( ) ; sb . append ( ""{"" ) ; if ( mD5OfMessageBody != null ) sb . append ( ""MD5OfMessageBody: "" + mD5OfMessageBody + "", "" ) ; if ( messageId != null ) sb . append ( ""MessageId: "" + messageId + "", "" ) ; sb . append ( ""}"" ) ; return sb . toString ( ) ; }"
"Adding cell to this map <code> void addCell ( int row , int col , Cell c ) { ",cell [ row ] [ col ] = c ; if ( c instanceof Start ) { start = c ; } }
"returns a treemap of dates mapped to the percent correct on that date <code> TreeMap < Date , Double > getPerformanceOverTime ( ) { ","if ( performance != null ) return performance ; performance = new TreeMap < Date , Double > ( ) ; for ( Long l : data . keySet ( ) ) { performance . put ( new Date ( l ) , getPercentOnDate ( l ) ) ; } return performance ; }"
Gets the grayscale equivalent of an ARGB int Sets alpha to 255 (fully opaque) <code> int toGreyScale ( int argb ) { ,int lum = getLuminance ( argb ) ; return ( argb & ALPHA_MASK ) | ( 0x010101 * lum ) ; }
"Called on a data node, converts this ScoreFunctionBuilder into its corresponding Lucene function object. <code> ScoreFunction toFunction ( QueryShardContext context ) { ","ScoreFunction scoreFunction = doToFunction ( context ) ; if ( weight == null ) { return scoreFunction ; } return new WeightFactorFunction ( weight , scoreFunction ) ; }"
Check if the token is a Number or Character <code> boolean isAlphaNumeric ( String token ) { ,"String pattern = ""^[|p{L}0-9]*$"" ; if ( token . matches ( pattern ) ) { return true ; } return false ; }"
Clear the complete resource bundle cache using the specified class loader! <code> void clearCache ( @ Nonnull final ClassLoader aClassLoader ) { ,"ResourceBundle . clearCache ( aClassLoader ) ; if ( s_aLogger . isDebugEnabled ( ) ) s_aLogger . debug ( ""Cache was cleared: "" + ResourceBundle . class . getName ( ) + ""; classloader="" + aClassLoader ) ; }"
"Read 8 bit data (in ISO-8859-1 codepage) into a (unicode) Java String and return. (In Excel terms, read compressed 8 bit unicode as a string) <code> String getFromCompressedUnicode ( final byte [ ] string , final int offset , final int len ) { ","try { int len_to_use = Math . min ( len , string . length - offset ) ; return new String ( string , offset , len_to_use , ENCODING_ISO_8859_1 ) ; } catch ( UnsupportedEncodingException e ) { throw new RuntimeException ( e ) ; } }"
"Serialize an instance, restore it, and check for equality. <code> void testSerialization ( ) { ","SimpleHistogramBin b1 = new SimpleHistogramBin ( 1.0 , 2.0 , false , true ) ; b1 . setItemCount ( 123 ) ; SimpleHistogramBin b2 = ( SimpleHistogramBin ) TestUtilities . serialised ( b1 ) ; assertEquals ( b1 , b2 ) ; }"
Sets the number of concurrent tests to run based on value provided. <code> void setForkJoinConcurrency ( int count ) { ,"if ( count > 0 ) { System . out . format ( ""concurrent test threads %d "" , count ) ; System . setProperty ( ""java.util.concurrent.ForkJoinPool.common.parallelism"" , Integer . toString ( count ) ) ; } else throw new IllegalStateException ( ""test thread count must be positive"" ) ; }"
Removes a request observer when you no longer wish to receive notifications about Gradle command being executed. <code> void removeRequestObserver ( RequestObserverVersion1 observer ) { ,RequestObserverWrapper wrapper = requestObserverMap . remove ( observer ) ; if ( wrapper != null ) { gradlePluginLord . removeRequestObserver ( wrapper ) ; } }
"Reads a template file and substitutes variables of the format ${FOO}. <code> String readTemplateContents ( String templateFilePath , final Map < String , String > variables ) { ","final StringBuilder sb = new StringBuilder ( ) ; readTextFile ( templateFilePath , new ReadAction ( ) { @ Override public void readLineImpl ( String line ) { sb . append ( expandVariables ( line , variables ) ) . append ( LS ) ; } } ) ; return sb . toString ( ) ; }"
Reads one 16 bit word from the input file and returns it. <code> int read16Bit ( ) { ,int result = read8Bit ( ) ; result |= ( read8Bit ( ) << 8 ) ; return result ; }
Marks all cells as editable. <code> void markAllCellsAsEditable ( ) { ,for ( int r = 0 ; r < SUDOKU_SIZE ; r ++ ) { for ( int c = 0 ; c < SUDOKU_SIZE ; c ++ ) { Cell cell = mCells [ r ] [ c ] ; cell . setEditable ( true ) ; } } }
"Adds a node to the graph <code> void addVertex ( String identifier , Component component , String ... edges ) { ","HashSet < String > set = new HashSet < String > ( ) ; if ( edges != null ) { for ( String s : edges ) { set . add ( s ) ; } } nodes . put ( identifier , new Vertex ( identifier , set , component ) ) ; }"
Tests createSprite() with an argument whose gameObjectType() method returns BOMB. <code> void testCreateSpriteBombGameObject ( ) { ,"Sprite bombSprite = factory . createSprite ( bomb ) ; assertNotNull ( bombSprite ) ; assertEquals ( bomb , bombSprite . getGameObject ( ) ) ; testImagesEqual ( bombSprite , ""resources/Bomb.png"" ) ; }"
"This method will output the package statement, followed by the opening of the class declaration <code> void createClassDeclaration ( ) { ","builder . append ( ""package "" ) . append ( PACKAGE_NAME ) . append ( "";"" ) . append ( NEWLINE ) ; builder . append ( ""public class "" ) . append ( generatedClassSimpleName ) . append ( "" extends "" ) . append ( CompiledNetwork . class . getName ( ) ) . append ( ""{ "" ) . append ( NEWLINE ) ; }"
"gets a cypher for encryption <code> Cipher getCipher ( byte [ ] key , byte [ ] iv , int mode ) { ","SecretKeySpec skey = new SecretKeySpec ( key , ""AES"" ) ; IvParameterSpec ivspec = new IvParameterSpec ( iv ) ; Cipher c = Cipher . getInstance ( ""AES/CBC/PKCS5Padding"" ) ; c . init ( mode , skey , ivspec ) ; return c ; }"
Tells if player has the book with this name or not. <code> Book findBook ( String bookName ) { ,for ( Book i : books ) { if ( i . getName ( ) . equals ( bookName ) ) { return i ; } } return null ; }
