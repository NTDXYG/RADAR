nl,func_name
"<e> NL: Check if a character is a word character . @return : True or False weither the character ' char ' is a word character , i.e. a printable non - ponctuation character . @rtype : bool name: is word char </e> see if a character is printable",is printable
"<e> NL: Given the bounds of an actor , return the point that corresponds to the n% of the bounds range : param bounds : should be a list of two floats : param n : n should be a float in range 0 , 1 name: get slice coord </e> Get the bounds of the system in global coordinates . Returns two arrays of shape ( 3 ) containing minimum and maximum bounds respectively ",get bounds
<e> NL: Extract the command name and arguments to pass to docopt  name: get command and argv </e> Extract the command name and arguments to pass to docopt . Args : argv : The argument list being used to run the command . Returns : A tuple containing the name of the command and the arguments to pass to docopt ,get command and argv
<e> NL: Initialize a new packet from the raw bytes name: from raw </e> Get the next slip packet from raw data ,get next slip
<e> NL: Encode a string type  name: encode string </e> Encode ReplayGain gain / peak values as a Sound Check string ,sc encode
<e> NL: Determine if an error encountered during an HTTP download is likely to go away if we try again  name: retryable http error </e> Determine if an error encountered during an HTTP download is likely to go away if we try again ,retryable http error
<e> NL: headers : header | headers header name: p headers </e> Extracts the Content - Type header from the headers returned by page ,get mime type
"<e> NL: Given a float string , returns the float value . On value error returns the original string  name: float if float </e> Returns back a float from the given value",floating number
"<e> NL: Suggests a package name , given a package name  name: suggest package </e> Yield dependant user packages for a given package name ",get dependants
<e> NL: Find the max and mins of a signal s name: find extrema </e> Estimate the center and full - width half max of a signal using moments,center fwhm bymoments
"<e> NL: Get the context ( if passed , just return ) context -- the context ID , if None , the current context name: get context </e> Returns out object from context : param om : out_message : return : out_object",get out object
<e> NL: Get credential value from provided file name: value from file </e> Get project keystone client using admin credential ,get trust client
<e> NL: Split the string * value * using unescaped * characters * as delimiters  name: split unescaped characters </e> split by multiple delimiters,multi split
<e> NL: Prompt a user for a boolean expression and repeat until a valid boolean has been entered . Parameters ---------- prompt : str The text to prompt the user with  name: get bool </e> Prompt a user for a boolean expression and repeat until a valid boolean has been entered . ` ` prompt ` ` is the text to prompt the user with ,get bool
<e> NL: Extract a LZH archive  name: extract lzh </e> Extract a LZH archive ,extract lzh
<e> NL: Requests user 's information by i d name: user info by id </e> Returns the user s information,get user information
<e> NL: Calculates the minimum spanning forest and returns a list of trees as subgraphs  name: find minimum spanning forest as subgraphs </e> Calculates the minimum spanning forest and returns a list of trees as subgraphs ,find minimum spanning forest as subgraphs
<e> NL: Get list of networks in current project name: list networks </e> Get list of instances in current project,list instances
<e> NL: Returns a string that is the argument decoded . May raise a TypeError  name: decode string </e> Verify that objects in list are of the allowed type or raise TypeError ,check list type
<e> NL: Check is user in foundation group or not  name: check user is foundation admin </e> Converts a foundation stress to an equivalent mass ,convert stress to mass
<e> NL: Get list of apps  name: get apps </e> parse dever_config.py and return list of apps,parse py config
<e> NL: Reads a file and returns the content as a string . : param str file_path : The path to the file to read . : return str : Content of the file  name: read file </e> Load json file content Parameters ---------- file_path : path to the file Raises ------ TypeError Error with the file path,get json content
<e> NL: Returns True if ' distinct ( ) ' should be used to query the given lookup path  name: lookup needs distinct </e> Returns True if ' distinct ( ) ' should be used to query the given lookup path ,lookup needs distinct
<e> NL: unpatch_task will remove tracing from a celery task name: unpatch task </e> unpatch_app will remove tracing from a celery app,unpatch app
"<e> NL: Returns the number of days passed since the start of the year  name: georgian day </e> For each country , get the days of the spread since 500 cases",get day counts
<e> NL: Clean lookup fields and check for errors  name: clean fields </e> Clean lookup fields and check for errors ,clean fields
"<e> NL: Return True if the match is valid , False otherwise name: test match </e> True if the version is specified and is n't exact False otherwise",should update package
<e> NL: Loads NEM mosaics from ` nem / nem_mosaics.json ` name: load nem mosaics </e> Parse first row of NEM file,parse header row
<e> NL: Get all instances matching a tag  name: aws get instance by tag </e> Parses row and gets columns matching tag,. get row tag
<e> NL: Load and return the given table name: load table </e> Lazily load the McQuillan rotation periods table,get rotationtable
<e> NL: Create a set of sequences with given lag and dimension name: util pattern space </e> r Create new trajectories that are subsampled at lag but shifted,lag observations
<e> NL: get the information for a VM  name: get vm info </e> Get PV arguments for a VM,get pv args
"<e> NL: Check username and password against our database . : param username : http basic auth username ( = = fqdn ) : param password : update password : return : host object if authenticated , None otherwise  name: check api auth </e> Authenticate a username and password against our database : param username : : param password : : return : authenticated username",get api key
<e> NL: Return signal from object and signal name  name: get signal </e> r Check time and signal parameters ,check time only
"<e> NL: | Is leaf - node or not(have children ) : param lxml.etree._Element node : lxml - etree - element : return bool : if leaf , return True name: is leaf </e> Returns an instance of lxml . etree . _Element for the given doc input ",get etree root
<e> NL: Return rolling maximum of signal y along time x name: get envelope </e> Rolling sum of data ,window sum
<e> NL: @return : If the two coordinate ranges overlap on the same strand returns the overlap range . If no overlap it returns None  name: get positive coordinate range overlap </e> Calculate the overlap of two lines in average percent overlap ,calculate overlap
<e> NL: Returns True if cache is a readable cache file or object name: is cache </e> Check if cache is invalig and regeneration required,need regeneration
<e> NL: Return operator class instance by name . Parameters ---------- opname : str Name of the sklearn class that belongs to a TPOT operator operators : list List of operator classes from operator library Returns ------- ret_op_class : class An operator class name: get by name </e> Get the available operator name . Parameters ---------- name : str The optional name to use . Returns ------- str The operator name ,get operator name
<e> NL: Partition an integer . n ( int ) : the integer to partition k ( int ) : the number of elements in a partition min_size ( int ) : the minimum size of an element in the partition return : a generator of partitions as tuples name: integer partition </e> Use the name field in the configuration or p + count : param partition_dicts : : return : list of Partition objects,generate gpt partitions
<e> NL: Check if a value is nan : param value : : return : name: is nan </e> Get first no NaN value in column : param array : : param idx_col : : return :,get no nan
"<e> NL: Checks if directory exists . If not , makes new folder . : param folder : directory to check and make . : return : None name: check if and makedir </e> Checks necessity of clearing the folder . : param paths : list of directories : return : True if at least one directory exists , False otherwise",check existance
<e> NL: Filter process by process name  name: filter process by name </e> Restart the traffic_manager process and the traffic_server process on all the nodes in a cluster ,restart cluster
<e> NL: Imports the specified module dynamically Args : module_path ( str ) : The module path Returns : module : The module that was imported name: import module </e> Imports the module for a DOAC handler based on the string representation of the module path that is provided ,get handler
<e> NL: Retrieves the native tool 's module from the discovered list . Args : tool ( str ) : The native tool Return : ( module ) : Module associated with the tool specified name: get native tool </e> Retrieves the TidyPy tools that are available in the current Python environment . The returned dictionary has keys that are the tool names and values are the tool classes . : rtype : dict,get tools
<e> NL: Returns the path of the current editor  name: get current path </e> Returns the store being used on the editor * field * is attached,get store for field
<e> NL: Get the current set of waypoints active from boatd  name: get current waypoints </e> Get the current set of waypoints active from boatd . : returns : The current waypoints : rtype : List of Points,get current waypoints
"<e> NL: if the path of the folder does n't exist , it will create the folder . the function will return the path name: put folder </e> Function to construct default path to OutputData folder This function constructs the default path to the OutputData folder",get default path
<e> NL: Returns dictionary of sequence fragment lengths keyed by query name  name: get fraglength dict </e> Returns dictionary of sequence fragment lengths keyed by fragment ID ,get fragment lengths
<e> NL: Extract devices from arguments . : param devices : devices to use passed as one string argument . : return : split devices  name: prepare devices </e> Gets the devices count . : return : The devices count ,get device count
<e> NL: c - a - a ' : magnesium hydroxide sulfate [ HMW84 ]  name: psi Mg OH SO4 HMW84 </e> c - a - a ' : magnesium - hydroxide hydroxide sulfate [ HMW84 ] ,psi MgOH OH SO4 HMW84
<e> NL: Convert a dictionary into a CORBA namevalue list  name: dict to nvlist </e> Convert a dictionary into a CORBA namevalue list ,dict to nvlist
<e> NL: Determine whether a file is a Python source file by its extension . Args : filename ( str ) : the name of the file Returns : bool : whether the file is a Python source file name: is python filename </e> Check if a file is a Python source file ,is python file
<e> NL: Non - byline authors for group author members name: authors non byline </e> Non - byline authors for group author members,authors non byline
<e> NL: Browserify a list of libraries from node_modules into a single javascript file . Generates source maps in debug mode . Minifies the output in release mode  name: browserify node modules </e> Browserify a single javascript entry point plus non - external dependencies into a single javascript file . Generates source maps in debug mode . Minifies the output in release mode ,browserify file
<e> NL: Return array of all possible combinations of n elements in triplets  name: get triplet combinations </e> returns a list of all possible combinations of a barcode with one mismatch,all possible combinations
<e> NL: Construct a template read for ID read simulation with a given allele . This is used to construct ID reads even when no coverage was assigned  name: get id template </e> read flowMatrix and construct MarkovMatrix,get markov matrix
<e> NL: sql - code to search in number name: search ml number </e> sql - code to search in party,search sa partyname
<e> NL: Returns the filename of the file to read name: get file </e> Runs mafft on the given fasta format file . Returns the filename produced . : param clustered_fn : file to align . : return : filename of aligned file - if its created . None if something fails ,align with mafft
<e> NL: This is a separate function so that it can be more easily tested name: . generate output dir </e> Encode all ' : ' substrings in a string ( also encodes ' $ ' so that it can be used to mark encoded characters ) . This way we can use : : to separate the two halves of an aside key ,encode v2
<e> NL: Get total users register and moderators . Args : forum ( object ) : Forum object . Returns : int : Total users the belong to forum  name: get tot users forum </e> This filter return info about few topics missing for moderate . Args : forum ( object ) : Forum object . Returns : int : If it is 0 there are no topics to moderate ,get tot topics moderate
<e> NL: Test if an array is a square matrix  name: is square matrix </e> Returns if array is a square matrix,is square matrix
<e> NL: Specializes : func:`encode ` for invocations where ` ` v ` ` is an instance of the : class:`~PurePath ` class  name: encode path </e> Specializes : func:`encode ` for invocations where ` ` v ` ` is an instance of the : class:`~BaseModel ` class ,encode pydantic model
"<e> NL: : type parameters : str converts a JSON document into a URL parameter string Parameters ---------- parameters : JSON document ( str ) JSON document containing the list of parameters to add to the API call Returns ------- parms a string which can be appended to the URL name: json parameters </e> A skeleton JSON API document , containing the basic elements but no data ",json api document
<e> NL: Gets hashes for currently checked out version  name: hashes get </e> Get the currently checked - out branch,get current branch
<e> NL: Returns the non - existent edges in the graph . Parameters ---------- graph : NetworkX graph . Graph to find non - existent edges . Returns ------- non_edges : iterator Iterator of edges that are not in the graph  name: non edges </e> Creates a dictionary representing the edges in the graph and formats it in such a way that it can be encoded into JSON for comparing the graph objects between versions of GOcats ,json format graph
"<e> NL: Attempts to connect to the address , returns the descriptor if it succeeds , returns None if it needs to trampoline , and raises any exceptions  name: socket connect </e> Attempts to accept ( ) on the descriptor , returns a client , address tuple if it succeeds ; returns None if it needs to trampoline , and raises any exceptions ",socket accept
<e> NL: Convert Coordinates to geometry_msgs.msg . Pose name: coords to geometry pose </e> ROS geometry_msgs.msg . Transform instance,ros transform
"<e> NL: Computes the degree matrix of the given adjacency matrix . : param A : rank 2 array or sparse matrix . : return : if A is a dense array , a dense array ; if A is sparse , a sparse matrix in DIA format  name: degree matrix </e> Helper function that merges the _ blocks attribute of a ds - array into a single ndarray / sparse matrix ",merge blocks
<e> NL: Non recursive algorithm Based on append / extend elements to new list name: tishka flatten </e> Non recursive algorithm Based on pop from old and append elements to new list,zart flatten
<e> NL: Attributes for resource creation  name: create attributes </e> Attributes for resource creation ,create attributes
<e> NL: Makes a Flask response with a JSON encoded body name: output json </e> Makes a Flask response with a JSON encoded body,output json pretty
<e> NL: Reindex a key map name: reindex by keymap </e> Reindex subdomain dataframe and starts at indice 1 ,reindex df
"<e> NL: Get the auth object by access key and secret key  name: get auth </e> Web sites often gives the secret with spaces between 4-char words . This method normalizes the received key into one parseable by base64 , and handles padding . : param key : the original key . : return : a normalized b32 string ",b32 normalize
<e> NL: c - a - a ' : sodium bicarbonate sulfate [ HMW84 ]  name: psi Na HCO3 SO4 HMW84 </e> c - a - a ' : potassium bicarbonate sulfate [ HMW84 ] ,psi K HCO3 SO4 HMW84
<e> NL: Scan the query data for the named VM name: find vm </e> Return a libcloud node for the named VM,get node
<e> NL: Read an image from a file  name: read image </e> Prepare an image for and ` ` date ` ` from an ImageCollection,prep collection image
<e> NL: if we have a valid ' return < object > ' statement PS not checking if object is semantically valid name: line return subject is valid </e> if we have a valid ' search < source > ' statement,line search subject is valid
<e> NL: Remove a single instance of new line at the end of l if it exists  name: remove trailing new line </e> Given a sequence of lines for each line that contains a ANSI color escape sequence without a reset add a reset to the end of that line and copy all colors in effect at the end of it to the beginning of the next line ,carry over color
"<e> NL: Converts a datetime object from the specified timezone to a UTC datetime  name: tz to utc </e> Takes a relative plain - text day and time zone , returns a datetime object corresponding to the colloquial date in the specified timezone",relative datetime
<e> NL: Load an existing IntentEntity model ( with weights ) from HDF5 file . : param path : String . The path to the pre - defined model . : return : IntentEntity  name: load model </e> Load an existing NER model ( with weights ) from HDF5 file . : param path : String . The path to the pre - defined model . : return : NER ,load model
<e> NL: Return palette - colored image  name: apply colormap </e> Return ` ` True ` ` if colored output is possible / requested and not running in GUI . Colored output can be explicitly requested by setting : envvar:`COCOTB_ANSI_OUTPUT ` to ` ` 1 ` ` ,want color output
<e> NL: Check if a string represents a None value  name: is none string </e> Test if a string represents a float ,is float
"<e> NL: Converts a color name to an RGB tuple , if possible  name: check color </e> Convert a color to an RGB tuple . This accepts the same input formats as convert_color , but raises an exception if the alpha value is not 1 ",convert color rgb
"<e> NL: Convert all quantities found in text to engineering format . It is assumed that any units are assumed to be simple , meaning that they contain only alphabetic characters ( no numbers or symbols )  name: all to eng fmt </e> Class numbers are assumed to be between 0 and k-1",threshold predict
<e> NL: Prompts the user to select an addition method to add tags . : return : str ( the selected addition method ) name: ask for tag addition method </e> Supply references to initial variantcalls if run in addition to batching ,fix orig vcf refs
<e> NL: Validate the balance : param int balance : Balance : raises InvalidBalance : If the balance is less than 0 or higher than the maximum possible balance ( 2 ^ 128 - 1 ) : return : Balance : rtype : int name: validate balance </e> draws building heat balance graph : param analysis_fields : : param data_frame : : return :,calc graph
<e> NL: Handler function for coordinates name: handle coordinates </e> Handler function for radius keyword with smart conversion to a degrees value,handle radius
<e> NL: Random page generator . @param total : Maximum number of pages to retrieve in total @type total : int @param site : Site for generator results . @type site : L{pywikibot.site . BaseSite } name: random page generator </e> Page lacking interwikis generator . @param total : Maximum number of pages to retrieve in total @param site : Site for generator results . @type site : L{pywikibot.site . BaseSite },without interwiki page generator
"<e> NL: Deletes the values for SID and PIN from the computer you are on , and returns boolean value , whether deletion was successful or not . Good for command line tools name: localsys logout </e> Retrieves the login credentials from the computer you are on . Good for command line tools",localsys get login
<e> NL: Load a raw image file . Parameters ---------- path : str Path to the image file . Returns ------- image : ndarray Loaded image data in linear color space  name: load image </e> Create a tissue target space from a given image . The image is assumed to contain a black - colored tissue space in white background . image -- the location of the image on the disk ,create target space from image
"<e> NL: Rewrite the graph such that there are reversed edges for every forward edge . If an edge goes into a data , it should not be reversed  name: to bidirected graph </e> Choose a node of the ` Expression ` such that no property leading to a data has to be reversed ( with ! ) ",choose start node
"<e> NL: Set valid properties for the artist , dropping the others  name: set valid props </e> Set valid properties for the artist dropping the others ",set valid props
<e> NL: returns unique elements from a list preserving the original order name: unique element </e> Unique elements preserving order ,unique everseen
<e> NL: Get any environment variables name: get env </e> Substitute environment variables and split into list ,subst libs
<e> NL: Attempts to convert a text value to a boolean . Returns None otherwise  name: str to bool </e> convert a boolean value to text,ods bool value
<e> NL: Determine Authserv_Id if needed name: make authserv id </e> Determine AuthservID if needed,make authserv id
"<e> NL: Recursive method to find a Repeat expansion that is an ancestor of all leaves in an expansion tree . If there is n't one , return None . : param e : Expansion : returns : Repeat | None name: find root repeat </e> Applies all expansion mechanisms to the given path ",expand path
<e> NL: Set the number of pending measurements that trigger the writing of data to InfluxDB : param int limit : The minimum number of measurements to trigger a batch name: set trigger size </e> Set the maximum number of pending measurements allowed in the buffer before new measurements are discarded . : param int limit : The maximum number of measurements per batch,set max buffer size
<e> NL: Use the API to check for an existing fork name: check forked direct </e> Use the API to check for an existing fork,check forked
<e> NL: Returns an * RGB * tuple of three ints from 0 - 255 name: to rgb 255 </e> Returns an * RGBA * tuple of 4 ints from 0 - 255,to rgba 255
"<e> NL: Parses host entries of the form "" [ user@]host[:port ] "" . Returns a ( host , port , user ) triple  name: parse host </e> Parses a whitespace - delimited string of "" [ user@]host[:port ] "" entries . Returns a list of ( host , port , user ) triples ",parse host string
<e> NL: Read in a csv file and return lines a list  name: file 2list </e> return JUST the comment lines from a csv file,get comments
"<e> NL: Converts an argument into a float  name: convert float </e> Converts a float X.Y into ( X , Y ) ",float version
<e> NL: Check if a filename is valid  name: is valid filename </e> Check this is a valid 2D pixel list,pixel 2d check
"<e> NL: Given a date in YYYY - MM - DD returns a Python date object . Throws a ValueError if the date is invalid  name: date string to date </e> Given a date in YYYY - MM - DD , returns a Python date object . Throws a ValueError if the date is invalid ",date string to date
"<e> NL: filePropertiesDictionary(sql_row_list ) transforms a row gotten via SQL request ( list ) , to a dictionary name: file properties dictionary </e> filePropertiesDictionary(sql_raw_list ) transforms a row gotten via SQL request ( list ) , to a dictionary",file properties dictionary
"<e> NL: Return the dimension of rectangle ( width , height )  name: rectangle size </e> Finds the area under a polynomial between the specified bounds using a rectangle - sum ( of width 1 ) approximation ",area under curve
"<e> NL: Helper function to check if the given path should be ignored or not  name: is ignored </e> This function contains the logic used to check if the thread should be restarted . Beware , this function * must not * call any hooks ",should start runner thread
<e> NL: Read expressions from files  name: load expressions </e> Yield valid expressions from text ,get expressions
<e> NL: Metadata for notebook bundlerextension name: jupyter bundlerextension paths </e> Metadata for notebook bundlerextension,jupyter bundlerextension paths
<e> NL: projection onto the compliment of the rowspace of B name: project compliment </e> Projects along rowspace of B onto rowspace of C,project oblique
<e> NL: Get the set of degrees used in our basis functions  name: get degrees orders </e> Number of basis functions in the basis set . Returns ------- int The number of basis functions ,calculate nbf
<e> NL: Flatten the tree into a list of properties adding parents as prefixes  name: flat model </e> Flatten the tree into a list of properties adding parents as prefixes ,flat model
"<e> NL: Parse the header and return a header object name: get header </e> Parse a tsv header : param line : the header text : return : ( column_names list , column_indices dict )",header from line
"<e> NL: Updates a comment for the specified comment instance . : param comment : Class instance of Comment ( ) : return : Boolean indicating success of database action  name: update comment </e> Comments must be converted to < xsl : comment > to be output , doing it early allows them to get an xml : id so they can be matched in the theme . The theme selector needs rewriting to replace comment ( ) with xsl : comment",fixup theme comment selectors
<e> NL: Find urls in text  name: get url annotations </e> Find files corresponding to urls ,find files
<e> NL: Remove rows from input DataFrame . Parameters ---------- data : pd . DataFrame Input dataframe columns : List[str ] Column list to filter Returns ------- pd . DataFrame Filtered DataFrame name: remove common items </e> Read dataset from single sheet as dataframe ( or list of dataframe ),data from sheet
<e> NL: Hack to get relevant arguments for lineage computation  name: get args </e> Hack to get relevant arguments for lineage computation . We need a better way to determine the relevant arguments of an expression ,get args
<e> NL: Import all the given modules name: import metadata </e> Import the specified modules and provide status ,check import
<e> NL: Read MULTI block data  name: read multi </e> Write MULTI block data ,write multi
"<e> NL: Checks if an interface has a netmask . : param interface : interface name : returns : boolean name: has netmask </e> Detect all configurations / channels that this interface could currently connect with . : rtype : Iterator[dict ] : return : an iterable of dicts , each being a configuration suitable for usage in the interface 's bus constructor ",detect available configs
"<e> NL: Read the struct from string  name: from string </e> Read the member in struct Index in nnet3 / nnet - common.h Return a tuple ( n , t , x )",read index tuple
<e> NL: Get precisision for given currency from Babel . : type currency : str : param currency : Currency code as 3-letter string ( ISO-4217 ) : rtype : decimal . Decimal : return : Precision value for given currency code name: get precision </e> Extracts currency from value ,get currency
"<e> NL: Return a string representing the current plotting backend : return str : Current plotting backend . One of { "" holoviews "" , "" matplotlib "" } name: get global ts plotting backend </e> Get a plotting backend ",get backend
"<e> NL: Prepare required field item . Convert replaces any special "" dimensions # "" , "" meta # "" or "" value_meta "" occurrences into spark rdd syntax to fetch field value  name: prepare required raw item </e> Prepare group by list item . Convert replaces any special "" dimensions # "" , "" meta # "" or "" value_meta # "" occurrences into spark sql syntax to retrieve data from extra_data_map column ",prepare group by item
<e> NL: Get all workers connected to a celery application . : param ` celery . Celery ` app : the celery application : return : A list of all connected workers : rtype : list name: get workers </e> Get celery schedule ,get schedule
"<e> NL: Removes RLP length prefix from the item bytes : param item_bytes : serialized item bytes : return : item bytes without length prefix name: remove length prefix </e> Decodes int value from RLP format : param rlp : RLP bytes : return : tuple ( value , length )",decode int
<e> NL: Resolves a hostname to an IP address name: resolve host </e> Resolves the IP for a given hostname or returns the input if it is already an IP ,get host ip
"<e> NL: Read configuration from a file in YAML format . : param file_path : Path of the configuration file . : return : name: load config </e> Read configuration from INI file . Parameters ---------- file_path path of the configuration file force force reading of the file , fail if not found",read configfile
<e> NL: Compute the gradient of a function wrt the value of its input Args : func : function to get the gradient of inp : input Returns : grad : gradient of the func wrt the input name: get grad </e> compute gradient of biomass_per_flux function,neg grad biomass per flux
<e> NL: attempts to determine the color of the text on thresholded image . : param image : input thresholded image : type image : cv2 image name: is text black </e> Decorrelate colors of image . : param image : Input image . : param color_correlation_svd_sqrt : Color correlation matrix . : return : Decorrelated image ,decorrelate colors
<e> NL: Return True if the store contains a group at the given logical path  name: contains group </e> Return True if the store contains an array at the given logical path ,contains array
<e> NL: Cast a arrays to a shared dtype using xarray 's type promotion rules  name: as shared dtype </e> Cast a arrays to a shared dtype using xarray s type promotion rules ,as shared dtype
<e> NL: Return information about the set name: find set info </e> Return information about server health ,get heartbeat
<e> NL: Break a Base64 value into multiple lines  name: wrap base64 </e> Normalize a string into multiple lines ,normalize string
<e> NL: Allocate a new Netlink message  name: nlmsg alloc simple </e> Allocate new Netlink socket . Does not yet actually open a socket ,nl socket alloc
<e> NL: Default WSGI 405 app  name: method not allowed </e> Default WSGI 404 app ,not found
<e> NL: Read dataset from HDF5 file  name: read dataset </e> Read metadata from a HDF5 file Parameters ---------- filename : path,read metadata
"<e> NL: Return the base name of a path  name: short file name </e> Compute a random base of the given trace set . Returns unit L2-norm base of shape ` ( dims , tot_actions ) ` . Optionally weights the actions by weight_vec",common random base
"<e> NL: Get a list of user plugin uids as a list . If not yet auto - discovered , auto - discovers them . : return list : name: get user plugin uids </e> Set the uids in a PIF , explicitly if the list of UIDs is passed in : param pifs : to set UIDs in : param uids : to set ; defaults to a hash of the object : return :",set uids
<e> NL: helper function to update errors in the return structure name: log error and abort </e> Helper function to create the structure for absolute values ,create absolute values structure
<e> NL: Execute a command and return the stdout and stderr  name: execute command </e> Execute a terminal command and return the stdout ,execute command
<e> NL: Compare and return value name: greater than equal </e> Compare and return value,greater than
<e> NL: Filter the string so MAM does n't have heart failure  name: filter string </e> Filter the string so Gold does n't have heart failure ,filter string
"<e> NL: If oid is short , pad right with 0s  name: pad oid </e> In case of buffer size not aligned to sample_width pad it with 0s",align buf
<e> NL: Check typ of value Arguments : value - Value to check typ - Type to check Return : Bool name: check instance </e> Determines if the given python value ` ` arg ` ` can be encoded as a value of abi type ` ` typ ` ` ,is encodable
<e> NL: Convert object model to dict  name: . model to dict </e> Convert an object 's attributes to a dict ,to dict
"<e> NL: Determines whether a variable exists in a NetCDF file : param str filename : NetCDF filename : param str varname : NetCDF variable name : return : True if the variable is in the file , else False : rtype : bool name: check ncvar exist </e> - file uris are converted to file names - if also netcdf wrap in NETCDF:""${filename}"":${layer } - All other protocols go through unmodified",rio uri
<e> NL: Count the number of lines in a file . : param filename : : type filename : str : return : : rtype : int name: count lines </e> Extracts the date from a file with a specific filename . : param filename : Name of the HDF image file . : type filename : str : return : Date the image with a given * filename * was taken . : rtype : datetime.datetime,get image date
"<e> NL: Decorator that registers ` exc_type ` as deserializable back into an instance , rather than a : class:`unserializable_exc_cls ` . See : func:`deserialize_exception `  name: deserializable exception </e> Decorator that registers ` exc_type ` as deserializable back into an instance , rather than a : class:`RemoteError ` . See : func:`deserialize ` ",deserialize to instance
<e> NL: Convert Gerrit account properties to Buildbot format name: gerrit user to author </e> Convert Gerrit account properties to Buildbot format Take into account missing values,gerrit user to author
<e> NL: Check if table has given column . : param engine : sqlalchemy engine : param table_name : name of the table : param column : name of the colmn name: column exists </e> Check if given index exists . : param engine : sqlalchemy engine : param table_name : name of the table : param index_name : name of the index,index exists
<e> NL: Convert a log record into a list of strings name: log to json </e> Unpack a udp datagram into a log record,convert datagram
<e> NL: Check if a package is installed  name: is installed </e> Check if package is installed . : param package : : param installed_packages : : type package : str : type installed_packages : iterable : return : : rtype : bool,check if installed
"<e> NL: Return the number of seconds of a time duration  name: td to seconds </e> Convert time period to a number of seconds . Raise ValueError for invalid time , otherwise return a number of seconds ",time to sec
<e> NL: Returns int pointing to an OpenGL texture name: create opengl object </e> Returns int pointing to an OpenGL texture,create opengl object
"<e> NL: Splits a sentence into words , strips punctuation and turns it to lowercase . : param sentence : the sentence to tokenize . : type sentence : str : return : list of words name: tokenize sentence </e> Return True if the text in < sentence > contains brackets : param sentence : : return :",is containing bracket
<e> NL: Return a list of resource names found in the html metadata section  name: parse resources </e> Return a list of resource names found in the html metadata section ,parse resources
"<e> NL: Given the bounds of an actor , return the point that corresponds to the n% of the bounds range : param bounds : should be a list of two floats : param n : n should be a float in range 0 , 1 name: get slice coord </e> Return the bounds of wavenumber values for the specified grid ",get k bounds
<e> NL: Set the torch device we are using  name: set device </e> Get the torch device we are using ,get device
<e> NL: Delete a model identified by name in a given API name: delete api model </e> Flushes cache for the stage identified by stageName from API identified by restApiId,flush api stage cache
<e> NL: Return the shannon entropy of an iterable . Shannon entropy is robust to rarefaction but we keep the param for consistency  name: shannon entropy </e> Return the Shannon Entropy of the sample data ,shannon entropy
<e> NL: return a list of all classes in a module  name: get classes </e> Return the set of all child classes of cls ,flatten subclass tree
"<e> NL: Given a dictionary of models to querysets and model IDs to models fetch the IDs for every model and return the objects in the following structure  name: fetch model data </e> Calculate the gelman_rubin statistic ( R_hat ) for every stochastic in the model . ( Gelman at al 2004 , 11.4 ) Input : models - list of models",gelman rubin
<e> NL: Convert a rotation matrix to angular velocity w - angular velocity in inertial frame Omega - angular velocity in body frame name: dcmdottoang vel </e> Convert angular velocity to DCM dot Omega - angular velocity defined in body frame,ang veltodcmdot
<e> NL: Finds the longest prefix of text and pattern  name: longest prefix </e> Finds the separator that gives the longest array,get best sep
"<e> NL: Like equiv_url , but forces a secure connection name: equiv url s </e> Like equiv_url , but forces an insecure connection",equiv url is
<e> NL: Convert a Trimesh object into an ASCII STL file . Parameters --------- mesh : trimesh . Trimesh Returns --------- export : str Mesh represented as an ASCII STL file name: export stl ascii </e> Return random triangles as a Trimesh Parameters ----------- face_count : int Number of faces desired in mesh Returns ----------- soup : trimesh . Trimesh Geometry with face_count random faces,random soup
"<e> NL: Gets the resolution of an image . Returns ------- tuple : ( x , y ) name: get img size pix </e> Gets frame resolution for a movie . Returns ------- tuple : ( x , y )",get movie size pix
<e> NL: Take the scheme from the current URL and applies it to the target URL if the target URL startswith // or is missing a scheme : param current : current URL : param target : target URL : return : target URL with the current URLs scheme name: update scheme </e> Check the target URL will lead to the same host server . Parameters ---------- target : str The target redirect URL . Returns ------- bool True if the target URL is safe ; False otherwise ,is safe url
<e> NL: Wrapper for backwards compatibility name: get name </e> Backwards compatibility wrapper for CPU count ,enum cpus
<e> NL: Function that wraps snowav for test case . Args ------ config_file : str path to config file name: can i snowav </e> gitignored file that contains specific SNOWAV version and path Input : - none Output : - path to base SNOWAV directory,get snowav path
<e> NL: Get country code . : param area : Country name . : param code : Code name . : type area : str : type code : str : returns : Country code . : rtype : str name: get country code </e> Extract country code from addresses : param profile : contact profile : return : two - letter country code or None if not unambiguous,get countrycode
<e> NL: Return True if the given node is the child of a decorator name: is from decorator </e> Returns True if child is an eventual child node of parent,is child node
"<e> NL: Yield all direct child nodes of * node * , that is , all fields that are nodes and all items of fields that are lists of nodes  name: iter child nodes </e> Yield all direct child nodes of * node * , that is , all fields that are nodes and all items of fields that are lists of nodes ",iter child nodes
<e> NL: Returns the number of days in a year  name: days in year </e> Returns True if manufacturer builds a limited number of vehicles a year . The limit varies globally ,small manuf
<e> NL: Parse parameters to dictionary  name: parse parameters </e> Parse preferences to the dictionary ,parse preferences
<e> NL: Removes comments from the element and its children  name: remove comments </e> Removes HTML comments from the value ,remove html comments
<e> NL: Create a dictionary with the relevant information from the response name: format response </e> Create a dictionary with the relevant information from the request,format request
<e> NL: Return the comic format if it is a comic archive  name: get comic format </e> Function to get an issue 's metadata from Metron and the write that information to a tag in the comic archive,get issue metadata
<e> NL: Format snapshots as reST  name: format snapshots </e> Format invariants as reST ,format invariants
<e> NL: Adds 2 newlines to the end of text name: convert p </e> Convert newlines to unix ,fix newlines
<e> NL: Nulls make more sense for some columns than zeros  name: zero to none </e> Nulls make more sense for some columns than zeros ,zero to none
<e> NL: Recursively iterate over key - value pairs of nested dictionaries  name: key value nested generator </e> Recursively iterate over the items of a dictionary ,iterate flattened
<e> NL: Time - stretch an audio series by a fixed rate  name: time stretch </e> Compute Bit - Error - Rate ( BER ) by comparing 2 binary audio arrays ,ber audio
"<e> NL: Returns a sorted list of prefixes . Args : orig ( str ) : Unsorted list of prefixes . prefixes ( str ) : List of prefixes , from highest - priv to lowest  name: sort prefixes </e> Returns a sorted list of prefixes ",sort prefixes
<e> NL: Given a set of sequences insert a prefix for each sequence s name  name: name insert prefix </e> Given a set of sequences append a suffix for each sequence s name ,name append suffix
"<e> NL: Clean all files in a directory name: clean dir </e> Performs a force - clean of a project , removing all files instead of politely calling the clean function of the underlying build system ",force clean
<e> NL: Takes a list of texts and returns a new dict of texts separated by language . : param texts : : return : name: separate texts by languages </e> Find the topics in a list of texts with Latent Dirichlet Allocation ,find topics
<e> NL: Returns the names of all positional arguments to the given function  name: get all positional parameter names </e> Returns the names of all positional arguments to the given function ,get all positional parameter names
<e> NL: Returns the CUDA device i d name: get cuda device id </e> Returns the CUDA device i d,get cuda device id
<e> NL: Get path to local executable . : param executable : Name of executable in the $ PATH variable : type executable : str : return : path to executable : rtype : str name: get path to executable </e> Get path to local executable . : param executable : Name of executable in the $ PATH variable : type executable : str : return : path to executable : rtype : str,get path to executable
"<e> NL: Evaluate a model for a single recording . Parameters ---------- model_file : string Model file ( .tar ) recording : The handwritten recording  name: evaluate model single recording </e> Check Intan recording directory to determine type of recording and thus extraction method to use . Asks user to confirm , and manually correct if incorrect Parameters ---------- file_dir : str , recording directory to check Returns ------- str : file_type of recording",get recording filetype
<e> NL: Split a string on all unquoted newlines  name: split unquoted newlines </e> Returns unquoted value of given string,get unquoted value
<e> NL: Gets Google App Engine App Identity credentials and project ID  name: get gae credentials </e> Check if is Google App Engine,is gae
"<e> NL: Return a dict of name - > AST node with toplevel definitions in the file . This includes function definitions , class definitions , and constants  name: toplevel names </e> Write a cython include file ( .pxi ) , ` filename ` , with the definitions in the ` definitions ` mapping ",write pxi
<e> NL: Get union of community solutions Args : grounding ( bytes ) : grounded model optimum ( str ) : optimal score Returns : TermSet : union name: get exchanged metabolites union </e> Get union of all community solutions Args : grounding ( bytes ) : grounded model optimum ( str ) : optimal score Returns : TermSet : union,get union communities from g
"<e> NL: Returns only the general / non - field errors of a form . Args : : form : A : class:`Form ` instance Returns : List of non field specific errors or an empty string name: all errors </e> Takes the given form text , parses it and returns a WTForms form class ( not an instance of it ) ",parse form
<e> NL: Iterates through a list of queries and runs them through the connection name: run query series </e> r iterates through iterable with a window size generalizeation of itertwo,iter window
"<e> NL: Start a TCP server to receive accumulator updates in a daemon thread , and returns it name: start update server </e> Start updating rolled metrics in daemon thread",start update daemon
<e> NL: lmfit 2nd order polynomial model name: poly2o model </e> Fit a 2D 2nd order polynomial to ` data[mask ] `,profile poly2o
<e> NL: Parse a YAML configuration file name: parse config </e> Return fyda configuration file ( ' .fydarc ' ) using YAML ,load config
<e> NL: generate a CamelCase string from an underscore_string  name: camel case from underscores </e> Generate a CamelCase string from an underscore_string,camel case from underscores
"<e> NL: Add two lists of parameters one by one name: add params </e> Walk a directory and produce the cards found there , one by one ",cards from dir
<e> NL: Return a list of IR blocks with all Backtrack blocks removed  name: remove backtrack blocks from fold </e> stick list of blocks together,im from blocks
<e> NL: Read mapping from json file . : returns : mapping dictionary from mapping.json data file : rtype : dict name: parse mapping </e> Iter the immediate contents of ` data ` and yield any dictionaries . Does not recurse . Parameters ---------- data : Mapping Returns ------- Iterator[Mapping ],iter contents
<e> NL: Returns ` Content - Type ` based on an array of content_types provided . : param content_types : List of content - types . : return : Content - Type ( e.g. application / json )  name: select header content type </e> Returns ` Content - Type ` based on an array of content_types provided . : param content_types : List of content - types . : return : Content - Type ( e.g. application / json ) ,select header content type
<e> NL: Return a list of slot names for slots defined in class _ and its superclasses  name: get all slots </e> Return a list of slot names for slots defined in class_ and its superclasses ,get all slots
<e> NL: returns the number of colors name: string count colors </e> Cuts the score into colors using the PREA colors : param score : : return :,get colors
<e> NL: Extract REST filter parameters from the request GET args  name: parse filters kwargs </e> Render REST path from * args ,render path
<e> NL: read json from local file name: read json </e> read local dataset and return the DDF object ,read local ddf
<e> NL: Load all available template handles . : return : A set of all available handles name: load available handles </e> exec functions ( e.g. subprocess . Popen ) by default force the child process to inherit all file handles which can result in stuck connections and unacknowledged messages . Setting FD_CLOEXEC forces the handles to be closed first ,set close exec
<e> NL: Tries to check if an object is considered one name: is one </e> Tries to check if an object has a variable ,has variable
"<e> NL: gets the table schema that this entity represents in database . it might be ` None ` if schema has not been set for this entity . : rtype : str name: table schema </e> gets the table fullname that this entity represents in database . fullname is ` schema.table_name ` if schema is available , otherwise it defaults to ` table_name ` . : rtype : str",table fullname
"<e> NL: If the range of characters from code1 to code2 - 1 includes any lower case letters , return the corresponding upper case range  name: uppercase range </e> If the range of characters from code1 to code2 - 1 includes any upper case letters , return the corresponding lower case range ",lowercase range
"<e> NL: Returns a field 's "" type "" as a list . : param dict field : the field : returns : a field 's "" type "" : rtype : list name: get types </e> takes list of Field or tuple . returns list of Field ( using tuples as constructor arguments )",cast fields
<e> NL: Extracts the name of a SQL statement Args : line ( : obj:`str ` ) : First line of a SQL statement Returns : : obj:`str ` : Uppercase name of the SQL statement name: get fn name </e> Split the given sql statement into a list of individual sql statements ,parse multiple statements
<e> NL: A canned scenario for display in the workbench  name: workbench scenarios </e> A canned scenario for display in the workbench ,workbench scenarios
<e> NL: Check if a network with given name exists name: has network </e> Check if an instance with given name exists,has instance
<e> NL: Lookup a hostname and determine its address family . The first address returned will be AF_INET6 if the system is IPv6 - enabled and AF_INET otherwise  name: lookup family </e> A helper method to get the correct address family for a given address . : param address : The address to get the af for : returns : AF_INET for ipv4 and AF_INET6 for ipv6,get address family
"<e> NL: Makes a hashable object from a dictionary , list , tuple , set etc  name: to hashable </e> Get a hashable object given a string and a dictionary ",cache key
<e> NL: Parse docx and odf files  name: doc reader </e> Parse docx and odf files ,doc reader
<e> NL: Change the download limit for a file hosted on a Send Server name: api params </e> Retrieves download location for FEH data zip file from hosted json configuration file ,retrieve download url
<e> NL: Custom JSON decoder that allows construction of a new Smi instance from a decoded JSON object  name: .json hook </e> ( ? : \d+\.\d*)|(?:\.\d+ ),t FLOATLIT
"<e> NL: Python 2.x : converts value to unicode : param value : value to be converted to unicode : type value : str : return : unicode string : rtype : str ( unicode ) name: convert to unicode </e> Convert str s to unicode : param str s : string : return : "" unicode "" version of s ( unicode in py2 , str in py3 )",to unicode
<e> NL: A helper to retrieve an integer value from a given dictionary containing string values . If the requested value is not present in the dictionary or if it cannot be converted to an integer a default value will be returned instead  name: get int </e> Force a value to an integer . If the value can not be converted return the default value ,force int
<e> NL: Converts an integer from a 32 bit bytearray : param val : the value to convert to an int : type val : int : rtype : int name: int from 32bit array </e> Convert float to int : param val : value to convert : type val : float : return : int(val ) : rtype : int,from float to int
<e> NL: Generate the DXF file ai_filename from the figure ai_figure ( list of format B outline ) name: write figure in dxf </e> Generate the SVG file ai_filename from the figure ai_figure ( list of format B outline ),write figure in svg
"<e> NL: Determines whether the specified code is valid . : param code : The code : type code : string : returns : True if the specified code is valid , False otherwise . : rtype : boolean name: is valid </e> Returns whether the class has the required info to generate code for a specified code template string ",template generatable
<e> NL: Recurse down the tree from src and unlink the files that have counterparts under dst . Args : src : The source path with the files to link . dst : The destination path where links should be removed  name: walk and unlink </e> Unlink all links in dst that are in filenames . Args : src : The directory where the source files exist . dst : The directory where the links should be made . filenames : A list of filenames in src ,unlink all files
<e> NL: Create a binary image of a circle radius r name: get points at radius </e> Create a binary image of a circle radius r,image circle
<e> NL: Gets the directory for the BCML master graphicpack name: get master modpack dir </e> Gets the BCML internal working directory,get work dir
<e> NL: Scale the unit of a TimeSeries to match that of a FrequencySeries name: scale timeseries unit </e> Returns a FrequencySeries of ones above the low_frequency_cutoff ,flat unity
"<e> NL: Takes an FCP rate element and returns a rate to use with otio . : param element : An FCP rate element . : return : The float rate  name: rate for element </e> Given a framerate , makes a ` ` rate ` ` xml tree . : param fps : The framerate . : return : The fcp xml ` ` rate ` ` tree ",build rate
<e> NL: Marks function as safe to use by the api name: safe method </e> Marks this field as belonging to a group,group tag
"<e> NL: Replaces spaces , ( double and single ) quotes and double underscores to underscores name: str to filename </e> Make sure the string has no double underscores , also convert from camelcase ",sanitize order by
"<e> NL: Check if the given node is a valid geometry shape node : param geometry : str , node object to query as geometry : return : bool name: is geometry </e> Returns the geometry type of the first shape under the given geometry object : param geometry : str , geometry object to query : return : str",geometry type
<e> NL: Generates a dataset from an iterator of samples name: from iter </e> Generates a batch iterator for a dataset ,batch iter
<e> NL: Parse a list string into a list of strings name: parse list </e> split string into list of strings by specified number ,split str
"<e> NL: Return the possible configs , args , params for a Pig job  name: get possible pig config from </e> Return the possible configs , args , params for a Pig job ",get possible pig config from
"<e> NL: Returns the last letter of the given string : param input_string : str , string to search for a letter : return : str , last letter in the string name: get last letter </e> Verify if a latin letter is accentuated , unicode point of view . : param str letter : Letter to check : return : True if accentuated , else False : rtype : bool",is accentuated
"<e> NL: Returns a tuple ( length , skip ) where skip is number of bytes read name: read length field </e> Clone a sql object avoiding the properties in the skip parameter The skip parameter is optional but you probably want to always pass the primary key",sql clone
<e> NL: Build lists of vertices in incoming and outgoing edges to and from each vertex in a linearized graph . Returns lists Vin and Vout  name: extract outgoing vertex connections </e> Build lists of incoming edges to each vertex in a linearized graph ,extract incoming edges
"<e> NL: Scales the quantity for an order to the given scale Parameters ---------- symbol_details : dict dictionary of details from the symbols from the symbols channel quantity : float quantity of order Returns ------- quantity : float quantity of order scaled to required level name: scale quantity </e> Given a dictionary - > { start : quantity , start : quantity , ... } Return a list of tuples [ ( start , end , quantity ) , ( start , end , quantity ) , ... ]",map dict to list
<e> NL: Create a display template for RECORD  name: create display template for </e> Display the issue template directory,show path
<e> NL: Converts a hex string to an integer name: hex string to int </e> Converts a hex - formatted ( e.g. # FFFFFF ) string to a Gdk color object,parse color string
<e> NL: Returns a container for milestone properties if it does not yet exist one is created name: milestone properties of holder </e> Return a container for milestone properties if it does not yet exist one is created,ticket properties of holder
"<e> NL: Iterate over all fields of a node , only yielding existing fields  name: iter fields </e> Iterate over all fields of a node only yielding existing fields ",iter fields
"<e> NL: Check for sensitive data in the current working directory . Keyword arguments : config -- the parsed YAML configuration Returns : True if sensitive data is present , False otherwise name: sensitive data is present </e> Check if truecolor is supported by the current tty . Note : this currently only checks to see if COLORTERM contains one of the following enumerated case - sensitive values : - truecolor - 24bit",true color supported
<e> NL: Class Factory Method that builds the connector handlers an Amazon AWS s3 remote store  name: from remote s3 </e> Class Factory Method that builds the connector handlers an Amazon AWS s3 remote store ,from remote redis
"<e> NL: Read the contents of ` filepath ` Parameters ---------- filepath : Str Absolute path to a Python file . Expected to end with ' .py ' , or ' .ipynb ' Returns ------- source : Str The contents of ` filepath ` name: read source script </e> Imports the contents of filepath as a Python module ",import pyfile
<e> NL: Gets the qualified top - level type of the node . This enters the typedef if defined instead of using the prefix to ensure absolute distinction  name: get qualified type </e> Convert top level keys from bytes to strings if possible . This is necessary because Python 3 makes a distinction between these types ,decode dict keys to str
<e> NL: Sets up a subparser to download the ILSVRC2012 dataset files  name: fill subparser </e> Sets up a subparser to download audio of YouTube videos ,fill subparser
<e> NL: Given parsed data build a list of related article objects name: build related articles </e> return a list of article - id data,article id list
<e> NL: Get the languages configured for the current model name: .get languages from model </e> Get default languages . used in case the model and the app does not have languages configured : return :,get languages default
<e> NL: Compares all the values of a single registry key  name: compare values </e> Print all registry values registered under key : param key : : return :,show win
"<e> NL: Pick out the access token , either in HTTP_Authorization header or in request body . : param request : The request : param authn : The value of the Authorization header : return : An access token name: bearer auth </e> Extract token from header of query parameter . : param request : The request to look for an access token in . : type request : twisted.web.server . Request : return : The token or None if not found : rtype : unicode or None",token from request
"<e> NL: Return top - level packages name: get top packages </e> For each top - level object in a dictionary , replace it with a Link , if appropriate ",replace objects with links
<e> NL: Function that verifies if the header parameter is a essential header . : param header : A string represented a header : returns : A boolean value that represent if the header is required name: required header </e> Function that verify if the header parameter is a essential header : param header : A string represented a header : returns : A boolean value that represent if the header is required,required header
<e> NL: Check if the attribute is not of numeric type  name: validate attr type </e> Check if variable is numeric ,pass number
<e> NL: Schedules the compose task and sets the ` compose.celery_task_id ` . Returns the updated ` compose `  name: schedule compose </e> Get the compose label for a compose by ID . Only completed production composes have discoverable labels ; will return the empty string for other composes ,label from cid
<e> NL: Get the URL from local path . : param path : the local path : return : the URL name: get url from path </e> Find and returns the path to the nearest big datasets . Parameters ---------- envkey : str Environment variable name . It must contain a string defining the root Artifactory URL or path to local big data storage ,get bigdata root
<e> NL: Custom JSON decoder that allows construction of a new Smi instance from a decoded JSON object  name: .json hook </e> Resolver for ner and sequence classification label config ,resolve label
"<e> NL: Attempts to compile the given source , first as an expression and then as a statement if the first approach fails . Utility function to accept strings in functions that otherwise expect code objects name: try compile </e> Attempts to compile the given source first as an expression and then as a statement if the first approach fails ",try compile
<e> NL: Custom JSON decoder that allows construction of a new Smi instance from a decoded JSON object  name: .json hook </e> Get Num Spellcheck Errors,get num spellcheck errors
"<e> NL: Escape special HTML characters ( & < > ) @type str_val : string @return : formatted string @rtype : string name: escape html chars </e> @return : An HTML string that encodes the given plaintext string . In particular , special characters ( such as C { ' < ' } and C { ' & ' } ) are escaped . @rtype : C{string }",plaintext to html
"<e> NL: > > > prevWeek((2016,1 ) ) ( 2015 , 53 ) name: prev week </e> > > > nextWeek((2015,53 ) ) ( 2016 , 1 )",next week
"<e> NL: Finds the location of the current Steam installation on Windows machines . Returns None for any non - Windows machines , or for Windows machines where Steam is not installed  name: find steam location </e> Finds the location of the current Steam installation on Windows machines . Returns None for any non - Windows machines or for Windows machines where Steam is not installed ",find steam location
<e> NL: Set content of given el to value  name: . set input </e> Set content of given textarea element el to value ,. set textarea
<e> NL: Return the program argument parser  name: get parser </e> Return the variable i d by finding the line in the program AST and gettings its argument,get variable id
"<e> NL: Given an SPV - verified transaction , extract its consensus hash . Only works of the tx encodes a NAME_PREORDER , NAMESPACE_PREORDER , or NAME_TRANSFER . Return hex - encoded consensus hash on success . Return None on error  name: get consensus hash from tx </e> Generate the consensus hash from the hash over the current ops and all previous required consensus hashes ",.make snapshot from ops hash
<e> NL: Return a list of arguments with the variable it reads . NOTE : Multiple arguments may read the same variable  name: parse args </e> Check whether a arginfo and b arginfo are the same signature . Actual names of arguments may differ . Default arguments may be different ,same signature
<e> NL: Opens the stops.txt file and returns its contents as a json object . Returns : A json object containing locations and their corresponding addresses  name: get stops </e> Opens the json file and returns the data as dict object,open store
<e> NL: Function checks if the button specified by the parameter is being pressed . : param button : defines the button to check on : return : result : rtype : bool name: logi lcd is button pressed </e> Renders an action button,action button
<e> NL: Add the initializer to the registry  name: register initializer </e> Add app to local registry by name,add usable app
<e> NL: Creates a socket suitable for SSDP searches . The socket will have a default timeout of 0.2 seconds ( this works well for the : py : func : search function which interleaves sending requests and reading responses  name: make socket </e> Creates a socket suitable for SSDP searches ,make socket
<e> NL: Label contigs according to relative positions name: positions to contigs </e> Create whole genome contigs we want to process only non - alts ,create genome regions
<e> NL: Call the correct correlate function depending on Scipy version and method  name: call scipy correlate </e> Check if NumPy 's correlate function reveals old behaviour,numpy has correlate flip bug
<e> NL: Get the SHA1 of the current repo name: get repo hexsha </e> Get the SHA1 of the current repo,get repo hexsha
"<e> NL: Try to convert ` o ` to int , default to ` o ` if not possible  name: try int </e> Try to convert x to int ",to int
<e> NL: Loads the binary data stored in the a binary file and extracts the data for each channel that was saved along with the sample rate and length of the data array  name: read data from bin file </e> Takes the binary data stored in the binary string provided and extracts the data for each channel that was saved along with the sample rate and length of the data array ,read data from bytes
<e> NL: Create a glue Data container from a set of EDS points : param name : label of the Data container : param pts : an EDSPoints instance name: gluedata from points </e> Load EDS points in the glue interface,load points
"<e> NL: Search for a class in parent subclasses "" deeply "" : param class_string : the class name to search : param parent : the expected parent : return : the class if found else None name: get deep class from parent subclasses </e> Search for a class string in module : param class_string : the class name to search : param module : the module : return : the class if found else None",get deep class from string
<e> NL: load config from disk name: load config </e> Utility function to load an image from disk ,load img
<e> NL: Read a YAML configuration file . Parameters ---------- filename : str The name of the YAML file to read . Returns ------- dict The configuration from the YAML file  name: read yaml file </e> Parse yaml file of configuration parameters ,parse yaml
<e> NL: Check if TinyMCE has a language file for the specified lang code : param language_code : language code : type language_code : str : return : check result : rtype : bool name: language file exists </e> Return list of all database locales available . : returns : dictionary of Language objects language_code : Language : rtype : dict,database locales
<e> NL: Returns a group from the DCOS Enterprise . It returns None if none exists  name: get group </e> Returns a user from the DCOS Enterprise . It returns None if none exists ,get user
<e> NL: Best guess of intended case  name: get case </e> Best guess of intended case . manchester = > manchester chilton = > Chilton AAvTech = > AAvTech THe = > The imho = > IMHO,get case
"<e> NL: Given a list of file names , return those names that should be copied  name: filter names </e> Given a list of file names return those names that should be copied ",filter names
<e> NL: un - pickles a dictionary that was pickled with ` pickle_dict ` . Args : items ( dict ) : A pickled dictionary . Returns : dict : An un - pickled dictionary  name: unpickle dict </e> Look for a dictionary that can not be pickled ,find unpickable doc
<e> NL: A data with keys that are not enumerated sequentially will be re sorted and sequentially ordered  name: re sort </e> Test if all sweeps in radar are sequentially ordered ,is radar sequential
<e> NL: Create a C array of doubles from a list  name: double array </e> Create a C array of doubles from a list . Args : mylist : ( list of numerical values ) will be converted to a C array,double array
<e> NL: List files in the directory recursively  name: list dir rec </e> Checks ( recursively ) if the directory contains .py or .pyc files,contains python files or subdirs
<e> NL: Assemble a block of relevant help text to be returned with an invalid request  name: project help block message </e> Assemble a block of relevant help text to be returned with an invalid request ,compose help block message
<e> NL: Compute the instantaneous frequency given an analytic signal z name: compute instantaneous frequency </e> An implementation of computing the analytic signal ,analytic signal
<e> NL: hash a file with the sha256 algo name: create content hash </e> hash a file with the sha256 algo,create hash
<e> NL: Build an output table partition parameter name: .build output partitions </e> Build an output table parameter,.build output table
<e> NL: Iterate through a data set  name: data iter </e> Iterate through fasta file,fasta iter
<e> NL: Returns an open named graph  name: get named graph </e> Returns an open named graph ,get named graph
"<e> NL: Given two sets of faces find the edges which are in both sets  name: shared edges </e> Returns three sets of triples : "" in both "" , "" in first "" and "" in second "" ",graph diff
"<e> NL: Gets percentage from old and new values Args : old ( num ) : old value new ( num ) : new value Returns : number : Percentage , or zero if none name: get percentage </e> Merge properties if the keys on old and new are disjoint . Return a mapping containing the values from both old and new properties , but only if there is no key that exists in both ",simple merge handler
"<e> NL: Adds a "" [ skip ci ] "" tag at the end of a ( possibly multi - line ) commit message : param message : commit message : type message : str : return : edited commit message : rtype : str name: add skip ci to commit msg </e> Return the MDL-12345 number from a commit message",get mdlfrom commit message
<e> NL: Lists all the supported languages name: get all languages </e> Filter all supported languages by given SEARCH_TEXT . : param search_text : String to look for in supported languages : return : ALl languages that contain the search_text ,filter languages
<e> NL: Remove certain characters from a string  name: convert string </e> Escapes certain characters in a given string such that haproxy will parse the string as a single value,escape haproxy config string
<e> NL: Automatically convert text to suitable colour : param text : : return : name: auto colourize </e> Automatically highlight interesting parts in the text : param text : : return :,auto text highlight
<e> NL: Creates a clone of a specified trait  name: clone trait </e> Shallow clone of module ` m ` ,clone module
<e> NL: Returns list of conditional gambles name: conditional gamble list </e> Conditional import of matplotlib,import matplotlib
<e> NL: Create a mesh from mesh data  name: from data </e> Create a mesh from mesh data ,.from data
"<e> NL: Get the first toplevel widget in a gtk . Builder hierarchy . This is mostly used for guessing purposes , and an explicit naming is always going to be a better situation  name: get first builder window </e> Get the first toplevel widget in a gtk . Builder hierarchy ",get first builder window
<e> NL: Add a result to the cache of an object  name: add to cache </e> Add object to cache,add object
<e> NL: Load the data from the csv in data  name: load data </e> Load the time machine data set ( available in the English book ) ,load data time machine
"<e> NL: Given a background color , suggests a darker background color and returns ( hexstring , r , g , b ) name: dark color </e> Returns a tkinter . Image with background color bgcolor and img superimposed ",color transparency
<e> NL: Helper to get the value of a field name: get field </e> Helper to get most frequent value for one field of a groupby,get most common field value for group
<e> NL: Return a setup logger for the given name name: get logger </e> setup refunc 's logger with given level and streaming to stderr,config loggers
<e> NL: Find a service based on name : param name : the name of a service . : param context : Security context : returns : a : class:`Service ` object  name: get by name </e> This function will return the expected path for an init script corresponding to the service name supplied . : arg name : name or path of the service to test for,get sysv script
<e> NL: Determine if two revisions have actually changed  name: default diff </e> Determine if two revisions have actually changed ,default diff
<e> NL: Returns the requested content back in unicode . : param r : Response object to get unicode content from . Tried : 1 . charset from content - type 2 . fall back and replace all unicode characters name: get unicode from response </e> Returns the requested content back in unicode . : param r : Response object to get unicode content from . Tried : 1 . charset from content - type 2 . fall back and replace all unicode characters : rtype : str,get unicode from response
<e> NL: Check if a bet amount is between the minimum and maximum allowed amounts name: is bet amount valid </e> Sort by increasing amount but ensure that negative amounts are sorted first . max_amount is the maximum amount found in the stock ,stock sort key
<e> NL: Check if fasta file is valid . Raises a ValueError if pysam cannot read the file  name: is fasta valid </e> Check if bam file is valid . Raises a ValueError if pysam cannot read the file ,is bam valid
"<e> NL: This function 's logic is being reconsidered given the possibility of globals breaking logic name: get globals </e> Helper function to parse function arguments . This takes a logic or a string or None , and returns a logic or None ",convert logic from string
<e> NL: Get suggestions in case of TIME_DATA_DOES_NOT_MATCH_FORMAT_RE  name: suggest time data is wrong </e> Get suggestions in case of OBJECT_HAS_NO_FUNC ,suggest obj has no
<e> NL: Reads the node to return a magnitude frequency distribution name: node to mfd </e> Reads the node to return a magnitude frequency distribution,node to mfd
<e> NL: Return True if the given string starts with one of the prefixes in the given list otherwise return False  name: starts with prefix in list </e> Return all digits that the given string starts with ,digits only
<e> NL: Get a wsgiref . headers . Headers object with headers from the environment  name: get headers from environ </e> Process all headers to produce a set of combined headers that follows the rules defined by each instrument ,get templates
<e> NL: Returns a list of valid environment names name: valid environments list </e> Return a list of valid ecc names ,ecc map names
"<e> NL: returns the score value in the corresponding positional score box name: get score </e> Normalizes the model MAE score , given the baseline score",normalized mae score
<e> NL: Find XML files in the directory name: find files </e> Find XML files in the directory,find files
"<e> NL: Get the bounding box of a ` ` g ` ` node  name: bounding box group </e> For an entity with width and height attributes , determine the bounding box if were positioned at ` ` ( x , y ) ` ` ",calc bounds
<e> NL: Get the allowed eval ( ) builtins  name: get default builtins </e> Eval a string without eval expressions ,no expression eval
<e> NL: Return a restclients.models.uwnetid . Subscription objects on the given uwnetid name: get office365edu prod subs </e> Return a restclients . models . uwnetid . UwEmailForwarding object on the given uwnetid,get email forwarding
"<e> NL: Returns the Z - scores of the input returns . Parameters ---------- returns : Series or DataFrame , required Series or DataFrame of returns Returns ------- Series or DataFrame name: get zscores </e> Takes in a Series which contains lists of the same structure and returns a Dataframe With a column for everey List Entry",columns from list
<e> NL: Intializes the document from an exisiting native StochKit XML file read from disk  name: from file </e> Intializes the document from an exisiting native StochKit XML file read from disk ,from string
<e> NL: Compute the non - oriented area of a polygon ( can be convex or concave ) . Parameters ---------- polygon : list of lists A list of polygon point coordinates . Returns ------- float The non - oriented area of the polygon  name: polygon area footprint </e> Scale a polygon . Parameters ---------- polygon : list of lists A list of polygon point coordinates . Returns ------- list of lists Reordered polygon point coordinates ,scale polygon
<e> NL: True if the object is a h5py . Dataset - like object . : param obj : An object name: is dataset </e> wrap h5py.highlevel . Dataset objects into a more numpy like object,wrap data
<e> NL: Compare a token with a hashed token . Uses the same algorithm and salt of the hashed token for comparison  name: compare token </e> Build a dict of AAIndexObjects hashed by ID,aaindex lookup
<e> NL: Convert a string in unicode name: ensure unicode </e> Fix invalid symbols in unicode string ,sanitize unicode
<e> NL: Converts an SDK generator object to a list of dictionaries . : param object : SDK generator object : returns : List of dictionaries name: sdk object to list </e> Converts an SDK object to a dictionary . Fixes any SDK imposed object oddities . : param object : SDK object : returns : Dictionary,get sdk object dict
<e> NL: Shift and scale vector to be between 0 and 1  name: max min scaling </e> Shift and scale matrix so its minimum value is placed at shift and its maximum value is scaled to scale,shift and scale
<e> NL: return the mimetype from the given string value name: .find type </e> Validate the mimetype string ,validate mime type
<e> NL: Return the type of the file system on which the path ' p ' is located  name: fs type </e> Return the file system type for mypath ,get fs type
<e> NL: Check response from API name: analyze result </e> Handle a response from the newton API,handle response
<e> NL: Loads a manifest : param filename : absolute filename to manifest : return : manifest in dictionary format name: load manifest </e> Helper for loading a manifest yaml doc ,load manifest
"<e> NL: If any exception is raised inside the context delete the file at the given path and allow the exception to continue  name: delete if error </e> Called in an exception handler to ignore any exception , isssue a warning , and continue ",warn and continue
"<e> NL: Returns the size ( in bytes ) of a Capsule given the curve . If no curve is provided , it will use the default curve  name: expected bytes length </e> Alternate constructor to generate a curve instance by its name . Raises NotImplementedError if the name can not be mapped to a known supported curve NID ",from name
<e> NL: Opens a stream and reads 8192 bytes from it  name: open stream </e> Opens a stream and reads 8192 bytes from it . This is useful to check if a stream actually has data before opening the output ,open stream
"<e> NL: Finds the index of an item in list , which satisfies predicate : param predicateFn : predicate function to run on items of list : param items : list of tuples : return : first index for which predicate function returns True name: get index </e> Generate all bindings for the given predicate which are not true in the given model ",compute complementary atoms
<e> NL: Derives the correlation matrix from a covariance matrix . : param cov : ( np.array ) Covariance matrix : return : ( np.array ) Covariance matrix name: cov to corr </e> Kullback leibler divergence between two covariance matrices A and B. : param A : First covariance matrix : param B : Second covariance matrix : returns : Kullback leibler divergence between A and B,distance kullback
<e> NL: Returns a list of all unique elements across multiple iterables . Elements of earlier iterables will come first  name: unique multi </e> Returns a copy of an iterable object ( also copying all embedded iterables ) ,iter copy
<e> NL: Adapter for rendering a list of : class : ` crabpy.gateway.capakey . Perceel ` to json  name: list perceel adapter </e> Adapter for rendering an object of : class : ` crabpy.gateway.capakey . Perceel ` to json ,item perceel adapter
<e> NL: Read a graph from a path name: read graph </e> Read time from a path . Returns None if unreadable ,read time
"<e> NL: Convert duration to int number of days . : param duration_in_seconds : Duration in seconds . max : 67767976233532799  name: duration to int days </e> Convert duration to a string : n days , HH : MM : SS . : param duration_in_seconds : Duration in seconds . max : 67767976233532799 ",duration to date and time
"<e> NL: Create , populate and return the VersioneerConfig ( ) object  name: get config </e> Create , populate and return the VersioneerConfig ( ) object ",get config
"<e> NL: Find the UTM CRS based on lat / lon coordinates . Parameters ---------- lat : float Decimal latitude . lon : float Decimal longitude . Returns ------- crs : dict Corresponding UTM CRS  name: find utm crs </e> get the correct names of the columns holding the coordinates @param header Header of the CSV @returns ( lon , lat , crs ) where lon , lat , crs are the column names",get lon lat crs
<e> NL: Function to turn a tag into a string . Args : tag : the tag value Returns : the tag as a string name: tag to str </e> Tag the repo using an annotated tag ,git tag
<e> NL: Evaluate and return a keymap for given ` ` term ` `  name: get keyset </e> Create ` Keymap ` object from ` raw_keymaps ` ,create keymaps
<e> NL: Processes a CMIP3 style file path  name: get fp meta </e> Processes a CMOR style file path ,get cmor fp meta
<e> NL: Check whether we should enable DHCP for unknown hosts We blacklist unknown hosts unless one or more nodes are on introspection and node_not_found_hook is not set  name: should enable unknown hosts </e> Check whether we should enable DHCP at all . We wo n't even open our DHCP if no nodes are on introspection and node_not_found_hook is not set ,should enable dhcp
<e> NL: Split the module name into package name and module name  name: module name split </e> parse module file name into author / name,parse module name
"<e> NL: regexp search with one value to return . : param line : Line : param lookup : regexp : return : List of match groups or False name: find multiple </e> Run the given list of ` regexps ` which are expected to be ` ( regexp , replace ) ` tuples on the given ` content ` ",format text
<e> NL: Remove duplicate rows  name: distinct stage 2 </e> Remove rows with invalid ids,step remove rows with missing ids
"<e> NL: Extract the version from ` version_string ` using ` pattern ` . Return the version as a string , with leading / trailing whitespace stripped  name: extract version </e> Stripped - down version of ofxget.mk_server_cfg ( )",mk server cfg
<e> NL: Returns the text of all files in a directory  name: read dir </e> read text files in directory and returns them as array,read folder
<e> NL: Utility to create a time sheet URL with optional date parameters  name: timesheet url </e> Utility function to create date(time ) partitioned tables,create table date partitioning
"<e> NL: Matches calendars against each other : param calendars : array containing all calendars to match : type calendars : array : return : Matched calendarpattern : rtype : dict name: match calendars </e> Filter out vtodos from an iterator over calendars . : param calendars : Iterator over ( href , calendar ) tuples : return : Iterator over Calendar subcomponents",extract vtodos
<e> NL: set the slope by giving the start and end point Args : start ( ): end ( ): Returns : name: from points </e> Returns the list of completions generated by _ completer . Also stores start and end globally for later retrieval by get_begidx ( ) and get_endidx ( ) ,get completions
<e> NL: Ask the user to provide the API key name: request api key </e> Ask the user to provide the API key,request key
"<e> NL: Converts polar r , theta to cartesian x , y name: to cartesian </e> Converts cartesian x y to polar r theta ",to polar
<e> NL: Get a resource type name: metadef resource type get </e> Handles a GET request on a resource,handle resource get
"<e> NL: Get a mapping of all defined report renderer names . : returns : dictionary of name to renderer class . : rtype : ` ` dict ` ` name: all renderers </e> Return matplotlib pyplot and FuncFormatter as a tuple : returns : a tuple of modules : rtype : tuple : param renderer : The renderer name . If renderer is None , it will not be set . : type renderer : str",import plot and formatter
"<e> NL: Preprocesses a tensor encoding a batch of images . # Arguments x : input Numpy tensor , 4D. data_format : data format of the image tensor . # Returns Preprocessed tensor  name: preprocess input </e> Preprocesses a tensor encoding a batch of images . # Arguments x : input Numpy tensor , 4D. data_format : data format of the image tensor . # Returns Preprocessed tensor ",preprocess input
"<e> NL: Removes attributes in the remove list from the input attribute dict : param attrs : Dict of operator attributes : param remove_list : list of attributes to be removed : return new_attr : Dict of operator attributes without the listed attributes  name: remove attributes </e> Given a graph G , makes sure that all of the pair betweennesses listed as attributes remain possible , and removes those that are not . Also adds new attributes where new edges have been added ",fix pair betweennesses
<e> NL: Reads a . wav file  name: read wave </e> Returns the duration of a wav file ( in seconds ),get sound file duration
<e> NL: Get default value from field . : return value : A default value or NO_VALUE name: get default </e> Return a list of 2 - tuples - the argument name and its default value or a special value that indicates there is no default value ,get args and defaults
<e> NL: This renderer can be used if a blueprint can act as compound or leaf  name: hybrid renderer </e> This extractor can be used if a blueprint can act as compound or leaf ,hybrid extractor
<e> NL: Get byte string representation of an object  name: get string </e> Get string representation of an object,. get repr
<e> NL: Attempt to close each Elastic index in a list of indices : param elastic_client : Elastic client : param indices : List of indices to close : return : List of failed indices name: close indices </e> Attempt to open each Elastic index in a list of indices : param elastic_client : Elastic client : param indices : List of indices to open : return : List of failed indices,open indices
<e> NL: Dynamically creates a module with the given name  name: create module </e> Dynamically creates a module with the given name ,create module
<e> NL: Convert a list of dictionaries into a dictionary of dictionaries  name: dicts to dict </e> Converts a list of model objects into a list of dictionaries representing the data contained in those model objects . : param object_list : a list of model objects : return : a list of dictionaries,list to json
"<e> NL: Return rot possibly completed with zeroes to reach size 3 . If rot is None , return a vector of 0 . If deg is True , convert from degree to radian , otherwise assume input is in radian  name: normalise rot </e> algle to 2x3 transform matrix theta : param angles : assume radian : return : outdim : [ angleshapes , 2 , 3 ]",angle to theta
<e> NL: Set the axis width Args : params ( dict ) : plotting parameter dictionary Returns : same as input name: set axis tick width </e> Set the ID of reach data entry Set the order ID ( zero - based ) for each object to be plotted within the context of each panel Args : params ( dict ) : internal plotting parameter dictionary Returns : an updated parameter dictionary,set data id
<e> NL: Return list of column names for table  name: get table columns </e> Filters leaderboard columns to get the system column names . Args : columns(iterable ) : Iterable of leaderboard column names . Returns : list : A list of channel system names ,get system columns
<e> NL: Get optimizer with correct learning rate  name: get optimizer </e> Get learning rate based on schedule ,get lr
<e> NL: Convert a state - by - state TPM to a state - by - node TPM  name: state by state2state by node </e> Infer the connectivity matrix associated with a state - by - node TPM in multidimensional form ,infer cm
<e> NL: Return the major complex of the network  name: major complex </e> Get all the complex mode attributes in the network so that they can be used for mapping to resource scenarios later ,get all attributes
<e> NL: Return a dict with unique values as keys and vectors as values name: build dummies dict </e> Return a dictionary with file as keys and content as values ,parse file dict
<e> NL: Create a Metrics instance from csv file pattern  name: .from csv </e> Create a Metrics instance from a bigquery query or table ,.from bigquery
<e> NL: Helper function to load module based on its dotted - string name  name: load module </e> A helper function that returns ContentType object based on its slugified verbose_name_plural ,get content type
<e> NL: This function links the user 's choice of transformation with the associated numpy function name: transform define </e> This function links the user 's choice of transformation with its inverse,itransform define
"<e> NL: Attempt to evaluate promise , even if obj is not a promise  name: maybe evaluate </e> Attempt to evaluate promise , even if obj is not a promise ",maybe evaluate
<e> NL: Return a list of the sources file paths for the module  name: model sources </e> Return the list of paths for given Python module . Args : module_name ( str ) : Name of the Python module . Returns : : obj:`list ` of : obj:`str ` : List of source paths for the module ,get module sources
<e> NL: Import an extension module by name  name: import extension module </e> Returns valid tags an extension module might have,extension module tags
<e> NL: Does a CGI form contain the key ? name: cgi parameter exists </e> Does a CGI form contain the key?,cgi parameter exists
<e> NL: Turn a list of dicts into XML nodes with tag names taken from the dict keys and element text taken from dict values . This is a list of dicts so that the XML nodes can be ordered in the XML output  name: struct to xml </e> Map an XML tree into a dict of dicts ,recursive dict
<e> NL: Map CNVs to associated SSMs name: read cnv ssms </e> Map SSMs to chromosomal locations ,read ssm locs
<e> NL: Returns the rank of each process on its machine The processes on a given machine will be assigned ranks 0 1 2 ... N - 1 where N is the number of processes on this machine  name: get local rank size </e> Return unique machine identifier . This is software - based but fairly standardized from the /etc / machine - id file . We can potentially rely on this for uniquely identifying a node ,get machine id
<e> NL: Indicates if the request context is a normal user  name: is user context </e> Indicates if the request context is a normal user ,is user context
<e> NL: Return AWS Account I d name: get account id </e> Retrieves AWS Account Number,account number
<e> NL: Remove rows from input DataFrame . Parameters ---------- data : pd . DataFrame Input dataframe columns : List[str ] Column list to filter Returns ------- pd . DataFrame Filtered DataFrame name: remove common items </e> Small hack function to eliminate double peak values from a timeserie Parameters ----------- data : pd . DataFrame,getridof double peaks
<e> NL: Execute an arbitrary SQL query based on configuration values  name: execute query </e> Returns the ` execute ( ) definition based on the arrays in ` operand_list `,gen function prototype
<e> NL: Function to get host IP address  name: get host IP </e> Function to get rest host,get rest host
<e> NL: Import Limit Switch data from as a .txt file and creates a numpy array of values of sensed data Parameters ---------- filename : .txt file The first parameter . Returns ------- ls_input_data : numpy array numpy array of sensed limit switch data name: get lsdata </e> Import Load Cell data from as a .txt file and creates a numpy array of values of sensed data Parameters ---------- filename : .txt file The first parameter . Returns ------- lc_input_data : numpy array numpy array of sensed load cell data,get lcdata
"<e> NL: Split the given signature : param signature : : rtype : str , str : return : The r part for signature , The s part for signature name: split signature </e> Strips typedef info from a function signature : param signature : function signature : return : string that can be used to construct function calls with the same variable names and ordering as in the function signature",remove typedefs
<e> NL: Remove collect s static root folder from list  name: collect staticroot removal </e> Remove collect 's static root folder from list ,collect staticroot removal
<e> NL: Determines whether the exception is due to API throttling . : param e : Exception raised : return : True if it 's a throttling exception else False name: is throttled </e> Datapipeline API is throttling us as all the pipelines are started at the same time . We would like to uniformly distribute the startTime over a 60 minute window ,next datetime with utc hour
<e> NL: Copy origin to out and return it  name: float copy to out </e> Copy the field at name from fromDic to toDic only if it exists @param fromDic : Origin Dictionary @param toDic : Destination Dictionary @param keys : Array of keys of the elements to copy,copy field if exists
<e> NL: Turns a matrix into a list of coordinates matching the specified value name: matrix as list </e> Turns a list of urls using arrow notation into a list of Source objects,parse arrow
<e> NL: Walk package and yield names of all submodules name: gen submodule names </e> Walk the package resources . Implementation from os.walk ,pkg walk
<e> NL: Return a BioPAX model object from an OWL string  name: owl str to model </e> Returns a BiopaxProcessor for a BioPAX model object ,process model
<e> NL: Register the streaming http handlers in the global urllib2 default opener object . Returns the created OpenerDirector object  name: register openers </e> Register the streaming http handlers in the global urllib2 default opener object . Returns the created OpenerDirector object ,register openers
<e> NL: Return the average Jaccard similarity between a brand s followers and the followers of each exemplar . We merge all exemplar followers into one big pseudo - account  name: jaccard merge </e> Return the average Jaccard similarity between a brand 's followers and the followers of each exemplar . We merge all exemplar followers into one big pseudo - account ,jaccard merge
<e> NL: Converts date to Julian Day Number  name: date jdn </e> Convert a Positivist date to Julian day count ,to jd
<e> NL: Attempt to extract an error message from response body name: get error message </e> Attempt to extract an error message from response body,get error message
"<e> NL: Guess lexer for given text , limited to lexers for this file 's extension . Returns a tuple of ( lexer , accuracy )  name: guess lexer using filename </e> Guess lexer for given text limited to lexers for this file s extension ",guess lexer using filename
"<e> NL: Try to import and return module . Returns None if the module does not exist  name: try import </e> Try to import ` module ` . Returns module 's object on success , None on failure",try import
<e> NL: Replace the trailing ` ` _ ` ` with ` ` \ _ ` ` so that it will printed properly in the documentation  name: fix trailing underscore </e> Zero - pad indices so that file names will sort properly ,stringify index
"<e> NL: Decrypt string with given session key . : param session_key : a session key comes with the message in encrypted form , here it must be already decrypted : param inp : input string to decrypt name: decrypt with session key </e> Decrypt ` ` inp ` ` string with a Private Key provided as string in PEM format ",decrypt open sshprivate key
"<e> NL: Parse version string into release , major , minor version . : param version_string : Version string . : return : Tuple of strings  name: parse version </e> Parse version string into release major minor version ",parse version
<e> NL: Determine how many cores we are able to use . Return 1 if we are not able to make a queue via pprocess  name: check cores </e> Determine how many cores we are able to use . Return 1 if we are not able to make a queue via pprocess . Parameters ---------- cores : int The number of cores that are requested . Returns ------- cores : int The number of cores available ,check cores
<e> NL: This is your main entry point to serialize something  name: serialize object </e> Main entry point for trading mode,start trading
<e> NL: Constructs the where clause based on a dictionary of values name: .build where clause </e> Builds the update values clause of an update statement based on the dictionary representation of an instance,.get update clause from dict
<e> NL: Converts a content with multiple line into a single line content name: str single line </e> Splits multiple commands in a single line separated by ' ; ',split line
"<e> NL: Convert a longitude , latitude pair into a pretty string , in decimal degrees name: coord2str dd </e> convert NMEA formatting latitude / longitude to decimal degrees",convert nmea degrees
<e> NL: Return matches for given team  name: get matches for team </e> Return team information and picks for the given gameweek,get team picks
"<e> NL: Get a catalog of events close to another event . Parameters ---------- event : Central event to calculate distance relative to catalog : Catalog to extract events from radius : Radius around ` event ` in km Returns ------- Catalog of events close to ` event ` name: get nearby events </e> Due to some events in PloneFormGen , we need to use this event to end the signupsheet configuration",form initialized
"<e> NL: Get the user / password from HTTP basic auth name: get basicauth credentials </e> Returns HTTP basic auth string sent with request , or None . If request includes basic auth , result is string ' username : password ' ",get request basic auth
<e> NL: Parses calendar dates exception info from TransXChange VehicleJourney element name: get calendar dates exceptions </e> Parses weekday info from TransXChange VehicleJourney element,get weekday info
<e> NL: Builds a CompilationDatabase from the database found in buildDir name: from directory </e> Builds a CompilationDatabase from the database found in buildDir,from directory
<e> NL: Get the Steam install directory for this computer from registry : return Steam installation path name: find steam directory </e> Get the installation directory for Steam games : return List of Steam library folders where games can be installed,get steam library folders
<e> NL: Get a list of all tag names in the database  name: tag names </e> Return a list of all ( long and short ) names for the tag,all names for tag
<e> NL: Register a namespace for use : param str model_package : The package to use for mapping elements from namespace : param str namespace : The namespace : param prefix : The prefix to use when mapping to namespace : type prefix : str or None name: register namespace </e> Register a namespace for use by ORDF : param prefix : the namespace prefix that should be used : param namespace : an instance of ordf.namespace . Namespace,register ns
<e> NL: Convert string to bool : param value : string or bool : type value : str or bool : return : bool name: cast bool </e> Verifies whether is cold start and return a string used for struct logging Returns ------- str lower case bool as a string aws_lambda_logging does n't support bool ; cast cold start value to string,is cold start
<e> NL: This converts from equatorial coords to galactic coords  name: equatorial to galactic </e> This converts from galactic coords to equatorial coordinates ,galactic to equatorial
"<e> NL: Set effective log level . : param level : Level to set name: set level </e> Set logger level to ` level ` within a context block . Do n't use this except for debugging please , it 's gross ",logger level
<e> NL: Gets the sum of start attributes count inside a DFG Parameters ------------- dfg Directly - Follows graph Returns ------------- Sum of start attributes count name: sum start activities count </e> Infer start activities from a Directly - Follows Graph Parameters ---------- dfg Directly - Follows Graph Returns ---------- start_activities Start activities in the log,infer start activities
<e> NL: Find the extension of the file : param file_path : path to the file given as file_path : return : Extension of file provided as file_path name: find file extension </e> given the path of a file returns it 's extension as string : param file_path : the path of an input file : return : the extension of the file,get file extension
<e> NL: A generator for iterating through a list of gpg options and sanitising them  name: sanitise list </e> Return a list of stdio command 's parameters by iterating through its annotations,get cli params
<e> NL: Retrieve content as JSON using the ident - hash ( uuid name: get content json </e> Retrieve content as HTML using the ident - hash ( uuid,get content html
"<e> NL: Routine to validate that typ is a valid non - empty PEP484 type hint . If it is a forward reference , it will be resolved : param typ : : param item_type : : param attr_name : : return : name: get validated attribute type info </e> If typ is a forward reference , return a resolved version of it . If it is not , return typ ' as is ' : param typ : : return :",resolve forward ref
<e> NL: Validate a DOI string  name: validate doi </e> Return either a string or the doi part of a URL ,extract doi
<e> NL: [ -+]?[0 - 9]*\.?[0 - 9]+([eE][-+]?[0 - 9]+ ) ? name: t NUMBER </e> [ -+]?[0 - 9]*\.?[0 - 9]+([eE][-+]?[0 - 9]+ ) ?,t NUMBER
<e> NL: A port of javascript string to Bytearray function : param string : a string name: string to byte array </e> Convert a list of Uint8 to Int32 Ported from javascript : param _ bytes : a bytearray,convert to int32
<e> NL: c - a : magnesium borate [ SRM87 ]  name: bC Mg BOH4 SRM87 </e> SRM87 equation from Table III ,SRM87 eqTableIII
<e> NL: Load crs object from epsg code via spatialreference . org . Parses based on the proj4 representation  name: from epsg code </e> Load crs object from esri code via spatialreference . org . Parses based on the proj4 representation ,from esri code
<e> NL: Calculate the angle between two vectors : : param v1 : : param v2 : : param in_degree : : return : name: vector angle </e> Compute the angle between two vectors of equal length : param v1 : numpy array : param v2 : numpy array : return : angle between the two vectors v1 and v2 in degrees,calculate angle
<e> NL: Try to import a module given as a string  name: import module </e> | Given a module service try to import its models module ,import models
"<e> NL: Converts relative URLs into absolute URLs . Used for RSS feeds to provide more complete HTML for item descriptions , but could also be used as a general richtext filter  name: absolute urls </e> Converts relative URLs into absolute URLs . Used for RSS feeds to provide more complete HTML for item descriptions , but could also be used as a general richtext filter ",absolute urls
<e> NL: Fit a single binary estimator ( one - vs - one )  name: fit ovo binary </e> One - Vs - All mode handler ,one vs all func
<e> NL: Get keys of a dictionary by a value  name: keys by value </e> Reduce a dictionary by selecting a set of keys,reduce by keys
<e> NL: Load spikes from the txt file : param file_name : name of spike file : param trian_name : name of a trial within a spike file : return spikes : dict with spikes name: load spikes from txt </e> Filter to select concepts with minimum / maximum number of spikes and occurrences and first spike in the first bin position,fca filter
<e> NL: Distribute files by a defined number of bins . : param files : list of file paths : param bins : number of available bins name: distribute load </e> Get bins that contain approximately an equal number of data points ,get equal bins
<e> NL: Generator to read a file piece by piece  name: read in chunks </e> Concatenate file piece hashes,make pieces
"<e> NL: Converts true to True and false to False if s is a string name: setting str to bool </e> Determines whether a string represents True . As the name suggests , any input which is not explicitly evaluated to True will cause this method to return False . Args : string : the string to evaluate",is true
<e> NL: Locale negotiator base on the ` Accept - Language ` header name: locale negotiator </e> Locale negotiator base on the Accept - Language header,locale negotiator
"<e> NL: Computes scan statistic - i on a set of graphs Required Parameters : mygs : - Dictionary of graphs i : - which scan statistic to compute name: scan statistic </e> Computes the Wilcoxon ranksum statistic Parameters ---------- array_one , array_two : iterable Two arrays of values , possibly of different length . Returns ------- exp_diff : float scalar value from the Wilcoxon ranksum statistic",ranksum statistic
<e> NL: Scipy . ndimage median filter name: median fltr </e> arg = grid and r : 3 * 3 median filter,find max with bin
<e> NL: Generates rst codeblock for given text and language name: get codeblock </e> Generates rst raw block for given image filename and format,get imageblock
<e> NL: Return True if the annotation if for a Dict name: is dict type </e> Return True if the annotation if for a Dict,is dict
<e> NL: Create key for an event : param a : First event name: key event </e> Make an event message ready to be published or stored . Returns a serialized model of Event containing an event message,message from event
<e> NL: List a RAR archive  name: list rar </e> Get password for rar archive from user input ,get rar password
"<e> NL: Retrieve an integer , error if a bad value is given name: get int errbad </e> Retrieve a string , error if a blank value is given",get str errblank
<e> NL: Get the commands which were sent to a CCP4 program  name: get ccp4 commands </e> Split ( if needed ) and obtain the list of commands that were sent into Skelebot,get commands
<e> NL: Get user name provide by operating system name: get user name </e> Get host name provide by operating system,get host name
<e> NL: Get a descriptive name of the CPU on this computer name: get processor name </e> get CPU type of computer,get proctype
"<e> NL: Rename all shapes under the given transform to match the name of the transform : param transform_node : str , name of a transform name: rename shapes </e> Return a list of intermediate shapes under a transform parent : param geo : str , transform to list intermediate shapes for",list intermediates
"<e> NL: Read the magic file name: magic data </e> Get content - type based on magic library as * bytes * As libmagic bindings are provided via several ' magic ' packages , we try them in order",get magic content type
<e> NL: Try to parse a date Args : value ( str ) : The string to parse Returns : Optional[datetime ] : The parsed date or None if the date could not be parsed  name: try parse date </e> Tries to parse a date into a DateTime instance Returns ` None ` if it can not be parsed,convert date
<e> NL: Gets a list of all directories which are also routes in routes/ name: get route entities </e> Creates a blueprint and register its routes,setup blueprint
"<e> NL: Strip and trailing slash to validate a url name: .validate url </e> Strip url from protocol and trailing slash , in order to use it as config key",get hostname
<e> NL: Deep copy a solution set . : param sol_set : a solution set : return : the copied solution set name: deep copy set </e> Create ColumnDataSource for copy number and breakpoints given a specific solution,create cnv brk sources
<e> NL: Function to parse the query parameter string  name: parse query params </e> Add query parameter ,add argument parameter
<e> NL: Return a field that can be used as a unique key for this Resource . : returns : A field that can be used as a unique key . : rtype : str name: filter field </e> Utility method to get a unique path that can be used for caching a download ,calculate cache location for url
<e> NL: Prompt user for a password Prompt for a password if stdin is a tty  name: prompt for password </e> Prompt the user for a password on stdin ,get password
<e> NL: Converts optimization into a string name: opt to string </e> Standard optimization routines as used in lmfit require real data . This function takes a real FID generated from the optimization routine and converts it back into a true complex form ,real to complex
"<e> NL: Python 2.x : converts value to unicode : param value : value to be converted to unicode : type value : str : return : unicode string : rtype : str ( unicode ) name: convert to unicode </e> For Python 2 , make sure the string is properly converted to unicode : param basestring value : : return :",to string
<e> NL: Generates a reset reply packet . Returns : packet : A reply packet  name: reset reply </e> Generates a GPS time set reply packet . Returns : packet : A reply packet ,set time reply
<e> NL: Select a random available client  name: random backend </e> Select an available repository,pick repo common
<e> NL: Strip credentials from a message dict  name: strip credentials </e> Strip tweet message ,strip tweet
<e> NL: Return ` ` True ` ` if ` ` x ` ` is a valid email address ; otherwise return ` ` False ` `  name: valid email </e> Return True if x is a valid email address ; otherwise return False ,valid email
<e> NL: Displays whether wake on modem is on or off if supported name: get wake on modem </e> Displays whether wake on network is on or off if supported,get wake on network
"<e> NL: Detects whether the hostname given is an IP address . : param str hostname : Hostname to examine . : return : True if the hostname is an IP address , False otherwise  name: is ipaddress </e> Returns the ip address of the given hostname Note : Will return none if the hostname is not found",get ip address
<e> NL: projected density : param x : : param y : : param rho0 : : param a : : param s : : param center_x : : param center_y : : return : name: density 2d </e> Encrypt data using Damgard Jurik Cryptosystem : param m : plaintext : param n : modulus : param g : random public integer g : param s : order n^s : return :,damgard jurik encrypt
<e> NL: Dimensionless open - circuit potential in the negative electrode name: U n </e> Dimensionless negative reaction rate,m n
<e> NL: Scores a sample of text and returns per - category scores : return : scores and status code : rtype : tuple name: score action </e> Use co - occurrences to compute scores ,get trans co
"<e> NL: MLE estimator of linear model . Parameters ---------- X : Design matrix y : Response variable Returns ---------- Intercept ( = 0 if fit_intercept is False),coefficients of MLE ; the regularization parameter before which the variable is not selected name: linear mle tmle </e> MLE estimator of linear model . Parameters ---------- X : Design matrix y : Response variable Returns Intercept ( = 0 if fit_intercept is False),coefficients of MLE ; the regularization parameter before which the variable is not selected",linear mle tmle
<e> NL: Return standby packet  name: get standby request </e> node is either online or standby,is online
<e> NL: Gets the next colour in the Geckoboard colour list  name: get next colour </e> Gets a dict from a Colour object,get c dict
"<e> NL: Return the Loan attached to the given item , if any . : param item_pid : a dict containing ` value ` and ` type ` fields to uniquely identify the item  name: get loan for item </e> Return True if the given item is available for loan , False otherwise . : param item_pid : a dict containing ` value ` and ` type ` fields to uniquely identify the item ",is item available for checkout
<e> NL: Load module from .py/.pyc file . Parameters ---------- name : str Name of the module . path : str Path to .py/.pyc file . Returns ------- mod : module Imported module  name: load module </e> Get the mtime associated with a module . If this is a . pyc or . pyo file and a corresponding . py file exists the time of the . py file is returned ,module getmtime
"<e> NL: Returns the parent directory and module name of the calling file  name: parse module path </e> Require a file which may exist in a parent directory . Searches for the file in the nested directory , and failing that , in its parent(s ) , up to and including the current directory ( but no further ) ",erequire ancestor
<e> NL: Restore schemas from being compatible with storage schemas . Foreign keys related operations . Args : list : resources from storage Returns : list : restored resources name: restore resources </e> Factory returning related storage resources for ` used_by ` ,related used by
"<e> NL: helper function to find the first occurrence of a masked value in a numpy masked array returns None if no masked values are found : param numpy array x : : return : index name: find first masked value </e> Find rows in m filled with masking value . : param m : Numpy matrix to be searched for masked rows . : param masking_value : Value that corresponds to missing contacts , defaults to 0 : returns : Indices of masked rows ",find masked rows
"<e> NL: Check if a given point is inside a polygon  name: is point inside polygon </e> Return True when point ( x , y ) is inside rect ",point in rect
<e> NL: finds the ' vertices ' in the equatorial band around the ' pole ' of radius ' width ' degrees name: polar zone vertices </e> finds the ' vertices ' in the equatorial zone conjugate to ' pole ' with width half ' width ' degrees,equatorial zone vertices
<e> NL: Returns a name that may be used for a temporary file that may be created and removed by a programmer  name: temp file name </e> Replaces words that may be problematic,fix reserved word
<e> NL: Return a set of all command names  name: all command names </e> Check if the names passed are accessed undeclared . The return value is a set of all the undeclared names from the sequence of names found ,find undeclared
"<e> NL: Wait for the mongo - orchestration server to accept connections  name: await connection </e> Saturates the logging server 's max number of connections , ensuring it departs its .accept ( ) loop ",close server
<e> NL: Resolve a hostname to an IP preferring IPv4 addresses  name: find connectable ip </e> Try to resolve the given DNS name to IPv4 addresses and return empty set on ANY error ,resolve to ip addresses
<e> NL: Discover what directory the command should run in  name: get cwd </e> Discover what directory the command should run in ,get cwd
<e> NL: Sets the random seeds to ensure deterministic behaviour . : param seed : The number that is set for the random seeds : type seed : int : return : Confirmation that seeds have been set : rtype : bool name: set seed </e> parse website seeds . @params seeds example : - url1 - user1 : pwd1@url1 - user1 : pwd1@url1|url2|user3 : pwd3@url3,parse seeds
<e> NL: extract all sha256 values from all files inside of a directory using regex and map them to their filepath directory { str } -- path to directory to search return { dict } -- dictionary of filepath as key and found sha256 list as value name: sha256 from dir map </e> calculate sha256 values from files found in a directory and map them to their filepath directory { str } -- path to directory to search return { dict } -- dictionary with filepath as key and sha256 as value,calc sha256 from dir map
<e> NL: Convert an Vector ANTsImage to a RGB ANTsImage name: vector to rgb </e> Convert an RGB ANTsImage to a Vector ANTsImage,rgb to vector
<e> NL: Get SNMP Credential that matches name  name: get snmp cred by name </e> Get NETCONF Credential that matches name ,get netconf cred by name
<e> NL: Merge two dictionaries  name: merge dicts </e> merge two dictionaries ,merge dictionaries
<e> NL: Create a temporary file  name: create temp file </e> Will thaw into a temporary location,auto thaw
<e> NL: Format the actors list of usernames to a cnx - epub compatable format name: format actors </e> Return the dictionary of metadata from the database . This data is keyed using the cnx - epub data structure ,get metadata
<e> NL: Get the URL for the data for a given PDB i d . : param pdb_id : the input PDB i d : return the URL for this PDB i d name: get url </e> Alternative way to look up BLAST for a given PDB ID . This function is a wrapper for get_raw_blast and parse_blast,get blast2
"<e> NL: Set the default value of the ` ` guess ` ` parameter for read ( ) : param guess : New default ` ` guess ` ` value ( True|False ) name: set guess </e> Set the default value of the ` ` guess ` ` parameter for read ( ) Parameters ---------- guess : bool New default ` ` guess ` ` value ( e.g. , True or False )",set guess
<e> NL: Validate and skip past chunk data name: skip past number type </e> Skip past chunk data,skip past data dd
<e> NL: Serializes the given binary batch into JSON . : param MtBatchBinarySmsCreate batch : the batch to serialize : return : dictionary suitable for JSON serialization name: binary batch </e> Serializes the given text batch update into JSON . : param MtBatchTextSmsUpdate batch : the batch update to serialize : return : dictionary suitable for JSON serialization : rtype : dict,text batch update
<e> NL: Return the weight corresponding to single power  name: compute value </e> Return the weight corresponding to single power ,compute value
"<e> NL: Determine if a URL 's response exists in the cache . Parameters ---------- url : string the url to look for in the cache Returns ------- filepath : string path to cached response for url if it exists in the cache , otherwise None name: url in cache </e> Retrieve a HTTP response json object from the cache . Parameters ---------- url : string the url of the request Returns ------- response_json : dict cached response for url if it exists in the cache , otherwise None",get from cache
<e> NL: Serializes params to an url Args : params(Dict ) : dictionary of params Returns(str ) : path url name: params serialize </e> build params { ... } : param dic : dict : return : str,build params
<e> NL: Returns the package name of the given module name name: package name </e> Find the slot with the given name . It 's possible to specify a module name then forwarded to loadConfig ( ) ,get slot
"<e> NL: Parses a list of filenames and returns the set of tools . Args : filenames : A list of filenames ( just basenames , no directory ) . Returns : A set of tool names encoded in the filenames  name: get tools </e> Obtains the polished filenames for the weights and the CSVLogger of the model . # Arguments model_name : String to declare the name of the model # Returns Two strings that will serve as the filenames for the weights and the CSVLogger respectively ",obtain weights CSVLogger filenames
<e> NL: Receive length bytes from a socket object  name: mock server receive </e> Receive an integer from a ` socket ` using ` struct.unpack ` : param sock : ` socket ` to receive integer from : return : ` int `,recv int
<e> NL: Convert a covariance matrix to a correlation coefficient matrix . Return the correlation coefficient matrix and the standard deviations from the covariance matrix  name: cov to cor </e> Normalises a covariance matrix into a cross - correlation matrix . Parameters ---------- covmatrix : ndarray of rank-2 A covariance matrix . Returns ------- corrmatrix : ndarray of rank-2 The cross - correlation matrix ,covmat2 corrmat
<e> NL: Function for getting URL based on mode name: get url </e> Function for getting formatted print,beauty print
"<e> NL: Gets the values of an attribute from JSON name: get attribute </e> Simple wrapper that gets an attribute from ldap3 dictionary , converting empty values to the default specified . This is primarily for output to JSON",get entry property
<e> NL: Get the default datatype used for Tensors Returns ------- dtype : tf.dtype or torch.dtype The current default datatype name: get datatype </e> Converts any user specified datatype into dbrcode and dtype ,datatype to dtype
"<e> NL: Generate a window for a given length . Args : n : an integer for the length of the window . mono : True for a mono window , False for a stereo window . Returns : win : an numpy array containing the window value  name: make win </e> Generate a window for a given length . : param n : an integer for the length of the window . : param mono : True for a mono window , False for a stereo window . : return : an numpy array containing the window value ",make win
<e> NL: Determines whether or not the user wants to upload the extension : return : boolean name: user wants upload </e> Get whether or not Glean is allowed to record and upload data ,get upload enabled
<e> NL: Return argument parser  name: get parser </e> Returns the NNTP argument parser ,setup cmd parser
<e> NL: can the elements of a sequence name: can sequence </e> Extracts elements of the given sequence . : param sequence : The sequence to get elements from . : param indices : The indices of the elements to get . : return : The selected elements ,extract by index
<e> NL: Gets the MOLGENIS version lazily and only returns the version number : ' 8.0.0-SNAPSHOT ' will become ' 8.0.0 ' name: get version number </e> Gets the MOLGENIS version lazily ,get version
<e> NL: Return a numpy array mapping events to events name: event availability array </e> Return a numpy array mapping events to slots,slot availability array
<e> NL: Load file into the module  name: load file </e> Find and load the module ,find and load
<e> NL: Updates the profile 's auth entry with values set by the user . This will overwrite existing values . Args : : msg : ( Message class ) an instance of a message class . : cfg : ( jsonconfig . Config ) config instance  name: update config pwd </e> Updates the profile s auth entry with values set by the user . This will overwrite existing values ,update config pwd
<e> NL: matches an item i d to a name in items.json name: get name </e> matches an item name to an i d in items.json,get id
<e> NL: Validates that the given value is a string  name: validate string </e> Validates the result value is greater or equal to the given lower bound ,result value above
<e> NL: Calculate percentage usage of ' used ' against ' total '  name: usage percent </e> Calculate percentage usage of ' used ' against ' total ' ,usage percent
"<e> NL: When enabled , Container _ _ str _ _ produces full content of bytes and unicode strings , otherwise and by default , it produces truncated output ( 16 bytes and 32 characters ) . : param enabled : bool name: set global print full strings </e> When enabled , Container _ _ str _ _ shows keys like _ _ index _ etc , otherwise and by default , it hides those keys . _ _ repr _ _ never shows private entries . : param enabled : bool",set global print private entries
<e> NL: Imports the specified module dynamically Args : module_path ( str ) : The module path Returns : module : The module that was imported name: import module </e> A chain - of - responsiblity that imports a module from an Iterable . : param modules : A sequence of module names to try importing . : return : The first module to successfully load ,import chain
"<e> NL: Builds a list of values for all keys matching the given "" key "" in a nested dictionary . Args : key ( object ) : Dictionary key to search for data ( dict ) : Nested data dict Returns : list : List of values for given key name: collect key values </e> Finds key values in a nested dictionary . Returns a tuple of the dictionary in which the key was found along with the value",dict find
<e> NL: Deserialize result from tuple  name: result from tuple </e> Deserialize results from a given file handle ,from file
<e> NL: Get currently logged in user data object name: get current user </e> Attempt to get the currently logged in user,get current user
<e> NL: Counts the gaps in a sequence preceding each non - gap position Parameters ---------- sequence : numpy array sequence Returns ------- gapNumbers : list list of ints of the length of the sequence without gaps name: count gaps </e> Morph between more then two sequences @param waves sequence : A sequence of wave cycles @param gaps sequence : The size of the gap between each pair of cycles,morph many
"<e> NL: data is a list of items sort by pos in list ; reverse if True name: sort array </e> data is list data to sort depends is a dictionary { data item:[items to come after ] } returns a list of items in data sort by depends requirements , keeping order of orginal list otherwise",depends tsort
<e> NL: Extract text from HTML name: extract text </e> Extract text from an INSPIRE search ,get text from inspire
<e> NL: Default sorting of GOEA results stored in namedtuples  name: .dflt sortby ntgoea </e> Default sorting of GOEA results ,.dflt sortby objgoea
"<e> NL: Check a bucket exists : param str bucket : Bucket Name : param s3 : : return bool : True if bucket exists , False if bucket does not exist  name: bucket exists </e> Quick and cheap check to see if bucket can be accessed Args : client : a Boto3 client object bucket_name ( str ) : name of bucket to check Returns : bool : Can we access the bucket ?",verify bucket access
<e> NL: Convert data points to values between 0 and 1 using a sigmoid function and return new columns of prefixed data . Args : df : Pandas dataframe . columns : List of columns to transform . Returns : Original dataframe with additional prefixed columns  name: cols to sigmoid </e> Convert data points to values between 0 and 1 and return new columns of prefixed data . Args : df : Pandas dataframe . columns : List of columns to transform . Returns : Original dataframe with additional prefixed columns ,cols to normalize
"<e> NL: Use sdmpy to get all sources and ra dec per scan as dict name: read sources </e> Use sdmpy to get all sources and ra , dec per scan as dict",sdm sources
<e> NL: Construct a duration from its data representation . Parameters ---------- data : : obj:`dict ` The data dictionary . Returns ------- : class:`Duration ` An instance of : class:`Duration `  name: from data </e> Convert a duration object to a duration string ( in seconds ) . Args : duration ( dict ) : Duration dictionary . Returns : str : Duration string ,convert duration to string
<e> NL: Detect if the port is used name: detect port </e> Detect if the database exists,database exists
"<e> NL: Returns the leading numeric part of a string  name: numeric part </e> Returns the leading numeric part of a string . > > > numeric_part(""20-alpha "" ) 20 > > > numeric_part(""foo "" ) > > > numeric_part(""16b "" ) 16",numeric part
<e> NL: Return part of the XML string that defines the requested corner name: get corner </e> Return the list of ForbiddenCombinations that prohibit some part of the requested additions ,find forbidden combinations
"<e> NL: Improves the readability of process - runtime . Only useful , if runtime is greater than 60s . : float runtime : the runtime in seconds : string return : runtime divided in hours , minutes and seconds name: change time format </e> * str * , one of "" runtime "" , "" original "" , "" frozen "" , coming from "" --file - reference - choice "" Notes : Defaults to runtime for modules and packages , as well as standalone binaries , otherwise original is kept ",get file reference mode
<e> NL: Takes in a filename of a notebook and returns a notebook object containing only the cell outputs to export  name: read nb </e> Execute notebook ` nb ` and return notebook with built outputs,fill notebook
<e> NL: Checks if a path is an actual directory name: is dir </e> Checks if a path is an actual directory,is dir
<e> NL: Inspect a FilterSet and produce the arguments to pass to a Graphene Field . These arguments will be available to filter against in the GraphQL name: get filtering args from filterset </e> Inspect a FilterSet and produce the arguments to pass to a Graphene Field . These arguments will be available to filter against in the GraphQL,get filtering args from filterset
<e> NL: Tries to find a board by board name  name: find device by name </e> return a list of default value for index_refine board from a dict initialparameters,fill list valueparamIR
<e> NL: Convert from XML format string to JSON format string . : param xml_str : XML format string . : return : JSON format string  name: xml to json </e> Converts the xml from Alpino into penntreebank format,xml to penn
"<e> NL: Get the comment on a given line . Returns the text of the comment on a given line , or None if there is no comment . If the statement starting on that line spans multiple lines , the last of the comments is used  name: get line comment </e> Sets all comment attributes on a line to indicate no comment is present . Parameters : oLine : ( line object )",remove comment attributes from line
<e> NL: Returns a mapping where all references to symbols are replaced with the current value of these symbols  name: resolve Ref values in mapping </e> Extracts all used symbols from an iterable of paradigms ,paradigms to alphabet
<e> NL: Receives a method and message from the socket . This function blocks the current thread  name: recv msg </e> closes the socket and kills the thread,dont listen
"<e> NL: Convert single devices to a list , if necessary . : param device : Device to check . : type device : str name: prepare droid list </e> Calculates steps to run on device ",steps to run
<e> NL: Constructs compiled regex to parse out reserved tokens  name: make reserved tokens re </e> Prepare reserved tokens and a regex for splitting them out of strings ,prepare reserved tokens
<e> NL: Find all the subtitles of the video name: find subtitles </e> delete all subtitles in path recursively,rm subtitles
<e> NL: Get the latest entry in the Progress queue or None if it is empty . Returns ------- Optional[Progress ] instance of the Progress class or None name: get nowait </e> Get the latest entry in the response queue or None if it is empty . Returns ------- Optional[Action ] instance of the Action class or None,get nowait
"<e> NL: from quat = [ vec , scalar ] = [ sin angle / 2 ( unitvec(x , y , z ) ) , cos angle / 2 ] gives unitvec and angle of rotation around unitvec name: fromQuat to vecangle </e> from quat = [ vec , scalar ] = [ sin angle/2 ( unitvec(x , y , z ) ) , cos angle/2 ] gives unitvec and angle of rotation around unitvec",fromQuat to vecangle
<e> NL: Reads in and formats mothur taxonomy file  name: read taxonomy file </e> Reads in and formats mothur cons.taxonomy file ,read constaxonomy file
<e> NL: has_private will return True if the header has private tags Parameters = = = = = = = = = = dicom : the pydicom.dataset Dataset ( pydicom.read_file ) name: has private </e> Return all non - private tags from a DICOM dataset ,non private tags in dicom dataset
<e> NL: Get the URL for the data for a given PDB i d . : param pdb_id : the input PDB i d : return the URL for this PDB i d name: get url </e> Searches in the original PDB file for the oligomeric status determined by the author . Called by : clean_and_sort ( ),author agrees
<e> NL: Give an ordering to the outer and inner keys used in a dictionary that maps to dictionaries  name: nested key indices </e> Given a nested dictionary from k1 - > k2 > value transpose its outer and inner keys so it maps k2 - > k1 - > value ,transpose nested dictionary
<e> NL: Return list of Inning objects for game matching the game id  name: game events </e> Return dictionary of events for a game with matching i d ,game events
"<e> NL: Deals with the post response from a join room request . : param data : Data received from the server : type data : Dict[str , Any ] name: post join </e> Deals with the post response from a leave room request . : param data : Data received from the server : type data : Dict[str , Any ]",post leave
<e> NL: Hook to add global options name: build option parser </e> Hook to add global options ,build option parser
<e> NL: Convert a box matrix into a box object name: matrix to box </e> Read a box file in EMAN1 box format . : param path : Path to box file : return : List of bounding boxes,read eman1 boxfile
<e> NL: Returns an str(value ) if the value is not None . : param value : None or a value that can be converted to a str . : return : None or str(value ) name: str if not none </e> Strips the value if it is not None . : param value : text to be cleaned up : type value : str or None : return : clean value if one was specified ; None otherwise : rtype : str or None,safe strip
<e> NL: Load a keras model from disk name: load keras model </e> Read keras retinanet model from keras.model.save ( ),read model
<e> NL: Returns an ascending order clause on the versioned unique constraint as well as the version column  name: get order clause </e> Returns an ascending order clause on the versioned unique constraint as well as the version column ,get order clause
<e> NL: Verify if categories is are valid : categories : a list of categories from the command - line : raises : CategoriesError if there are invalid categories in categories : returns : True if all categories are valid name: verify categories </e> returns a queryset of all relevant categories for a the model_name,get relevant categories
<e> NL: Get a dictionary of state names mapped to their legend value  name: state nums </e> Get a dictionary of Backpage city names mapped to their legend value ,city nums
<e> NL: dictorsetmaker : test dictorsetmaker_star2 COMMA name: p dictorsetmaker 10 </e> dictorsetmaker : test dictorsetmaker_star2,p dictorsetmaker 9
<e> NL: accept list of namedtuple return a dict of zipped fields name: zip namedtuple </e> return url to zipped logging,get logging link
<e> NL: Needs a doc string name: get knsym </e> Add params to doc string,add params docstring
<e> NL: Add marker to flagged files  name: mark flagged </e> Build listing for flagged files pseudo - folder ,flagged listdir
<e> NL: Returns the SHA1 of the last commit  name: last commit </e> Returns the details of the last git commit,get last commit
<e> NL: Return the name and extension of the file in path name: get full file name </e> Return file name with extension by bone name and number of ` topping ` flag ,get bone filename
<e> NL: Helper decorator to register a check function  name: define check </e> class decorator to register msg parser,register parser
<e> NL: Convert an attribute filter to string  name: attribute filter to expr </e> Convert an attribute set ( to be used in a filter ) to string ,attribute set to expr
<e> NL: Return the name used when the Cliquet resource was registered along its viewset . : returns : the resource identifier . : rtype : str name: current resource name </e> Return the name used when the kinto.core resource was registered along its viewset . : returns : the resource identifier . : rtype : str,current resource name
<e> NL: This function is receive parameters parameter mean button that is run command or anything : return : Parameters name: get params </e> This function is receive detail parameters : return : Parameters,get detailParams
<e> NL: c - a - a ' : magnesium bicarbonate hydroxide [ HMW84 ]  name: psi Mg HCO3 OH HMW84 </e> c - a - a ' : magnesium - hydroxide chloride bicarbonate [ HMW84 ] ,psi MgOH Cl HCO3 HMW84
<e> NL: Return a key from an entity model instance key or key string  name: normalize key </e> Instantiate a Key instance with the given key,jwk wrap
<e> NL: Compute the Pearson score between 2 lists of vectors  name: pearson score </e> Compute the Pearson ' score between 2 lists of vectors ,pearson score
"<e> NL: remove unwanted items in dicts name: clean dict </e> remove unwanted headers , e.g. the ones used for dictionaries but not desirable in the pch",remove unwanted headers
<e> NL: Filter queryset by a comma delimeted skill list name: by skills </e> Filter queryset by a comma delimeted cause list,by causes
<e> NL: Counting the number columns based on the content of this row name: get cols </e> Counting the number columns based on the content of this row,get cols
<e> NL: Removes all broken links in a directory name: remove broken links </e> Sometime symlinks can get broken if the original files are deleted . Delete such broken links,check broken configure log links
<e> NL: return formatted string per instance name: format output </e> Return a per - thread global batcher instance ,global instance
"<e> NL: "" c - a : sodium chloride [ PM73 ]  name: bC Na Cl PM73 </e> "" c - a : sodium thiosulfate [ PM73 ] ",bC Na S2O3 PM73
<e> NL: Given an interface specification return an API name for it name: get api name </e> Given an interface specification return a cmdline command name,get cmdline command name
<e> NL: Get a model by name for a given API name: describe api model </e> Get the name for a model ,get name
<e> NL: Serializes n as variable size integer to the provided buffer . Buffer has to ha : param n : : param buffer : : param offset : : return : name: dump uvarint b into </e> Finds the value of the input buffer given the type of the field . Since data : param buffer : : param field_type : : param _ byte_order : : param is_string : : return :,get value from type
<e> NL: Parse the command line arguments  name: create argument parser </e> Parse command - line arguments . @return : The command line arguments . @rtype : C{argparse . Namespace },parse args
<e> NL: Deserializes the given value from JSON  name: from json </e> Deserializes model from checkpointDir using capnproto,.read from checkpoint
<e> NL: Determine if process with name is running . : param ` name ` : process name name: is running </e> Gets process name from process i d,get process name
"<e> NL: Absolute path to command : param str name : command : return : command args : rtype : list name: get shell </e> Decodes a packet and returns its payload : param command_data : the command data payload : type command_data : str : returns : the encoded command , ready to be sent to a remote GDB : rtype : str",remote decode
<e> NL: Heuristically check function or expression  name: is jsfunc </e> Heuristically extracts the base indentation from the provided code ,get base indentation
"<e> NL: check_repo checks if a repo object is of type Repo from git , if not , attempts to make one : param repo : path to a local repo , a git . Repo object , or a url name: check repo </e> Return filter for analysis request . Parameters - repo : repo slug name , fe . buildtimetrend / python - lib",get repo filter
"<e> NL: Given a callable , determine the input variables and the parameters . Parameters ---------- func : callable Returns ------- inputs , params : tuple Each entry is a list of inspect . Parameter objects name: get inputs and params </e> Check that the declared number of inputs ( the length of ` input_type ` ) and the number of inputs to ` func ` are equal . Parameters ---------- input_type : List[DataType ] func : callable Returns ------- inspect . Signature",valid function signature
<e> NL: Class method to get a reference to the RSS feeds manager . @return reference to the RSS feeds manager ( FeedsManager ) name: feeds manager </e> Try to find RSS feeds from a tags in the webpage,get feeds from atags
<e> NL: Configures a logger based on the configuration  name: configure logger </e> Configures the frozen pool and keeps all kwargs,configure frozen pool
<e> NL: makeNa(expression ) Replace values which pass the expression with NA . Replaces all values in ` ` vid ` ` for which ` ` func ` ` evaluates to ` ` True ` ` with ` ` nan ` `  name: make na </e> makeNa(expression ) Replace values which pass the expression with NA . Replaces all values in ` ` vid ` ` for which ` ` func ` ` evaluates to ` ` True ` ` with ` ` nan ` ` ,make na
<e> NL: It computes the sum of negative log softmax loss : -sum_i lables_i * log(exp(scores_i ) / ( exp(scores_1 ) + ... + exp(scores_n ) ) ) name: compute softmax loss </e> For functions of the form : a / ( exp(k1 * ( x - x1 ) ) + exp(k2 * ( x - x2 ) ) ),double exp
<e> NL: Get a client socket name: get client sock </e> Get a client socket,get client sock
<e> NL: A function to use the SQLite row as dict for string formatting name: dict factory </e> This just adds the collection ID to a dict from sqlite . Row ,add collection info
"<e> NL: Take a package name or module object and return the module . If a name , the module is imported . If the passed or imported module object is not a package , raise an exception  name: get package </e> Can a module ( like scipy or numpy ) be imported without a severe and avoidable performance penalty ? The rational behind this is that some parts of temci do n't need scipy or numpy . : param module : name of the module",can import
"<e> NL: Given a template name , it returns the relative path from the template dir  name: get template path </e> Given a template name , it returns the relative path from the template dir ",get template path
<e> NL: Calculate the total number of line in the given file  name: get total line for file </e> r Calculate the allowed total angular momenta ,perm j
<e> NL: Find all non - callable members of a protocol  name: non method protocol members </e> Find all non - callable members of a protocol ,non method protocol members
"<e> NL: Return the path of a file directory : param file : file path : type file : str : return : File path : rtype : str name: get directory </e> Given a filesystem path of a file , return its contents . : param str path : path to a file : return : str ( contents of the file )",read path
<e> NL: Returns whether the value can be used as a standard integer  name: is int like </e> Returns whether the value acts like a standard float ,is float like
<e> NL: Checks if a given socket on localhost is in use . This is done by trying to open the port and check if it succeeds . : param port : int The port number name: check socket is free </e> This function initializes a socket on the passed ' port ' for listening . If something fails ( such as the port being in use ) the method returns None ,init socket
"<e> NL: Convert spherical coordinates into Cartesian coordinates : param r , theta , phi : spherical coordinates , with theta and phi in radians . : return : tuple of Cartesian coordinates ( x , y , z )  name: spherical to cartesian </e> Return the spherical coordinates for coordinates in Cartesian space ",cartesian to spherical
<e> NL: Return argument parser  name: get parser </e> Returns the HyperKitty argument parser ,setup cmd parser
<e> NL: Get a NumPy array view of a VNL vector  name: get array view from vnl vector </e> Get a NumPy array view of a VNL vector ,get array view from vnl vector
"<e> NL: initializes the logger to a level with a name logger = initialize_logger(name , log_level ) Parameters ---------- name : str name of the logger log_level : Returns ------- logging . Logger a logger set with the name and level specified name: initialize logger </e> Formats for console logging if coloring is enabled or not . Show the level name if coloring is disabled ( e.g. INFO ) . Also , Root logger should show the logger name ",get console log format
<e> NL: Sign the message message with the key : param priv_key : the private key : param message : the message to be signed : returns the signature of the message name: sign message </e> given message / rfc822 returns the content,decode message
"<e> NL: Returns the current module of the app , or None if there is no current module found . name: get current module name safe </e> Returns the current version of the app , or None if there is no current version found ",get current version name safe
<e> NL: Set item to last position if position not defined  name: before insert </e> Set item to last position if position not defined ,before insert
"<e> NL: Finds the keycode associated with a string representation of a keysym . : param kstr : English representation of a keysym . : return : Keycode , if one exists . : rtype : int name: lookup string </e> Finds the keycode associated with a string representation of a keysym ",lookup string
<e> NL: Create only one instance of each distinct datetime name: memorized datetime </e> Splits a TAF report into each distinct time period,split taf
<e> NL: we check if the branch we want to send commits to is up to date or not . if current branch is equal to into branch we check if we want to commit name: can merge </e> Depending on how we extract data from pysam we may end up with either a string or a byte array of nucleotides . For consistency and simplicity we want to only use strings in the rest of our code ,convert from bytes if necessary
<e> NL: Creates a tree - like list of choices name: .mk dropdown tree </e> Creates a tree - like list of choices,mk dropdown tree
"<e> NL: determine the displacement in terms of latitude , longitude , and altitude name: calculate geographic offset </e> Returns the location of an astronomical object in the sky in terms of azimuth and altitude ",get sky location
"<e> NL: Gets a relative path from a start path : param path : str , path to get relative path : param start : str , Start path to calculate the relative path from name: get relative path </e> Returns full path of incoming relative path . Relative path is relative to the script location ",get full path
"<e> NL: Returns global cache object . : rtype : Cache : return : cache object name: get cache </e> Toggles ignoring cache for each request . If ` true ` , cache will not be used . : param cacheDisabled : Cache disabled state . : type cacheDisabled : bool",set cache disabled
<e> NL: walk dir and return . * files as a list Note : directories are walked recursively name: get files with extensions </e> walk all files for a dir,dir walk
<e> NL: Build a hash of model verbose names to models name: models generator </e> Convert a model s verbose name to the model class . This allows us to use the models verbose name in steps ,get model
<e> NL: Domain has a bad chain if its canonical https endpoint has a bad chain name: is bad chain </e> Domain has a bad hostname if its canonical https endpoint fails hostname validation,is bad hostname
<e> NL: given a list and a list of items to be first return the list in the same order except that it begins with each of the first items  name: list order by </e> Return a list of the first ` n ` items in ` source_iter ` ,iter take
"<e> NL: Do check whether we need a pull , we get the hash of the HEAD of the remote 's master branch . Then , we see if we have this object locally  name: is pull needed from remote </e> Decide whether we ignore a local variable from the traceback . We need to avoid reporting on certain things so that we do not end up with a long list of locals which hides the useful information about the function ",ignored local variable
"<e> NL: returns a list of keys matching ` pat ` if pat==""all "" , returns all registered options name: select options </e> returns a list of keys matching pat",select options
"<e> NL: Given a module label , finds the name of the matching Oscar app from the Django app registry  name: find registered app name </e> Returns a list of app labels of the given apps_list now properly handles new Django 1 . 7 + application registry ",app labels
<e> NL: Clean up the response string name: sanitize response </e> USED FOR TEST ONLY : clean up all records and start again : rtype : str,reset ks
<e> NL: Fetch messages for given user . : param user : User instance name: get messages </e> Creates a new user class with extracted user attributes for later use . A new user object is needed to avoid overwritting of e.g. ` ` user.records ` ` ,extract user info
<e> NL: Create a new file handler for the current thread and return it  name: get log handler </e> Create a new thread for given worker ,create thread
<e> NL: Convert raw CLI output to structured data using TextFSM template  name: get structured data </e> Convert raw CLI output to structured data using TextFSM template ,get structured data
"<e> NL: Check that the tgt s submodule is included by src if they belong to the same module  name: is submodule included </e> Merge src into tgt , overwriting as needed . : param tgt : The target dict . : param src : the source dict ",dict update recursive
<e> NL: r Returns the secondary mass from the chirp mass and primary mass  name: mass2 from mchirp mass1 </e> Returns the in - plane spin from mass1 mass2 and xi2 for the secondary mass ,chi perp from mass1 mass2 xi2
"<e> NL: Determines the number of filters within the given layer  name: get num filters </e> Determines the number of terms needed to be within eps of the sum , using the integral test ",int sum sinh
"<e> NL: Utility method to return the default parsers able to parse a dictionary from a file . : return : name: get default config parsers </e> Utility method to return the default parsers able to parse an object from a file . Note that MultifileObjectParser is not provided in this list , as it is already added in a hardcoded way in RootParser : return :",get default yaml parsers
<e> NL: generated source for method getFileContentJSON name: get file content json </e> generated source for method getErrorResponse,get error response
"<e> NL: Transform the circle outline into tkinter lines name: outline circle with tkinter </e> Simply wraps the tkinter function of the "" same "" name ",show warning
<e> NL: Returns the provided ' number ' with a random sign . : param number : The number to add a random sign ( positive or negative ) to : type number : float : returns : - number ( float ) - The provided number with a random sign added name: random sign </e> Return the given number as a string with a sign in front of it ie . + if the number is positive - otherwise ,signed number
<e> NL: Get algorithm function by name by looking up in globals with the ' algorithm ' attribute set name: get algorithm </e> Exact set cover by the dancing links algorithm,dancing links
<e> NL: Returns True if ` node ` is in the scope of ` parent `  name: in scope </e> Appends parent scope name to ` relative_scope_name `,absolute scope name
<e> NL: Returns the browse record of the article category given by uri name: get banner category </e> Returns the browse record of the article category given by uri,get article category
<e> NL: Return the Windows directory e.g. C:\Windows  name: get windows dir </e> Group windows from one station into channels and count the number of windows in that channel : param sta_win : : return :,sort windows on channel
"<e> NL: given N matrices , return N inverses name: inv n </e> Extended euclidean algorithm to find modular inverses for integers",prime field inv
<e> NL: Parse a version number into a version object  name: parse version </e> Standard version number ,get program version
"<e> NL: Returns a boolean of whether the raw password matches the three part encoded digest . If setter is specified , it 'll be called when you need to regenerate the password  name: check password </e> Return a boolean of whether the raw password matches the three part encoded digest . If setter is specified , it 'll be called when you need to regenerate the password ",check password
<e> NL: Return default credentials as specified in ~/.aws / credentials name: get credentials </e> Active with valid credentials,fail active
<e> NL: Reset the global session variable . Mostly useful for unit tests  name: reset ironic session </e> Reset the global session variable . Mostly useful for unit tests ,reset swift session
<e> NL: Returns the language part of a po - file  name: get language </e> Returns the product part of a file . We assume files to be something like domain-language.po . Example : atcontenttypes-pt-br.po,get product
"<e> NL: Create a Store , given a dict  name: from dict </e> Prepares a dict so it could store network information ",make dict
<e> NL: Get the unit object of the ingredient  name: parse unit </e> Get all individual comments from the ingredient and return them as a list ,parse comments
"<e> NL: This method returns an updated property for a given a property . If there is no update for the property , the given property is returned  name: get corresponding property </e> Given a filepath pointing to a JSON file and a property , return the property stored in that JSON file ",get property from json file
"<e> NL: Create a temporary directory and return the path . Returns : unicode : The name of the new directory  name: make tempdir </e> provide tmpdir which is scoped for the whole backend : return : str , path to the temporary directory",get backend tmpdir
<e> NL: Returns session variable : param basedir : ( str ) Base directory of database folder : param db_name : ( str ) Name of database for which to create session : return Object : name: get engine </e> Initialize DB object : param db_url : URL to the MongoDB : type db_url : str : param db_name : Database name to use : type db_name : str : rtype : None,init db
<e> NL: Get a unique i d for the object name: get id </e> Get a unique demux sample ,get sample
<e> NL: Takes a block_representation and returns the previous block hash name: get prev block hash </e> Takes a block_representation and returns the previous block hash,get prev block hash
<e> NL: takes a pandas df and returns a spark RDD name: get rdd from df </e> Takes inputs Ft and Fo and returns dF / F,calc dF F
"<e> NL: Verifies that a password matches a given hash : param password : The password to verify : param hashed : The hash to verify the password against : return : True if the password matches , otherwise False name: verify password </e> Simple password - based authentication - the same password of the host like on the Instagram : param request : request to autheticate : param password : Instagram and Web password of the host user : return : True or False if authentication failed",check password
"<e> NL: Returns a field 's "" type "" as a list . : param dict field : the field : returns : a field 's "" type "" : rtype : list name: get types </e> Returns the key type , key name and if key is a compound list then returns the index pointed by the field Arguments : field : csv header field",extract key and index
<e> NL: Takes one metric or a wildcard seriesList followed by a constant n . Draws only the metrics with a maximum value below n  name: maximum below </e> Takes one metric or a wildcard seriesList followed by a constant n . Draws only the metrics with a minimum value below n ,minimum below
<e> NL: Creates a set of jobs containing jobs at difference depths of the dependency tree retaining dependencies as strings not Jobs  name: populate jobset </e> Creates a list of sets containing jobs at different depths of the dependency tree ,populate cmdsets
<e> NL: Crop the image ( usually MRI ) to fit within the bounding box of a segmentation ( or set of seg ) name: crop to seg extents </e> Crop the images to ensure both fit within the bounding box,crop to extents
"<e> NL: a boolean test except 0 and False are considered True name: is empty </e> As : func:`node_matcher ` , except that empty resname and false PTM_atom attributes from ` node2 ` are removed ",ptm resname match
"<e> NL: Private function to determine version name: get version </e> private function , which assigns correct types to h5py extracted values from _ browse_dataset ( )",assign types
"<e> NL: Get BBNDK simulator metadata . : param session : Requests session object , default is created on the fly . : type session : requests . Session ( ) name: sim metadata </e> Get BBNDK runtime metadata . : param session : Requests session object , default is created on the fly . : type session : requests . Session ( )",runtime metadata
<e> NL: Copy the array if its base points to a parent array  name: copy array if base present </e> Copy the array if its base points to a parent array ,copy array if base present
<e> NL: Recursive check specific to properties  name: rec check properties </e> Recursive check specific to arrays ,rec check array
<e> NL: Convert value to integer  name: get int </e> Convert an integer to a 1D format with error correction for transformers ,int to 1d
<e> NL: Remove the last ' Template ' in the name  name: template name from class name </e> Remove the last Template in the name ,template name from class name
"<e> NL: Makes sure that whenever scale is zero , we handle it correctly . This happens in most scalers when we have constant features . Adapted from sklearn.preprocessing.data name: handle zeros in scale </e> Makes sure that whenever scale is zero we handle it correctly . This happens in most scalers when we have constant features . Adapted from sklearn . preprocessing . data",handle zeros in scale
<e> NL: Returns a generator for items in a list which has been stored in a csv file name: read list generator </e> Returns a list which has been stored as a csv file,read list
<e> NL: Used to convert ` { ' param ' : ' Description String ' } ` into ` { ' param ' : { ' description ' : ' Description String ' } } ` : param data : A dictionary containing a ' params ' property name: expand params desc </e> Common to swagger definition . : param base : The base dict . : param description : An optional description . : param resource : An optional resource . : param options : Any additional options,to swagger
"<e> NL: For a given method name return the service type which supports it . : param method : the method name to lookup : return : the service type or None , an interface i d needs to be added to this : rtype : str name: get service type </e> For a given method name return the service type which supports it . : param method : the method name to lookup : return : the service type or None , an interface i d needs to be added to this : rtype : str",get service type
<e> NL: Return a list of instances with this name . The list may be empty . name: get by name </e> Return the restrict identifier ( may be empty ) ,check restrict
<e> NL: Return msa ( residues ) and subexon i d cluster matrices from msa  name: msa matrices </e> Convert a msa from chimerics to a matrix . Each cell has the subexon number ( Index ) or nan for gaps and padding ,create msa matrix
<e> NL: delete object will delete a file from a bucket name: delete object </e> Delete random symbol from a string,rand delete
<e> NL: Returns a new Fragment from a dictionary representation  name: from dict </e> Returns a new Fragment from a dictionary representation ,.from dict
<e> NL: Returns a list of all packages . : return : the list of packages : rtype : list name: all packages </e> Collect outdated packages . @returns : list of packages,collect packages
<e> NL: given a list of SaltNode \ s returns a list of lists where each list contains the indices of the nodes belonging to that sentence  name: extract sentences </e> when given a dictionary where every key contains a list of IDs replace the keys with the list of files matching those IDs . This is how you get a list of files belonging to each child for each parent ,abf group files
<e> NL: Evaluate accuracy of a model on the given data set  name: evaluate accuracy </e> Function to evaluate accuracy of any data iterator passed to it as an argument,evaluate accuracy
<e> NL: Compile regex patterns  name: prep regex </e> Loads and returns regex patterns dictionary ,load regex patterns
<e> NL: Includes only hosts that have the status ' up ' name: include up hosts </e> Yield hosts that have a specific vulnerability,get hosts by cve
<e> NL: Get the source object for emails sent from the admin site  name: get admin source </e> Get admin s emails from django settings,get admins from django
<e> NL: Returns the full name of the class of the given object : param obj : Any Python object : return : The full name of the class of the object ( if possible ) name: full class name </e> Returns type object of class specified by name Args : name : full name of the class ( with packages ) Returns : class object,get class by name
<e> NL: Read a file and return content name: file read </e> If s is a file name read the file and return it s content . Otherwise return the original string . Returns None if the file was opened but errored during reading ,try read file
<e> NL: Heuristic to determine whether the treebank has blinded texts or not name: contains blinded text </e> Heuristic to determine whether the treebank has blinded texts or not,contains blinded text
<e> NL: Get information about the current dynamic projection data  name: get dynamic projection info </e> Returns the current projection . : return : Numpy array with projection ,get projection
<e> NL: returns the transform for the given actor name: get transform </e> returns the absolute velocity for the given actor,get velocity
"<e> NL: Retruns the Registry instance . This function implements a flavour of Singleton . If no instance is available a new instance is created , else the existing instance is returned  name: get registry </e> Returns ` RequestInfo ` instance . If object was already created during ` ` request ` ` it is returned . Otherwise new instance is created with details populated from ` ` request ` ` . New instance is then cached for reuse on subsequential calls ",create or get from request
"<e> NL: Goes through the list of gunicorns setting the selected as the one after the currently selected  name: move selection </e> Finds the selected ids After the scene has been rendered again in selection mode , this method gathers and returns the ids of the selected object and restores the matrices . : return : The selection stack",find selection
<e> NL: Return the list of packages that should not be split globally  name: skip split </e> Split an iterable of packages into packages that need to be passed through and those that need to have their disk location resolved ,. split packages
"<e> NL: Reduce the summaries of two files by summing  name: reduce product of two files by summing </e> Construct subcommand summaries : param command_summaries : Commands and their summaries : type command_summaries : list of ( str , str ) : returns : The subcommand summaries : rtype : str",make command summary string
<e> NL: Parse a content type  name: parse ctype </e> Parse response and return content - type,get content type
<e> NL: Removes breakpoint on particular native event . : param eventName : Instrumentation name to stop on . : type eventName : str name: remove instrumentation breakpoint </e> Sets breakpoint on particular native event . : param eventName : Instrumentation name to stop on . : type eventName : str,set instrumentation breakpoint
<e> NL: set up * roles * ( a sequence of roles ) as proxy roles and return context  name: setup proxy roles </e> Create roles as defined in the data ,migrate roles
<e> NL: Return GC Content of Sequence name: gc content </e> Return AT Content of Sequence,at content
<e> NL: Compute znp flags for ( arg1 - ( arg2 + cf ) ) name: update flag arith subwc zn </e> Compute znp flags for ( arg1 - arg2 ),update flag arith sub znp
<e> NL: Check if a container is running . Args : name : Name of the running container  name: is running </e> Check if container is running : return bool : container is running,is running
<e> NL: Returns the bounding box coordinates of a country : return : name: get country bbox </e> Provides a select box for country selection,country field
"<e> NL: Re - stretch given axes  name: make anisotropic </e> stretch image according to stretchDim = { axis : length , ... }",stretch img
<e> NL: Access the response body from an HTTP response . Args : response ( ~requests . Response ) : The HTTP response object . Returns : bytes : The body of the ` ` response ` `  name: get body </e> Process response from batch caller Args : response ( Object ) : Requests library response object success ( bool ) : success condition given by bool or lambda Returns : str : batch status FINISH | FAILED,process response
<e> NL: create a temporary file name: get tmpfile </e> Function to create file,write file
<e> NL: Check if argument is > = 0 name: non negative </e> Check no hyphen at the end of rand_name ( ) argument T108,no hyphen at end of rand name
<e> NL: Loads the HParams configuration from a hparams file of a trial  name: load hparams </e> Construct the training script args from the hparams,expand hparams
<e> NL: Fetches each course inside a given page  name: fetch courses </e> Parses or generates a udemy course url of a given link inside a page ,parse udemy course url
<e> NL: Returns external resources  name: get resources </e> Returns external resources ,get resources
<e> NL: Compare 2 sets of private numbers . This is for comparing 2 private RSA keys  name: cmp private numbers </e> Compare 2 sets of public numbers . These is a way to compare 2 public RSA keys . If the sets are the same then the keys are the same ,cmp public numbers
<e> NL: Return whether the specified device is an AMD device or not Parameters : device -- DRM device identifier name: is amd device </e> Generate new device i d,generate device id
"<e> NL: Return whether or not a transaction ( dict format ) is a memo transaction . : param transaction : a dict format transaction : type transaction : dict name: is memo </e> determine if the transaction would be applied , even if zero transactions are found : param transaction : the working transaction : returns : a boolean value to determine if the transaction needs to be filtered out or not",is transaction to be applied
"<e> NL: return a list of all argument names name: rec get names </e> Returns list of num_seqs sequential , unique names . First argument is ignored ; expect this to be set as a class attribute ",assign sequential names
<e> NL: Return True if code is similar . Ignore whitespace when comparing specific line  name: code almost equal </e> Return True if code is similar ,code almost equal
<e> NL: Extract a value from the XML element  name: value from xml </e> Extract element data for psi_tables,extract element data
<e> NL: Determine if given release version is valid . : param version : Release version : type version : str : rtype : bool name: is valid release version </e> Get Game Release Version List,get release version list
<e> NL: Load the environments from a polymorphic datatype  name: load environments </e> Construct a list of CodeUnits from polymorphic inputs ,code unit factory
<e> NL: This just echoes back the payload  name: auth echo </e> This just echoes back the payload ,auth echo
<e> NL: Parse data files from the data directory name: read table </e> Parse the DSSP data file,parse dssp
<e> NL: Change name on thread change  name: thread change sync name </e> Contextmanager that change MAXBLOCK in ImageFile ,image save buffer fix
<e> NL: Create Module from a LLVM IR string name: parse assembly </e> Create Module from a LLVM IR string,parse assembly
<e> NL: Computes cross product between two vectors name: cross product </e> Compute inner product between two time domain waveforms weighted by noisecurve ,inner product
<e> NL: Calculates the total cost of all edges in the given graph : param nxg : A networkx object with nodes and edges . : type nxg : nx . Graph : return : The total cost of all edges in the graph . : rtype : float name: total edge cost </e> Calculates the hypothetical total edge cost if the graph were to be complete . : rtype : float : param nxg : The graph to calculate the hypothetical edge cost of . : return : The total edge cost if the graph were complete ,hypothetical max edge cost
<e> NL: Find all files in a directory and return the relative paths to those files  name: filepaths in dir </e> Automatically try to discover Django settings files return them as relative module paths ,detect django settings
<e> NL: Get a list of the names of parent fields for the current model  name: get parent field names </e> Get the number of names that exist at the current block,namedb get num names
<e> NL: Checks to see if the residue is non - canonical  name: .check for non canonical </e> Checks to see if the residue is non - canonical ,check for non canonical
<e> NL: Get the current plugin information ( from a plugin ) name: get current </e> Get the current plugin information ( from a plugin ),get current from
<e> NL: Gets a list of all directories which are also routes in routes/ name: get route entities </e> Return a list of url_patterns from the registered routes ,make url patterns
<e> NL: Get the long description from the README file name: get readme </e> Get the long description of a package from its README.rst file Args : dirname ( : obj:`str ` ) : path to the package Returns : : obj:`str ` : long description,get long description
<e> NL: Sanitizes http request cookies name: sanitize http request cookies </e> Sanitizes http request query string,sanitize http request querystring
<e> NL: Returns the script minus any opcodes that would push data  name: remove opcode by data </e> Returns the opcodes to push the data on the stack ,push data
<e> NL: This method will initialize ` ` SharedInstance.instance ` ` and return it . The purpose of this method is to have offer single default bitshares instance that can be reused by multiple classes  name: shared blockchain instance </e> This method will initialize ` ` SharedInstance.instance ` ` and return it . The purpose of this method is to have offer single default bitshares instance that can be reused by multiple classes ,shared bitshares instance
<e> NL: Parse document with content . Content is placed in file ' document.xml '  name: parse document </e> Parse document with content ,parse document
<e> NL: Read a hdf5 file into a dictionary name: h5 to dict </e> Read a hdf5 file into a dictionary,h5 to dict
"<e> NL: Returns a list of the table row data values for table name: get table data </e> return Max Depth for a df row passed with X & Y columns , for use in a SWMM5 Junctions table",max depth from raster
"<e> NL: Put data to a Sparky file object . This function does not untile data . This should be done before calling this function name: put data </e> This function does not deal well with NaN values , so make sure to remove them before calling ",find peaks
<e> NL: Return True if all files in a list are SPEC files . : param List[str ] filenames : list of filenames name: are all specfile </e> Return the filenames of the available XML schemas . These are essentially all the files with the .xsd extenstion in the ` DIRPATH_SCHEMAS ` folder : return : a list of XML schema filenames,get available xml schemas
<e> NL: Return numpy scalar from python scalar  name: numpy value from python value </e> Returns pairwise energy . : param points : size : scalar ; smooth_factor : scalar : rtype : pairwise energy matrix ,compute pairwise cost
<e> NL: Converts a sequence of string ranges to a sequence of floats  name: range to numeric </e> Returns sequence string ,get sequence
<e> NL: This will be called as a fallback when server - side rendering fails  name: render blank markup </e> Returns each row as a : class:` . PseudoNamedTupleRow ` . This is the fallback factory for cases where : meth:`.named_tuple_factory ` fails to create rows ,pseudo namedtuple factory
<e> NL: Check trace attributes presence in all the traces of the log Parameters ------------ log Log attributes_set Set of attributes Returns ------------ filtered_set Filtered set of attributes name: check trace attributes presence </e> Check event attributes presence in all the traces of the log Parameters ------------ log Log attributes_set Set of attributes Returns ------------ filtered_set Filtered set of attributes,check event attributes presence
<e> NL: Return the corresponding atomic symbol for a given atomic number . Parameters ---------- number : int An atomic number . Return ------ int The corresponding atomic symbol  name: atomic symbol </e> Guesses the atomic number,guess atomic number
<e> NL: View to download a document  name: get account credentials </e> View to download a document ,get account credentials
<e> NL: Convenience wrapper for adding comment to code list if the list is not empty  name: commented code list </e> Convenience wrapper for NameCollector,collect names
<e> NL: Extract the Package - Name and the Package - Version from the Debian - Package . : param file_path : Path to the Rpm - Package : return : A PackageInfo()-Object with Package - Version and Package - Name  name: get packageinfo from packagefile </e> Extract the Package - Name and the Package - Version from the Pacman - Package . : param file_path : Path to the Pacman - Package : return : A PackageInfo()-Object with Package - Version and Package - Name ,get packageinfo from packagefile
<e> NL: Return a weight for the signal w(x ) = 1 - exp(-x / mu ) name: signal weight </e> p(k ) = { \mu^k \over k ! } \exp(-\mu ),rnd poisson
"<e> NL: Get all attributes defined for an account . : param account : the account name to list the scopes of . : param session : The database session in use . : returns : a list of all key , value pairs for this account  name: list account attributes </e> Returns a list of all the roles for an account . Returns a list containing all the roles for the account ",.get roles
<e> NL: If the password is in the order on keyboard  name: is asdf </e> When returning a password from a TTY we assume a user is entering it on a keyboard so we ask for confirmation ,get tty password
<e> NL: counts the number of bits in a number name: n bits8 </e> Returns the number of bits that are set in a 32bit int,number of set bits
"<e> NL: Search for two sets of [ ] [ ] @param s : string to search name: more than one index </e> Filter dataframe to exclude matching columns , based on search for "" s "" : param s : string to search for , exclude matching columns",filter exclude
<e> NL: Return t as a list  name: get list </e> return a param as a list,as list
<e> NL: Calculates the request payload size name: calculate size </e> Calculates the request payload size,calculate size
<e> NL: Attempts to determine the file type based on the extension . The extension is assumed to be the last dot suffix . Parameters ---------- file_path : str The file path to infer the file format of . Returns ------- str : A label described the file extension  name: infer file format </e> Tries to infer a protocol from the file extension ,format from extension
<e> NL: list of endpoint and specific level Returns list of endpoint : rtype : List[Endpoint ] name: get logs </e> This function sets up the engine.io endpoint as a route for the application . Note that both GET and POST requests must be hooked up on the engine.io endpoint ,create route
<e> NL: Checks a given strings against a list of strings . * * string * * string a url * * filters * * a list of strings name: filter request </e> Return list of strings of maximal length in a set of strings ,get longest substrings
<e> NL: Helper function to load module based on its dotted - string name  name: load module </e> Helper function to add new my_element to my_list based on its type ,add to list
<e> NL: Get item from a list by the id field name: get by id </e> Create a mapping ( item to ID / ID to item ) from a dictionary . Items are ordered by decreasing frequency ,create mapping
<e> NL: Utility function for converting tuple inputs to dict inputs  name: convert tuples to dicts </e> checks string for potentially malicious inputs for eval function,check eval
"<e> NL: First send strings from any given file one string per line sends any strings provided on the command line  name: generate input </e> First send strings from any given file , one string per line , sends any strings provided on the command line . : param options : ArgumentParser or equivalent to provide options.input and options.strings . : return : string",generate input
"<e> NL: Given a list of links , separate them into pages that can be displayed to the user and navigated using the 1 - 9 and 0 number keys  name: get link pages </e> Given a list of links separate them into pages that can be displayed to the user and navigated using the 1 - 9 and 0 number keys ",.get link pages
<e> NL: for json output add a full stop if ends in et al name: copyright holder json </e> for json output add a full stop if ends in et al,copyright holder json
<e> NL: ` ` int SDL_JoystickNumAxes(SDL_Joystick * ) ` ` Get the number of general axis controls on a joystick  name: SDL JoystickNumAxes </e> ` ` int SDL_JoystickNumHats(SDL_Joystick * ) ` ` Get the number of POV hats on a joystick ,SDL JoystickNumHats
"<e> NL: Return a response wrapped in the appropriate wrapper type  name: wrapped resource </e> Return a response wrapped in the appropriate wrapper type . Lists will be returned as a ` ` ` ResourceList ` ` ` instance , dicts will be returned as a ` ` ` Resource ` ` ` instance ",wrapped resource
<e> NL: Convert parser string to parameter value  name: par from parser </e> Convert string parameter value to a list with a single element ,to list
<e> NL: Sort a list of Messages based on dependencies  name: sort dependencies </e> Return a : class:`XsdValidator ` object based on available dependencies ,get validator
<e> NL: Returns a list of enum type names from the current database  name: list enum types </e> return list of names for ENUM states of a Channel . Returns None for non - ENUM Channels,get enum strings
<e> NL: Recreate the string from the bit array name: bit array to string </e> Recreate a given subformat ,create subformat
<e> NL: Custom JSON decoder that allows construction of a new Smi instance from a decoded JSON object  name: .json hook </e> Read pandoc attributes ,parse pandoc
<e> NL: Returns a nice string representation of a function name: function to str </e> Helper function to ensure ' params ' is in a nice state for later use ,initialize params
<e> NL: Checks if the passed field has a default value . : param field : The field that should be checked : return : True if the field has a default value name: has default </e> Ensure that dict has field ' type ' with given value ,validate type
<e> NL: Trim low quality bases from the 5'-end of the sequence name: trim leading </e> Trim low quality bases from the 3'-end of the sequence ,trim trailing
"<e> NL: Read model from file . The model must be stored using gzip and pickle : param fname : filename : type fname : str ( path ) name: load model </e> create a knn model object . : param fname : dataset file : type fname : str : return : model object , lookup table : rtype : tuple",create knn
<e> NL: Validate ` outdir ` and determine if files would be overwritten name: check outdir and keys </e> Make directory ' plot ' in the ` outdir ` and return its path,make plotdir
"<e> NL: Encode a blob , this is actually a link which may point to an S3 location name: encode blob </e> Encode an S3Key , this is just a link to the S3 URL , with a special _ _ s3key _ _ type",encode key
"<e> NL: Return a tuple of ( returncode , stdout )  name: locate command </e> Returns returncode of example",run example
<e> NL: Returns a project ID  name: get project id v3 </e> Returns a Piccolo / Picalor compatible ID,toidpic old
"<e> NL: Format a line of content to be a list of values . Parameters ---------- content : anything Single object , or list of objects name: format content line </e> berDecodeMultiple(content , berdecoder ) - > [ objects ] Decodes everything in content and returns a list of decoded objects . All of content will be decoded , and content must contain complete BER objects ",ber decode multiple
<e> NL: Read from sys.stdin and return an array of floats . An integer at the beginning of sys.stdin defines the array 's length  name: read float1 d </e> Read from sys.stdin and return an array of integers . An integer at the beginning of sys.stdin defines the array 's length ,read int1 d
<e> NL: Merge a list of corpora into one  name: .merge corpora </e> Download corpora for multinli ,maybe download corpora
"<e> NL: Convert a comma separated string into a list Parameters ---------- value : str The string object to convert to a list Returns ------- list A list based on splitting the string on the ' , ' character name: csv list </e> Converts a string argument to a list by splitting it by spaces . Returns the object if not a string",to list
<e> NL: Calculate the Hamming distance between two sequences . Args : seq_1 : first sequence to compare seq_2 : second sequence to compare ignore_case : ignore case when comparing sequences ( default : False ) Returns : distance : Hamming distance name: hamming distance </e> Get the binary Hamming distance between two sequences of bytes ,hamming distance
<e> NL: Checks if a string is a valid credit card number . If card type is provided then it checks that specific type otherwise any known credit card number will be accepted  name: is credit card </e> Remaps Oscar credit card object as Helcim dictionary . Parameters : card ( obj ) : A credit card object provided by Django Oscar . Returns : dict : Credit card details formatted for django - helcim ,remap oscar credit card
<e> NL: Get the size of the shared memory file system  name: get shared memory bytes </e> Method to check to use shared memory ,safe worker check
"<e> NL: Return a matching behavior if it exists , or None . If i d is None , return the default for name  name: get behavior </e> Prepare variables for OTA versus full check . : param ota : The starting version if OTA , None if not . Default is None . : type ota : str",tcl prep otaver
"<e> NL: Scrape text that may or may not exist and remove a specific text Args : element : the element containing the text name : the class name text : the text to be removed Returns : A string of text name: get optional text replace </e> Takes a text and generates a list of possible entities : arg text : the text to look at : returns : generator where each part ( except the first ) starts with an "" & """,next possible entity
<e> NL: This method is only for testing purpose  name: reset management networks </e> This is only for testing pourposes resets the DepotManager status,. clear
<e> NL: Prevent other users from changing configuration until the lock is released  name: add config lock </e> Ensure that the lock is released ,lock release
<e> NL: Create docutils nodes for the configuration field s title and reference target node  name: create title node </e> Create a target node that marks a configuration field ,create configfield ref target node
"<e> NL: Turn an example row into a tuple , either of names or of values name: example row </e> Turn an SQLAlchemy model into a dict of field names and values ",object as dict
<e> NL: Return true of the function has been marked with @transform_generator name: is transform generator </e> Return true of the function has been marked with,is transform generator
<e> NL: Returns True if is print or False otherwise name: is print </e> Returns True if val is a list ( or enumerable ) of strings . False otherwise,is list of strings
<e> NL: Compare y_true to y_pred and return the accuracy name: accuracy score </e> Compute y_pred and the derivative of the deviance w.r.t coef ,y pred deviance derivative
"<e> NL: Check for assertEqual(type(A ) , B ) sentences N317 name: assert equal type </e> Check for assertEqual(type(A ) , B ) sentences SL317",assert equal type
"<e> NL: Determines if the provided string is a valid Stellar address . : param str address : address to check : return : True if this is a correct address : rtype : boolean name: is valid address </e> Determine if the address is SPECIAL Note : This is super bad , improve it",is special
<e> NL: Return list of all regions name: get regions </e> Retrieve all regions as strings,get all regions
<e> NL: get the notebook from its name name: get notebook </e> Get a notebook name from a path to a notebook,nb name from path
<e> NL: Truncate string values  name: truncate string </e> Truncate string values ,truncate string
<e> NL: Return the floating point value for a given option in a section name: config get float </e> Return the integer value for a given option in a section,config get int
"<e> NL: Convert v to a class representing v > > > arr = list(to_ordered_struct([{'a ' : 1 } , { ' a ' : 3 } ] ) ) > > > arr[0].a 1 name: to ordered struct </e> Unpack bytes to bits : param arr : list Byte Stream , as a list of uint8 values Returns ------- bit_arr : list Decomposed bit stream as a list of 0/1s of length ( len(arr ) * 8)",decompose bytes to bit arr
<e> NL: Performs the authentication steps on the given connection . Raises an error if all attempts fail . : param connection : the connection to be used ( must be connected ) . : param retries : how many times should we retry on failure . : return : name: do authentication </e> Return an open mysql db connection using the given credentials . Use retries and sleep to be robust to the occassional transient connection failure ,open conn
<e> NL: Parse the input as a list : param string the string to parse : return a list containing the input from the user name: parse as list </e> Parse example_command to get inputs . Each input stored as element in a dictionary list ,parse example command
<e> NL: Retrieve a model from an app_label / model_name combo . Raise Http404 if the model is not a valid snippet type  name: get snippet model from url params </e> retrieve a content type from an app_name / model_name combo . Throw Http404 if not a valid setting type,get content type from url params
<e> NL: Retrieve a model from an app_label / model_name combo . Raise Http404 if the model is not a valid snippet type  name: get snippet model from url params </e> retrieve a content type from an app_name / model_name combo . Throw Http404 if not a valid setting type,get model from url params
<e> NL: Connect to the Ravello API and return a connection  name: create client </e> Return the Ravello application we 're working in ,get ravello application
"<e> NL: Defines pause on exceptions state . Can be set to stop on all exceptions , uncaught exceptions or no exceptions . Initial pause on exceptions state is ` none ` . : param state : Pause on exceptions mode . : type state : str name: set pause on exceptions </e> Throws despatchbaysdk exceptions in response to suds generic ' Exception ' exceptions",handle suds generic fault
<e> NL: Returns ACLs of given container  name: get acls </e> Generate an arista specific name for this ACL . Use a unique name so that OpenStack created ACLs can be distinguishged from the user created ACLs on Arista HW ,acl name
<e> NL: Create a new GDAL Dataset in memory name: mem ds </e> Create a new GDAL Dataset in memory Useful for various applications that require a Dataset,mem ds
"<e> NL: Returns a list of column indices pertaining to the colNames specified name: get table column name indices </e> Read the first line of the file and extract column names from it . Returns a dictionary with two elements : colnames A list of column names indices A dictionary of column indices , indexed by name",load column names
"<e> NL: Take a list or array and return an int array . Parameters ---------- arr : list of ndarray Returns ------- arr_int : ndarray of int name: get int arr </e> Takes data generated by a map of eigensystem calls and returns the eigenvalue and eigenstate tables Parameters ---------- esys_mapdata : list of tuple of ndarray Returns ------- ( ndarray , ndarray ) eigenvalues and eigenvectors",recast esys mapdata
<e> NL: Loads the network device details if not cached already  name: retrieve device cache </e> Retrieves the grains from the network device if not cached already ,retrieve grains cache
<e> NL: Check if given regex is of type ECMA 262 or not  name: is ecma regex </e> Check if given regex is of type ECMA 262 or not . : rtype : bool,is ecma regex
"<e> NL: type parser for user defined and builtin functions . Parameters ---------- arg : function to parse Returns ------- parsed : OrderedDict('value ' , ' signature ' , ' fullargspec ' , ' isbuiltin ' ) name: function parser </e> type parser for user defined and builtin classes . Parameters ---------- arg : class to parse Returns ------- parsed : OrderedDict('value ' , ' signature ' , ' fullargspec ' , ' isbuiltin ' , ' inheritance_tree )",class parser
<e> NL: Returns the absolute path of the database name: get db file </e> Compose the absolute path of a template ,resolve template
<e> NL: Build a Config object using the default configuration file location  name: from app </e> Build a new ReviewConfig object using the ini config file and the defaults if they exist in the app_config,build review config
<e> NL: Takes a list of strings and returns them as [ ` Choice ` ]  name: to choices </e> Returns a list of assset types for a multiple choice dropdown,asset type list
<e> NL: Deregisters an output class . The output classes are identified based on their NAME attribute . Args : output_class ( type ) : output module class . Raises : KeyError : if output class is not set for the corresponding data type  name: deregister output </e> Deregisters a decompressor for a specific compression method . Args : decompressor ( type ) : decompressor class . Raises : KeyError : if the corresponding decompressor is not set ,deregister decompressor
<e> NL: Get the checksum for the AWS data fetched  name: get checksum </e> Get the checksum for the Google data fetched ,get checksum
<e> NL: Takes two dictionaries and merges them . : param a : A dictionary . : type a : dict : param b : A dictionary . : type b : dict : returns : A merged dict . : rtype : dict name: dict merge </e> Take x dictionary and insert / overwrite y dictionary values : type x : dict : type y : dict : return :,merge dicts
"<e> NL: Return the first value for an attribute in the given entry . If the attribute does not exist in the entry , return ` None `  name: get attr </e> Return None if cache entry does not exist ",cache get last in slice
<e> NL: c - a - a ' : magnesium chloride nitrate [ PK74 ]  name: psi Mg Cl NO3 PK74 </e> c - a - a ' : sodium chloride nitrate [ PK74 ] ,psi Na Cl NO3 PK74
<e> NL: Get the code object from a function  name: code object </e> Transforms the code object into a new code object,transform bytecode
"<e> NL: Returns True if "" s "" matches any of the given patterns . False otherwise  name: matches pattern </e> Helper function to see if given name has any of the patterns in given matches",name matches
"<e> NL: The approximation of the phi(xi ) function as xi->inf . Used in calculation of beta_bh . Described in Chodorowski et al . ( 1992 )  name: phi inf </e> Update steep down areas ( SDAs ) using the new maximum in between ( mib ) value , and the given complement of xi , i.e. ` ` 1 - xi ` ` ",update filter sdas
<e> NL: Runs shell commands in a separate process name: run cmd </e> Run commands in separate processes ,run commands
"<e> NL: Return a valid representation class from ` ` value ` ` or raise exception  name: get repr cls </e> Return a valid differential class from ` ` value ` ` or raise exception . As originally created , this is only used in the SkyCoord initializer , so if that is refactored , this function my no longer be necessary ",get diff cls
"<e> NL: Read the file content and load it as JSON  name: read file </e> load input file and returns it , in read - only mode",load input
"<e> NL: Generator that yields the elements of an iterable n at a time  name: generate batches </e> Given a generator which yields an iterable , get an element ",pick one
"<e> NL: Parse sentences and paragraphs in the section . Parameters ---------- soup : bs4.BeautifulSoup The parsed XML data . Returns ------- list of ( list of str ) List of paragraphs given as list of sentences  name: parse paragraphs </e> Extract paragraphs from Wikipedia . Parameters ---------- section : str min_paragraph_length : int , optional ( default : 140 ) Returns ------- paragraphs : list",extract paragraphs
<e> NL: Find the element specified by the given path starting from the root element of the document . The first component of the element path is expected to be the name of the root element . Return None if the element is not found  name: element find from root </e> Convert an unsigned integer to a numpy binary array with the first element the MSB and the last element the LSB ,to bin
"<e> NL: If contents of ` field ` is not a list of positive doubles , make ` field ` RED with tooltip caption ` message ` & return 1 . Otherwise return 0  name: is list of positive doubles </e> If contents of ` field ` is not a list of n doubles , make ` field ` RED with tooltip caption ` message ` & return 1 . Otherwise return 0 ",is list of n doubles
"<e> NL: Return transversals for the group with BSGS base , gens  name: get transversals </e> Return transversals for the group with BSGS base , gens",get transversals
"<e> NL: Import a file with full path specification . Allows one to import from anywhere , something _ _ import _ _ does not do  name: import path </e> Import a file with full path specification . Allows one to import from anywhere , something _ _ import _ _ does not do ",import path
<e> NL: include : INCLUDE STRING name: p include </e> Fix to avoid packages include in slackbuilds folder,alien filter
<e> NL: Load the config from a file and return the config class  name: load config </e> Rebuild the task and the sequence from a config file ,build from config
<e> NL: Return True if the two names are considered equal  name: name equals </e> Check if two module models may be considered the same,models compatible
<e> NL: Deletes files and also directory if it 's empty : param files : list of files which should be deleted : type files : list name: delete files </e> Archive given files : param files : list of file names : param zip_filename : target zip filename : param base_path : base path for files : return :,archive files
<e> NL: Check VirtualBox Guest Additions version  name: additions version </e> Unmount VirtualBox Guest Additions CD from the temp directory ,additions umount
<e> NL: Generate date / time string in ISO format with added time zone info name: generate date time </e> Generate RENEWING time ,gen renewing time
"<e> NL: Convert : mod:`datetime ` or : mod:`date ` to the Gregorian date as UTC float days , preserving hours , minutes , seconds and microseconds . Return value is a : func:`float `  name: to ordinalf </e> Convert : mod:`datetime ` to the Gregorian date as UTC float days , preserving hours , minutes , seconds and microseconds . Return value is a : func:`float ` ",dt to float ordinal
<e> NL: Create a child text node name: create node </e> Set node value ( create a child if necessary ),set node
<e> NL: Get a valid semantic version for tag name: semantic version </e> Get a valid semantic version for tag,semantic version
<e> NL: Return queryset with the ordered data : param queryset : queryset : param ordering_by : order by single feature : return : name: get queryset by order </e> Here we clean the queryset,query clean
<e> NL: A generator which iterates over the vertices in Reverse - Cuthill - McKee order . For use as a vertex ordering for the sequential placer  name: rcm vertex order </e> A generator which iterates over the vertices in Reverse - Cuthill - McKee order ,rcm vertex order
<e> NL: Convert a list of dictionaries into a dictionary of dictionaries  name: dicts to dict </e> Return a list of dictionaries from a result - set ,as dicts
<e> NL: Factory for creating the argument parser name: arg parser </e> Create the yaml parser object with this factory method ,get yaml parser roundtrip
"<e> NL: Return all of the requirements of ` dist ` that are present in ` installed_dists ` , but have incompatible versions  name: get incompatible reqs </e> Return all of the requirements of ` dist ` that are n't present in ` installed_dists ` ",get missing reqs
"<e> NL: Removes the prefix from the string if it exists , and returns the result  name: remove prefix </e> Removes the suffix from the string if it exists , and returns the result ",remove suffix
"<e> NL: Return an RGB tuple ( float 0 to 1 ) from an hexadecimal string representation  name: hex to rgb </e> Return an RGB tuple converted from an XYZ tuple , along with a bool indicating whether clipping occured ",rgb from xyz
"<e> NL: given a 32 bit int , returns a 28 bit value with sync - safe bits removed may raise ValueError if the value is negative , larger than 32 bits or contains invalid sync - safe bits name: decode syncsafe32 </e> given a 28 bit int , returns a 32 bit value with sync - safe bits added may raise ValueError is the value is negative or larger than 28 bits",encode syncsafe32
<e> NL: Read TCP port allocations from the allocation file  name: read allocations </e> Read IP address allocations from the allocation file ,read allocations
<e> NL: Return a socket  name: get socket </e> Return DDP socket object ,get socket
"<e> NL: Return a list containing tuples of e.g. ( ' _ _ init _ _ ' , ' example / import_test_project/__init__.py ' ) name: get directory modules </e> Return a list containing tuples of e.g. ( ' _ _ init _ _ ' , ' example / import_test_project/__init__.py ' )",get directory modules
"<e> NL: Absolute path to command : param str name : command : return : command args : rtype : list name: get shell </e> Parse a string to command name and arguments . : param comm : A string consisting 1 or more words separated by spaces and an optional json as the last word : return : 2-tuple : command name , args list",parse command
<e> NL: Returns the security policy of a distributed virtual portgroup name: get dvportgroup security policy </e> Returns the out shaping policy of a distributed virtual portgroup,get dvportgroup out shaping
"<e> NL: Given a url with authentication components , extract them into a tuple of username , password  name: get auth from url </e> Given a url with authentication components , extract them into a tuple of username , password . : rtype : ( str , str )",get auth from url
"<e> NL: Given a list or vector of data , this returns the mean , lower , and upper confidence intervals to the level of confidence specified ( default = 95 % confidence interval )  name: mean confidence interval </e> Returns tuple of ( num_of_matches , array_of_matches ) arranged highest confidence match first . : param filename : path to file : return : list of possible matches , highest confidence first",magic file
"<e> NL: Check if a list has only unique elements Returns a list of duplicated elements name: list has duplicates </e> A cycled latin square permutation of elements . If elements is a integer the elements=[0 , ... , elements ] is used . Parameters ---------- elements : int or list list of elements or a number",cycled latin square
<e> NL: Returns atom section from mol2 provided as list of strings name: get atomsection </e> Returns atom section from mol2 provided as list of strings,. get atomsection
<e> NL: Return the merged metadata dictionaries from all descendant spans . Presedence of matching properties follows the order of a pre - order tree traversal  name: combine metadata </e> We do a pre - order traversal of the tree to calculate the text and tail of each node,set tree text
<e> NL: Return new returning based on input and context  name: merge returning </e> Return new returning based on input and context ,merge returning
<e> NL: Takes an arbitrary data structure and tries to convert it into a data frame Parameters ---------- data : object data to be converted into data frame Returns ------- data : data frame name: make df </e> Transform data frame to list of dict ,to index row dict
<e> NL: Returns ` ` datetime.datetime ` ` from natural language time deltas > > > parse_human_datetime('now ' ) < = datetime.now ( ) True name: parse human timedelta </e> Offset time ( in milliseconds ) from a datetime.datetime object to now ,milliseconds offset
<e> NL: Create a dot node with a given color . Uses RED by default . Parameters ---------- n : Node key for graph G. Returns ------- Dot The Dot VMobject  name: get dot node </e> Create dot graph representations ,generate dot
<e> NL: Remove columns ending with I from a pandas . DataFrame name: remove I columns </e> Remove columns ending with I from a pandas . DataFrame Parameters ---------- df : dataFrame Returns ------- None,remove I columns
<e> NL: recursively remove dictionary keys with None values name: clean null terms </e> Recursively remove keys with a value of ` ` None ` ` from the ` ` in_dict ` ` collection,remove nones
<e> NL: Returns a handler for logging streams : param formatter : logging formatter for this handler : return : logging handler name: get console handler </e> Create a handler for logging purposes . : param debug : Does debug information need to be logged ? : return : The logging handler ,create logging handler
<e> NL: Convert tabled data to a dictionary : param path : path to the file to read : param columns : field names : param sep : fields separator : param skip : number of lines to skip on the source : return : dictionary name: table to dict </e> Internal method to help drop elements from a dict . : param d : : param skip : : return :,drop from dict
<e> NL: Load all backend modules specified in the config name: load backends </e> Load all frontend modules specified in the config,load frontends
"<e> NL: Obtain the source code of a Python function and create an AST . : param f : Python function . : return : A 4-tuple of ( AST , function filename , function line - number , source code as string )  name: function to ast </e> Return data about a function source including file name line number and source code ",func source data
<e> NL: Converts a model name to the actual model file ( .pickle/.pt ) in the model download cache . Parameters ---------- model : str The model name . Returns ------- Path The path to the pickle / pt file corresponding to the model name  name: cached model file </e> Check if a Turi create model is pickle safe ,is not pickle safe gl model class
<e> NL: get list of models . Feature from XML node entry name: .get features </e> get list of models . DbReference from XML node entry,.get db references
"<e> NL: Given the set of runs , pull out metrics input : run list output : metrics dict and metrics names name: get metrics </e> Averages the per - epoch metrics from multiple executions ",average histories
<e> NL: generate an error string from the given code name: gen estring </e> Build a string from the current error code + error report structure ,yices error string
<e> NL: get the number of records for all tf files inside a dirpath name: get number of records </e> Recursively collect the files contained inside dirpath ,collect files
<e> NL: Convert a varint to an integer . : param bytes : Bytes containing the varint . : return : integer name: unpack varint </e> ZigZag Transform : Encodes signed integers so that they can be effectively used with varint encoding . See wire_format.h for more details ,zig zag encode
"<e> NL: Read the control file in JSON format and extract the blocks of simulation , general parameters , clustering and spawning : param jsonParams : Control file in JSON format from where the parameters will be read : type jsonParams : json str name: load params </e> Read the control file in JSON format and extract the blocks of simulation , general parameters , clustering and spawning : param jsonParams : Control file in JSON format from where the parameters will be read : type jsonParams : json str",load params
"<e> NL: Get all callable methods of an object that do n't start with underscore returns a list of tuples of the form ( method_name , method )  name: methods of </e> Get all callable methods of an object that do n't start with underscore returns a list of tuples of the form ( method_name , method )",methods of
"<e> NL: Checks if a file should be skipped based on its name . If it should be skipped , returns the reason , otherwise returns None  name: should skip file </e> Return a list of vocabularies that should be skipped when auto output to disk for the specified format ",vocabulary skip
<e> NL: dictorsetmaker : test dictorsetmaker_star2 COMMA name: p dictorsetmaker 10 </e> dictorsetmaker_star2 : dictorsetmaker_star2 COMMA test,p dictorsetmaker star2 2
<e> NL: c - c'-a : calcium potassium chloride [ HMW84 ]  name: psi Ca K Cl HMW84 </e> c - c ' : calcium potassium [ HMW84 ] ,theta Ca K HMW84
<e> NL: Validate the match if right character is in a given sequence . : param chars : : type chars : : param match : : type match : : return : : rtype : name: chars after </e> Validate the match if right character is in a given sequence ,chars after
<e> NL: Wrapper utility that returns a test vpn service  name: create vpnservice no subnet </e> Wrapper utility that returns a test vpn service ,create vpnservice
<e> NL: Formats output from get_all_rules and returns a table  name: get rule table </e> Formats output from get_all_rules and returns a table ,get rule table
<e> NL: Initialize a schema instance from a YAML map : param name : schema name : param inobj : YAML map of the schema : return : schema instance name: from map </e> Return a valid ICachedItemMapper . map for schema,schema map
<e> NL: utility method to extract the query element from a URI : param uri : the URI to parse : return : name: parse query </e> Checks whether the given ` uri ` is a * URI * reference : param str uri : the given ` uri ` : return : True if a * URI * reference : rtype : bool,is uri
<e> NL: Classify the input resource as a remote RPM or not  name: is remote package </e> Using the specified input resource assemble a list of rpm URLS ,assemble remotes
<e> NL: Executes a command : param command : The command to execute : return : The status code name: execute command </e> Check if a command is supported : param command : the command to execute : return : boolean,check command
<e> NL: Get the first non empty line from doc  name: get first line </e> Fetch first non - none / empty result of applying ` ` apply_func ` ` ,fetch first result
"<e> NL: Determine if a given template exists so that it can be loaded if so , or a default alternative can be used if not  name: template exists </e> Subroutine of ` ` all_intervals_covered ( ) ` ` . Check if column and diagonal strip of x are all white . If so , x can not be covered . Vertex function is not extreme ",white strip
<e> NL: Return a set of non - unique values for iterable values  name: non unique </e> P values for given f values ,ftest p
<e> NL: Helper function to check if the Session is authenticated  name: is authenticated </e> Decorate each HTTP verb method to check if the request is authenticated,wrap class
"<e> NL: check if path is testcase path or path list . Args : path ( str / list ) : file path or file path list . Returns : bool : True if path is valid file path or path list , otherwise False  name: is testcase path </e> Construct a dispatch - usable path from a string , Path instance , or other iterable ",prepare path
<e> NL: This function computes approximated weights for the Gaussian kernel  name: get kernelweights </e> The approximated Jacobian is,jac uniform
<e> NL: Triggers when exiting the given testrun name: trun exit </e> Triggers when exiting the given testsuite,tsuite exit
<e> NL: Get path to local executable . : param executable : Name of executable in the $ PATH variable : type executable : str : return : path to executable : rtype : str name: get path to executable </e> yield file names of executable files in path,yield accessible unix file names
"<e> NL: Return Filesystem or None name: get fs </e> Generate a filesystem path from a namespace name or pid . Generate a filesystem path from a namespace name or pid , and return a filesystem path to the appropriate file . Returns the nspath argument if both nsname and nspid are None ",get ns path
<e> NL: Groups a list of items by group id  name: group items </e> r Groups a list of items by group id ,group items
"<e> NL: Determine if value is a subclass of type _ Will work even value is not a class name: issubclass safe </e> Return a canonical value for the "" type "" key . Note that this will return [ ] , the empty list , if the value is a list without any allowed type names ; * even though * this is explicitly an invalid value ",get type
<e> NL: Iterate over all child : class:` . Node`\ s of a given * node *  name: get children </e> Iterate over all child nodes or a node ,iter child nodes
<e> NL: Check if x server is running name: system supports plotting </e> Check Tendermint compatability with BigchainDB server,tendermint version is compatible
<e> NL: Check if all element in l1 are in l2 name: all in </e> Positional Arguements : samples : Numpy Array . Required . metric : String . ' l1 ' or ' l2 ' . Required ,get sample weight
"<e> NL: Safe version of getattr . Same as getattr , but will return ` ` default ` ` on any Exception , rather than raising  name: safe getattr </e> iterate all the keys and attributes associated with a class , without using getattr ( ) . Does not use getattr ( ) so that class - sensitive descriptors ( i.e. property.__get _ _ ( ) ) are not called ",iterate attributes
<e> NL: Sort based on position . Sort with s as a tuple of the sort indices and shape from first sort  name: flds sort </e> High level SCT for testing submission results . Args : col_names : names of columns to test for equality . Defaults to all . sort : whether to sort the rows of the results . match : argument passed to test_column ,check result2
<e> NL: decode the key and append fields name: encode keys </e> decode the key and append fields,encode keys
<e> NL: Generate a status string for the status code : param int status : the status code to look - up : returns : string for the value or an appropriate Unknown value name: response for status </e> Perform HEAD request and return status code,get status code
<e> NL: Build a concrete computation instance from a computation definition . : param comp_def : the computation definition : return : a concrete MessagePassingComputation name: build computation </e> Core function for a classical damage computation ,classical damage
<e> NL: Registers a plugin class . The plugin classes are identified based on their lower case name . Args : plugin_class ( type ) : class of the plugin . Raises : KeyError : if plugin class is already set for the corresponding name  name: register plugin </e> Registers a plugin class ,.register plugin
<e> NL: Extract details for a single stream from the catalog name: stream details from catalog </e> Extract details for Application ,get details
<e> NL: calculate electric field as a function of z- sigma is a number density per unit area eps is dielectric constant name: calc field </e> Alters a potential so that it is periodic across the structure . V - potential ( array ) eps - dielectric constant ( array ) dx - step size ( nm ),calc periodic potn
<e> NL: Wrapper utility that returns a test service profile  name: create service profile </e> Wrapper utility that returns a test floating IP ,create floatingip
<e> NL: Return rows of file as list name: load lines </e> 2D list column align : param list|tuple rows : rows : param bool left : default True : rtype : list,col align
<e> NL: Clean a dictionary of picard key - value pairs  name: format picard params </e> Clean a dictionary of dwgsim key - value pairs ,format dwgsim params
<e> NL: Exports a journal into a single file  name: write file </e> Exports a .tsv file of the dataframe created by generated_pairwise_gene_match_df ( ),export pairwise gene match report
<e> NL: process_tree_files : Download files from nodes Args : tree ( ChannelManager ) : manager to handle communication to Kolibri Studio Returns : None name: process tree files </e> get_file_diff : Download files from nodes Args : tree ( ChannelManager ) : manager to handle communication to Kolibri Studio Returns : list of files that are not on Kolibri Studio,get file diff
<e> NL: The balancing - file Parameters ---------- project_folder : str Returns ------- balancing_file : str name: balancing file </e> The result folder Parameters ---------- project_folder : str Returns ------- result_folder : str,result folder
"<e> NL: Pad a timeseries to match the specified [ start , end ) limits To cover a gap in data returned from a data source name: pad series </e> Pad a timeseries to match the specified [ start end ) limits",pad series
"<e> NL: Get the encrypted GitHub token in Travis  name: get token </e> Get the encrypted GitHub token in Travis . Make sure the contents this variable do not leak . The ` ` run ( ) ` ` function will remove this from the output , so always use it ",get token
<e> NL: Retrieve units from the string . Parameters ---------- string : str the string to parse Returns ------- units : ` ~astropy.units . Unit ` the units contained in the string name: parse units </e> Compute clustering index Parameters ---------- Nu : int Number of units Nc : int Number of clusters Returns ------- clust : float 0 if units are not clustered ( checkerboard ) 1 if units form a single cluster,single clustering
"<e> NL: If the user has asked for each directory name to be shortened , will return the name up to their specified length . Otherwise returns the full name  name: maybe shorten name </e> If the user has asked for each directory name to be shortened will return the name up to their specified length . Otherwise returns the full name ",maybe shorten name
<e> NL: Render a string for config section name: format config </e> Render a string for space section,format space
<e> NL: Format neo4j results as target sensors name: format target elements </e> Create neo4j safe properties,sanitize data
<e> NL: json serializer that deals with dates name: json int dttm ser </e> json serializer that deals with dates,json int dttm ser
<e> NL: Build model from csv file  name: build model </e> Build the Resnet50 based level 1 model : param lock_base_model : : return :,build model resnet50 avg
<e> NL: Parse PPM file bytes to Pillow Image name: parse buffer to ppm </e> Parse PNG file bytes to Pillow Image,parse buffer to png
"<e> NL: This function generates a list of ips from an input string . This input can contain ips seperated by "" , "" . : param ips : string with ips seperated with "" , "" : return : a list of ips : rtype list of strings name: parse ips </e> Reviews an IPS patch to insure it has only one EOF marker . : param fhpatch : File handler of IPS patch : returns : True if exactly one marker , else False",eof check
<e> NL: asserts that a sequence 's length is > the defined minimum length name: check minimum length of sequence </e> Get sequence length from user . : return : sequence length as int,get len
<e> NL: Get a list of exposed actions that are callable via the ` ` do_action ( ) ` ` method  name: list actions </e> Get a list of exposed actions that are callable via the ` ` do_action ( ) ` ` method ,list actions
<e> NL: Returns a list of all known user names  name: get users </e> Load the list of known accounting tags,load accounting tags
"<e> NL: Given a Java Pipeline , create and return a Python wrapper of it . Used for ML persistence  name: from java </e> Load the peer Java object of the ML instance ",load java obj
<e> NL: Format number of seconds to % H:%M:%S name: fmt time </e> Parse rate and return number of seconds to pause between calls to C{scale } ,parse rate
<e> NL: Fix for tasks without a module . Provides backwards compatibility with < 0.1.5 name: fix module </e> Fix for tasks without a module . Provides backwards compatibility with < 0 . 1 . 5,fix module
<e> NL: Convert HTML code to tags  name: html to tags </e> Convert some HTML tags to latex equivalents ,convert html subscripts to latex
<e> NL: converts list / dict / object of unicode / string to string object : param obj : given unicode / string object : type obj : ` any ` : returns : string object : rtype : : obj:`str ` name: to string </e> Recursively strip all strings found on an object . : param obj : obj to process : return : object processed,strip strings
<e> NL: Return model props details : type model_cls : spannerorm.base_model . BaseModel : param model_cls : : rtype : dict : return : name: get model props details </e> Return model prop by name : type model_cls : spannerorm.base_model . BaseModel : param model_cls : : type prop_name : str : param prop_name : : rtype : property | None : return :,get model prop by name
<e> NL: Delete one or more messages from a queue in a region name: delete message </e> delete all messages from Lizard inbox,clear inbox
<e> NL: Set the global Adapter instance . Parameters : adapter(Adapter ) : The instance to set as the global adapter . Model - specific adapters will not be replaced . Returns : Adapter : The input adapter  name: set adapter </e> Google Analytics adapter factory,google analytics factory
<e> NL: Replace name of environment variable with its value  name: resolve indirect </e> Reset environment variable GMT_DATADIR to its old value ,reset gmt datadir
<e> NL: Returns the text of all files in a directory  name: read dir </e> Opens all json - config files in a directory and returns a list of each files content ,open config files
<e> NL: Process single file into object file and return the object file name  name: process file </e> Given a file name to a valid file returns the file object ,file contents
<e> NL: Return the kind of a file - id or None if it does n't exist  name: get kind for file id </e> Return the cluster or None if it does not exist ,cluster get
<e> NL: Return valid kwargs to function func name: get valid kwargs </e> The function to encode kwargs . : param : to_encode : kwargs to encode . : return : encoded kwargs : dict,encode kw11
<e> NL: A series of resblocks starting with a downsampling Convolution2D name: resblock body </e> A series of resblocks starting with a downsampling Convolution2D,resblock body
<e> NL: define the crest simulation name: crest simulation A </e> define the epicyclic_gearing second simulation : annulus - planet,eg sim annulus planet
<e> NL: Convert all fractional coordinates to cartesian  name: frac2cart all </e> Convert all fractional coordinates to cartesian ,frac2cart all
<e> NL: Makes a mask ( 1 = inside aperture ) for a circular aperture name: generate aperture </e> retrieve the aperture correction for this exposure,get apcor
<e> NL: Return dict of all images name: all images </e> binyenstack(stack ) Applies Yen 's algorithm on a set of images ,binary yen stack
<e> NL: Remove a specific prefix from the start of a string  name: remove prefix </e> Remove prefix ` start ` from sting ` s ` . Raises a : py : exc:`ValueError ` if ` s ` did n't start with ` start ` ,drop prefix
<e> NL: Normalizes glyph right margin  name: normalize glyph right margin </e> Normalizes glyph left margin ,normalize glyph left margin
<e> NL: Subsamples new vector from vector of orig items . Returns all items if requested sample is larger than number of items . This version uses the multinomial to sample WITH replacement  name: subsample multinomial </e> Subsamples new vector from vector of orig items . Returns all items if requested sample is larger than number of items . This version uses the cumsum / frequency distribution method ,subsample freq dist nonzero
"<e> NL: Decode a Unicode string returned from B2 in an HTTP header . : param s : a unicode string to decode : type s : str : return : a Python unicode string . : rtype : str name: b2 url decode </e> Decode dictionary back into unicode : param dict[str , object ] d : Keys : rtype : dict[unicode , object ]",decode dict
"<e> NL: Convert an object ` s ` to float if possible . Function to be passed into : func:`map ` or a list comprehension . If the argument can be interpreted as a float it is converted , otherwise the original object is passed back  name: conv float </e> Take an object , and if it is a PyMacaron model , serialize it into json so it can be passed as argument of a Celery task . Otherwise return the object unchanged",model to task arg
<e> NL: Recovers the session mapped with the CAS service ticket received in the SAML CAS request at CAS logout name: get session </e> Executes the method provided in settings to get the CAS server URL dynamically,get server url
<e> NL: Returns the initial structures after expanding the initial structures wildcard : param initialStructureWildcard : Wildcard that matches the initial structures : type initialStructureWildcard : str : return : list of str -- The expanded initial structures name: expand initial structures wildcard </e> Validate the structures so that all of them should have the same lattice Args : structures : list of pymatgen structures Returns :,validate structures
<e> NL: Encrypts and returns the message ` ` message ` ` using the shared key ` ` k ` ` and the nonce ` ` nonce ` ` . : param message : bytes : param nonce : bytes : param k : bytes : rtype : bytes name: crypto box afternm </e> Hashes and returns the message ` ` message ` ` . : param message : bytes : rtype : bytes,crypto hash sha512
<e> NL: year month - > number of days in that month in that year  name: days in month </e> Determines the number of days of a specific month in a specific year ,max days in month
"<e> NL: Return calculation result as dict . Header entries are the keys and the columns are the values as lists of numbers  name: get selected output </e> original ' , ' are replaced as ' _ _ ( CM ) _ _ ' and new lines are as ' _ _ ( LF ) _ _ '",get output from url chunks iter
<e> NL: is_prime returns True if N is a prime number False otherwise name: is prime </e> returns True if the values in the list L are all co - prime otherwise it returns False ,co prime
<e> NL: parses the board file returns the properties of the board specified name: get all board </e> Update the control board with the specified fitted parameters ,update control board calibration
<e> NL: Get all the history data for the given country : param instance : class instance : param country : str : return : dict name: get history by country </e> This method returns the total deaths across all countries and also returns total deaths per country . : param instance : instance of the class : return dict,get total stats
<e> NL: Parse game.xml data to find the stadium  name: get stadium </e> Parse game.xml data to find the game information ,get game
<e> NL: Finds lines containing the search string and replaces the whole line with the specified replacement string  name: replace lines in files </e> Finds lines containing the search string and replaces the whole line with the specified replacement string ,replace lines in files
"<e> NL: Returns the number of children @returns number of children : 0 , 1 , 2 name: count children </e> finds the FN that has terminals as children",get lowest fn
<e> NL: used to update the base pointer of the register file name: update base addr </e> Returns byte padding required to move the base pointer into proper alignment,calc padding for alignment
<e> NL: Return whether rollback_to_receive transition can be performed or not . Returns True if the analysis request has at least one analysis in assigned or unassigned status . Otherwise returns False name: guard rollback to receive </e> Returns whether cancel transition can be performed or not . Returns True only if all analyses are in unassigned status,guard cancel
<e> NL: Returns True if the given host is the localhost name: host is local </e> Determine if given host is localhost equivalent ,is localhost
<e> NL: Wait for and accept an alert . Returns the text from the alert  name: wait for and accept alert </e> for the alerts and backends keyword arguments ... - provides resonable defaults - accept a single alert / backend or a list of them - accept alert / backend class or the a string containing the alert / backend i d,super accepter
<e> NL: Get primary key column for table db.tbl . : param etcd_client : Etcd client . : param db : database name . : param tbl : table name . : return : Primary key column . : rtype : Column name: get pk field </e> Get fields of the given index : param connection : MySQLDb connection : param db : database : param tbl : table : param index : index name : return : list of field names,get index fields
<e> NL: ' mkdir -p ' in Python name: mkdir p </e> Works like ` mkdir -p ` : creates all ( not yet existing ) directories in a given path ,mkdir p
<e> NL: Get the project 's change script repository name: find migrate repo </e> Get and store repository handler for named project,get project repository
<e> NL: Calculate the displacement vector between two n - D points  name: point displ </e> translates that a key of say 1 is the ' OUG - Displacement vector ' table,get table from table code
<e> NL: Return the name of the node  name: node name </e> Gets the name of all recipes present in the run_list of a node,get recipes in node
"<e> NL: Get shortcut from filepath at given encoding level . 0 = base , 1 = base.ext , 2 = folder / base.ext , 3 = folder_up / folder / base.ext , ... etc  name: encode shortcut </e> Splits an original filename into dict with keys base , ext ",split original
<e> NL: Realise preprocess for an input pillow image and convert it to numpy array . Parameters ---------- image An input image to be processed . Returns ------- Preprocessed numpy array  name: image to tensor </e> Realise preprocess for an input pillow image and convert it to numpy array . Parameters ---------- image An input image to be processed . Returns ------- Preprocessed numpy array ,image to tensor
<e> NL: Checks if a file is an Excel ( .xlsx ) file . Args : path_to_some_file ( str ) : Path to the file . Returns : Returns True if the file is an xlsx file else False  name: is xlsx </e> Opens an xlsx file ( the template ) and returns the openpyxl object ,open openpyxl template
<e> NL: Return this platform s string for platform - specific distributions name: get build platform </e> platform specific default root path ,arduino default path
<e> NL: Retrieve the non - reserved properties from a dictionary of properties name: get other props </e> Converts a line from the properties file and adds it to the properties dictionary ,convert line
<e> NL: > > > parse_duration('1h ' ) 3600 > > > parse_duration('1 m ' ) 60 > > > parse_duration('1 m 2s ' ) 62 > > > parse_duration('1 ' ) 1 name: parse duration </e> > > > parse_duration('00:01 ' ) 1 > > > parse_duration('03:33 ' ) 213 > > > parse_duration('01:14:00 ' ) 4440,parse duration
<e> NL: Turn on assertions ( which may cause conflicts ) name: set strict </e> Adjust environmental variables which can cause conflicts with installed anaconda python ,clean env variables
<e> NL: Return a list of names available on cls  name: dir class </e> Return a list of the names of the persistent attributes of ` ` cls ` ` . ... except collections ,persistent attribute names of
"<e> NL: returns a list of files , similar to ls src / search_string name: get files </e> Get a list of devices that have search_string in the host name",get list devices by hostname
<e> NL: Determine the start and end values for this script . Returns : start : datetime.datetime - obj end : datetime.datetime - obj name: get start end </e> Return the end datetime as determined by dtend or duration ,get end date
<e> NL: Parse ` string ` and return a dictionary  name: parse as dict </e> Parse and return dictionary of typaliases ,typealiases parser
"<e> NL: Return a setting from config [ ui ] section or environment variables  name: ui env value </e> Return a setting from a section , optionally provide default ",get setting
<e> NL: Format a value for inclusion in an informative text string  name: fmt val </e> Default menu choice foratted for inclusion in a prompt string ,get formatted default menu choice
<e> NL: Return a logger object  name: get logger </e> Return a toplevel logger ,default logger
"<e> NL: Create a map of name to child based on a list . : param children [ LocalFolder / LocalFile ] list of children : : return : map child.name - > child name: name to child map </e> Set the joined alias on the child , for Django > = 1.8.0 : param child : : param alias_map :",set child joined alias
<e> NL: Merge dict list to a dict object : param dicts : dict list : return : dict name: dict merge </e> Return a dict for form datas population : param dict request_parameters : A dictionnary containing the parameters we want to rerturn : returns : The param dict : rtype : dict,get oidc datas
<e> NL: Return a 2-tuple : - the length of the decoded block - the number of bytes that the length header occupied  name: extract meta </e> Return the length of the blimpy header in bytes,len header
"<e> NL: Returns the indices that are not in the given indices , up to the given size . : param indices : The indices to invert . : param size : The exclusive maximum index . : return : A inverted indices  name: invert indices </e> Plot the swim speed during experimental indices",plot swim speed
<e> NL: Class method that will return a Domain object by ID  name: get object </e> Class method that will return a Certificate object by its ID ,.get object
<e> NL: Expand path and make it relative to the config file name: process project path </e> Check parameter and expand it to a file name ,expand file name
<e> NL: returns the floating point number from string Parameters ---------- txt : string string of the number Returns ------- return : float or None - type number from txt None if conversion is not possible name: get float </e> converts txt to a integer number and returns this number return None if txt is not a number,get int from str
"<e> NL: Checks if value is a valid json : param key : key to check : type key : str : param value : value : type value : str : return : True if value is a valid json , False otherwise : rtype : bool name: check json </e> Check if the value is a * NoneValue * in function of the type : param type : type of value : param value : value to check : rtype : * bool * , True if it is a * NoneValue *",is none
<e> NL: Reset configuration to default name: reset config </e> Reset configuration context : return : None,reset context
"<e> NL: find and return the full path to a PKG - INFO file or None if not found name: find pkg info </e> return the full path of the first index in indir , or None if not found",match index
<e> NL: Removes the specified path from the output logging paths if it is in the listed paths  name: remove output path </e> Adds the specified path to the output logging paths if it is not already in the listed paths ,add output path
"<e> NL: Check if a port is either reserved by riptide , open or reserved by antoher program ( TCP only ) name: is open </e> Finds the first free port starting at start_port for the service and returns an open port not reserved by riptide or another application Used by additional ports logic ( get_additional_port ) , may be used by other system parts ",find open port starting at
<e> NL: Get the ( correct ) modification time of the file at * path *  name: file mtime </e> Update the modification time ( mtime ) of the specified file . : param file_path : Path of the file to update . : return : the new and the old file modification time ,update mtime
<e> NL: Scrapes the given URL to a page in JSON format to obtain the documentation for the LBRY API name: get lbry api function docs </e> this needs to be called in between definitions of nodes in order to set on which page their documentation will go . Names must correspond to the url of the page the documentation should be on ,set current documentation page
<e> NL: Load config file into default settings name: load config </e> Load the default config file from the default ipython_dir ,load default config
<e> NL: Get the options from the command line  name: handle cmd options </e> Helper function for formatting the content of the options line,format options
<e> NL: Returns a dictionary of the data found with os.stat name: get system metadata </e> Returns os data ,os info
"<e> NL: Parse the iGEM XML into a Dict with part_id - > SeqRecord . Args : test : Is a test , truncate the number of rows Returns : A map from each part 's ID to a SeqRecord representing it  name: parse igem data </e> Changes the starting point of a circular SeqRecord by n_bases bases ",rotate circular record
"<e> NL: Return a mask which is safe to use on X. Parameters ---------- X : { array - like , sparse matrix } Data on which to apply mask . mask : array Mask to be used on X. Returns ------- mask name: safe mask </e> r Return a mask to reduce the density of points in irregularly - spaced data ",reduce point density
<e> NL: Get Image_Name for the image_id specified  name: get one aminame </e> Get Image_Name for the image_id specified . Args : inst_img_id ( str ) : image_id to get name value from . Returns : aminame ( str ) : name of the image ,get one aminame
"<e> NL: Parses the given error response to extract Auth error code and message  name: parse error body </e> Parses entered response string to string error message without the error code . E.g. : response = ' -110,""Command error "" ' returns : ' Command error ' ",parse err query response
<e> NL: Return function name from given AST node : param function_node : ast node : return : str name: get ast function name and args </e> Get AST node and return a contract function,exec contract
<e> NL: Get detailed information about a snapshot  name: get snapshot </e> Returns detailed information about registered blueprint routes matching the BlueprintBundle path,.get blueprint routes
<e> NL: Import a dotted module path and return the attribute / class designated by the last name in the path . Raise ImportError if the import failed  name: import string </e> Import a dotted module path and return the attribute / class designated by the last name in the path . Raise ImportError if the import failed ,import string
<e> NL: Returns resource managers . : param names : List of names that is used for filtering resource manager classes name: find resource managers </e> List all resource managers names . Returns all service names and all combination of service.resource names . : param admin_required : None - > returns all ResourceManagers True - > returns only admin ResourceManagers False - > returns only non admin ResourceManagers,list resource names
<e> NL: Return a list of all forms in a file  name: load forms </e> Return DateTimeBaseInput class from django . forms . widgets module,get base input
<e> NL: Checks if the path is matched by a list of globs name: matches glob </e> Group files that match by globs for merging rather than by explicit pairs ,find glob matches
<e> NL: Tries to connect to the device to see if it is connectable . Args : host : The host to connect . port : The port to connect . Returns : True or False  name: is connectable </e> simple routine to connect to an existing database and list a few stops bin / connect - tester --database_url sqlite:///gtfs.db _ no_gtfs_zip_needed _,db connect tester
<e> NL: Create a new Matrix with attributes taken from ` other ` but with the values taken from ` values ` if provided name: create from other </e> Partially taken from typing . get_type_hints ,resolve annotations
<e> NL: Return a list of rules to apply on the named button of the model name: get rules </e> Use one of rules and apply it to identification,use rule
<e> NL: Splits as close to the end as possible  name: split msg </e> Get as close to the repo root as possible ,get root dir
"<e> NL: Extract mark from transaction , if any . Args : tx : transaction instance . config : A configuration string in JSON format given in source file . Returns : string of mark or False  name: extract mark tx </e> Mark testcases missing in source code ",mark missing in source
<e> NL: Pull Retrosheet All Star Game Logs name: all star game logs </e> Pull Retrosheet game logs for a given season,season game logs
<e> NL: Validate the values in ` ` iterable ` `  name: validated values </e> Validate referenced values in functions ,validate function ref variables
<e> NL: Add event team for event : param event_dict : dict of event info : param event : list with parsed event info : return : None name: get event team </e> Gets all of the logged event info changes for a mod : return : Returns a dict of new and modded event info entries : rtype : dict,get events for mod
<e> NL: Deserializes a Block s header and the header of its Batches  name: . expand block </e> Deserializes a dict and its elements ,deserialize dict
<e> NL: Method to create unique list of repositories from the list of repositories given  name: .get unique repositories </e> Method to create unique list of repositories from the list of repositories given . : param repo_list : List of repositories which might contain duplicates . : return : List of repositories with no duplicate in them ,get unique repositories
<e> NL: gives ntimes weight to the hashtags identified in the given text name: weight hashtags </e> Find the hashtags in a given text,find hashtags
<e> NL: extract the name of the subject from subject data folder . Parameters ---------- address : str path of the subject folder Returns ------- name : str name of the subject name: extract name </e> Wrapper to get subject parameter from Nexus ,get nexus subject param
<e> NL: Return the array type associated with this dtype . Returns ------- type name: construct array type </e> Check if the array type of ` a ` is of type specified by ` dtype ` parameter . Raises ------ TypeError If the array type does not match ` dtype `,check dtype
<e> NL: Convert a size in bytes to a human - readable form as follows : If < kb return the number unchanged If > = kb and < mb return number of kb If > = mb and < gb return number of mb Otherwise return number of gb name: size as mb </e> reserve_memory : size and keep time : param mem_size_str : 1 GB | 1 MB | 1 KB ... : param reserve_time : 60(s ) : return :,reserve memory
"<e> NL: Check whether or not the usecols parameter is a callable . If so enumerates the names parameter and returns a set of indices for each entry in names that evaluates to True . If not a callable returns usecols  name: evaluate usecols </e> Return the field names ( channel names ) from dbf file fn . With usecols , return only names corresponding to the integers in usecols ",channel names
<e> NL: Fix rare cloud layer issues name: sanitize cloud </e> Fix rare cloud layer issues,sanitize cloud
<e> NL: Input : i - dictionary Output : return = 0 name: debug out </e> Input : { cluster_item : cluster_name } dictionary Output : { cluster_name : set([cluster_items ] ) } dictionary,mapping to sets
"<e> NL: Return a substring from the first occurrence of the substring sub to the end of the string name: str after first </e> Finds a substring in a string . : param s : String you are searching in . : param char : String you are searching for . : return : If the substring is found it returns the index of the first occurrence , otherwise returns -1 ",find str
<e> NL: implement full DCM system name: DCM update </e> implement full DCM using PX4 native SD log data,PX4 update
"<e> NL: Prepare an ssh command according to the arguments passed on command line : param argparse . Namespace config : the configuration from command line : return list[str ] : the ssh command as list of string name: build ssh command </e> For commands executed directly via an SSH command - line , SSH looks up the user 's shell via getpwuid ( ) and only defaults to /bin / sh if that field is missing or empty ",get user shell
<e> NL: Returns dictionary of named gateways for given VPC { name : gateway } name: get gateway dict </e> Returns dictionary of named gateways for given VPC { name : gateway },get gateway dict
"<e> NL: Returns a label if all the elements of an overlay agree on a consistent label , otherwise returns the default label  name: get overlay label </e> Gets the type.group.label + key spec from an Element in an Overlay ",get overlay spec
<e> NL: Return image inside a QLabel object name: get image label </e> Return image inside a QLabel object,get image label
"<e> NL: Changes @thin , @auto , @shadow to bold name: colorize headlines visitor </e> Changes @thin , @auto , @shadow to bold",colorize headlines visitor
<e> NL: Maps an object to a JSON like tree : return : JSON like tree name: object to tree </e> Get an iterator if documents from a tree or document - like object ,iter documents
<e> NL: Converts lists to tuples  name: validate value </e> Returns lists of lists when given tuples of tuples,to lists
<e> NL: Read gtfs stops.txt as a pandas dataframe Parameters ---------- textfile_path : str director of text file textfile : str name of text file Returns ------- df : pandas . DataFrame name: read gtfs stops </e> Read gtfs trips.txt as a pandas dataframe Parameters ---------- textfile_path : str director of text file textfile : str name of text file Returns ------- df : pandas . DataFrame,read gtfs trips
"<e> NL: Search and return the path to the given filename , or None  name: find file </e> Search and return the location of the shared Git templates directory . : rtype : string or None",git templates
"<e> NL: Will only give a find on classes that is a subclass of ResponseMicroService . Use this filter to only find frontend plugins : type cls : type : rtype : bool : param cls : A class object : return : True if match , else false name: response micro service filter </e> Will only give a find on classes that is a subclass of MicroService with the exception that the class is not allowed to be a direct ResponseMicroService or RequestMicroService ",micro service filter
<e> NL: Returns the cardinality of the given resource attribute  name: get attribute cardinality </e> Recursively count nodes to compute the cardinality of a subtree for each node,postorder count
"<e> NL: Load a ` ` Dashboard ` ` from a Python definition . : param str path : Path to a * .dashboard.py file that defines a variable , ` ` dashboard ` ` . : return : A ` ` Dashboard ` ` name: load dashboard </e> Clone plugin data of a dashboard entry ",clone plugin data
<e> NL: Create a list of fits . Header instances from a fits file . : param path where the FITS files resides on disk  name: get headers from fits </e> Read only star fit parameters and coordinates from a FITS file . : param fits : An open fitsio . FITS object : param extname : The name of the extension to read from : returns : the arrays coords and params,read coords params
<e> NL: a - a ' : triborate chloride [ FW86 ]  name: theta B3O3OH4 Cl FW86 </e> a - a ' : triborate bicarbonate [ FW86 ] ,theta B3O3OH4 HCO3 FW86
<e> NL: get class device info by school_id and sn name: get device info </e> get class device info,get section list
<e> NL: Create Invenio - I18N blueprint  name: create blueprint </e> Create a blueprint for replacing Loan Item ,create loan replace item blueprint
<e> NL: Recursively get values in dict  name: dict values </e> Fix the values of all numeric variables in namespace recursively ,fix numeric
"<e> NL: Check if directory is empty . Do not raise exceptions . : param path : : return : True if dir is empty or does not exist , False if dir exists and not empty name: dir empty ne </e> Return a concatenation of prefix , object and suffix . Returns empty string if obj is not "" truthy "" ( i.e. , not None or empty container )",conditional str
<e> NL: Unregister an extension code . For testing only  name: remove extension </e> Compute an exit code for mutmut mutation testing,compute exit code
"<e> NL: Checks for an Arabic standard Unicode block characters An arabic string can contain spaces digits and pounctuation . but only arabic standard characters not extended arabic name: is arabicstring </e> ISRI Arabic stemmer based on algorithm : Arabic Stemming without a root dictionary . Information Science Research Institute . University of Nevada , Las Vegas , USA ",nltk isri stemmer
"<e> NL: Convert a number to a string , using the given alphabet  name: int to string </e> Decode a Base X encoded string into the number : param str base_num : Number encoded in the given base : param int base : Length of the base to use : param str alphabet : The alphabet to use for encoding",from base n
<e> NL: Runs the model for the test set and extracts entity predictions and tokens  name: get entity predictions </e> Removes duckling entity predictions,remove duckling entities
"<e> NL: Create or update a record matching the attributes , and fill it with values . : param attributes : The instance attributes : type attributes : dict : param values : The values : type values : dict : return : The new instance : rtype : Model name: update or create </e> Return the attributes of : class:`settings . G ` to their original values",reset attributes
<e> NL: Convert nd4j array to numpy array name: to numpy </e> Convert nd4j array to numpy array,to numpy
<e> NL: Get owner of repository as a creator  name: get owner </e> Get creator function by name ,get creator by name
<e> NL: Returns the value of a global attribute Global attribute meaning an attribute for all the resources from a rtype : param name : Name of the attribute : type name : str : rtype : str name: get global </e> Returns attribute value from downloaded data . Parameters : - data : dict - The result of ` get_data ` function - attribute_name : str - Attribute name from ` API_FIELDS `,get attribute
<e> NL: Return the path of the auth file 's directory name: get dir path </e> Function takes input of auth class object auth object and URL and returns a BOOL of TRUE if the authentication was successful ,check imc creds
<e> NL: Standard simple csv loader name: load csv </e> Standard simple csv loader,load csv
<e> NL: sql - code for search name: search name </e> create sql - code for search,search mailingaddr valid
<e> NL: A helper function for cyclic shifting a two dimensional array  name: cycle matrix </e> A helper function for cyclic shifting a one dimensional array ,cycle vector
<e> NL: Convert a module name to a PEP8 compliant module name . * lowercase * whitespace - > underscore * dash - > underscore name: pep8 module name </e> Convert camel case name to underscore name ,camel to underscore
<e> NL: Gets the APIC class to an acitoolkit class mapping dictionary : returns : dict of APIC class names to acitoolkit classes name: get toolkit to apic classmap </e> Gets the APIC class to an acitoolkit class mapping dictionary : returns : dict of APIC class names to acitoolkit classes,get toolkit to apic classmap
<e> NL: Argparse validator for ensuring a workspace is provided name: nonempty project </e> Hexadecimal byte validator for argparse ,parse hex
"<e> NL: Checks whether type string of a Node is valid . : param type_string : the plugin_type_string attribute of a Node : return : True if type string is valid , else false name: is valid node type string </e> Take the type string of a Node and create the queryable type string : param type_string : the plugin_type_string attribute of a Node : return : the type string that can be used to query for",get query type from type string
"<e> NL: Get largest left eigenvectors and eigenvalues of matrix ` mx ` Returns ------- 1-dimensional numpy array Eigenvalues 2-dimensional numpy array Eigenvectors name: get largest left eigs </e> Calculates eigenvectors and values of an extended contact map : param contactMap : Contact map : type contactMap : np.array : returns : ( numpy.ndarray , numpy.ndarray ) -- eigenvalues , eigenvectors",calculate contact map eigen
<e> NL: Convert Numpy points array to a vtk points array . Parameters ---------- points : ndarray Returns ------- vtk_points : vtkPoints ( ) name: numpy to vtk points </e> common method to account for vtk endian quirks and efficiently adding points,numpy to vtk points
"<e> NL: Puts angles in [ -pi , pi ] range  name: normalize angles </e> checks if mac address found from nmap that matches raspberry pi Accepts : ip_address var as string Returns : nothing Prints : found ip of pi if found",check macs
"<e> NL: Returns the name of the file name without the ext name: get name </e> suggestParser(ext , text ) Given a filename extension and text , returns the name of the suggested parser corresponding to the language of the file . See also registerFilenameExtension ( ) and registerShebangKeyword ( )",suggest parser
<e> NL: Get files in directory Excludes hidden files Parameters ---------- path : str Parent directory path Returns ------- files : list List of files excluding hidden files name: get files in directory </e> Read a SourceList object from the path of a directory containing source files . Parameters ---------- path : str Directory containing ` mpdaf.sdetect . Source ` files,from path
<e> NL: Build the image path based . Parameters ---------- chapter_dir : str the manga dir path manga : str the manga name chapter : str the chapter number image : str the image name Returns ------- str the full image path name: build image path </e> Returns the image URLs and filenames for the chapter Finds the image URLs from the ' chapter_preload_images ' variable from the chapter page,get chapter urls
"<e> NL: Gets centroid in a series of points Parameters ---------- points : list of list of float List of ( x , y ) coordinates Returns ------- tuple The centroid of a list of points name: geometric mean </e> Verify is a list is a list of points",is point
<e> NL: Convert string timestamp in pandas timestamp name: pd timestamp convertor </e> Convert UTC to GPS time : param timestamp : UTC timestamp in seconds . : return : GPS timestamp in seconds ,utc to gps
"<e> NL: Check if a path exists , and is a directory  name: is dir </e> Check if directory exists .. todo : : Should check that it is actually a directory Parameters ---------- path : str Path to check Returns ------- out : bool True if directory exists",check dir existence
<e> NL: Take a list of tables and a list of column names and resolve which columns come from which table  name: column map </e> Take a name for a language or a feature which has come from somewhere like a CLDF dataset and make sure it does not contain any characters which will cause trouble for BEAST or postanalysis tools ,sanitise name
<e> NL: Calculate how many items must be in the collection to satisfy this slice name: slice required len </e> Calculate how many items must be in the collection to satisfy this slice returns ` None ` for slices may vary based on the length of the underlying collection such as ` lst[-1 ] ` or ` lst [ : : ] `,slice required len
<e> NL: Converts ISO8601 date and time and returns only the date . Parameters ---------- date : str datetime string . Returns ------- date : str Date as Y - m - d format . name: date convert </e> get last update time prints out the date and returns the date(str ),get last update
<e> NL: Get the version of package  name: get version </e> Get the version which is currently configured by the package,get version
<e> NL: AIC[K ] = sum_{k > K } c_k^2 / theory_var + 2*K Assumiamo di tenere tutti i k < = K name: dct aic ab </e> AICc[K ] = AIC[K ] + 2*(K+1)*(K+2)/(NF - K-2 ) Assumiamo di tenere tutti i k < = K,dct AICc
"<e> NL: Returns if the object passed matches with the states passed in name: in state </e> new_y = dp_unnormalise(y , normalisation_parameters ) Unnormalises the data , y , using the parameters passed in normalisation_parameters ",dp unnormalise
<e> NL: Converts a var_instance to a var array one name: to vararray </e> Converts a var_instance to a var array one,.to vararray
<e> NL: True if there is at least one np.nan in the array name: nan exists </e> Return True if at least one command requiring ` ` cmake ` ` to run is found in ` ` commands ` ` ,should run cmake
<e> NL: Calculates the harmonic mean following the method suggested by Anne Chao . The formula is : 1/[(1 / A)+var(D)(1 / A)**3 ] . Used for calculating multilocus Dest  name: harmonic mean chao </e> Calculate Dest values using Anne Chao 's harmonic mean ,multilocus D est
"<e> NL: "" c - a : sodium chloride [ PM73 ]  name: bC Na Cl PM73 </e> "" c - a : samarium chloride [ PM73 ] ",bC Sm Cl PM73
<e> NL: Create unique labels  name: get labels </e> Create unique labels ,get labels
<e> NL: Returns a ` ` Session ` ` instance by session i d . : param sid : A session i d . : returns : An existing ` ` Session ` ` entity  name: get by sid </e> Glob for files to be registered on an IBL session : param ses_path : pathlib . Path of the session : return : a list of files to potentially be registered,glob session
<e> NL: c - c'-a : potassium magnesium chloride [ PP87ii ]  name: psi K Mg Cl PP87ii </e> c - c'-a : potassium sodium chloride [ PP87ii ] ,psi K Na Cl PP87ii
<e> NL: Load the config as a dict from a given config file : param config_file : Path to config file : return : Dict containing the config name: load config </e> Create a config from a string and optional dict . See get_default ,from string
<e> NL: Detect if the fetched page is last page of search results  name: is last page </e> Detect if the fetched page is last page of search results ,is last page
<e> NL: Method to return a dictionary of testing options for this class . Returns : dict : Dictionary of variables to use for testing  name: get testing options </e> Returns distance of each item in qs from the mean . WARNING : Slow method used only for compatibility testing . Do not use ,dists from mean slow
<e> NL: Returns the size of a pixel and the unit as tuple It is assumed that the scale of a pixel in x and y is the same . This only works if it is image metadata  name: get scale </e> Calculate the pixel coordinates from the standard pixel - map file by default it gets rotated by 90 degrees clockwise to show the same orientation as MARS and fact - tools,get pixel coords
"<e> NL: method that can be overridden in tests name: get import resolver </e> Helper method that wraps the package_search action . * unless overridden , sorts results by metadata_modified date * unless overridden , sets a default item limit",package search
<e> NL: Create the kernel from the kernel sets  name: create kernel sets </e> Create the n - dimensional NDNT kernel . Parameters ---------- shape : tuple of int The shape of the neighborhood around each pixel . Returns ------- kernel : array_like,create kernel
<e> NL: Function to create a directed graph from an ADnum . INPUTS = = = = = = y : ADnum OUTPUTS = = = = = = = A networkx digraph name: gen graph </e> Function to create a dictionary containing edges of y reversed . INPUTS = = = = = = y : ADnum OUTPUTS = = = = = = = A dictionary,reverse graph
<e> NL: Draws the workflow as a graph and creates a PNG image using graphviz dot  name: draw dot </e> Returns a tuplet containing : - the result of the depth_first_search ( ) function starting at ' root ' ( is a tuplet ) - a dot format output of the given graph ( display it using graphviz dotty command ),output graph
<e> NL: Return the ' filtered path ' name: get filtered path </e> Test whether @uri should be filtered by @filter_list ,is uri to be filtered
"<e> NL: Return the framework config file  name: framework config </e> Fetch framework variable according given attr_name . Return a new reusing variable through create_parameter way Args : attr_name : string , attr name of parameter Returns : framework_var : framework . Varialbe",fetch framework var
<e> NL: Run a command in a shell  name: execute cmd </e> Safely run command in certain path,run command
<e> NL: Convert datetime objects to iso - format strings name: encode as datetime </e> Serializes the request payload to match the format requested by NBG APIs . Serializations : - datetime : ( Z - suffixed ISO format ),serialize request payload
<e> NL: Method to load dictionaries from a file : param language : language of the dictionary to load : param file_name : name of the file to load : return : a dictionary with the file content name: load dict </e> Load any supported file format . : param Path path : File to load . : return : A dictionary with the parsed content . : rtype : dict,load file
<e> NL: Remove downloaded files . Parameters : downloads : the list of downloads for which to remove files . force : whether to remove files even if download is not complete . Returns : Success or failure of the operation for each given download  name: remove files </e> Remove supporting and input files after testing is complete,remove supporting
<e> NL: Check the memory size of the device memory . The result is cached in the device memory object . It may query the driver for the memory size of the device memory allocation  name: device memory size </e> Assemble memory configuration for a Spark session : param memory : string with memory configuration for spark : return : memory configuration,get spark memory config
<e> NL: Apply a slice operation to given signal  name: slice signal </e> Gradient of slice operation,minpy getitem grad
<e> NL: Remove all entries from a queue name: queuedb removeall </e> r Remove all negative entries from sparse matrix ,remove negative entries
"<e> NL: Find the index of the first item in a collection for which a predicate is true . Returns the index , or -1 if no such item exists  name: index if </e> Apply the index of each item ",apply items index
<e> NL: Adapter for rendering a list of : class : ` crabpy.gateway.capakey . Perceel ` to json  name: list perceel adapter </e> Adapter for rendering an object of : class : ` crabpy.gateway.capakey . Sectie ` to json ,item sectie adapter
"<e> NL: Return resource type of the policy . : param policy : Policy structure . : return : Resource type used in policy ( database , tag , path )  name: get resource type </e> Get the current security policy : param user : user to use for security policy",get security policy
<e> NL: ! @brief Convert a halfword array into a byte array name: u16le list to byte list </e> ! @brief Convert a byte array into a halfword array,byte list to u16le list
"<e> NL: Extended Negative Log Likelihood , 1D. Fit 2 parameters ` ` n_signal ` ` and ` ` n_background ` ` , in 1 dimension ` ` alpha ` ` ( i.e. separation to source )  name: ext nlnlike1d </e> Standard Negative Log Likelihood . Fit 1 parameter ` ` n_signal ` ` , in 2 dimensions ` ` alpha , energy ` ` ( ` ` alpha ` ` is separation to source ) ",std nlnlike2d
"<e> NL: Get data from flow file . Parameters ---------- syx_flow : str Flow filename Returns ------- [ ( str , dict ) ] List containing one dictionary of flow properties or empty list  name: get flow data list </e> Get Flow File Safetly",get flow file
<e> NL: Get the list of available exchanges . : returns : list of available exchanges name: get exchanges </e> adds SBO terms for demands and exchanges,add SBO
<e> NL: Return the spatial reference from wkt string : param wkt : wkt string : type wkt : str : return : spatial reference : rtype : osgeo.osr . SpatialReference name: srs from wkt </e> Compute the rectangle from a WKT string ,wkt to rectangle
<e> NL: compose a new scope : param str scope : current scope : param str name : name of next level in scope : return the composed scope name: scope compose </e> Assembly Module Scope Name and model scope name,get model var scope
<e> NL: Converts a bytes objects containing RGB / BGR data to a ` numpy ` _ array  name: bytes to rgb </e> Flip RGB to BGR image data ( numpy ndarray ) . Also accepts rgbA / bgrA and single channel images without crashing ,flip layers
<e> NL: Converts epoch timestamp into human readable time name: convert timestamp </e> Converts an epoch timestamp to human readable time ,epoch to human time
<e> NL: Retrieve the number of parts in which dataset / model has been split . Parameters ---------- name : str Dataset / model name . Returns ------- int Number of parts in which dataset / model has been split  name: get parts </e> dataset.cache_root is the root directory in which the given dataset has been cached ,cache root
<e> NL: Returns address from LLDB value . : param lldb . SBValue obj : LLDB value object . : return : Address from LLDB value . : rtype : int | None name: get address value </e> Return architecture name from given LLDB target . : param lldb . SBTarget target : LLDB target . : return : Architecture name or None if can not find architecture . : rtype : str | None,architecture name from target
"<e> NL: Return a printable name of a type  name: get type name </e> Return a printable character , or ' . ' for non - printable ones ",print character
<e> NL: Get the snapshot name name: snapshot name </e> Get snapshot by name from the snapshot tree root . : param name : Snapshot name : param root : Current root node in the snapshot tree : return : None in the snapshot tree with given snapshot name,get snapshot from tree
<e> NL: Calculate the L2 norm of a vector  name: l2 norm </e> return the scalar cartesian norm of a single 3 elements vector,norme vec
<e> NL: Find the MIDI input name for a connected FaderPort  name: find faderport input name </e> Find the MIDI output name for a connected FaderPort ,find faderport output name
<e> NL: Check the system name . Args : local_os ( str ) : System name . Returns : str name: check local os </e> Generates a valid Python name from a system model name . Args : name ( str ) : The system model name . Returns : str : The generated name ,make name
<e> NL: Parse the outputs of GNU time filenames : an iterator of paths to GNU time 's outputs Returns a DataFrame name: parse gnu time files </e> Parse the output of GNU time filename : a path to the GNU time output Returns a DataFrame,parse gnu time file
<e> NL: Returns a new instance with control characters set to given string . : param string : The string to set the control characters to name: from str </e> Is there a suitable handler for this control : param ` control ` : the control instance to check if a handler for it exists ,has ctrl handler
"<e> NL: Return function_name(arg[0 ] , arg[1 ] , ... ) as a string name: simple call string </e> Return function_name(arg[0 ] , arg[1 ] , ... ) as a string",simple call string
<e> NL: Get a console command  name: get command </e> Run a command in the console Returns : error terminal_output,run console command
<e> NL: Get foreign keys info name: model foreign </e> Gets all foreign keys on * to_table * referencing * from_table *,get fk
<e> NL: Compare function for package version sorting name: cmp version </e> Compare two ` mtime ` values ( e.g. for sorting ),cmp mtime
"<e> NL: Return worker class from RQ settings , otherwise return Worker . If ` worker_class ` is not None , it is used as an override ( can be python import path as string )  name: get worker class </e> Return job class from RQ settings , otherwise return Job . If ` job_class ` is not None , it is used as an override ( can be python import path as string ) ",get job class
<e> NL: Try to guess the file format from the extension  name: get file format </e> Try to guess request country,guess request country
"<e> NL: Create a folder if it does not exist . That path can be return  name: mkdir nonexist </e> Get the home folder of gridCAl , and if it does not exist , create it : return : folder path string",get create gridcal folder
"<e> NL: Reads a file path and returns the extension or None if the path contains no extension  name: extract extension </e> Given a file path , parse it based on its extension ( YAML or JSON ) and return the values as a Python dictionary . JSON is the default if an extension ca n't be determined ",load config
"<e> NL: Return error string code if the response is an error , otherwise ` ` "" OK "" ` ` name: parse status code </e> Returns if a request has an okay error code otherwise raises InvalidRequest ",.check response
<e> NL: Convert a Matlab matrix to a Python list  name: list from matrix </e> Taking a Matlab file of Arbin data from the CALCE database and imports it into a host of different NumPy arrays Filename : Matlab file,import matlab data
<e> NL: Expand abbreviations in a template name  name: expand abbreviations </e> Expand abbreviations and otherwise canonicalize street name and number,row canonicalize street and number
<e> NL: Get the current cache directory  name: get cache dir </e> Get the current directory into which logs will be written ,log dir
"<e> NL: Return the path of a file directory : param file : file path : type file : str : return : File path : rtype : str name: get directory </e> Get info from .cih file in path , return it as dict . : param path : Path to .cih file . : return : info_dict : .cih file contents as dict ",get info
"<e> NL: Return the preference chain for the naming of a particular label . : param name : string , label name to search for : return : tuple , label names , most preferred first name: get all label keys </e> Search for all records of a dolphin by label",dolphin label hits
<e> NL: Parse version from setup.py name: from setup file </e> Compatibility wrapper . Taken from storm setup.py ,find packages
<e> NL: Turn URL string into parameters  name: split url string </e> Turn the type argument into something useful ,get valid type
<e> NL: Converts a dump string to an object . Parameters ---------- string : string Dump string Returns ------- object Loaded object  name: dumpstring to object </e> Break a string at sentences and dump as wrapped literal YAML ,save text
<e> NL: Return the information used to check if a file is already formatted or not  name: get cache info </e> Check if augmentations are loaded in already or not ,check augs
<e> NL: Returns the index of the first occurrence of obj in seq name: index of </e> Finds the first occurrence of term in English column of database and returns as a word ,find english word
<e> NL: attempt to detect whether APM or PX4 attributes names are in use name: sniff field spelling </e> attempt to detect whether APM or PX4 attributes names are in use,sniff field spelling
<e> NL: initialize a syncronous redis connection name: get redis </e> Create a redis connection ,get redis
<e> NL: Return the name of the table 's primary key : rtype : string name: primary key </e> Return the name of the table s primary key,.primary key
"<e> NL: Samples from a normal distribution . : param mean The mean . Default is 0.0 . : param variance The variance . Default is 1.0  name: normal random </e> Compute element - wise mean and variance from min and max values . Args : minval : A tensor of minimum values . maxval : A tensor of maximum values . Returns : Tuple of ( mean , variance ) ",range moments
<e> NL: Smoothly zero the edges of a frequency domain transfer function name: truncate transfer </e> Smoothly truncate a time domain impulse response,truncate impulse
"<e> NL: Returns whether the given query options expect a possible count of zero . Args : options ( Dict[str , int | Iterable[int ] ] ) : A dictionary of query options . Returns : bool : Whether a possible count of zero is expected  name: expects none </e> Returns whether the given query options expect a possible count of zero ",expects none
"<e> NL: Generates ` count ` number of positions within ` shape ` . If a ` margin ` is given , positions will be inside this margin . Margin may be tuple - valued  name: gen random locations </e> Display recent oneliners , return bottom margin and adj . offset ",display oneliners
<e> NL: Convert an observation into a dict  name: obs to dict </e> Convert an observation dict into a raw array if the original observation space was not a Dict space ,dict to obs
<e> NL: Extract and convert time event annotations to zipkin annotations name: extract annotations from span </e> Extract guides out of type - annotations ,extract guides
<e> NL: Update the configuration with default values  name: update config </e> Update configuration target with given ` ` project ` ` and ` ` repository ` `,update conf
<e> NL: Find the basis of a given unit  name: find basis </e> Helper function to select correct indices given the local state values in basis.n_states . Args : correlations : list of correlations to be computed basis : an instance of a basis class . Returns : list of correlations in terms of indices,correlations to indices
<e> NL: Splits as close to the end as possible  name: split msg </e> Splits as close to the end as possible ,split msg
<e> NL: Process file in MAF format : param filepath : : return : name: process maf </e> Process RNAz dat file format ( generated by rnazCluster.pl : param filepath : : return :,process dat
<e> NL: Convert a timezone string to a timezone object  name: timezone from str </e> Date to string with forced timezone information ,to date
<e> NL: Gatherd bytes for checksum calculation name: checksum field bytes </e> Gather bytes for checksum calculation,checksum field bytes
<e> NL: Gets the root names of all chain files in a directory . : param rootdir : The root directory to check : return : The root names name: get chain root files </e> Set up the auth handler using the authfile in ` ` rootdir ` ` rootdir The root directory to sync ,setup auth handler
<e> NL: returns True if type represents C ++ elaborated type False otherwise name: is elaborated </e> returns True if type represents C ++ volatile type False otherwise,is volatile
<e> NL: Returns a list of group names for the given user name: user groups </e> Expand group names ,expand groups
<e> NL: get class device info by school_id and sn name: get device info </e> get class device info,get class device info
<e> NL: Given a dict and a list of fields removes all fields not in the list name: mask dict </e> Returns the list of fields in the given model instance . Checks whether to use the official _meta API or use the raw data . This method excludes many to many fields ,get fields in model
<e> NL: Read version information from VERSION file name: read release version </e> Extract version information as a dictionary from version . py ,get version info
<e> NL: Converts the V4 report row data into V3 report row data . Args : report : a Google Analytics V4 Report object . Returns : A list of rows of the V3 report object  name: convert rows </e> Yield headers and data from a Google Analytics report . Args : results ( dict ) : Google Analytics statistics results . Yields : list : CSV - style headers and data from the report ,generate row data
<e> NL: Given a full path to a file split and return a path and filename name: split path and file </e> Split up the full concept path into a category_cd and a data label ,split concept cd
"<e> NL: Verify a signature file name: verify sigfile </e> Verify a XML document signature usign RSA - SHA1 , return True if valid",rsa verify
<e> NL: A Linear model f = x - > alpha * x + df0 . Returns the frequency domain half width half maximum ( HWHM )  name: gilbert damping </e> Convert sigma to full - width half - max,sigma fwhm
"<e> NL: Scrape text that may or may not exist and remove a specific text Args : element : the element containing the text name : the class name text : the text to be removed Returns : A string of text name: get optional text replace </e> order_name -- Limit a text to 20 chars length , if necessary strips the middle of the text and substitute it for an ellipsis . name -- text to be limited ",order name
"<e> NL: Load results from a CSV file that was created by ` evaluate_models ` . Args : csv_file : path to a CSV file with results Returns : DataFrame if the file exists ; None otherwise name: from file </e> Using the list of tuples created from ` parse_heart_json ` , generates a CSV file and saves it to the directory of choice . Returns the file path if successful , None otherwise ",write json
"<e> NL: return the hash of a file  name: get hash </e> Hash parts of a file for basic identification By default , the first and final 512kB are hashed ",hash file partially
<e> NL: Returns the config values found in a configuration file  name: file config </e> returns config file from config directory . Any unset values default to DEFAULT_CONFIG configuration,get config
"<e> NL: Convert a list of dictionaries into a dictionary of dictionaries  name: dicts to dict </e> Take a list of dictionaries , and tokenize / normalize ",normalize params
<e> NL: Return the top namespace of the given node name: get top namespace </e> Return a list of tags ( with NRML namespace removed ) representing the order of the nodes within a node,get taglist
<e> NL: Returns a list of the installed packages . : return : the list of packages : rtype : list name: installed packages </e> Iterate through all venv folders for globally installed packages . : rtype : Iterator[str ],iter global packages
<e> NL: Retrieve the extension classes in priority order  name: . get extension classes </e> Retrieve order data ,get order
<e> NL: Registers key in config name: register key </e> Registers all notifications in the application ,register notifications
<e> NL: Retrieve id from input which can be name or id  name: .usable id </e> Retrieve id from input which can be num or id ,.usable id
<e> NL: Checks whether the code is running in an ipython notebook . Returns : : obj:`bool ` : Whether the code is running in an ipython notebook name: in notebook </e> Check whether the code is run from Ipython ,is run from ipython
"<e> NL: Get route name from RAML resource URI  name: get route name </e> Get route name from RAML resource URI . : param resource_uri : String representing RAML resource URI . : returns string : String with route name , which is : resource_uri : stripped of non - word characters ",get route name
"<e> NL: Surely there s a better way to do this .. name: channel to id </e> Not sure why this is needed for migrations , there is probably a better way ",site default id
"<e> NL: Computes circular variance for giving boundary points , according to Peura et al . 1997 , "" Efficiency of Simple Shape Descriptors "" name: compute cvar </e> Computes covariance matrix for giving boundary points , according to Peura et al . 1997 , "" Efficiency of Simple Shape Descriptors """,compute covariance matrix
<e> NL: Tests for existence of a file on the string filepath name: file exists </e> Tests for existence of a directory on the string filepath,dir exists
<e> NL: Build a permutation matrix for a permutation  name: build permutation matrix </e> Display bandwidth before and after permutation,print bandwidth before after permutation
"<e> NL: Convert a date object to ' year , month , day , hour , minute , second . ' name: date to um date </e> Convert datetime in a dictionary : param date : Date in datetime format [ Datetime ] : return : Dictionary with all components of the date : year , month , day , hour , minute , second [ Dictionary ]",datetime to json
"<e> NL: Check if fastq string has some necessary features of the fasta format . : param fastq : single string with a record of fastq name: check fastq line </e> Given a fastq file , read through the file : param fastq : name of fastq file : param pkl : name of pickle file to write to : return :",base quality single threaded
<e> NL: Get component name from filename  name: get component </e> Get component name from filename ,get component
<e> NL: Return named params from a technical string name: parse technical string params </e> Return named params from a technical string,parse technical string params
<e> NL: Return template context  name: get context </e> Returns djinfo template context as dictionary,get context
<e> NL: Deletes files and also directory if it 's empty : param files : list of files which should be deleted : type files : list name: delete files </e> Get all python files from the list of files ,filter python files
<e> NL: All network architectures available in tensornets . Based on the assumption that each network name starts with a capital letter  name: available nets </e> Makes sure that a description starts with a capital letter and ends with a period for consistency ,fix descriptions
<e> NL: Return the name of the notebook name: get notebook name </e> Cleans the notebook to be suitable for inclusion in the docs ,clean for doc
"<e> NL: Return the string as byte or unicode depending on the type of matched assuming string is an ASCII string  name: . matching string </e> decode a string as ascii or utf8 if possible ( as required by the sftp protocol ) . if neither works , just return a byte string because the server probably does n't know the filename 's encoding ",to unicode
"<e> NL: Load the target environment variable , if it exists : param var_name : Name of the environment variable to load : returns : string if the env var exists , None if it does not name: env var </e> Context Mgr to asserting no environment variable of the given name exists ( sto enable the testing of the case where no env var of this name exists )",no env
"<e> NL: Make api method docs inheritted . Specifically , insepect.getdoc will return values inheritted from this abc for standardized api methods  name: fix docs </e> Make api method docs inheritted ",. fix docs
"<e> NL: Change preprocess node value to preprocess section in code . ~ just copy lines for now name: preprocess code </e> Handle None if preprocess , else handles anything not in DIR_STRS ",clean direction
"<e> NL: Get values of all properties in specified object and returns them as a map . : param obj : an object to get properties from . : return : a map , containing the names of the object 's properties and their values  name: get properties </e> Initialize global log properties to their default values ",reset global log properties
<e> NL: Given a list of all models in a graph return JSON representing them and their properties  name: references json </e> Given a JSON representation of all the models in a graph return a dict of new model objects ,instantiate references json
"<e> NL: return the current context name: current context </e> Get current context Not initialized context raises : class:` . ContextIsNotInitializedError ` ,",get current
"<e> NL: Later , this version of the correlation matrix can be used without the additional column reordering . For now , it needs to be compatible to v1  name: get correlations v2 </e> Takes a number ( pages ) and the reordering scheme to use . Returns a list of indexes to use with page reordering ",shuffle pages
<e> NL: List all configured timeouts for this state machine  name: get all timeouts </e> Watch for action with timeouts . This method will listen for custom objects that times out ,watch for pystol timeouts
<e> NL: List a LZH archive  name: list lzh </e> List a LZH archive ,list lzh
"<e> NL: Takes a two dimensional array and returns an new one where rows in the first become columns in the second  name: rows to columns </e> Get two sorted array sets from the connections tuples , one for the first elements and one for the second",extract sets from connections
<e> NL: Create a matrix of links leaving each node  name: setup outlink matrix </e> Create a matrix of active links leaving each node ,setup active outlink matrix
<e> NL: Create an argument parser name: create argument parser </e> Create or extend an argument tree tdict from path ,add path
<e> NL: Check mysql has innodb_large_prefix set name: mysql large prefix check </e> Check mysql has innodb_large_prefix set,mysql large prefix check
<e> NL: Construct a Component from bytes by adding a type and length . : param val : the value of the component . : param typ : the type of the component . : const:`TYPE_GENERIC ` by default . : return : the component  name: from bytes </e> Gets a Cachet component by id,get component
<e> NL: True if T is a transition matrix name: is transition matrix </e> Ensure the state transition matrix rows sum to 1,normalize row probability
<e> NL: Converts the given datetime to an ISO String . This assumes the datetime is UTC  name: to isostring </e> Converts the given datetime to an ISO String . This assumes the datetime is UTC ,to isostring
"<e> NL: Some of the document endpoints take the unique document i d as a number and not a string . For the ones that take a string , we have to add a single quotes to the doc_id name: validate doc id </e> As a stupid programmer I like to use the upper left corner of the document as the 0,0 coords therefore we need to do some fancy calculations",get coords
"<e> NL: Parses a YAML file and returns a nested dictionary containing its contents . : param file : Handle of file to parse : return : Parsed file contents name: parse yaml file </e> Parses control file contents , yields a list of steps ",parse control file
<e> NL: Return a boolean value for whether the given file is tracked by git  name: git ls files </e> Return a boolean value for whether the given file is ignored by git ,ignored by git
<e> NL: Get country code . : param area : Country name . : param code : Code name . : type area : str : type code : str : returns : Country code . : rtype : str name: get country code </e> Verifies that the given two - letter country code is valid . : param code : A two - letter country code : type code : str : return : The passed value : rtype : str : raises : voluptuous . Invalid,country code
"<e> NL: calculate bam depth : param bam : input to bam file : param out_prefix : output Prefix , could include output path : param idx : whether to index output mpileup file or not , default is false name: bam depth </e> get read cateroties : param bam : input bam path : param out_txt : output file name : return : output summary name",bam sum
<e> NL: Generate a stable filename using the original filename of the type  name: get filename </e> Generate a filename to be used by packer ,generate packer filename
<e> NL: identifier : CHARACTER identifier | empty name: p identifier </e> seen_union : UNION IDENTIFIER,p seen union
<e> NL: Shorten long URLs to fit on one line  name: shorten url </e> Shorten long URLs to fit on one line ,shorten url
<e> NL: Extract a summary report . : param report : Vehicle output report . : type report : dict : return : Summary report . : rtype : dict name: extract summary </e> Return a report that matches ` ` name ` ` : param request_handler : : param name : : rtype : : class:`fineract.objects.report . Report `,get by name
"<e> NL: "" Generate a random string for testing purposes name: guess generate </e> Only for testing purposes ",from schema
"<e> NL: Convert a Mapper 1-complex to a networkx graph . Parameters ----------- graph : dictionary , graph object returned from ` kmapper.map ` Returns -------- g : graph as networkx . Graph ( ) object name: to networkx </e> Plot a graph using a circular layout . Parameters ---------- graph : networkx . Graph Graph representation of interaction network",plot graph
<e> NL: Detect if we are running in a KDE desktop name: is kde desktop </e> Check if desktop is locked . Return bool . Desktop is locked if press Win + L Ctrl + Alt + Del or in remote desktop mode ,is desktop locked
<e> NL: Returns a list of references to other catalogs from this one name: flat references </e> Returns a dictionary with catalogs definitions ,get catalog definitions
"<e> NL: main : main COMMENT | main RAW | main HEADING | main SLIDE | main SCISSOR | main MACRO | main YAML | nil name: p main notext </e> The main method for the Netify app , when started via UWSGI ",uwsgi main
<e> NL: Return job job status code from the response of the sacct / squeue command name: get job status </e> Return job job status code from the response of the qstat command,get job status
<e> NL: Interpolate the edges of the axes gates from their centers  name: interpolate axes edges </e> Interpolate the edges of the range gates from their centers ,interpolate range edges
<e> NL: Convert a task state ID number to a string  name: to str </e> Convert a label to a LUT ID number ,get lut id
<e> NL: Make sure the header is an unicode string  name: decode header </e> Make sure string is unicode try to default with utf8 or base64 if failed ,unicode string
<e> NL: Returns true if new value is strictly better than old for given metric  name: metric value is better </e> Determine if test is better than control ,conversion uplift
"<e> NL: if you introduce new ' save - able ' parameter dictionaries , then you have to include them here name: pack prms </e> if you introduce new save - able parameter dictionaries then you have to include them here",pack prms
<e> NL: Generates a globally unique VLAN tags . : return : VLAN tag name: get vlan </e> Get VLAN i d associated with a portgroup on a DVS ,get portgroup details
"<e> NL: Get from a list with an optional default value  name: list get </e> Coerces an optional value into a list of one or zero elements . > > > optional_to_list(""a "" ) [ ' a ' ] > > > optional_to_list(None ) [ ]",optional to list
<e> NL: Checks if a module is imported within the current namespace  name: module is imported </e> Checks if a module exists and can be imported,module exists
<e> NL: Check that project already exists and has been set up Returns project name if all checks pass name: check project </e> Check that database is in project and that it has activities Returns database_name if all checks pass,check database
<e> NL: Provides a score out of 10 that determines the relevance of the search result name: matching details </e> Provides a score out of 10 that determines the relevance of the search result,matching details
"<e> NL: Return the canonical version of a file name . The canonical version is defined as the absolute path , and all file system links dereferenced . : param str filename : The filename to make canonical . : return : The canonical filename . : rtype : str name: canonical filename </e> Given a list of dialects choose the one to use as the canonical version ",choose dialect
<e> NL: Ensure thread local is initialized  name: thread init </e> set the initialization state of the local node @param initialized : True if node initialized @type initialized : bool,set initialized
"<e> NL: Set whether or not validators are enabled . : param run : whether the validators are run name: set run validators </e> Set whether or not validators are run . By default , they are run ",set run validators
"<e> NL: Create a Store , given a dict  name: from dict </e> Create PDF and store it in filedir_pdf",create pdf
<e> NL: Add node(s ) to graph Args : graph ( Graph ) : Graph to add node(s ) to nodes ( list ) : List of nodes Returns : Graph : Return the modified graph name: add nodes </e> Reduce test case graph to a test - only graph ,reduce deps
<e> NL: Sums the number of files in a directory : param directory : Any directory with files : return : Number of files in directory name: get number of files in dir </e> Reads in data from a directory of CSV files ; assumes the directory only contains CSV files ,read dir
<e> NL: Gets query string values from a url  name: get query values from url </e> Gets query parameters for creating a signed URL ,get signed query params v2
<e> NL: Custom JSON decoder that allows construction of a new Smi instance from a decoded JSON object  name: .json hook </e> check vaules in selinux mode,check selinux label
<e> NL: Reads a file and returns the content as a string . : param str file_path : The path to the file to read . : return str : Content of the file  name: read file </e> Execute fsync on a file ensuring it is synced to disk Returns the file stats : param str file_path : The file to sync : return : file stat : raise OSError : If something fails,fsync file
<e> NL: return to ' argparse ' or ' optparse ' name: get parser type </e> If obj is argparse . Namespace or optparse . Values we ll return a dict representation of it else return the original object ,namespace to dict
"<e> NL: Determine if we have a console attached or are a GUI app  name: has console </e> To see if we are a console app , check if we can treat stdin like a tty , file or socket ",is console app
"<e> NL: Create a new logger with a given name , set its output file and add it to a list of all current loggers . Args : name : Name of the logger . Usually _ _ file _ _ . Returns : Newly created logger  name: get logger </e> @return : the existing loggers , in a list of C{(name , logger ) } tuples",get all existing loggers
<e> NL: find egg from path : param path : : return : name: find egg </e> Blindly find and return the first egg we find,get egg
"<e> NL: Reads all ROIs in a ZIP file Parameters ---------- fname : str Input filename Returns ------- rois : list of ROIs Each ROI is a vector of 2D points See Also -------- read_roi : function , reads a single ROI name: read roi zip </e> Given a dataframe N x N , returns mean M x M matrix of grouped mean rois INPUTS ------- df : pd . DataFrame , shape = N x N rois : np.array like , shape N",group dataframe from rois
"<e> NL: Calculate cov_x from fjac , ipvt and p as is done in leastsq name: calc cov x </e> Calculate cov_x from fjac ipvt and p as is done in leastsq",calc cov x
<e> NL: Calculates the moving average of an array  name: moving average </e> Calculates a moving average of iterable over n elements,moving average
<e> NL: Check whether a requirement is installed  name: requirement is installed </e> Check whether the application < name > is installed ,has app
<e> NL: Calc qi_power on t_x tuple returning tuple name: fq12 qi pow </e> Calc qi_power on t_x tuple returning tuple,fq6 qi pow
<e> NL: non - zero hit test on interior of a path  name: nonzero hit </e> even / odd hit test on interior of a path ,evenodd hit
"<e> NL: Create type for polynomials over GF(p )  name: gfp x </e> Compute division of polynomials over GF(2 ) . Given a and b , it finds two polynomials q and r such that : a = b*q + r with deg(r)<deg(b )",div gf2
<e> NL: create a database connection to the SQLite database specified by db_file : param db_file : database file : return : Connection object or None name: create connection </e> create a database connection to the SQLite database specified by the db_file : param db_file : database file : return : Connection object or None,create connection
"<e> NL: Determines whether the specified code is valid . : param code : The code : type code : string : returns : True if the specified code is valid , False otherwise . : rtype : boolean name: is valid </e> Check whether the code cache for a particular piece of code is valid . Returns a tuple containing : a boolean representing whether the cached code should be used , and the cached code ( or ` ` None ` ` if the cache should not be used ) ",code cache check
"<e> NL: Return the document key for ` interval ` . : param interval : Interval : type interval : int name: map interval </e> Adjust the evaluation interval adaptively . If cur_dev_size < = thres_dev_size , return base_interval ; else , linearly increase the interval ( round to integer times of base interval ) ",get adaptive eval interval
<e> NL: Create a cache of unique dates from an array of dates name: maybe cache </e> Returns a dictionary of important dates,important dates
<e> NL: Calculates the Poisson log - likelihood  name: poisson ll </e> Frobenius norm log likelihood ,log lik frob
<e> NL: Parse pubstatus node Parameters ---------- node : XML node or None Returns ------- str or None name: parse pubstatus node </e> Parse the history node of a pubmed xml response Parameters ---------- node : XML node or None Returns ------- pubdate : dict or none,parse history node
<e> NL: Ensure dictionaries in the cyber observable layer have lowercase keys no longer than 30 characters  name: observable dictionary keys </e> Returns set of names of sequenes which have meaningful part ( without X or - ) longer than 30 % of trimmed alignment ,length check
<e> NL: Download OFX files and combine them into one name: combined download </e> Download OFX files and combine them into one It expects an ' accounts ' list of ofxclient . Account objects as well as an optional ' days ' specifier which defaults to 60,combined download
"<e> NL: Given multiple sparse matrices with the same shape , format and nonzero coordinates , generate a background matrix made up of the median signal name: median bg </e> Given multiple sample matrices , return a 1D array of all differences between each sample matrix 's pixels and their corresponding median background value . All input matrices must have the same shape , nonzero coordinates and format ",reps bg diff
<e> NL: Add # to list elements to avoid duplication  name: clean opentea list item </e> Function to avoid code duplication that takes returns the right profile i d,process profile input
"<e> NL: Normalize values in dictinoary to be in range [ x , y ] : param dictionary : : param x : range min : param y : range max : return : dict with values changed accordingly name: normalize dict </e> Check whether range of values can be stored into defined data type . : param mn : range minimum : param mx : range maximum : param dtype : : return :",suits with dtype
<e> NL: This method is only an example ! Replace it with a real nonce database . : param str key : the public key the nonce belongs to : param int nonce : the latest nonce name: get last nonce </e> Generate a nonce with the current timestamp,mk nonce
<e> NL: Returns the cardinality of the given resource attribute  name: get attribute cardinality </e> Emits cardinality decorator at end of type,range cardinality
<e> NL: Determine if this given value is an IPv6 network value or an IPv6 interface value as defined by the ipaddress module Parameters ---------- value : str The value to check Returns ------- bool True if the value is any valid IP thing False otherwise name: is net ip6 </e> Determine if this given value is an IPv6 address value as defined by the ipaddress module . Parameters ---------- value : str The value to check Returns ------- bool True if the value is any valid IP thing False otherwise,is host ip6
<e> NL: Return the document key for ` interval ` . : param interval : Interval : type interval : int name: map interval </e> Return a tileset info for this time interval,tileset info
"<e> NL: Check if the lease status is stable : param lease_id : Lease ID : return : True if the status is in ( PENDING , ACTIVE , TERMINATED , ERROR ) name: is stable </e> Validator for the combination of statuses . Check if the combination of statuses of lease , reservations and events is valid : param lease_id : Lease ID : param status : Lease status : return : True if the combination is valid",is valid combination
<e> NL: Initiate log file  name: init logs </e> Initiate log file ,init logs
<e> NL: Make sure path exists  name: make sure path exists </e> Make sure input filename exists ,file exists
<e> NL: Initialize basic stream logger  name: . logger </e> Initialize a basic logger for HTMap for the CLI ,start htmap logger
<e> NL: count number of sites with cov = 4 and number of variable sites  name: count var </e> Calculate percentage of sites removed given alignment size and number of sites trimmed ,get removed fraction
"<e> NL: Converts the value to a double digit hex string name: to hex </e> A 6 digit hex string representing an ( r , g , b ) color",extract color
"<e> NL: Calc the contsign of v , and return as the new k name: get value contsign as key </e> Calculate contsign of v and pack as kv ",pack contsign as key image as val
<e> NL: Helper function with caching for table cells and the cells sentences  name: get table cells </e> In order to reuse function output_emacs_table / output_other_table We generate table contains cells with type MyTableCell,gen table from list
"<e> NL: get school info by school name name: get section by school </e> Fetch school data from external API and parse it , at once . Parameters ---------- code School unit code ",fetch and parse school unit data
<e> NL: Strip every element of a list and keep a list of ordered unique values name: strip and uniq </e> Strip every element of a list and keep a list of ordered unique values : param tab : list to strip : type tab : list : return : stripped list with unique values : rtype : list,strip and uniq
<e> NL: Proximal operator for l - inf norm  name: prox linf </e> Proximal operator for maximum entropy regularization ,prox max entropy
"<e> NL: Get the operating system name name: os name </e> Adds operating system , requires "" i d "" and "" operatingsystem - id "" ",add operatingsystem
<e> NL: Checks the relaxed soundness of a Petri net having the initial and the final marking Parameters ------------- net Petri net ini Initial marking fin Final marking Returns ------------- boolean Boolean value name: check relaxed soundness net in fin marking </e> Subtract from a marking the postset of t and adds the preset Parameters ------------ m Marking t Transition Returns ------------ diff_mark Difference marking,diff mark
<e> NL: Normalize handle values  name: . normalize </e> Normalize 2d array between two values To check,normalize 2d
<e> NL: Calculates mass from the A parameter from fitting the damping from fitting in angular units and the Conversion factor calculated from comparing the ratio of the z signal and first harmonic of z  name: calc mass from fit and conv factor </e> Calculates the Conversion Factor and physical amplitude of motion in nms by comparison of the ratio of the heights of the z signal and second harmonic of z ,calc z0 and conv factor from ratio of harmonics
<e> NL: Returns a module loaded with the provided model  name: load model </e> Returns a list of label strings loaded from the provided path ,get label vocab
"<e> NL: List all reactions in a model . Parameters ---------- model_id : str A valid i d for a model in BiGG . Returns ------- reactions : DictList All model reactions . Raises ------ requests . HTTPError If the request has failed  name: list model reactions </e> pre : reacsbounds={reac:(lo , hi ) } , all external reactions blocked post : model with reactions in internal cycles ( for doing elementary modes )",internal cycles
"<e> NL: Given a list of paths , return a list of paths name: get files </e> Set list of safe writeable paths",set safe paths
"<e> NL: "" Convert a PyEphem Date into a timezone aware python datetime name: ephem to timezone </e> Convert a PyEphem Date into a timezone aware python datetime",ephem to timezone
<e> NL: Read the csv files  name: parse example tensor </e> Restrict the csv files to the adequate number of subjects,filter csv by n subjects
"<e> NL: locates any * .obo files in the specified directory : param paths : paths to search : return : list of paths : rtype : list name: find obos </e> Search for python ini files in given paths , append files with full paths for P.getParameters ( ) to read . Current paths given are : where this code is executing , one up , current directory",get params files
"<e> NL: Return the input tensor , offset by a certain value : param input_tensor : ( TensorFlow Tensor ) The input tensor : param idx : ( int ) The index offset : return : ( TensorFlow Tensor ) the offset tensor name: get by index </e> Apply log_softmax to the last dimension of input x : param x : tensor : return :",log softmax
<e> NL: Translate unsafe characters to underscores  name: normalize pipeline name </e> Quote string containing unsafe characters for both group - name and items : param s : string to make safe : return :,quote str
<e> NL: Format hostname for display  name: format hostname </e> format date for display,format date
<e> NL: function for unpacking the tableswitch op arguments name: unpack tableswitch </e> function for unpacking the tableswitch op arguments,unpack tableswitch
"<e> NL: Check for assertEqual(A , None ) or assertEqual(None , A ) sentences N322 name: assert equal none </e> Check for assertEqual(A , None ) or assertEqual(None , A ) sentences N318",assert equal none
<e> NL: Return a decoded unicode string . False values are returned untouched  name: to unicode </e> Return a decoded unicode string . False values are returned untouched ,to unicode
"<e> NL: Generate all possible binary spin states . Parameters ---------- n : int Number of spins . sym : bool If true , return states in { -1,1 } basis . Returns ------- v : ndarray name: bin states </e> Return all binary states for a system ",all states
<e> NL: Get the available visualizations from the request context . Put the visualizations in the request context if they are not yet there  name: get visualizations </e> Get the NN model that s being analyzed from the request context . Put the model in the request context if it is not yet there ,get model
<e> NL: Get value from request POST or GET name: get request arg </e> Get a single value from a request GET parameter . Optionally error if it is missing ,get request param
"<e> NL: Given the tokens , extracts the definition tokens . Parameters ---------- tokens : iterator An iterator producing tokens . Returns ------- A list of tokens for the definition  name: get definition tokens </e> Check if there is a correct function name used in the function definition . : param tokens : tokens to check : return : None if no error found otherwise a string representing what type of error was found",check invalid function name
<e> NL: Converts a list of key = value strings to a dictionary . : param l : the list : return : the dictionary name: keyval list to dict </e> Converts argument strings in key = value or key . namespace = value form to dictionary entries,parse extension arg
<e> NL: Checks for emails that fill up the queue without getting sent  name: email queue </e> Checks for deferred email that otherwise fill up the queue ,deferred emails
<e> NL: Get the list of all locations . : return : the list of all locations name: get locations </e> Return potential locations of IACA installation ,serach path
<e> NL: Add node(s ) to graph Args : graph ( Graph ) : Graph to add node(s ) to nodes ( list ) : List of nodes Returns : Graph : Return the modified graph name: add nodes </e> read Graph and construct flowMatrix,get flow matrix
<e> NL: return file index and intensity where peak exists ( found by peak search ) in .cor file name: query peak location </e> Return the highest intensity peak coordinates ,get high intensity peaks
"<e> NL: Show a dialog to choose a directory name: choose directory </e> Get the plugin templates from the templates directory . If more than one template is found or passed , a dialog is raised to choose one ",get templates
<e> NL: Custom JSON decoder that allows construction of a new Smi instance from a decoded JSON object  name: .json hook </e> Calculate downsampling value ,calc downsample
<e> NL: Converts an integer into a bytes object containing n bytes name: int to bytes </e> Converts a kOS STRING or STRING_VALUE into a bytes object,string to bytes
"<e> NL: Remove the content from * value * while keeping its whitespace . Replace * value*\ 's nodes with two text nodes , the first containing whitespace from before its content and the second containing whitespace from after its content  name: blank param value </e> Remove text nodes containing only whitespace",cleanup nodes
<e> NL: Disable tracing on the provided blacklist paths by default not tracing the health check request  name: disable tracing url </e> Disable tracing for the provided blacklist URLs by default not tracing the exporter url ,disable tracing hostname
"<e> NL: ` ` int SDL_SemWait(SDL_sem * ) ` ` This function suspends the calling thread until the semaphore pointed to by sem has a positive count . It then atomically decreases the semaphore count  name: SDL SemWait </e> ` ` int SDL_SemPost(SDL_sem * ) ` ` Atomically increases the semaphore 's count ( not blocking ) . : return : 0 , or -1 on error ",SDL SemPost
<e> NL: Ensure that stream does not contain None name: substitute none </e> Returns a JobBinary that does not contain a data field The data column uses deferred loading ,job binary create
<e> NL: Updates given ` queue ` ( removes last item and puts ` word ` ) . Parameters ---------- queue : Queue Given queue . word : str Word to be added to queue  name: update queue </e> Return generator of provided queue : param q : queue : type q : Queue . Queue : return : generator : rtype generator,queue get all
"<e> NL: Take a reporter editions dict and flatten it , returning a dict for use in the DictWriter  name: make editions dict </e> Take a reporter editions dict and flatten it returning a dict for use in the DictWriter ",make editions dict
"<e> NL: Method by which other modules messages are ( re-)packed : param code : the code of the message : param data : the data to pack : return : dict , code and data name: pack message other </e> Method by which a message of type ' GOSSIP NOTIFY ' is packed / encoded : param data_type : the data type of the message : return : dict , code and data",pack gossip notify
"<e> NL: Parse bracketed list . Empty list is possible , as is a trailing separator  name: bracketed list </e> Parse bracketed list ",bracketed list
"<e> NL: Download the data from Yann s website unless it s already here  name: maybe download </e> Download the data from Yann 's website , unless it 's already here ",maybe download
<e> NL: Simple Moving Average . Formula : SUM(data / N ) name: simple moving average </e> Linear Weighted Moving Average . Formula : LWMA = SUM(DATA[i ] ) * i / SUM(i ),linear weighted moving average
"<e> NL: If X is None then return None , otherwise if object X is not an array or list , then create a list containing N copies of X. If X is already iterable then keep it  name: make iterable or none </e> Initializes a parameter list . If there is a "" START "" row , then everything below it will be saved as a list ",initialize from paramMat
<e> NL: Check whether the array has positive entries  name: check positive </e> Check whether the array has non negative entries ,check nonnegative
<e> NL: Determine if a string is a valid unit . Args : ustr ( str ) : String representation to test . Returns : bool : True if the string is a valid unit . False otherwise  name: is unit </e> Determine if a string is a valid unit . Args : ustr ( str ) : String representation to test . Returns : bool : True if the string is a valid unit . False otherwise ,is unit
<e> NL: Retrieve the assignments ( formula : truth value ) from a list of literals ( positive or negative ) . Args : literals ( list ) : The list of the literals . Returns : assignments ( dict ) : The list of atoms and corresponding truth value  name: get assignments </e> Classify atoms in the given formula according to whether they occur as positive or negative literals,classify atom occurrences in formula
<e> NL: Enumerate over SQLAlchemy query object q and yield individual results fetched in batches of size limit using SQL LIMIT and OFFSET  name: enumerate query by limit </e> Enumerate over SQLAlchemy query object ` ` q ` ` and yield individual results fetched in batches of size ` ` limit ` ` using SQL LIMIT and OFFSET ,enumerate query by limit
<e> NL: load a list from a string name: load list </e> load a dict from a string,load dict
<e> NL: Some versions of python do n't have the timedelta.total_seconds ( ) method  name: total seconds </e> Wrapper to work around lack of .total_seconds ( ) method in Python 3.1 ,total seconds
<e> NL: Returns region choices for the prompt . : param list regions : list of digitalocean . Region . Region instances : return : list of 2-len tuples name: prepare region choices </e> Returns image choices for the prompt . : param list images : list of digitalocean . Image . Image instances : return : list of 2-len tuples,prepare image choices
"<e> NL: Choose the most common item from the list or the first item if all items are unique  name: most common item </e> Choose the most common item from the list , or the first item if all items are unique ",most common item
<e> NL: Is a nameop a valid state - preorder operation? name: state create is valid </e> Remove a preorder hash ,namedb preorder remove
"<e> NL: Get the current application global proxy object . Returns ------- proxy or None name: get application global </e> Get the current focused declaration object . Returns ------- result : Widget or None The declaration for the currently focused proxy , or None if the current focus widget does not map to a proxy ",focused declaration
"<e> NL: Return the reverse complement of the base  name: rc base </e> Decodes the specified integer representing edges in Cortex graph . Returns a tuple ( forward , reverse ) which contain the list of nucleotides that we append to a kmer and its reverse complement to obtain other kmers in the Cortex graph ",decode edges
<e> NL: r Returns the surface area of a cylinder  name: A cylinder </e> Return the inertia tensor of a cylinder ,cylinder inertia
"<e> NL: Returns a list of raw repos found . repos can be either a repo instance , or a list of repos name: get raw repos </e> Filter list of repositories acc . to the list passed : param repos : list of repos to check pull request for : param ignore_repos : list of repos to ignore : return : filtered list of repos",filter repos
<e> NL: Filter to convert given timestamp to local date / time  name: timestamp local </e> Filter to convert given timestamp to UTC date / time ,timestamp utc
"<e> NL: Decorate a delta and check that the ids in it are valid . : return : A generator over delta  name: check delta ids are valid </e> return an english string representing a rate . delta is assumed to be a rate as "" 1 per delta "" ",natural rate
<e> NL: Extract text from a PDF file name: text extract </e> Open a PDF file with PyPDF2 ,read pdf
<e> NL: Convert tuples to lists name: get lists from tuples </e> convert argparsed strings to lists for an argument,convert strings to list
<e> NL: Perform basic auth : param credentials : < dict > : return : < dict > name: basic auth </e> Used to get credentials from bearer auth : param auth : < str > : return : < dict >,get bearer auth credentials
<e> NL: Use the mimetypes module to lookup the type for an extension . This function also adds some extensions required for HTML5 name: guess mime type </e> mimetypes.guess_extension introduces some bizarre randomness . This function removes it for the extensions that interest us most ,extension for type
<e> NL: Gets species i d to CheBI term i d mapping from the model . : param model : libsbml . Model model : return : dict { species_id : ChEBI_term_id } name: get species id2chebi id </e> Return a ChEBI name corresponding to the given ChEBI ID ,get chebi name from id
<e> NL: Get : class:`ActorRef < pykka . ActorRef > ` for all running actors . : returns : list of : class:`pykka . ActorRef ` name: get all </e> Get an actor by its universally unique URN . : param actor_urn : actor URN : type actor_urn : string : returns : : class:`pykka . ActorRef ` or : class:`None ` if not found,get by urn
<e> NL: Validation for ` ` bookmark - level ` `  name: bookmark level </e> Return resource referenced by bookmark,get document by bookmark
<e> NL: Update idx space of datasets . Idx space used for correct mapping global idx to corresponding dataset data index name: update datasets idx space </e> add new path build on idx to all paths,update paths
<e> NL: Convert a ' r ' or ' rw ' specification to a list of permissions name: perms from short </e> Copy a RO object into a RW structure made with standard Python classes ,make rw
"<e> NL: Search for a material in all the libraries This function search in all the material libraries , and return the first instance found , that matches the name of the material requested . If no material found , returns None Arguments : material String with the material name name: get material </e> Flattens a given material . Args : material ( dict ) : material config . Returns : list",flatten material
<e> NL: Find project config path  name: find project config path </e> Just read the config for a project,read config
<e> NL: Return the height if the binary tree is balanced - 1 otherwise  name: is balanced </e> checks if the structure object is charge balanced,. is charge balanced
"<e> NL: Converts a list of Scipy sparse matrices to a rank 3 SparseTensor . : param a_list : list of Scipy sparse matrices with the same shape . : return : SparseTensor of rank 3  name: sp batch to sp tensor </e> Computes symmetric normalization of A , dealing with sparse A and batch mode automatically . : param A : Tensor or SparseTensor with rank k = { 2 , 3 } . : return : Tensor or SparseTensor of rank k",normalize A
<e> NL: Get native ( unsorted ) CUDA device ID Parameters ---------- idx : int . Specifies the ( sorted ) index of the device . Returns ----------- native_idx : integer denoting the native cuda i d  name: get native id </e> Set native ( unsorted ) CUDA device ID Parameters ---------- idx : int . Specifies the ( unsorted ) native index of the device ,set native id
<e> NL: Return maximum number of MIDI inputs . Returns ------- max_inputs : int Maximum number of MIDI inputs  name: get max inputs </e> Return maximum number of MIDI outputs . Returns ------- max_outputs : int Maximum number of MIDI outputs ,get max outputs
<e> NL: Parse given input array that contains string lines . Args : lines ( array ) : String lines of array  name: parse input </e> Merges concatanates given input array into lines of strings . Args : input_array ( array ) : Parsed string of array ,merge input
"<e> NL: Similar to parse but returns a list of Options objects instead of the dictionary format  name: .parse options </e> Similar to SortVersions , but take the list of versions returned by FindVersions ",sort version tuples
<e> NL: Is there at least one user ? name: has user </e> Is this at least libvips x.y ?,at least libvips
"<e> NL: Check if the signature is valid : param signature : signature to be checked : returns True if the signature is technically correct name: check signature </e> Checks if the signature is compatible with signature . @param signature : string The signature to check if compatible . @param withSignature : string The signature to check with . @return : boolean True if the signature is compatible , False otherwise ",is compatible
<e> NL: Opens given URL in a safe way : param url : str : return : name: safe open url </e> Return a positive CONTENT_LENGTH in a safe way ( return 0 otherwise ) ,get content length
"<e> NL: Return a flattened version of the passed in tree  name: flatten tree </e> this mutates passed in ex ( any BaseX ) , replacing nested selects with their ( flattened ) output",replace subqueries
<e> NL: Serializes n as variable size integer to the provided buffer . Buffer has to ha : param n : : param buffer : : param offset : : return : name: dump uvarint b into </e> Perform a single conversion from an input buffer to an output buffer ,src simple
<e> NL: Normalize a host . Does the same stuff that the semantic canonicalizer does to the host part of a url  name: normalize host </e> Normalize the host part of the URL,normalize host
<e> NL: Get object user . Args : obj ( object ) : Object that contains the user user ( object ) : User object . Returns : object : Object user  name: get object user </e> Check if user can create topic . Args : category ( str ) : Category name . forum ( obj ) : Object forum . user ( obj ) : Object user . Returns : bool : If the user can create topic ,user can create topic
<e> NL: add comment lines for opts unless present name: add opt comment </e> Validate bids unless opts say otherwise,validate bids
"<e> NL: Create , populate and return the VersioneerConfig ( ) object  name: get config </e> Create , populate and return the VersioneerConfig ( ) object ",get config
<e> NL: Get helpful similar matches for an invalid flag  name: get flag suggestions </e> Returns helpful similar matches for an invalid flag ,get flag suggestions
<e> NL: Checks for dependency consistency . : param claimset_data : list of tuples or strings . : type claimset_data : list of tuples or strings : return : true if dependencies are consistent ; false if not name: check dependencies </e> Checks if claimset_data contains tuples with an integer entry . : param claimset_data : list of tuples or strings . : type claimset_data : list of tuples or strings : return : true if tuples with numbers ; false if not,check for number
"<e> NL: Whether end of alignment segment is a mapped end Parameters ----- cigar_tuple : tuple of cigar Returns ----- int 1 for linear end , 0 for ambiguous end name: is mapped </e> Whether end of alignment segment is a linear end Parameters ----- cigar_tuple : tuple of cigar Returns ----- int 1 for linear end , 0 for ambiguous end",is linear
<e> NL: Check if the script is run from command line or from a Jupyter Notebook . : return : bool that is True if run from Jupyter Notebook name: run from ipython </e> Configure whether this module should assume that it is being run from a jupyter notebook . This sets some global variables related to how progress for long measurement sequences is indicated ,notebook mode
<e> NL: Get first name to be used as the display name  name: get firstname </e> Create a Python identifier for the detector to be used as the class name,class name from prefix
<e> NL: Load libary by searching possible path  name: load lib </e> Load library by searching possible path ,load lib
"<e> NL: Update the sandbox to hold the new sandbox instance . Particularly useful for Skulpt , which needs to set the sandbox in an unusual way  name: set sandbox </e> Start and bind the FluidDB client : param app : The Flask instance : param sandbox : Whether to use the sandbox , optional , default : False",init fluiddb
"<e> NL: Converts Cartesian coordinates into polar coordinates : param x , y : Cartesian coordinates . : return : tuple of polar coordinates ( r , phi ) , with phi in radians  name: cartesian to polar </e> A function that converts the x , y coordinates to polar ones . -Does not do the circular correction",cartesian to polar
<e> NL: Internal function to validate a spectra data frame . Args : spectra_dataframe ( pandas . DataFrame ) : the Returns : bool : True if the spectra is valid ; otherwise false  name: validate spectra dataframe </e> Minimizes aliasing effects on spectra and cross - spectra df : pandas . DataFrame containing spectrum or cross - spectrum,anti aliasing
<e> NL: Helper method for get_tree  name: . node to dict </e> Helper method for ` ` get_tree ` ` ,node to dict
"<e> NL: Return a bytes type , encoding from string as needed name: as bytes </e> This function is needed for Python 3 , because a subprocess can return bytes instead of a string ",decode to string
"<e> NL: Get a list of the variables in the operator and their shapes . Parameters ---------- operator : LinOp The operator to extract the variables from . Returns ------- list A list of ( var i d , var shape ) pairs  name: get expr vars </e> Get a list of the parameters in the operator . Parameters ---------- operator : LinOp The operator to extract the parameters from . Returns ------- list A list of parameter objects ",get expr params
<e> NL: Set up X10 dimmers over a mochad controller  name: setup platform </e> Set up X10 dimmers over a mochad controller ,setup platform
<e> NL: Open file for reading respecting Python version and OS differences . Sets newline to Linux line endings on Windows and Python 3 When encode = False does not set encoding on nix and Python 3 to keep as bytes name: open fr </e> Open file for reading respecting Python version and OS differences . Sets newline to Linux line endings on Windows and Python 3 When encode = False does not set encoding on nix and Python 3 to keep as bytes,open fr
<e> NL: Format a dict to a list of tuples : param d : the dictionary : param as_list : return a list of lists rather than a list of tuples : return : formatted dictionary list name: dict as tuple list </e> Translate the values of the list of 3-tuples according to the provided look - up table Is a generator . : param list triangle_list : a list of 3-tuples of integers : param dict lut : a dictionary mapping current to new values,translate indexes
"<e> NL: if the given directory has a valid _ _ init _ _ file , return its path , else return None name: has init </e> Return true if cls has on overridable _ _ init _ _ ",ctor overridable
"<e> NL: retrieves algo name , algo params and meta params from sklearn model : param algo : sklearn model : return : dictionary : rtype : dict name: fetch algo metadata </e> Transforms an unpacked SmartyParseObject into a .utils . Ghid . If using algo zero , also eliminates the address and replaces with None ",ghid transform
<e> NL: Create and return a new page object  name: new page </e> Transform a vtkActor and return a new object ,transform filter
"<e> NL: Find a cluster based on its integer i d and return a Cluster object . : param cluster_id : the i d of a cluster . : param context : Security context : returns : a : class:`Cluster ` object  name: get by id </e> Use pandas to group clusters by cluster identifier df = pandas dataframe cluster_id = column that identifies cluster membership , which can be a basic string like "" hospital cluster A "" date_col = onset or report date column",group clusters
"<e> NL: Based on the filename provided , it loads the module and returns the module object . It does not currently load the module into globals name: get module </e> Run namedex in the commandline This function runs when the module is ran as a script . It only prints the results , it does not output to stout ",command line
<e> NL: Convert Pyrocko trace to ObsPy trace . : param trace : : py : class:`pyrocko.trace . Trace ` name: to obspy trace </e> Trace every executed line ,trace full
<e> NL: Read the long description  name: get long description </e> Generates a random long . The length of said long varies by platform ,get long
<e> NL: Add new headers . : param x : a dict with headers for the API : type x : dict : param y : a dict with headers for the API : type y : dict : return : a dict with headers merged : rtype : dict name: add headers </e> Normalizes given node as str or dict with headers,normalize node
<e> NL: Check a string is utf-8 encoded : param bytes txt : utf-8 string : return : Whether the string is utf-8 encoded or not : rtype : bool name: is utf 8 </e> Calculate the remaining bytes of a UTF-8 sequence if given the first character . UTF-8 ONLY !,remaining bytes
<e> NL: Checks if a given gtype is sane name: is grouping sane </e> Checks if a given gtype is sane,.is grouping sane
<e> NL: Calculates the eigenvalues of the gradient tensor matrix name: calc gradtensor eigenvalues </e> Calculates the effective outer indices of the intermediate tensor corresponding to the subgraph ` ` s ` ` ,dp calc legs
"<e> NL: A helper function that wraps socket.getaddrinfo and returns None when it fails to , e.g. resolve one of the hostnames . Used to address PYTHON-895  name: addrinfo or none </e> A helper function that wraps socket.getaddrinfo and returns None when it fails to , e.g. resolve one of the hostnames . Used to address PYTHON-895 ",addrinfo or none
<e> NL: Make Pylint aware of our custom log levels  name: verboselogs module transform </e> Make Pylint aware of our custom logger methods ,verboselogs class transform
<e> NL: Ensure that a mapping of names to parameters has the parameters set to the correct name  name: namify arguments </e> Compute mapping from parameters to devices by looking at the device option of the op that creates the blob has,infer blob devices
"<e> NL: Get applicant from email address . If the person exists , return ( None , person ) If multiple matches , return ( None , None ) Otherwise create applicant and return ( applicant , None ) name: get applicant from email </e> Get applicant from email address ",get applicant from email
<e> NL: Gets the basename of a path without its extension  name: get splitext basename </e> Summarizes a single nc file given its basename ,nc file summary
"<e> NL: Verifies that git is accessible and in the PATH . : return : True if accessible , false if not name: is git accessible </e> Create windows each containing the same number of accessible bases ",equally accessible windows
<e> NL: Cheap function to invert a hash  name: . invert </e> azure notebooks does not allow access to URL parameters . this is a cheap function to parse them when provided manually ,parse params
<e> NL: Add size to kwargs if not present  name: add size </e> add i d to json rpc if not present,add get id
<e> NL: Get a named application configuration  name: get application configuration </e> Get a configuration variable group named |name|,get group
<e> NL: Produce the data for a hash - based pyc  name: code to hash pyc </e> Yield all the uninstallation paths for dist based on RECORD - without - . pyc,uninstallation paths
<e> NL: Return a list of all forms in a file  name: load forms </e> forms queue 's context entry,queue context entry
"<e> NL: Encode credential(s ) from a json string . ` Args : ` credential : str The credential json string to be encoded . ` Returns : ` str The encoded credential  name: encode from json str </e> Parse command - line credential string , e.g. ` cloud_files = my_files `",parse credential
<e> NL: Returns the largest prime factor of a number name: largest prime factor </e> Calculates the largest divisor of a natural number num_n,largest div
<e> NL: Determined the version of the latest bot for a user : param user_id : The i d of the user making the request : return : The bot i d name: get bot version </e> A function to cover the common case of creating a config for a bot ,.bot config
<e> NL: Load configs from the given file : param str config_file_path : a path to a file with configs : param class config_class : the config class ; default : Configs : return configs : the configs : rtype configs : Configs name: load configs </e> Recursively scans a directory for all valid bot configs . : param root_dir : Directory to scan . : return : The set of bot configs that were found ,scan directory for bot configs
<e> NL: Deregisters a path specification credentials . Args : credentials ( Credentials ) : credentials . Raises : KeyError : if credential object is not set for the corresponding type indicator  name: deregister credentials </e> Registers a path specification credentials . Args : credentials ( Credentials ) : credentials . Raises : KeyError : if credentials object is already set for the corresponding type indicator ,register credentials
<e> NL: Return a list of the vectors from each point in points to the point that follows name: vectors between points </e> Return a Point instance from a given list,.from list
<e> NL: Decrypts and decompresses provided data according to args name: process restore data </e> Provided with a TLSCiphertext instance c and a stream or block cipher alg the function decrypts c . data and returns a newly created TLSPlaintext ,tls decrypt
<e> NL: Set format for a property  name: set format </e> Set property values for Polygon ,set contourf properties
"<e> NL: Returns an approximate vector representing the major axis of the passed points . Parameters ------------- points : ( n , dimension ) float Points in space Returns ------------- axis : ( dimension , ) float Vector along approximate major axis name: major axis </e> Returns an approximate vector representing the major axis of points",major axis
<e> NL: Takes an input str or bytes object and returns an equivalent bytes object . : param data : Input data : type data : str or bytes : returns : Data normalized to bytes : rtype : bytes name: to bytes </e> Takes bytes and returns a GITypelib or raises GIError,.new from memory
<e> NL: WSGI application creation helper : param controller : Overrides default application controller : param transactional : Adds transaction hook for all requests name: build wsgi app </e> WSGI application creation helper : param controller : Overrides default application controller : param transactional : Adds transaction hook for all requests,build wsgi app
<e> NL: Add information of incomplete penetrance name: add incomplete penetrance </e> A three - locus heterogeneity penetrance model,my penetrance
<e> NL: Solve cholesky decomposition : : return A\(A'\B ) name: solve chol </e> Gill - King algorithm for modified cholesky decomposition ,gill king
<e> NL: Select only rows representing extended sources from a catalog table name: select extended </e> Select only rows passing a set of cuts from catalog table,select sources
<e> NL: return as csv data  name: as csv </e> Exports the saved weight data as a CSV file,export csv
"<e> NL: Use locate to return a sequence of ( directory , dotdir ) pairs  name: find repositories with locate </e> Locate a cycle of ( least - preferable , second - choice ) pairs to be removed from the game ",locate all or nothing cycle
<e> NL: Ensure that the topic name is text string of a valid length  name: coerce topic </e> Generator classmethod that returns a configured Catalog for all valid combinations of Language and Topic ,all catalogs
<e> NL: Returns the default start stop activation time threshold [ s ] . : return : Start - stop activation time threshold [ s ] . : rtype : float name: default start stop activation time </e> Returns the default start stop activation time threshold [ s ] . : return : Start - stop activation time threshold [ s ] . : rtype : float,default start stop activation time
"<e> NL: Verify if categories is are valid : categories : a list of categories from the command - line : raises : CategoriesError if there are invalid categories in categories : returns : True if all categories are valid name: verify categories </e> If an article is provided , then we select categories relating to it . Otherwise we select all article categories ",related categories
<e> NL: Project a point onto a plane . Parameters ---------- y : The point that should be project p : A point which lies on the plane n : The normal vector of the plane Returns ------- proj_y : The projection onto the plane name: project onto </e> Compute the number of steps required to escape from a point on the complex plane,compute escape
"<e> NL: Load a renderer and return the class . If a path is provided , the renderer is imported from that path . By default , ` ` static_templates.renderer . Renderer ` ` is used  name: get renderer </e> Return a new nurbs renderer for the system ( dereferences pointer )",glu new nurbs renderer
<e> NL: Initialize a table instance from a YAML map : param name : table name : param name : schema map : param inobj : YAML map of the table : return : table instance name: from map </e> Initialize a Rule instance from a YAML map : param name : rule name : param table : map of the table associated with the rule : param inobj : YAML map of the rule : return : Rule instance,from map
"<e> NL: Yield all direct child nodes of * node * , that is , all fields that are nodes and all items of fields that are lists of nodes  name: iter child nodes </e> Generator for all child dx_nodes of dx_node that are part of dx_nodes : param dx_nodes : [ DiffxNode , ... ] : param dx_node : DiffxNode",gen child nodes
<e> NL: compute overlap between two intervals name: overlap inodes </e> Compute collective overlap between two lists of particles ,collective overlap
<e> NL: Get the SHA a branch s HEAD points to  name: get branch sha </e> Move a branch s HEAD to a new SHA ,update branch
<e> NL: Convert camel to snake style . : param string : camel string : type string : str : return : snake style string : rtype : str name: camel to snake </e> Convert a camel cased name to PEP8 style ,camel case to pep8
"<e> NL: For the common "" Authorization : bearer token "" case , extract JWT from the authorization header name: extract bearer token </e> Return header object with ' Authorization ' for a given token",get auth header
"<e> NL: takes any Model , model object or dictionary and converts to Model : param model : Mapping or object containing a model : return : Model name: assert model </e> Make an element 's name absolute to make it unique . Eg "" stock1 "" in model "" model "" -- > "" model.stock1 "" : param model_name : Name of model : param name : Element name : return :",make name absolute
<e> NL: Replace all Capitalized tokens in by their lower version and add ` TK_MAJ ` ahead  name: deal caps </e> Replace all Capitalized tokens in ` x ` by their lower version and add ` TK_MAJ ` before ,deal caps
<e> NL: Generate a fake Response from requests  name: generate fake error response </e> Generate a fake dataset that matches the dimensions of MNIST ,fake data
<e> NL: Read classifier from pickle file  name: read pickle </e> Read classifier from pickle file ,read pickle
<e> NL: Represents value as a dict . : param value : : rtype : dict name: parse dict </e> Represents value as a dict ,. parse dict
"<e> NL: Extract IDs and names from a list , returning a list of IDs , and a list of names  name: split ids other </e> Takes a list containing identity names , emails , and ids , and returns a list of IdentityRefWithVote objects ",resolve reviewers as ids
<e> NL: set the path to of the resource directory  name: set resource root </e> Returns the path to the location of the file associated with the resource with the given resource ID ,get filepath
<e> NL: atom_list : atom_list ATOM | ATOM name: p atom list </e> hook : HOOK ATOM ATOM NEWLINE hook : HOOK ATOM ATOM atom_list NEWLINE,p hook
<e> NL: Return the foundation alert class for a message level  name: message class </e> Returns the displacement reduction factor of the foundation for a given corrected normalised rotation . : param cor_norm_rot :,foundation rotation reduction factor millen
<e> NL: This is the encryption function that encrypts your payload by passing the text and your encryption Key  name: encrypt data </e> this is the getKey function that generates an encryption Key for you by passing your Secret Key as a parameter ,get key
<e> NL: Checks that all dependencies needed to install the given packages can be satisfied using the given repos  name: cmd check sat </e> Checks that the given packages are not older than any other existing package in the repos ,cmd check upgrade
<e> NL: mkdir - p path name: mkdir p </e> like mkdir - p,mkdir p
<e> NL: Create a phone contact . : param phone : Class instance of Phone ( ) as parameter . : return : Boolean indicating success of database action  name: create phone contact </e> Create a customer with the name . Then attach the email and phone as contact methods,create customer
<e> NL: Estimates the number of a GEMM or linear layer . : param node_string : an onnx node defining a GEMM or linear layer : return : number of FLOPs : rtype : ` int ` name: count linear </e> Estimates the number of FLOPs in conv layer .. warning : : Currently it ignore the padding : param node_string : an onnx node defining a convolutional layer : return : number of FLOPs : rtype : ` int `,count convNd
<e> NL: Delete all the generated output  name: clean site </e> Delete the desktop entry generated by create_desktop_entry ,delete desktop entry
<e> NL: Set up logger to be used by the library  name: initialize logger </e> set logger to used by the log function,set logger
<e> NL: Check if the input string is an integer : param string : : type string : : return : : rtype : name: is int </e> Do a best effort attempt to conver input to a string . : param input : user supplied input . : type input : mixed . : return : String or None : rtype : string,ensure string
"<e> NL: Get the architecture and foreign architectures  name: get architectures </e> Helper to match compatible architectures . If ' up ' is True , we return the included architectures , if False we return the including ",compatible archs
"<e> NL: Turn foo , bar = baz into { ' foo ' : None , ' bar ' : ' baz ' } name: split params </e> Return the argument names from a Python function argument spec . > > > function_argument_names('foo = None , bar = baz(a , b=42 ) ' ) [ ' foo ' , ' bar ' ]",function argument names
<e> NL: Display a specific structural variant  name: sv variant </e> Prepare a set of samples for parallel structural variant calling ,batch for sv
"<e> NL: Module function returning data as required by the configuration dialog . @return dictionary with key "" zzz_subversionPage "" containing the relevant data name: get config data </e> Module function returning data as required by the configuration dialog . @return dictionary with key "" zzz_subversionPage "" containing the relevant data",get config data
<e> NL: remove special characters and spaces from string and convert to lowercase name: clean string </e> Translate ambiguous characters from curly bracket format to single letter format and remove spaces from sequences ,translate ambiguous
<e> NL: Returns a generator of every ` ` n``th item in ` ` coll ` `  name: take nth </e> Discards every step - th item from ` iterator `,discard nth base
<e> NL: Remove rows from input DataFrame . Parameters ---------- data : pd . DataFrame Input dataframe columns : List[str ] Column list to filter Returns ------- pd . DataFrame Filtered DataFrame name: remove common items </e> Normalize the JSON API data and convert to dataframe . Parameters ---------- data API response JSON data . Returns ------- pd . DataFrame A normalized dataframe ,api data to frame
<e> NL: Load UCSC cytoBand table  name: . load cytoBand </e> Load UCSC cytoBand table . Parameters ---------- filename : str path to cytoBand file Returns ------- df : pandas . DataFrame cytoBand table,load cytoBand
<e> NL: Returns the path of the current editor  name: get current path </e> Runs the main section of src / robotide / editor / tags.py ,tags test
<e> NL: Convert a varint to an integer . : param bytes : Bytes containing the varint . : return : integer name: unpack varint </e> Reads the weird format of VarInt present in src / serialize.h of raven core and being used for storing data in the leveldb . This is not the VARINT format described for general ravencoin serialization use ,read varint
<e> NL: Returns a list of string to string tuples with extra information for the type ( e.g. extra keys for events ) or an empty list if nothing is available  name: extra info </e> Return a string with any extra info to include for this object ,extra object info
<e> NL: Fill complex matrix A with a diagonal represented by complex number b. Parameters ---------- A : array Base matrix ( complex ) . b : float Complex number to fill with . Returns ------- array Matrix A with diagonal filled ( complex )  name: diag fill complex numba </e> Removes the complex and complex complex suffixes from a medscan agent name so that it better corresponds with the grounding map ,normalize medscan name
"<e> NL: Returns the value of a keypath in a dictionary if the keypath exists or None if the keypath does not exist  name: value for keypath </e> A condition is a dictionary of { keypath : values } . Extract the keypath from the user . Check if the value is in the values list . If not , this condition fails ",check condition
"<e> NL: Merge dict_a into dict_b , handling any special cases for zuul variables name: merge data </e> Add dict_a into dict_b Merge values if possible else dict_a value replace dict_b value",merge dict
"<e> NL: Parse string for time codes , titles and URL  name: parse element types </e> Parse string for time codes , titles and URL ",parse element types
<e> NL: Returns the title of the website name: get video title </e> Get the workid from an archiveofourown.org website url,workid from url
<e> NL: Calculates the Mututal Information between each feature in F and s. This function is for when |S| > 1 . s is the previously selected feature . We exploite the fact that this step is embarrassingly parallel  name: get mi vector </e> Calculates the Mututal Information between each feature in F and s. This function is for when |S| > 1 . s is the previously selected feature . We exploit the fact that this step is embarrassingly parallel ,get mi vector
<e> NL: Check to prevent importing json in sahara code . S375 name: use jsonutils </e> Check to prevent mutable default argument in sahara code . S360,no mutable default args
<e> NL: Parse degradation arguments ( without parameters ) Args : degradation_args ( string ) : Input degradation arguments Returns : ( Degradation ) : Degradation object name: parse degradation args without params </e> Parse a list of degradations arguments Args : degradation_args ( list of string ) : Input degradations arguments Returns : ( list of Degradation ) : Degradation objects with specified params,parse degradations args
<e> NL: Parse the references to ` ` Reference ` ` instances  name: parse references </e> Parse the references to Reference instances ,parse references
"<e> NL: Return image size ( width and height )  name: get size </e> Return the figure size ( width , height ) following the golden ratio given the width figwidth ( default = 5 )",golden ratio
<e> NL: Makes the given object or primitive iterable . : param x : item to check if is iterable and return as iterable : return : list of items that is either x or contains x name: make iterable </e> Get the ratio of ` iterable ` items that pass ` filter_function ` ,get ratio
<e> NL: Recursively search and replace all strings in dictionary values  name: recursively replace </e> Replace all strings in dictionary with compiled version of themselves and return dictionary ,compile patterns in dictionary
<e> NL: Returns all disk images within a location with a given image name . The name must match exactly . The list may be empty  name: get disk image by name </e> Returns all disk images within a location with a given image name . The name must match exactly . The list may be empty ,get disk image by name
"<e> NL: from quat = [ vec , scalar ] = [ sin angle / 2 ( unitvec(x , y , z ) ) , cos angle / 2 ] gives unitvec and angle of rotation around unitvec name: fromQuat to vecangle </e> from quaternion=[vec , scalar]= [ sin angle / 2 ( unitvec(x , y , z ) ) , cos angle / 2 ] ie 4 elements returns rotation angles and axis longitude and latitude coordinates ( in degrees )",fromQuat to3rotangles
<e> NL: Generate Fortran code with numpy functions name: fortran code </e> Generate Python code with numpy functions,python code
<e> NL: Return if a path need authentication  name: need auth </e> Return authentication key for corosync,get auth key
<e> NL: Return the auth file path name: get file path </e> Returns keystone auth ,create auth
<e> NL: calls are_files for each item in iterable s use with multiple = True name: are files iter </e> tries are_files then split_str use with multiple = True,are files or str iter
"<e> NL: Return s , t such that a = p**s * t , t % p = 0 name: extract prime power </e> Pick biases such that neurons are active for a percentile of inputs ",percentile biases
<e> NL: not_expression : OP_NOT ex_expression | ex_expression name: p not expression </e> ex_expression : OP_EXISTS cmp_expression | cmp_expression,p ex expression
<e> NL: Run a single action  name: run single </e> Run linting for a single file ,lint file
"<e> NL: Create a data URL representing an image from a PIL . Image  name: image url </e> Create an image from a url , using a file cache ",from url with cache
<e> NL: Get host and port from url  name: get host and port </e> normalize the various options of hosts_and_ports int a list of host and port tuples,normalize hosts and ports
<e> NL: Absolute elevation difference range filter using values from a source raster file and a reference raster file name: dz fltr </e> build raster stack vrt file from in_file_list . : param in_file_list : : param out_file : output vrt file ( end with .vrt ) : return :,build stack vrt
<e> NL: Returns the contents of a file  name: read file </e> Split the contents of a batch file into individual scenarios ,split scenarios
<e> NL: Find all of the packages  name: find packages </e> Find all of the packages ,find packages
<e> NL: Compute the mean value across a list of dictionaries name: mean dict </e> Compute the mean value of an diagonal observable ,average data
<e> NL: simple method to determine if a url is relative or absolute name: is relative url </e> simple method to determine if a url is relative or absolute,is relative url
<e> NL: Removes data below the given threshold from the series or list of series provided . Values below this threshold are assigned a value of None  name: remove below value </e> Checks that the diff between consecutive sync pulses is below 150 PPM Returns True on a pass result ( all values below threshold ),check diff 3b
<e> NL: Check if the specified string is a valid IPv4 address . : type ip : str : param ip : The IP address to check . : rtype : bool name: is ipv4 string </e> Validate node ip address . : param ip : An IPv4 address . : type ip : string : rtype : False : Is either a non valid IPv4 address or is an RFC1918-address . : rtype : string ( IP address ),is valid node ip
"<e> NL: Returns the value if ' binary ' argument is found , otherwise returns false . Throws an error if the argument is not a boolean  name: parse bin arg </e> Returns ` ` default ` ` if ` ` argument ` ` is ` ` None ` `",default value
"<e> NL: Diff output is run through this method one line at a time in order to colorize it for context : param line : One line of diff output : return : One line of diff output , possibly wrapped in color name: colorize diff </e> Parse one line of the XFS info output ",xfs info get kv
"<e> NL: Converts labels from ( 0 , 1 ) to ( -1 , 1 ) : param y : label vector : return : new labels name: labels to 11 </e> Converts labels from ( -1 , 1 ) to ( 0 , 1 ) : param y : label vector : return : new labels",labels to 01
<e> NL: Create directory specified by path if it doesn t already exist  name: create dir </e> create data - only container if it doesn t already exist ,data only container
<e> NL: Encode unicode into ' UTF-8 ' string . : param value : : return : name: char encoding </e> Encode a value to utf-8 only if it 's unicode ,encode unicode or identity
"<e> NL: Given a text string format of a song , return a song list name: make song </e> gets the tempo for a song",get tempo
<e> NL: Returns the model classes associated with a query . : param query : the query to be executed : type query : sqlalchemy.orm.query . Query : rtype : list name: query to models </e> get update query type,get query type
"<e> NL: Given a template name ( or list of them ) , returns the template names as a list , with each name prefixed with the device directory inserted before it 's associate default in the list  name: templates for device </e> Given a template name ( or list of them ) , returns the template names as a list , with each name prefixed with the device directory inserted into the front of the list ",templates for host
<e> NL: List all reactions in a model . Parameters ---------- model_id : str A valid i d for a model in BiGG . Returns ------- reactions : DictList All model reactions . Raises ------ requests . HTTPError If the request has failed  name: list model reactions </e> Find all active carbon source reactions ,find carbon sources
<e> NL: Searches for both btc - only and non - btc - only devices Returns : List of devices name: get any bitbox02s </e> Searches for both btc - only and non - btc - only devices Returns : List of devices,get any bitbox02 bootloaders
<e> NL: Convert the value to a specified type  name: convert to </e> getSEP([type ] ) ; Return the seperator specified by type,get sep
<e> NL: Save a new plot favourite to the database name: save plot favourite data </e> Returns a list of favourite group the form of organization_list action function,get featured groups
<e> NL: Add the extension ext to fpath if it doesn t have it  name: add extension if needed </e> The layer doesn t have an exposure class we need to add it ,add default exposure class
"<e> NL: Returns whether a is a square modulo p name: mod issquare </e> Computes the Legendre symbol : param a : number : param p : prime number : return : Returns 1 if ` a ` has a square root modulo p , -1 otherwise ",legendre symbol
<e> NL: Validate the given connectivity matrix  name: connectivity matrix </e> Validate the given connectivity matrix ,connectivity matrix
<e> NL: Check whether a task has completed  name: task completed </e> Check whether broker action has completed yet ,is broker action done
"<e> NL: Read the flags from a dictionary and return them in a usable form . Will return a list of ( flag , value ) for all flags in "" flag_dict "" matching the filter "" flag_filter ""  name: retrieve flags </e> Read the flags from a dictionary and return them in a usable form . Will return a list of ( flag , value ) for all flags in "" flag_dict "" matching the filter "" flag_filter "" ",retrieve flags
"<e> NL: Yield a map containing ' set ' , ' val ' , ' func ' , and ' stat ' fields for each stat associated with the property  name: property functions </e> Return a newly created stat as a dict with ' stat_id ' and ' values ' fields . The values are ordered consistenly with the item stat order in the d2s file ",create stat
<e> NL: Raise exception if value is exactly None  name: value or raise </e> Raise exception if the structure of the personnummer is incorrect ,check pnr structure
<e> NL: Find all core modules in the contrib package and return a list of importable packages : return : A list of importable packages : rtype : list name: find contrib modules </e> Find locally installed tools : param str plugin_dir : : return : A list of importable packages : rtype : list,find local modules
<e> NL: Get the histogram number and name from a histogram random I d : param int ranId : the random I d assigned to a histogram : returns : the sequential I d ( hId ) number for the histogram ( str ) name: lookup hist id </e> Computes histogram ( density ) for a given vector of values ,compute histogram
<e> NL: Transform underscore separated string to camel case name: to camel case </e> Convert camel - case names to underscore - delimited Parameters ---------- val : string The string to convert Returns ------- string,to underscore
"<e> NL: average for seq[0 ] : param seq : seq[0 ] is list of digit , seq[1 ] list of timestamp : return : float name: r sum str 0 divide count 1 timestamp </e> Deprecated function for applying a seq on a spin group and retrieving the signal",sim single spingroup old
<e> NL: Returns a hash for the given ` url `  name: get url hash </e> Gives hash parameters for the given set of words ,hash parameters
<e> NL: Backwards - compatibility for the old retries format  name: from int </e> Deserializes retries from json . : param retries : Retries as json ,deserialize retries
<e> NL: Verify that the file at path is the therapist hook and return the hash name: read hook hash </e> Verify that the file at path is the therapist hook and return the hash,identify hook
<e> NL: This is a fallback technique at best . I 'm not sure if using the registry for this guarantees us the correct answer for all CSIDL _ * names  name: get win folder from registry </e> This is a fallback technique at best . I 'm not sure if using the registry for this guarantees us the correct answer for all CSIDL _ * names ,get win folder from registry
<e> NL: Sets the environment for Jinja name: get jinja environment </e> Sets environment internally for python,is in path env
<e> NL: Iterate over a nested dictionary  name: iterate dict </e> iterate over a vcf - formatted file ,iterate from vcf
<e> NL: Return a list of supported extension names . : returns : List of supported extension names . : rtype : list name: supported extension names </e> Activate all the extensions for the given names . extension_names -- Sequence of extension names ,activate extensions
<e> NL: Return queryset with the ordered data : param queryset : queryset : param ordering_by : order by single feature : return : name: get queryset by order </e> serializes a django queryset as netvis - graph : param qs : A django queryset : param limit : A integer to limit the number of objects : return : A netvis graph,qs as graph
<e> NL: Sample without replacement using the Gumbel - max trick . See lips.cs.princeton.edu/the-gumbel-max-trick-for-discrete-distributions/ name: sample without replacement </e> Gumbel width distribution Samples come from iid Gumbel distributions . Distributions are randomly inverted since Gumbels are skewed ,width gumbel
<e> NL: Return an unused object name  name: new object name </e> Finds an unused node id in graph ,get unused node id
<e> NL: F1-Fourier transform for phase - modulated 2D name: ft phase modu </e> F1-Fourier transform for N+P ( echo / antiecho ) 2D,ft n p
<e> NL: Get the collection new or existing  name: get collection </e> Instantiate the collection from an existing environ ,from environ
"<e> NL: Build list of { name , dtype } dictionaries for columns in : class:`pandas : pandas . DataFrame ` name: grid columns </e> Build : class:`dtale.utils . JSONFormatter ` from : class:`pandas : pandas . DataFrame `",grid formatter
"<e> NL: Given a stream of bytes or text , if any of the items in the stream are bytes convert them to text . This function can be removed once we return text streams instead of byte streams  name: stream as text </e> Makes failure output for streams better by having key be the stream name",transform streams for comparison
<e> NL: Filter input list by the value of its elements ' attributes  name: filter by attr </e> A version of xmlattr filter that sorts attributes ,do sorted xmlattr
<e> NL: Show a single user  name: get user </e> Create and show a ScrolledMessageDialog,show text dialog
<e> NL: Depth - first discovery of authentication context for an object  name: get object context </e> Child - first discovery of ACEs for an object ,iter object acl
<e> NL: Verify the existence of the given station codes  name: valid stations </e> Lookup AQI database for station codes in a given city ,find station codes by city
"<e> NL: Generate random colors . To get visually distinct colors , generate them in HSV space then convert to RGB  name: random colors </e> Generate N colors starting from color1 to color2 by linear interpolation HSV in or RGB spaces ",make palette
<e> NL: Get the name of a ` git ` repository . Parameters ---------- url : str Repository URL . Returns ------- str The name of the repository  name: git repo name </e> Set the repository to be used . The arg should be the normal /entry / view URL for a REPOSITORY entry,set repository
"<e> NL: Encodes a string to bytes , if it is n't already . : param string : The string to encode name: encode string </e> If the string is bytes , decode it to a string ( for python3 support )",convert string to unicode
<e> NL: Add ` right ` 's values to ` left ` ( modifies ` left ` in - place ) name: merge stats </e> Merge ` ` right ` ` into ` ` left ` ` and return a new dictionary ,recursive dict merge
<e> NL: return a sql - group - by - clause name: compose group by sql </e> Alias a Selectable if it has a group by clause,alias it
<e> NL: Coerce ' value ' to an JSON - compatible representation  name: date to json </e> Coerce ' value ' to an JSON - compatible representation ,int to json
"<e> NL: Get the code length unit ( in cm / h , default : 3.085678e21 cm = 1 kpc )  name: get unit length </e> Method for calculating the center of mass ( CM ) Parameters ---------- data : numpy array Numpy array of the vertices of shape ( N,2 ) Returns ------- cm : touple Touple of coordinates of the CM",center mass
<e> NL: Registers a finalizer with an i d . : param i d : The i d of the object referenced by the weak reference . : param weak_ref : The weak reference to register  name: add finalizer </e> Remove the weak reference of the given component,remove component
"<e> NL: Return the header metadata name: read metadata </e> Load any GLTF "" extras "" into scene.metadata['extras ' ] . Parameters -------------- header : dict GLTF header Returns ------------- kwargs : dict Includes metadata",parse extras
<e> NL: Returns a dict of columns that are optional name: get optional columns </e> Returns set of columns that are being searched and highlights,get search fields
"<e> NL: Parses a line in LIBSVM format into ( label , indices , values )  name: parse libsvm line </e> Generate a D - Optimal Design problem from LIBSVM datasets",D opt libsvm
"<e> NL: Get a tuple with major and minor version number : param Integer protocol_version : Internal version ID : return : Tuple of major and minor protocol version : rtype : Tuple name: get version id </e> Converts a version string to a tuple of the form ( major , minor , revision , prerelease ) Example : "" fw - v0.3.6 - 23 "" = > ( 0 , 3 , 6 , True )",version str to tuple
<e> NL: Creates a logger for the given application  name: create logger </e> Retrieves a logger configured for the application ,get logger
<e> NL: Check whether a folder exists if not the folder is created  name: check create folder </e> Check that the given folder exists and create it if not existing ,folder exists or create
<e> NL: Convert a SeldonMessage proto to JSON Dict Parameters ---------- message_proto SeldonMessage proto Returns ------- JSON Dict name: feedback to json </e> Convert a SeldonMessage proto to JSON Dict Parameters ---------- message_proto SeldonMessage proto Returns ------- JSON Dict,seldon message to json
<e> NL: get a list of columns for an aggregation period  name: get group by period list </e> Yield a left->right traversal of an aggregation,traverse aggregation
"<e> NL: ! Runs command as a process and return stdout , stderr and ret code @param cmd Command to execute @return Tuple of ( stdout , stderr , returncode ) name: run cli process </e> Execute given Vowpal Wabbit command , log stdout and stderr . Parameters ---------- cmd : str Given Vowpal Wabbit command to execute . Returns ------- str Stdout and stderr . Raises ------ subprocess . CalledProcessError If something goes wrong ",run vw command
"<e> NL: Get right color for the state : param state : the state : type state : str : return : the color related of the state : rtype : str name: get state color </e> choose a random outcome , apply to the state , and return the new state",resolve outcomes
<e> NL: Get user 's ID either from a profile page or post page name: get user id </e> Builds and adds url for a given page / post to jinja context ,add url to context
"<e> NL: Set the logging level . Args : level : Logging level . Available levels : ' info ' , ' debug ' , ' warning ' and ' critical '  name: set level </e> Tries to find a suitable log level based on input string . Input can be a level ( 0 = critical , 4 = debug ) , or a substring of debug , info , warning , error , or critical ",log level
<e> NL: Convert a hex color string to an RGB tuple  name: hex color to rgb </e> converts rgb to a hex string,int hex
<e> NL: Check if the problem is a binary classification  name: binary check </e> Compute the balanced accuracy for binary classification ,bac metric
<e> NL: Calculate the available memory in gigabytes Returns ------- int The available memory ( in gigabytes ) name: available memory </e> Calculate the memory limit in gigabytes Returns ------- int The memory limit ( in gigabytes ),memory limit in gigabytes
<e> NL: Authenticate using OAuth refresh token  name: auth with refresh token </e> Authenticate using OAuth refresh token . Raises GoogleAuthError if authentication fails . Returns access token string ,auth with refresh token
"<e> NL: Test if value can be rendered out of int  name: is valid int </e> Evaluate whether a given string can be rendered in ASCII Args : s ( str ) : the string to test Returns : bool : True if the string can be rendered in ASCII , False otherwise ",is ascii
<e> NL: Parse the results of an OBJECT command name: parse object </e> Parse the results of an OBJECT command,parse object
<e> NL: creates an Event from a JSON dictionary structure Counterpart to Event.to_json ( )  name: parse event </e> creates an Program from a JSON dictionary structure Counterpart to Program.to_json ( ) ,parse program
<e> NL: Reads text file contents name: read text from file </e> Reads in the prompt from a text file Returns string,read in test prompt
<e> NL: Get the style dictionary for matplotlib path objects name: get path style </e> Get the style dictionary for matplotlib path objects,get path style
<e> NL: Return path to directory where will be saved app 's config name: get conf dir </e> Method to determine where the users settings should be saved,get settings folder
<e> NL: Common routine for plot preparation name: prepare plot </e> Default plot routine . : param obj : : return :,plot path
<e> NL: Return a checksum digest for a file name: digest file </e> create a MinHash digest,mh digest
<e> NL: Parse cookie string and return a dictionary where key is a name of the cookie and value is cookie value  name: parse cookie </e> Verify the value of a cookie . This will fail if the cookie does not exist . Parameters : name : value value : value,verify cookie value
<e> NL: Create path if does not exist name: assert path </e> dest should be a directory path that does not exist,copy directory
"<e> NL: Convert pixel coordinates to map coordinates based on geotransform Accepts float or NumPy arrays GDAL model used here - upper left corner of upper left pixel for mX , mY ( and in GeoTransform ) name: pixel to map </e> Convert map coordinates to pixel coordinates based on geotransform Accepts float or NumPy arrays GDAL model used here - upper left corner of upper left pixel for mX , mY ( and in GeoTransform )",map to pixel
"<e> NL: Takes an atom and splits its het ID into components . : param Atom atom : the atom to read . : rtype : ` ` tuple ` ` name: split residue id </e> Given an atom based on a built - in predicate , return an equivalent atom with the negation absorbed . If the atom is not based on a built - in predicate , return the atom unchanged ",negate builtin atom
<e> NL: Puts a stored clipboard on the clipboard name: set clipboard </e> Resets the clipboard ,reset clipboard
<e> NL: Verify the password using Password Hasher from settings . : param password : String . Plain text password to verify . : param encoded : String . Encoded password to check against . : return : Boolean . Whether or not password is verified  name: check password </e> Sets the mode of the executor . params : passwd - None ( no password ) or string ( set password ),set mode
"<e> NL: returns True if address is a valid Bluetooth address name: is valid address </e> Returns True if the string argument appears to be a Bluetooth address ( strictly speaking , a MAC address ) arguments : address - string MAC address returns : boolean - True if it appears to be a bluetooth address , otherwise false",bluetooth validate
<e> NL: return the name of the log file name: log name </e> Compute the log of the lower incomplete gamma function ,log lower gamma
<e> NL: Get super ctx method and ctx where name matches with input name . : param name : method name to find in super ctx . : param ctx : initial method ctx . : return : method in super ctx and super ctx . : rtype : tuple name: super method </e> Reload the router : param ctx : return : nothing,install activate reload
"<e> NL: Convert a tuple of bookmark data into a format Seiran can use . Parameters ---------- bookmark_tup : tuple Raw bookmark data from the imported database . Returns ------- conv_list : list The title , URL , and date for the bookmark  name: form list </e> Deserialize a bookmark string to a place marker . : param bookmark : A string in the format produced by : func:`serialize_bookmark ` . : returns : A marker pair as described in : func:`serialize_bookmark ` ",unserialize bookmark
<e> NL: Extract data from a generic text file with results in tabular format and plot data with matplotlib . Multiple datasets are supported . No attempt is made to handle metadata ( e.g. column name ) name: abiview data </e> Compare results stored in multiple files with data in tabular format ,abicomp data
<e> NL: Registers a path specification resolver helper . Args : resolver_helper ( ResolverHelper ) : resolver helper . Raises : KeyError : if resolver helper object is already set for the corresponding type indicator  name: register helper </e> Deregisters a path specification resolver helper . Args : resolver_helper ( ResolverHelper ) : resolver helper . Raises : KeyError : if resolver helper object is not set for the corresponding type indicator ,deregister helper
<e> NL: from data list all the fastq files in a file name: create sample file </e> randomly subset fastq files,sub fq
<e> NL: Returns true if any networks or ports exist for a tenant  name: tenant provisioned </e> Returns true if any networks or ports exist for a tenant ,tenant provisioned
<e> NL: runs when updating a task name: update task dialog </e> r Runs a task that takes some time,expensive task gen
<e> NL: get the risk message name: QA fetch risk </e> Score C to 5 risk - classes : param score_c : Score C : return : Risk - class,score c to 5 classes
"<e> NL: Load a renderer and return the class . If a path is provided , the renderer is imported from that path . By default , ` ` static_templates.renderer . Renderer ` ` is used  name: get renderer </e> Set a custom template renderer ",template renderer
"<e> NL: Distance between a point p and a line defined by a , b and c. a , b , c : the line $ x + by + c = 0 $ p : the point name: signed distance point to line </e> Checks if a point ( y , z ) is inside a line given by ( y1,z1 ) and ( y2,z2 ) . Also check if the point i d matches with the ids from the line . Returns ------- Boolean",no overlap
"<e> NL: return User object for given i d , or return None if not found name: fetch user </e> Return Window object if title or its part found in visible windows titles else return None",get window
<e> NL: Disconnect identity from CERN groups  name: disconnect identity </e> Query CERN Resources to get user info and groups ,get resource
<e> NL: Expand both environment variables and user home in the given path  name: expand path </e> Expand environment variables and user home ( ~ ) in the log.file and return as relative path ,fix logging path
<e> NL: Return the node 's parent i d or 0 if node is a root node  name: get parent id </e> Navigates up the given node and returns the root node ,get root
<e> NL: Get the Bloch vector from quantum states  name: get bloch vector </e> Return the quantum fidelity between pure states ,state fidelity
<e> NL: Test if points p1 and p2 lie on the same side of line a - b  name: is same side </e> Test if points p1 and p2 lie on the same side of line a - b ,closest point
<e> NL: Checks the format of an IP address and returns it if it is correct . Otherwise it returns None  name: check ip </e> Converts an object into a request body . If it s None we ll return an empty string if it s one of our objects it ll convert it to XML and return it . Otherwise we just use the object directly,get request body
<e> NL: Transliterate to 8 bit using as many letters as needed  name: long encode </e> Transliterate to 8 bit using only single letter replacements ,single encode
<e> NL: Test if ` name ` is a library module  name: is lib module </e> Test if a module has tests . Module format : homeassistant.components.hue Test if exists : tests / components / hue,has tests
<e> NL: Return the nearest xterm 256 color code from rgb input  name: from rgb </e> Return the nearest xterm 256 color code from rgb input ,from rgb
<e> NL: Get the IP address of the host  name: get ip address </e> Get IP address for the docker host,get ip
<e> NL: Computes the serial correlation of a series . series : Series lag : integer number of intervals to shift returns : float correlation name: serial corr </e> Calculates the autocorr of mag series for specific lag ,autocorr func1
<e> NL: Returns a display name for the user  name: get display name </e> Returns the mode flags to use for a modifier symbol . : param Xlib.display . Display display : The * X * display . : param str symbol : The name of the symbol . : return : the modifier mask,find mask
"<e> NL: Envelope detection using Hilbert transform Note : input signal is assumed to be without DC name: envelope hilbert </e> "" Detrend iq along axial direction then use hilbert transform to get envelope",iq to envelope
<e> NL: This function decorator may be used to mark a method as usable for intercepting response head content . handles_response_head will accept an HttpResponse object and implement the logic that will define the FilterActions to be applied to the request name: handles response head </e> This function decorator may be used to mark a method as usable for intercepting request head content . handles_request_head will accept an HttpRequest object and implement the logic that will define the FilterActions to be applied to the request,handles request head
"<e> NL: Try to convert ` o ` to int , default to ` o ` if not possible  name: try int </e> Try to convert all possible dependencies to processes",proc depends setter
<e> NL: Override a hierarchical key in the config setting it to the value  name: override cfg </e> build a dictionary mapping assembly keys to file paths with reference sequence . This method takes a hierachical or no - hierarchical dictionary and builds reduces it to a non - hierarchical dictionary ,build reference fasta map
<e> NL: Primary implementation of glibc_version_string using os.confstr  name: glibc version string confstr </e> Fallback implementation of glibc_version_string using ctypes ,glibc version string ctypes
"<e> NL: Given a module name or a script name , return the module name . Args : program_param ( str ) : Module or script name . Returns : str : Module name  name: parse module name </e> wrapper to get the module for a script",.get script module
<e> NL: Creates a list of permissions from a list of dicts : param dict : the list of dicts of permissions : return : the list of permissions name: list from dict </e> Assign list of permissions . Example : : { % flow_perms request.user task as task_perms % },flow perms
<e> NL: Create a complete graph from the list of node ids . Args : node_ids : a list of node ids Returns : An undirected graph ( as a networkx . Graph ) name: create complete graph </e> Create a complete graph from the list of node ids ,create complete graph
"<e> NL: Check that field name is valid : * ca n't start or end with whitespace characters * ca n't start with underscore * ca n't contain double quote ( "") * ca n't be empty name: is valid field name </e> Check given seq is two - dimensional . Raise error if ca n't be easily transformed ",check 2d
<e> NL: Determine if a method has been overridden  name: method overridden </e> get overridden method if any,overridden method
<e> NL: Extract the name and instructions from an assignment definition Args : assignment ( list ) : A list of DefAssignExpr objects Returns : ( tuple ) The name and instruction list  name: process assignment </e> Process assignment function definition ,math funcdef handle
<e> NL: Calculate the endpoint for this object name: get endpoint </e> Determine whether it is possible for this endpoint to return an iterated response ,iterable method
<e> NL: Return file real path name: get path </e> Return real value of CDATA section,get rawvalue value
<e> NL: Generates a random SDR with sparseCols number of active columns name: generate random symbol </e> Generate a set of random SDR s,generate random sdr
<e> NL: Get path for the given handler  name: get stage path </e> Get redis db handler,get store
"<e> NL: Read JSON file at ` location ` and return a list of ordered dicts , one for each entry  name: load json </e> Read CSV at ` location ` , return a list of ordered dictionaries , one for each row ",load csv
<e> NL: Read from Emotiv hid device . : param source : Emotiv hid device : return : Next packet from Emotiv device  name: read os decrypted non windows </e> Reads int property from the HID device ,get device int property
"<e> NL: Given a column name Index , find the numeric indeces of the columns in the spreadsheet  name: find col indexes </e> Get the indeces of gates which commute with CZ",get commuters
<e> NL: List versions of a chute in the store . NAME must be the name of a chute in the store  name: list versions </e> Show detailed information about a chute in the store . NAME must be the name of a chute in the store ,describe chute
<e> NL: Returns True if task is chief task in the corresponding run name: is chief </e> Returns True if task is chief task in the corresponding run,is chief
<e> NL: Returns the scaling factors for the given scan  name: get scaling factors </e> Calculates the individual and combined scaling factors for both provided models,build scaling factors
<e> NL: Performs a base type comparison between two dicts name: diff dict </e> Numpy aware comparison between two values ,is different
<e> NL: Check if any of the given patterns match the split path name: filter match </e> Return true if two wildcard patterns can match the same string ,wildcards overlap
<e> NL: Read parameters from the command line name: read parameters </e> Validate the config file and command line parameters ,validate config
<e> NL: : type database indexdigest.database . Database : type reports list : type ident str : rtype : str name: format syslog </e> : type database indexdigest.database . Database : type table_name str : type column indexdigest.Column.column : rtype : dict,get boundary times
<e> NL: Label the internal nodes in the tree . : param tree : an ETE tree . : return : None name: label nodes </e> Annotates the provided DOM tree with XMLNS attributes and adds XMLNS prefixes to the tags of the tree nodes ,annotate with XMLNS
"<e> NL: Return a human - readable ( one or two word ) name for this plugin . Subclasses should set the class attribute NAME , which is returned by the default implementation  name: get name </e> Return a concise human - readable description for this plugin . Subclasses should set the class attribute DESCRIPTION , which is returned by the default implementation ",get description
<e> NL: Backwards compatibility wrapper for approximating which / where . : param path : Path to a file . : type path : str name: where which </e> Convert a bytecode file path to a source path ( if possible ) . This function exists purely for backwards - compatibility for PyImport_ExecCodeModuleWithFilenames ( ) in the C API ,get sourcefile
<e> NL: Return the extended ID from an ID  name: .id to extended id </e> MSOA data contains individual level demographic characteristics including : - HID - Household ID - Area ID - HID - Household ID,read oa data
<e> NL: Is the line the start of a request log from Google App Engine . : param line : A string . : returns : True if the line does n't start with a tab  name: is log start line </e> Does this line start with a number ?,is numline
<e> NL: Loads a dictionary from a json file  name: load objects from json </e> Loads the objective function from a . json file ,load objective
"<e> NL: If maybe_dttm is a datetime instance , convert to a STIX - compliant string representation . Otherwise return the value unchanged  name: ensure datetime to string </e> If maybe_dttm is a datetime instance convert to a STIX - compliant string representation . Otherwise return the value unchanged ",ensure datetime to string
<e> NL: Removes duplicates from a list whilst preserving order . We could directly call ` set ( ) ` on the list but it changes the order of elements  name: remove duplicates </e> make index the first item of the list whilst preserving the order of elements,reindex lst
"<e> NL: Get User info by user 's email  name: get by email </e> Given a valid user access token , it will return the user 's email ",get user email
"<e> NL: Get the sections for the given index . If the index is not valid ( that is , None , a non - integer , a negative integer , or an integer above the number of the sections ) , we choose all sections  name: filter sections </e> Show button for the creation of sections ( if experiment type is multivariate )",add section
<e> NL: Replace nulls with the modal numeric value on dataframe[colname ] name: null removal mode numeric </e> Replace nulls with the mode on dataframe[colname ],null removal mode
<e> NL: Accumulate random bit string and remove name: get nonzero random bytes </e> Accumulate random bit string and remove \ 0 bytes until the needed length is obtained ,get nonzero random bytes
"<e> NL: Returns the number of distinct values in a series . Args : series ( pandas . Series ) : column to summarize  name: n distinct </e> Takes a pandas series of dates as inputs , calculates windows , and returns a series of which windows each observation are in . To be used with groupby.transform ( )",window mapping
"<e> NL: Prepare password . : param key : Key to use . 8-character hexadecimal , with or without 0x . : type key : str : param password : Passphrase for given key . : type password : str name: prep pass </e> Construct actual key for password identification",format http key
<e> NL: Get current machine IP address : return : str -- IP address name: detect ip </e> Get the current LAN ip address of this device : rtype : str,get ip address
<e> NL: Returns a string of the form cluster / database that says where a particular shard of data resides . : param collection_name : The collection name for the shard : param shard_key : The shard key to look for name: where is </e> Return a new shard tail that follows this shard body ,shard body tail
<e> NL: Flatten a nested list  name: flatten list </e> Flatten the nested json structure returned by the Explorer ,flatten vertex
<e> NL: Map * devices * of a room  name: map devices </e> Dungeon map generator based on square room grid ,dungeon grid simple
<e> NL: Read a certain amount of content from a socket before returning  name: . read until </e> Use only the smallest group with a certain amount of observations,min n obs shrinkage
<e> NL: Removal of empty directories in the given src_dir tree . Only empty directories will be removed . : param src_dir : directory to be purged of empty directories . : return : name: remove empty directories </e> os.walk with filter to only return directories . : param empty_only : filter that specifies to only return empty directories . The empty_only use case represents removal of directories in OwnCloud not found in Git ,get directories
<e> NL: Create cross - tabulations for categorical variables . Parameters ---------- model : alphapy . Model The model object containing the data . Returns ------- model : alphapy . Model The model object with the updated feature map  name: create crosstabs </e> Randomly shuffle the training data . Parameters ---------- model : alphapy . Model The model object describing the data . Returns ------- model : alphapy . Model The model object with the shuffled data ,shuffle data
"<e> NL: Takes a matplotlib axis and returns the length of the axes : param ax : The Axes instance to find the lengths of : return : length of x and y axis name: axis lengths </e> Guesses whether a set of Axes is home to a colorbar Parameters ---------- ax Axes instance Returns ------- True if the x xor y axis satisfies all of the following and thus looks like a colorbar : No ticks , no tick labels , no axis label",is color bar
<e> NL: Helper to open also compressed files name: open any </e> Helper to open also compressed files,open any
<e> NL: Reject duplicate keys  name: reject duplicates </e> Reject duplicate keys ,dict raise on duplicates
"<e> NL: Returns the monitor resolution Returns ------- resolution : ( int , int ) monitor resolution , screen resolution name: get monitor resolution </e> Creates a MainWindow using 75 % of the available screen resolution ",create main window
<e> NL: Returns uniform model noisy value  name: f uniform </e> Returns uniform model noisy value ,f uniform
<e> NL: Returns dictionary with information about the current machine : return : dict name: machine info </e> Collect some information about the machine this experiment runs on ,get host info
<e> NL: Parse branch name from the output of git status  name: get branch name </e> Parse out information from sacct status output ,parse sacct
<e> NL: Return 0 if value is None name: none to zero </e> call a faker if value is None uses : { { myint|or_fake:'randomInt ' } },do or fake filter
<e> NL: Compute the peaks profile for a set of TOF peaks and add into the yc array name: compute pwdr prof tof </e> Compute the peaks profile for a set of CW peaks and add into the yc array,compute pwdr prof cw
"<e> NL: Returns the map between JSON string and enum values . Returns ------- dict The map  name: get map </e> Loads custom / pypi / map.txt and builds a dict where map[package_name ] = url : return : dict , urls",get url map
<e> NL: Get a list of tags for a specific image  name: image tag get all </e> Get the list of tags for output : param doc : a mapping from HTTP verb to the properties for serialization : return : a list of string containing tags as described by the openapi 3.0 spec,tags for
<e> NL: Get the template for the given extension . Args : extension(str ) : extension of the file desired . Returns : ( Template ) class of the template that handles the extension desired name: get template </e> Load template by it 's name . Appends ' .html ' or ' .htm ' extension if needed ,direct to disk template
"<e> NL: Return string as unicode . : param s : A string ( bytestring or unicode string ) . If s is a bytestring , it is assumed that it is utf-8 encoded text name: to unicode </e> Ensure string is a unicode string . If it is n't it assumed it is utf-8 and decodes it to a unicode string ",ensure unicode
<e> NL: Sets / Returns the background color for text elements : return : ( str ) - color string of the text background color currently in use name: theme text element background color </e> Sets / Returns the background color for text elements : return : ( str ) - color string of the text background color currently in use : rtype : ( str ),theme text element background color
<e> NL: Get ignore commits prefixes . : return : name: get ignore commits prefixes </e> Get ignore commits regex patterns . : return :,get ignore commits regex patterns
"<e> NL: Collects PSMs with the highes precursor quant values , adds sum of the top 3 of these to a protein table name: add ms1 quant from top3 mzidtsv </e> Collects PSMs with the highes precursor quant values adds sum of the top 3 of these to a protein table",add ms1 quant from top3 mzidtsv
<e> NL: Get a generator object with text lines . : param text : Text to parse . : type text : str : return : Text lines . : rtype : generator name: get lines </e> Sort the individual lines of a block of text . Args : dedupe ( bool ) : Remove duplicate lines with the same text . Useful for dealing with import statements in templates ,sort lines
<e> NL: Searches array for runs of consecutive numbers . Returns a list of lists of consecutive numbers found . Parameters ---------- arr : list or np.array Returns ------- list of lists name: group consecutives </e> Yield range of consecutive numbers ,find ranges
<e> NL: scroll_offset + = 1 name: scroll one line down </e> scroll_offset + = 1,scroll one line down
"<e> NL: Returns [ { ' Key ' : ' Name ' , ' Value ' : name } ] name: create name tags </e> repository_fullname = : owener/:name",get repository fullname from url
"<e> NL: Non - BLAS version of zaxpy for use when BLAS breaks  name: zaxpy no blas </e> return ( calc_dtype , res_dtype ) suitable for BLAS calculations ",find calc dtype
<e> NL: Converts html code into formatted plain text  name: html to plain text </e> Given a Status contents in HTML converts it into lines of plain text ,format content
<e> NL: Returns a notebook object with papermill metadata loaded from the specified path . Args : notebook_path ( str ) : Path to the notebook file . Returns : nbformat . NotebookNode name: load notebook node </e> Iterator that yields all cells in a notebook nbformat version independent,yield code cells
<e> NL: return the chromosomes of all samples name: available chromosomes </e> Retains only cannonical chromosomes in bed - like df ,filter cannonical
"<e> NL: Return the registered plugins . Load and return all registered plugins  name: get plugins </e> Return the media that was registered in the request object . .. note : : The output of plugins is typically cached . Changes the the registered media only show up after flushing the cache , or re - saving the items ( which flushes the cache ) ",get frontend media
<e> NL: CWL target to retrieve block group of callable regions for parallelization  name: get parallel regions block </e> CWL target to retrieve a list of callable regions for parallelization ,get parallel regions
"<e> NL: Determine if all indexes contain the same elements . Parameters ---------- indexes : list of Index objects Returns ------- bool True if all indexes contain the same elements , False otherwise  name: all indexes same </e> Return all index as ` { ' items ' : [ list of indexes ] } `",get all
<e> NL: Get the seed for the random number generator . Returns ------- seed : int . Seed for the random number generator name: get seed </e> Generate seed for random number generator,generate seed
"<e> NL: p1p1 representation to extended : param P : : return : name: conv p1p1 to ext </e> Converts extended representation to x , y Accepts also projective representation . : param P : : return :",conv ext to xy
<e> NL: Get right color for the state : param state : the state : type state : str : return : the color related of the state : rtype : str name: get state color </e> Returns a new State that follows the given State and also has the resource gain of the given pickup : param state : : param pickup : : return :,state with pickup
<e> NL: Returns a Boto connection to the provided S3 bucket  name: s3 connect </e> Opens connection to S3 returning bucket and key,open s3
<e> NL: It creates the plot canvas from the plot grid name: set canvas </e> It adds data to the plot grid ,add to grid
"<e> NL: Return the node 's parent i d or 0 if node is a root node  name: get parent id </e> Using a predecessor matrix from scipy.csgraph.shortest_paths , get all indices on the path from a root node to a target node ",get path
<e> NL: Force data with units either hPa or Pa to be in Pa name: to pascal </e> sensitivity in dB re 1V / Pa Returns the transfer - factor in mV / Pa,microphone transferfactor
<e> NL: Return the facets if valid or raise a UsageError otherwise . Validate facets values against the list of known facets  name: validate facets </e> We have a list of terms with which we return facets,process facet terms
"<e> NL: Prepares an Attachment document containing the specified message , if any name: prepare attachment </e> Prepares a configuration element containing its URI for a version creation document containing the specified configuration , if any",prepare configuration uri
<e> NL: Creates or gets the default database engine using the settings in registry . The engine is a singleton and a reference will be stored in the application registry . : param registry : the registry : return : the created engine name: get default engine </e> Return the Pyramid application registry associated to the current running application : returns : A Pyramid registry instance,get registry
<e> NL: Adds ' - ' to the bottom of the text name: convert h2 </e> Improves the docstrings of application models when called at the bottom of the respective module ,autodoc applicationmodel
<e> NL: Create key which will be used in des because des need 8bytes chars name: get cipher key </e> convert secret to DES key used by bsdi_crypt,bsdi secret to key
<e> NL: Return a single or double quote if a string is wrapped in extra quotes . Otherwise return an empty string  name: is quoted </e> Returns context dict containing a single quote . This is chosen from amongst quotes flagged as public ,random public quote
<e> NL: Build a new graph excluding the isolated nodes  name: remove isolated nodes op </e> Checks if the graph ` G ` has isolated nodes,has isolated nodes
"<e> NL: Return -1 , 0 , or 1 ( as a Python int , not a raw mpf ) depending on whether s is negative , zero , or positive . ( Nan is taken to give 0 . ) name: mpf sign </e> Return the appropriate line index , depending on ` ` line_or_func ` ` which can be either a function , a positive or negative int , or None ",get line index
<e> NL: Convert to string all values in data  name: to string </e> Convert to string all values in ` data ` . Parameters ---------- data : dict[str]->object Returns ------- string_data : dict[str]->str,to string
<e> NL: Download file . Optionally validate with md5sum : param url : URL to download : param md5sum : Expected MD5 sum of contents name: fetch file </e> Returns md5sum of file,get md5sum
<e> NL: Function to decide which key function to use . Defaults to ` ` default_key_func ` `  name: get key func </e> Function to decide which key function to use . Defaults to ` ` default_key_func ` ` ,get key func
"<e> NL: Copy BDDs in ` roots ` to manager ` target ` . @param target : BDD name: copy bdds from </e> Add BDDs from JSON ` file_name ` to ` bdd ` . @param load_order : if ` True ` , then load variable order from ` file_name ` ",load json
<e> NL: Infer column type from the input value  name: infer value type </e> Infer language pair from filename : < split>.<lang1>-<lang2>.( ... ).idx,infer language pair
<e> NL: Get name of this resource : return : name of this resource : rtype : str name: get name </e> return ids that match this resource type 's i d format ,match ids
<e> NL: Checks whether each column in specification is in dataframe . Raises ValueError if any of the columns are not in the dataframe  name: ensure specification cols are in dataframe </e> Remove interactiontion if one of these components is not in complexes dataframe,filter interactions by complexes
"<e> NL: Compute the total shape of an expr  name: total shape </e> Compute the tensor- , index- , and total shape of an expr . Returns ( shape , size , index_shape , index_size , total_shape , total_size ) ",compute all shapes
"<e> NL: Determine if a given template exists so that it can be loaded if so , or a default alternative can be used if not  name: template exists </e> Helper method for multiprocessing of apply_transformation . Must not be in the class so that it can be pickled ",apply transformation
<e> NL: Return the names of all imported genomes name: get genome list </e> Return the names of all imported snp sets,get snpsets list
<e> NL: Performs ` ` nexus3 script list ` ` name: cmd list </e> Performs ` ` nexus3 script delete ` `,cmd delete
<e> NL: Setup logging output defaults name: get logger </e> Setup logging via CLI options,. cli
<e> NL: Validate the compatibility of an extension  name: validate compatibility </e> Get compose v3 compatibility from --compatibility option or from COMPOSE_COMPATIBILITY environment variable ,compatibility from options
<e> NL: Split the list l in chunks of at most n in size name: split chunks </e> Split an iterator at ` ` size ` ` item intervals,chunk sequence
<e> NL: Return the connection object from list  name: get connection </e> validates the connection object is capable of read access to rethink,validate get dbs
<e> NL: Return the value of a key for a given server  name: get server value </e> Return the server defaults for the given environment variables ,get server defaults
<e> NL: Perform put operation . This is used in the distributed wrapper name: do put </e> Perform put operation . This is used in the distributed wrapper,do put
<e> NL: Escape special characters in XML  name: escape xml </e> Escape all special characters ,glob escape
<e> NL: Return a dictionary mapping request types to Request handler classes  name: get handlers </e> After request handler ,after request
<e> NL: loads an hdf5 file into an OP2 object name: load op2 from hdf5 filename </e> Turn an Astropy Quantity object into something we can write out to an HDF5 file ,quantity to hdf5
<e> NL: Get the path from a given url including the querystring  name: get path </e> pick url querystring to params,add querystr to params
"<e> NL: Returns the polygon area ( perimeter ) for 2D set of ( x , y ) points Args : polygon : ( n , 2 ) array of xy locations for a closed polygon Returns : Area of the closed polygon name: get polygon area </e> Get the area of a polygon which is represented by a 2D array of points . Area is computed using the Shoelace Algorithm . Args : polygon : 2D array of points ",polygon area
<e> NL: Parse the given config file and return configuration settings as a dictionary for further use . : param str configfile : the path to the configuration file . : returns : parsed configuration values . : rtype : dict name: parse config </e> Return the config data as a dictionary Parameters ---------- file : str path to the configuration file,grab config data from data file
<e> NL: Returns a tree representation of a parse tree  name: emit tree format </e> Branching order of a tree section,strahler order
<e> NL: Pretty - print type of v name: str type </e> Render an HTML element(tree ) and optionally pretty - print it ,ET tostring
<e> NL: Create an empty Buffer storage of the given size  name: create with size </e> Create an object key for storage ,make key
"<e> NL: Return centroid of a polygon Parameters ---------- polyg : : class:`numpy : numpy.ndarray ` of shape ( num vertices , 2 ) or ogr . Geometry object Returns ------- out : x and y coordinate of the centroid name: get centroid </e> Calculates the centroid of a polygon with paired x - y values ",get centroid
<e> NL: Get name of this resource : return : name of this resource : rtype : str name: get name </e> Get name of this resource : return : name of this resource : rtype : str,get name
"<e> NL: Given a string and index , return ( line , column ) name: find position </e> Given a string and index , return ( line , column )",find position
<e> NL: Schedules a message or messages  name: schedule messages </e> Assemble a multiline message from a sequence of NMEA messages . : param messages : Sequence of NMEA messages : return : Single message,assemble from iterable
<e> NL: Get all current SKIL resources as a list of skil.resources.base . Resource instances  name: get all resources </e> Get a list of skil.resources.base . Resource objects by type ( ' compute ' or ' storage ' ) ,get resources by type
<e> NL: Checker for the contour preprocessor  name: check earthquake contour preprocessor </e> Preprocessor to create contour from an earthquake,earthquake contour preprocessor
"<e> NL: concatenate message list as single string with line feed  name: .print msg </e> Create string from object , concatenate if list ",format to str
<e> NL: Enable or disable debugging name: set debug </e> Enable or disable the plugin,set enabled
"<e> NL: Append an underscore to any python reserved word . No - op for all other strings , e.g. ' or ' = > ' or _ ' , ' other ' = > ' other ' name: subbed keyword </e> Returns a code describing the capitalization of the word : lower , title , other or non - alpha ( numbers and other tokens that ca n't be capitalized ) ",get capitalization
<e> NL: Handle ( log ) any exception : param e : exception to be handled name: handle except </e> Ignore any exception via isinstance on Python 3 ,safe isclass
<e> NL: Function to return a list of unique field names from the config file : param config : The configuration file that contains the specification of the extractor : return : A list of field names from the config file name: extract fieldnames </e> Function to return a list of unique field names from the config file,extract fieldnames
<e> NL: Try to get a table name from a data table name: get table key </e> Function to derive address family from a junos table name . : params table : The name of the routing table : returns : address family,get address family
"<e> NL: Return string representing given number in delta coding . n : int , number to convert to unary  name: delta coding </e> Return string representing given number in levenshtein coding . n : int , number to convert to levenshtein coding ",levenshtein coding
<e> NL: Deserialize JSON into python datetime objects  name: load with datetime </e> Serialize datetime objects as string for JSON ,datetime serializer
"<e> NL: Get all keys of nested dict Arguments ---------- nested_dict : dict Nested dictionary Return ------ all_nested_keys : list Key of nested dict name: get nested dict key </e> On the assumption that all the leaves of a nested dictionary ( tree ) structure are in some way equivalent , this is a quick method of returning the first such leaf without knowing the specific keys used to construct the nested dict ",first leaf
"<e> NL: transform a list of fields from [ "" a "" , "" b "" ] to { "" a"":1 , "" b"":1 } name: normalize fields projection </e> Transform text describing a SpaceWorld into a 2D array of fields ",parse space world
<e> NL: get an singleton_instance of the client class singleton  name: get client </e> get an singleton_instance of the client class singleton ,get client
"<e> NL: Return file size as string from byte size  name: format size </e> relevant IDL typecodes and corresponding Numpy Codes Most specify a byte size , but not all",idl typecode
"<e> NL: Get a task by task id where a task_id is required  name: get task </e> Task files ( logs , etc . ) are saved in TASK_DIR in following structure based on task_id : TASK_DIR / millions / tens_of_thousands / task_id/ *",get task dir
<e> NL: Returns a LDIF File by a DN : param file : ldb file : param dn : dn for the object : return : output from ldap query or error msg name: get ldif by dn </e> Return an attribute for the LDAP entry specified by dn and ensure it only occurs once ,get one dn attribute
"<e> NL: Convert a tuple of bookmark data into a format Seiran can use . Parameters ---------- bookmark_tup : tuple Raw bookmark data from the imported database . Returns ------- conv_list : list The title , URL , and date for the bookmark  name: form list </e> Get stream version from bookmark",get stream version
"<e> NL: Test that the XML element and attribute exist , return attribute 's value , else return None Parameters ---------- - element : the element containing the attribute - attribute : the attribute name name: test xmlattribute </e> Efficiently parses the root element of a * raw * XML document , returning a tuple of its qualified name and attribute dictionary ",parse root
"<e> NL: If the given string is numeric , return a numeric value for it name: filter numeric </e> Check whether an unparsed string is a numeric value",is numeric
<e> NL: Removes the highlight from the given nodes or all nodes if none given  name: remove highlight nodes </e> Remove the highlight from the given edges or all edges if none given ,remove highlight edges
<e> NL: Get the first file line - truncate to the current pointer position  name: next command </e> Truncate the file and return the filename ,prepare file
<e> NL: Obtain the integer code of a direction string . Args : direction ( str ) : * forward * or * backward * Returns : int : direction code name: direction code </e> Assigns a color to the direction ( dynamic - defined colors ) Parameters -------------- dir Direction Returns -------------- col Color,give color to direction dynamic
<e> NL: Try passwordless login with shell ssh command  name: try passwordless openssh </e> Try passwordless login with shell ssh command ,try passwordless openssh
"<e> NL: calculates , the average , standard deviation , and relative standard deviation of a list of values : param lst : list of values : return : average , standard deviation , relative standard deviation expressed as a percent name: avg stdev </e> Return standard deviation ",standard deviation
<e> NL: Visual - related features for a single span name: vizlib unary features </e> Visual - related features for a single span ,vizlib unary features
<e> NL: Cast a string to a strictly positive integer  name: positive int </e> Cast a string to a strictly positive integer ,positive int
<e> NL: Turn parameter in to a list per level  name: levelize smooth or improve candidates </e> The number of residues per turn at each Monomer in the Polymer ,residues per turn
"<e> NL: Returns the mouse 's location as a tuple of ( x , y )  name: get position </e> Add ( ` ` x ` ` , ` ` y ` ` ) to current mouse location ",move mouse
"<e> NL: Given an island , a strain number , and our families object , return all the genes in the island for that strain  name: get island genes in strain </e> Given a tuple of genes ( one from each strain ) identify and return the two which are from strain pair ",get genes from strain t
<e> NL: Return information about the set name: find set info </e> Return known information about references held by the given object ,annotated references
<e> NL: Merge subtokens into a single token  name: merge subtokens </e> Merge entities into a single token ,merge entities
<e> NL: Returns a datetime for the monday of the given week of the given year  name: monday of week </e> Returns the Monday of the given week ,get week start
<e> NL: Read config info from config file  name: config read </e> Read URL list from config dictionary,create mapping
"<e> NL: Validate the given private key and raise an exception on failure : param str private_key : Private key as a 64-character hex string : raises InvalidPrivateKey : If the private key is invalid : return : The private key : rtype : str name: validate private key </e> given an address , get decrypted hex private key from DB",get privkey
<e> NL: Delete index infromation from params name: split index </e> Delete index infromation from params,split index
"<e> NL: Return a random 2D unit vector  name: random 2D </e> Return random unit vector from an equal distribution on a sphere . References : Cook 1957 , Marsaglia 1972",random unit vector
<e> NL: Utility to return * ALL * pytest marks ( not only parametrization ) applied on a function : param f : : return : name: get pytest marks on function </e> Returns a list of parameter names for the given pytest Function node . parameterization marks containing several names are split : param parentnode : : return :,get param names
<e> NL: Get aliases from config file name: get aliases </e> Reads letter aliases from a text file created by GoDepth1LettersWr ,read d1 letter
"<e> NL: Create a new request session  name: new request session </e> Determine the RealMe authentication strength of this session . : param request : a Django request : return : the AuthStrength of the RealMe session , or None if not authenticated with RealMe",realme auth strength
<e> NL: Creates an Output device instance based on an OutputTemplate . : param dev_name : The name of the new device : param dev_type : The ID of the template to base the device off of : return : Output device instance name: create from template </e> Creates an Input device instance based on an InputTemplate . : param dev_name : The name of the new device : param dev_type : The ID of the template to base the device off of : return : Input device instance,create from template
"<e> NL: Some sources from apis return lowerCased where as describe calls name: camel resource </e> Some sources from apis return lowerCased where as describe calls always return TitleCase , this function turns the former to the later",camel resource
<e> NL: Identifies what the type of file is  name: file type </e> Identifies what the type of file is ,file type
"<e> NL: Convert single devices to a list , if necessary . : param device : Device to check . : type device : str name: prepare droid list </e> Apply the last saved configuration to a device ",attach to
"<e> NL: Finds the last day of a month . : param year : year as integer : param month : month as integer : return : last day of month as integer name: find last day of month </e> Converts current year , month , weekday and week number into the day of month",weekday and week to day
"<e> NL: Checks if URL is valid : param url : URL : return : True if URL is valid , otherwise false name: validate url </e> Return whether the URL blacklisted or not . Using BLACKLIST_URLS methods against the URLs . : param url : url string : return : True if URL is blacklisted , else False",is blacklisted url
<e> NL: Checks if given value is float name: is valid float </e> Checks if given value is boolean,is valid boolean
<e> NL: Returns string representation of a single row . : param row : single dataset row name: serialize row </e> Returns a single row from a set of results or raises an error,single row
"<e> NL: Given a dataset object and data in the appropriate format for the interface , return a simple scalar  name: unpack scalar </e> Given a dataset object and data in the appropriate format for the interface , return a simple scalar ",unpack scalar
<e> NL: Test if an array is a square matrix  name: is square matrix </e> Test if x is a correctly shaped point array in R^d ,is valid input array
<e> NL: Create a leaf directory and all intermediate ones . Ignores the error if the give path ( absolute path ) exists on the local file system . : param ( str ) path : None : returns : None : raises : None name: make dirs </e> Create the specified path making all intermediate - level directories needed to contain the leaf directory . Ignore any error that would occur if the leaf directory already exists ,make directory if not exists
<e> NL: Takes a list of sentences in french and preprocesses them  name: preprocess french </e> Takes a list of sentences in french and preprocesses them ,preprocess french
<e> NL: Check if file name have valid suffix for formatting . if have suffix return it else return False  name: get suffix </e> Check if file name have valid suffix for formatting . if have suffix return it else return False ,get suffix
"<e> NL: Compute the * n * moment of the data list * data * . Parameters ---------- data : list Data to take the moment of . n : int Moment number . Returns ------- float * n * moment of the data  name: get moment </e> Build the main content of the entry , which is written in markdown at the moment",compile markdown
<e> NL: Format the value of a metric value to a string name: str val </e> Format the name of the field Args : value : The string to format,format name
<e> NL: Return empty output dictionary for a state : param state : the state of which the output data is determined : return : the output data of the target state name: create output dictionary for state </e> Find the current state of the lpar . State is converted to the appropriate nova.compute.power_state : return : The appropriate integer state value from power_state,translate vm state
"<e> NL: boxes : [ N , ( y1 , x1 , y2 , x2 ) ] window : [ 4 ] in the form y1 , x1 , y2 , x2 name: clip boxes graph </e> definition : func(x1 , x2 , y1 , y2 ) { ... } objective : returns the slope ( m ) from the slope formula m = y2 - y1 / x2 - x1",slope formula
<e> NL: Return True if value contains multiple values name: is multiple </e> Return True if data container has multiple timesteps ,has multiple timesteps
<e> NL: Get the number of Sundaystarting - weeks in this year name: ssweek num weeks </e> Get the number of ISO - weeks in this year,iso num weeks
<e> NL: [ a - zA - Z_][a - zA - Z_0 - 9 ] * name: t code ID </e> \?[a - zA - Z_][a - zA - Z_0 - 9 ] * :,t OPT KEYWORD
<e> NL: Compute and return the data with its MIC and ICV name: build MIC ICV </e> Check MIC ICV & return the data from a decrypted TKIP packet,check MIC ICV
"<e> NL: Compute the spectral coherence between processes X and Y , given their spectral matrix S(w ) Parameters ---------- Sw : ndarray spectral matrix name: coherence from spectral </e> Compute the spectral radius for the coefficient matrix",var specrad
"<e> NL: Takes a blob as input returns either the original blob if binary_detection is True and the blob content looks like binary , else return a new blob with converted data name: normalize blob </e> Given a ssa in the format produced by get_ssa ( ) , returns a map from versioned blob into the operator index that produces that version of the blob . A versioned blob is a tuple ( blob_name , version ) ",get output producers
"<e> NL: Distance between a point p and a line defined by a , b and c. a , b , c : the line $ x + by + c = 0 $ p : the point name: signed distance point to line </e> Returns the ( x , y ) tuple of the point that has progressed a proportion n along the line defined by the two x , y coordinates ",get point on line
"<e> NL: Add options to get more or less messages  name: add output level </e> duck type implementation for checking if object is ClusterNode or Hypothesis_Node , more or less",is tree
<e> NL: Check if a value is None . : param val : the value to be tested : return : returns false if the value is not none name: is none </e> If the second return value is not None then it is an Exception encountered during parsing . The first return value will be the XML string ,xml records
<e> NL: Monkey - patch urllib3 with PyOpenSSL - backed SSL - support  name: inject into urllib3 </e> Monkey - patch urllib3 with PyOpenSSL - backed SSL - support ,inject into urllib3
"<e> NL: Return True if ` value ` is a valid IMDB ID for titles ( movies , series , etc )  name: is valid imdb title id </e> Return True if ` value ` is a valid IMDB ID for a person ",is valid imdb person id
<e> NL: Context manager that exits cleanly on KeyboardInterrupt name: keyboard interrupt </e> A generator that stops on a KeyboardInterrupt,catch keyboard interrupt
"<e> NL: Convert value to an int , float or leave it as a string . : param value : The cli value to parse : returns : The value converted to int or float if possible name: infer numeric or str </e> Converts value in int or float if possible",guess type
"<e> NL: Case when node have only one children . Only in that case node.visited changed . Example : T->[a ] to a name: case 0 </e> Case when node have two children , one of which is operator , other not . In that case choice operator node as top node . Example : T->[a , * ->[a ] ] to * ->[a , a ]",case 1
<e> NL: returns the first ' size ' dataframe : param size : ( optional ) the size of the sample . If None then all the names are returned : return : the mapping DataFrame name: profile au 500 </e> returns the first ' size ' dataframe : param size : ( optional ) the size of the sample . If None then all the names are returned : return : the mapping DataFrame,companies inc5000
<e> NL: Returns a Catalog object representing the catalog given by name  name: get catalog </e> Get the source data for a particular GW catalog,get source
<e> NL: Check if there is a unique sink place with empty connections Parameters ------------- net Petri net Returns ------------- place Unique source place ( or None otherwise ) name: check sink place presence </e> Remove a place from a Petri net Parameters ------------- net Petri net place Place to remove Returns ------------- net Petri net,remove place
<e> NL: Makes a normalized Pmf from a Cdf object  name: make pmf from cdf </e> Makes a normalized Suite from a Cdf object ,make suite from cdf
<e> NL: return string of parameters found in header in marccd image file .mccd - print allsentences displays the header - use allsentences.split('\n ' ) to get a list name: read header marccd </e> return string of parameters comments and exposure time found in header in marccd image file .mccd - print allsentences displays the header - use allsentences.split('\n ' ) to get a list,read header marccd2
<e> NL: Custom JSON decoder that allows construction of a new Smi instance from a decoded JSON object  name: .json hook </e> Read and flatten json,read json
<e> NL: Get a list of edge colors by binning some continuous - variable attribute into quantiles  name: get edge colors by attr </e> Get a list of node colors by binning some continuous - variable attribute into quantiles ,get node colors by attr
<e> NL: Retrieve the schema - index entry for a given schema . Returns ------- schema_meta : dict name: index entry for schema </e> Get index prefix for a given schema ,schema prefix
<e> NL: Return Protection Group or None name: get pgroup </e> Return Protection Group Volume or None,get pgroupvolume
"<e> NL: get default sender ( name , address ) tuple name: get default sender </e> Returns a functions to search sender \ s name or it \ s part ",contains sender names
<e> NL: The file_access_waiting state global faw_CACHE_DESTROY event handler name: faw CACHE DESTROY </e> The file_access_waiting state global faw_CACHE_DESTROY event handler,faw CACHE DESTROY
"<e> NL: "" c - a : sodium chloride [ PM73 ]  name: bC Na Cl PM73 </e> "" c - a : indium chloride [ PM73 ] ",bC In Cl PM73
<e> NL: Find a single HTML element using jQuery - style selectors  name: find element by jquery </e> Find a single HTML element using jQuery - style selectors ,find element by jquery
<e> NL: Returns an array of unique values in the input order name: unique array </e> Group an array by its unique values ,unique value groups
<e> NL: Force a list representation of an object name: force list </e> Force the noupdate value of an xmlid ,force noupdate
"<e> NL: Returns a new list containing the last n elements of the given list . If n > list.length , returns a list of list.length elements name: take last </e> Convert a string into a list whose elements length do not exceed a given width ",str format
<e> NL: Compute the b - value and optionally its confidence interval  name: b value </e> Compute specified symmetric confidence interval for empirical sample ,empirical confidence interval
<e> NL: Checker for the contour preprocessor  name: check earthquake contour preprocessor </e> Checker for the nearby preprocessor ,check nearby preprocessor
"<e> NL: Checks if a file is locked by opening it in append mode . If no exception thrown , then the file is not locked  name: is locked </e> Checks if a file is locked by another process ",is locked
<e> NL: The minimum distance between parallel tangents to the projection area of the contour : param contour : : return : name: min feret </e> The maximum distance between parallel tangents to the projection area of the contour : param contour : : return :,max feret
<e> NL: Encode every value of a dict to UTF - 8  name: encoded dict </e> Apply format_value_for_spreadsheet to every value of a dict,format data dicts records for spreadsheet
<e> NL: Get the list of event data for the object with the specified key  name: get events data </e> Get the data for this key from the rundata,get from currentdata
"<e> NL: Funtion to get preprocess text annotation from server @param : text , the text to generate text annotation on views , the views to generate @return : raw text of the response from server name: call server </e> Base method to send GET request and retrieve text from response . Parameters ---------- url : str Returns ------- string text Raises ------ Exception Client or Server Error can be raised ",make get text request
<e> NL: Run sst algorithm with lanczos method ( FELIX - SST algorithm )  name: sst lanczos </e> Run sst algorithm with svd ,sst svd
<e> NL: Change the samples order new_order : list of samples order name: change order </e> Create the order for samples between X and genotypes ,generate sample order
<e> NL: Remove a file . Suppress error if the file does not exist  name: remove file </e> Remove a directory . Suppress error if the directory does not exist ,remove dir
<e> NL: Open a SSH connection with a SOCKS proxy  name: socks proxy </e> init a socks proxy socket ,init socks
<e> NL: Test if a given field is an Auto - Field . : param DjangoField field : A reference to the given field . : rtype : boolean : returns : A boolean value that 's true only if the given field is an Auto - Field  name: is auto field </e> Detect if the field is a boolean or a dict ,boolean or dict field
<e> NL: Return True if running Python is suitable for GUI Event Integration and deeper IPython integration name: versionok for gui </e> Enable integration with a given GUI,enable gui
<e> NL: Add one column to the right vector ( MPS version ) name: eig rightvec add mps </e> Add one column to the left vector ( MPS version ),eig leftvec add mps
"<e> NL: Return the prefix for a metric displayed for a reference ( or no Reference ) : return : A string that is used as the prefix for a reference metric  name: reference prefix </e> inner covariance matrix for HAC for panel data no denominator nobs used no reference for this , just accounting for time indices",S nw panel
<e> NL: Gets a random operator Returns ------------ operator Operator name: get random operator </e> Construct a PauliTerm operator by taking the non - identity single - qubit operator at each qubit position ,max weight operator
<e> NL: recursively update a dictionary d with a dictionary u name: recursive update </e> Returns an internal sequence dictionary update ,dict to sequence
<e> NL: Get the latest block height for a given coin name: get latest block height </e> Get the latest block hash for a given coin,get latest block hash
<e> NL: Get the SHA1 hash of an image object Parameters ---------- image : object An image to be hashed . Returns ------- _ hash : str Hash of image in string format name: get hash </e> Calculate hash of image read in from stream ,get hash from image
<e> NL: Reads a file and converts it to a stream of bytes  name: read dr int stream </e> input : String | Generator outs : Generator reads firstline as the headers and converts input into a stream of dicts,to csv
<e> NL: Convert a list of email to a dict of email  name: email list to email dict </e> Return a list of email text bodies from a list of email objects,email bodies
<e> NL: Return the relative atomic concentration . partial_cross_section is in nm * nm . The return value units are atoms / ( nm * nm ) * spectrum intensity  name: relative atomic abundance </e> Convert E(eV ) < > nu(nm ) ,conv ev nm
"<e> NL: Search engine by the starting characters . Args : eng ( string ) : Engine type ( for example : CFM56 - 5 ) . Returns : list or None : Matching engine types  name: search engine </e> Filter contaminants , as marked by the search engine Looking for a contaminant tag in the leading_protein column",filter contaminant
"<e> NL: Gets the open function to use to open the given filename . : param filename : The file to open . : return : The open function , and the read - mode flag to use  name: get open func </e> Manage file handles to keep files open during demultiplexing ",get files handles
"<e> NL: write code into hksec , szsec , shsec return stocks code name: write code table </e> write code into database , szsec and shsec",write code
<e> NL: Remove duplicates in list and retain order : param input_list : any list of objects : return : input_list without duplicates : rtype : list name: get unique list </e> Simple funcion to eliminate consecutive duplicates in a list or arrays or in a list of numbers . : param input_list : list with possible consecutive duplicates . : return : input_list with no consecutive duplicates ,eliminate consecutive duplicates
<e> NL: Get unspent outputs from a list of transaction outputs  name: .from txoutputs confirmed </e> Plots outputs of compute_cap_exposures as line graphs,plot cap exposures net
"<e> NL: Reads bytes from a buffer . Returns a tuple with buffer less the read bytes , and the bytes  name: read bytes </e> Allocate a buffer on the host using pinned memory with specified number of bytes ",alloc pinned
"<e> NL: Retrieves the next RFC 4251 string value from the data . While the RFC calls these strings , in Python they are bytes objects  name: ssh read next string </e> Parses all the current RFC titles from the rfc-index.txt file allowing the title to be written to the database easily . : return list of RFC title information",get title list
<e> NL: Returns a monospace font used in the code editor widgets . : return : QFont instance having a monospace font  name: monospace font </e> Convert the given Enaml Font into a QFont . Parameters ---------- font : Font The Enaml Font object . Returns ------- result : QFont The QFont instance for the given Enaml font ,QFont from Font
"<e> NL: Instantiate the results socket for sending binary results  name: get results socket </e> Wraps the sink socket , which receives results in chunks , to produce a generator of single results ",sink wrapper
<e> NL: Generate a synthetic country : param fake : : return : name: get country </e> Generate a synthetic person : param fake : : return :,get person
<e> NL: Load module from path . : param path : Absolute or relative path to module . : return : module name: load module </e> Gives the path to our module : return : path to our module,get module dir
"<e> NL: Load lightweight "" bundle "" objects using the ORM  name: test orm bundles </e> Load individual columns into named tuples using the ORM ",test orm columns
"<e> NL: check to see how much of the buffer is being used name: check buffer </e> Currently assumes your on Middle C. Could potentially take into account n1 as a way to know how to handle the irregularities . Such as E - F being 1 half step , but G - A being 2 ",finger distance
<e> NL: Determines if given item is iterable . Args : item ( object ) : Object to be tested . Returns : bool : Whether given item is iterable  name: is iterable </e> Ensure the given item is an returned as an iterable . Parameters ---------- item : object The item to ensure is returned as an iterable ,ensure iterable
<e> NL: Register a Flask app with all the available filters . Args : app ( object ) : The Flask application instance . filters ( list ) : The list of filter functions to use . Returns : app ( object ) : The modified Flask application instance  name: config flask filters </e> Make a sumple list of routing rules . : param app : Flask application : returns : list of routes,get routing list
"<e> NL: Return a list of character codes consisting of pairs [ code1a , code1b , code2a , code2b , ... ] which cover all the characters in |s|  name: chars to ranges </e> Return a list of character codes consisting of pairs [ code1a , code1b , code2a , code2b , ... ] which cover all the characters in |s| ",chars to ranges
<e> NL: Create a graphene node type for a settings page  name: register settings model </e> Create a graphene type for ( non - specific ) django model . Used for Orderables and other foreign keys ,register django model
"<e> NL: Function to remove empty diff lines , convert to bash diff format Python uses + /- , so convert that to < / > For example : < this is < expected --- > and this is actual name: format as diff </e> Converts a N - dimensional array to blob proto . If diff is given , also convert the diff . You need to make sure that arr and diff have the same shape , and this function does not do sanity check ",array to blobproto
<e> NL: Finds a key in name: getitem in </e> Finds a selected nav_extender node,find selected
<e> NL: Helper for setting incremental state for an nn . Module  name: set incremental state </e> Helper for getting incremental state for an nn . Module ,get incremental state
<e> NL: Get value by key from config file or environment  name: get config </e> Get config file specified in environment ,config file env
"<e> NL: Determines if the specified namespace exists . : param namespace : The namespace to check for . If None , then the default namespace is used . : return : bool - True if namespace exists name: namespace exists </e> Reverse namespace lookup . Note that returned namespace may not be unique : param uri : namespace URI : return : namespace",namespace for
<e> NL: Generate the user + password portion of a URL  name: create url identifier </e> Generate the user+password portion of a URL . : param str user : the user name or : data:`None ` : param str password : the password or : data:`None `,create url identifier
<e> NL: Parse the chain definitions  name: parse chains </e> Parse the chain definitions ,parse chains
<e> NL: raw_dict : NAME COLON expression name: p raw dict </e> raw_dict : raw_dict COMMA raw_dict,p raw dict chain
<e> NL: Convert regexp flags to string . Parameters ---------- flags : ` int ` Flags . custom_flags : ` int ` Custom flags . Returns ------- ` str ` Flag string  name: re flags str </e> Convert file 's open ( ) flags into a readable string . Used by Process.open_files ( ) ,file flags to mode
<e> NL: Label the internal nodes in the tree . : param tree : an ETE tree . : return : None name: label nodes </e> Clean from the tree all knows problems . : param penn_tree : the plain text tree : return : cleaned tree,clean penn tree
<e> NL: Convert DataFrame index from datetime to epoch time Parameters -------------- index : pandas Index DataFrame index in datetime Returns ---------- pandas Index DataFrame index in epoch time name: datetime to epochtime </e> Convert DataFrame index from datetime to clocktime ( seconds past midnight ) Parameters -------------- index : pandas Index DataFrame index in datetime Returns ---------- pandas Index DataFrame index in clocktime,datetime to clocktime
<e> NL: Helper function used by PlaceholderNode  name: get content </e> Helper used by both resolve_configuration_dict and get_configuration,resolve configuration dict
<e> NL: Get the current vi mode for display  name: get vi mode </e> Get the current vi mode for display ,get vi mode
<e> NL: Processes the data configuration section from the configuration data dict . : param config : The config reference of the object that will hold the configuration data from the config_data . : param data_config : Data configuration section from a config data dict  name: process data config section </e> Returns the NetDumplings configuration data . : param file : Path to config ; ` ` None ` ` falls back on default config . : return : A dict of configuration data ,get config
<e> NL: Builds a dict { url : filename } for the given urls If it is a youtube url it uses the valid template for youtube - dl otherwise just takes the name of the file from the url name: build url downloads </e> Check if ` youtube - dl ` is available in the installation ,youtube dl available
<e> NL: Generate a symmetric random matrix with zeros along the diagonal  name: fully random weights </e> Generate a symmetric random matrix with zeros along the diagonal ,fully random weights
"<e> NL: Takes large data array and sigma clips it to find noise per bl for input to detect_bispectra . Takes mean across pols and channels for now , as in detect_bispectra  name: estimate noiseperbl </e> Takes large data array and sigma clips it to find noise per bl for input to detect_bispectra . Takes mean across pols and channels for now , as in detect_bispectra ",estimate noiseperbl
"<e> NL: check if flux distribution ' solution ' violates any of the flux bounds associated with its reactions Returns : lbViolations , ubViolations - { reaction : flux , bound } dicts name: check bounds in solution </e> get reactions whose flux is restricted to zero based on FVA solution Keyword arguments : fvaMinmax -- dict { reaction : flux minimum , flux maximum } Returns list of reactions ( in arbitrary order )",get blocked reactions
<e> NL: Converts the vehicle 's current engine oil temperature : return : the current engine oil temperature in degrees Celsius name: oil temp </e> Converts the vehicle 's OBD standards this vehicle conforms to : return : the current engine value,obd standards
"<e> NL: Process a HTML block and detects whether it is a code block a math block or a regular HTML block  name: get html contents </e> Checks if the given path is a tdt block . Parameters ---------- block : str Block path Returns ------- is_block : bool True if ` path ` is a tdt block , else False",is block
<e> NL: A helper to retrieve an integer value from a given dictionary containing string values . If the requested value is not present in the dictionary or if it cannot be converted to an integer a default value will be returned instead  name: get int </e> Truncates floats that are integers to their integer representation . That is converts 1 . 0 to 1 etc . Otherwise returns the starting value . Will raise an exception if the input cannot be converted to int ,trunc if integer
<e> NL: given a slug return the index for it name: section idx </e> Display all sub objects of the object with given slug,objects by slug
<e> NL: Builds a new array with valid values for the PassportElementErrorFile constructor . : return : new array with valid values : rtype : dict name: validate array </e> Builds a new array with valid values for the MessageEntity constructor . : return : new array with valid values : rtype : dict,validate array
<e> NL: Checks that the year is within 50 years from now  name: check year </e> Returns the years interval from start year,copyright years
<e> NL: Get an instance of PIL . Image from the given file  name: get image from file </e> Retrieves the PIL image from the given array of bytes . : param image_bytes : bytes to convert into a PIL image . : return : PIL image ,get image
"<e> NL: Set configuration value  name: set cfg value </e> set_get ( + Set , -Value )",builtin set get
<e> NL: Return a list of OCR tools available on the local system  name: get available tools </e> returns a list of tools to install @return list of tools,windows default tools list
<e> NL: Get software release from carrier XML . : param root : ElementTree we 're barking up . : type root : xml.etree . ElementTree . ElementTree name: carrier swver get </e> Take an ElementTree and extract a software release from it . : param root : ElementTree we 're barking up . : type root : xml.etree . ElementTree . ElementTree,sr lookup extractor
<e> NL: Parse the host and return hostname and port  name: .parse host </e> Parse provided hostname and extract port number,. parse host
<e> NL: Converts value into map object or returns empty map when conversion is not possible : param value : the value to convert . : return : map object or empty map when conversion is not supported  name: to map </e> Converts value into map object or returns empty map when conversion is not possible : param value : the value to convert . : return : map object or empty map when conversion is not supported ,to map
"<e> NL: Checks an HTTPError to see if Facebook is down or we are using the API in the wrong way Facebook does n't clearly distinquish between the two , so this is a bit of a hack name: is server error </e> Unfortunately facebook returns 500s which mean they are down Or 500s with a nice error message because you use open graph wrong So we have to figure out which is which :)",is json
<e> NL: Estimate inverse covariance via scikit - learn ledoit_wolf function  name: sk ledoit wolf </e> Estimate inverse covariance via scikit - learn GraphLassoCV class ,graph lasso
"<e> NL: Apply a 3D mask to a 4D image Parameters ---------- time_series : SpatialImage 4D nifti image , with time - series on the 4th dimension mask : SpatialImage 3D boolean mask image name: get masked series </e> Do PCA analysis on 4D image to turn it into a 3D image suitable for SLIC",preprocess pca
"<e> NL: true if user has ' add ' , ' change ' or ' delete ' permission on any model registered as a snippet type name: user can edit snippets </e> true if user has ' add ' , ' change ' or ' delete ' permission on this model",user can edit snippet type
<e> NL: Read an image from a FITS file  name: read fits </e> Get data from an image or FITS file,get img data
<e> NL: Return power - law Propagator kernel G(l ) . l=0 ... steps name: G pow </e> Inverse CDF for a pure power - law,pl inv
<e> NL: Get the artist dictionary name: get artist dict </e> Attempt to find featured artists in the item 's artist fields and return the results . Returns None if no featured artist found ,find feat part
"<e> NL: Create a list of Bars from a DataFrame . Parameters ---------- df : pd . DataFrame Index does not matter . Each row contains information of a Bar . Returns ------- bar_list : list of Bar name: create from df </e> Create a list of Bars from a dic . Parameters ---------- dic : dict Keys are attribute names of Bar , values are corresponding values . Returns ------- bar : Bar",create from dict
"<e> NL: Get parser description . We parse this as reStructuredText , allowing users to embed rich information in their help messages if they so choose  name: format description </e> Get parser epilog . We parse this as reStructuredText , allowing users to embed rich information in their help messages if they so choose ",format epilog
<e> NL: Create the cell model name: create cell </e> Create the cell model,create cell
<e> NL: Given a set of values returns the indices of each of those values in the source array  name: search indices </e> This function finds the first set of values for each model and scenario and subtracts them from all values to remove the offset ,remove t0 from wide db
<e> NL: Recursively build a command line argument prefix from the request parameter object to avoid name conflicts . : param str arg : Current argument name . : param str param : Original request parameter name . : param str path : Request parameter namespace  name: build prefix </e> Filter certain superflous parameter name suffixes from argument names . : param str prefix : The potential prefix that will be filtered . : param str name : The arg name to be prefixed . : returns : Combined name with prefix ,join prefix
<e> NL: Make directories leading to ' dst ' if they do n't exist yet name: mkdirs thread safe </e> Make directories leading to ' dst ' if they do n't exist yet,mkdirs thread safe
<e> NL: Sets the lower bound timestamp  name: .set lower timestamp </e> Sets the upper bound timestamp ,.set upper timestamp
<e> NL: Load image from file name: load image </e> Load a texture from a file into a PIL image ,load texture
"<e> NL: Return the input tensor , offset by a certain value : param input_tensor : ( TensorFlow Tensor ) The input tensor : param idx : ( int ) The index offset : return : ( TensorFlow Tensor ) the offset tensor name: get by index </e> Performs attention on the input . : param attention_input : The input tensor for attention layer . : param attention_mask : A tensor to mask the invalid values . : return : The masked output tensor ",attention layer
<e> NL: Download an HTML page using the requests session  name: get page </e> Download an HTML page using the requests session and return the final URL after following redirects ,get page and url
<e> NL: Helper function to compute the MD5 checksum of the content of a file  name: calc md5 </e> Compute the checksum of a full line,. checksum
<e> NL: Returns a random number from the const . PRIMES array  name: prime pick </e> Decompose number into the primes,decompose to primes
<e> NL: Searches for a predefined unit with the given ` ` name ` ` and returns a : class:`Units ` object representing it . If no such unit is found a : class:`CellMLError ` is raised  name: find units </e> Searches for a predefined unit with the given ` ` name ` ` and returns a : class:`Units ` object representing it . If no such unit is found a : class:`CellMLError ` is raised ,find units
"<e> NL: Split list items into two into ( matching , non_matching ) by ` cond(item ) ` callable name: split list </e> Split list items into ` ( matching , non_matching ) ` by ` cond(item ) ` callable ",split list
<e> NL: Convert a match object into a dict  name: match to dict </e> Convert Checks API request object into a dict ,to gh query
<e> NL: calculates the area of a triangle given its vertices name: triangle area </e> r Return the area of a triangle ,triangle area
<e> NL: Default thread creation - used to create threads when the client doesn t want to provide their own thread creation  name: default create thread </e> Default thread creation - used to create threads when the client does n't want to provide their own thread creation . : param function callback : the callback function provided to threading . Thread,default create thread
<e> NL: set up a proxy that store too long warnings in a separate map name: get proxy filter </e> set up a proxy that store too long warnings in a separate map,set proxy filter
<e> NL: Generates a firmware version request packet . Returns : packet : A request packet  name: get fw </e> Generates a serial number request packet . Returns : packet : A request packet ,get sn
<e> NL: Get radar station info from the station database according to the station code  name: get radar info </e> Generates a topography mask from an oceanographic transect taking the deepest CTD scan as the depth of each station ,gen topomask
<e> NL: Determine if the provided value is a task module name: is task module </e> Return the first task instance that is a module node ,get module task instance id
<e> NL: Return list of all regions name: get regions </e> List regions for the service,list regions
<e> NL: Query group by a group name . : param name : Name of a group to search for . : returns : Group object or None  name: get by name </e> Set the host and the scheduled_at field of a group . : returns : A Group with the updated fields set properly ,generic group update db
<e> NL: a - a ' : chloride hydroxide [ PK74 ]  name: theta Cl OH PK74 </e> a - a ' : chloride hydroxide [ MP98 ] ,theta Cl OH MP98
<e> NL: Get the name of an opcode given the op byte sequence of the operation  name: op get opcode name </e> For a given opcode op in opcode module opc return the size in bytes of an op instruction ,instruction size
"<e> NL: Remove comment markers and superfluous whitespace . E.g. , ' test test # test ' - > ' test test test ' name: canonicalize whitespace </e> if ` test is None ` do a straight equality test",all equal
<e> NL: Transposes a list matrix name: transpose list array </e> Transposes an image by either rotating or flipping it ,transpose cmd
<e> NL: Split a string list into parts  name: split list </e> Split a song into two parts one starting at start1 the other at start2,split song
<e> NL: Load n grams from text files : param file_path : input to bi - gram or tri - gram file : return : n - gram words . E.g. bi - gram words or tri - gram words name: load n grams </e> Load IMDb data and augment with hashed n - gram features ,load and preprocess imdb data
<e> NL: Class method to get a reference to the image search engine . @return reference to the image finder object @rtype ImageSearchEngine name: image search engine </e> Class method to get a reference to the speed dial . @return reference to the speed dial ( SpeedDial ),speed dial
<e> NL: Change a numeric relation to a string symbol . : param Rational relation : the relation : returns : a symbol with the right relation to ` ` relation ` ` or None : rtype : str or NoneType name: relation to symbol </e> Get the peers relation id if a peers relation has been joined else None ,peer relation id
<e> NL: Get a global scope registered with the model . : param scope : The scope to register : type scope : orator.orm.scopes.scope . Scope or str name: get global scope </e> Maps the vars_list into a list of axis indices corresponding to the fluent scope ,. varslist2axis
<e> NL: Ensure a config file exists in given configuration directory . Creating a default one if needed . Return path to the config file  name: ensure config exists </e> Ensure a configuration file exists in given configuration directory . Creating a default one if needed . Return path to the configuration file ,ensure config exists
<e> NL: Return ContextService arguments for su as a become method  name: connect su </e> Return ContextService arguments for su as a become method ,connect su
<e> NL: Read 8 bytes as BE integer in file f name: read long long </e> Read 4 bytes as BE integer in file f,read long
"<e> NL: If it is an engine , then create a session from it . And indicate that this session should be closed after the job done . : type engine_or_session : Union[Engine , Session ] : rtype : Tuple[Session , bool ] name: ensure session </e> Get one object by primary_key value . : type engine_or_session : Union[Engine , Session ]",by id
<e> NL: Calcualtes n - grams . Args : n : which n - grams to calculate text : An array of tokens Returns : A set of n - grams name: get ngrams </e> Returns a list of n - grams read from the file at path ,get ngrams
<e> NL: Matches retry details emitted  name: retry matcher </e> Matches task details emitted ,task matcher
<e> NL: Obtain elemental data given an elemental name name: element data from name </e> initiating all elemental materials in csv files in path,init group
<e> NL: Obtain the start of function for a field accessor function name: field function start </e> Accessor for factory instance,get rpc collections
<e> NL: ( [ ] + ) field [ ] declaration : [ ] ( .+);\n name: t STRUCTURE </e> Return a DOCTYPE declaration : param doc_type : doc type string must be in ` ` page . DOC_TYPES ` ` : type doc_type : str : return : DOCTYPE declaration : rtype : str,get doc type
"<e> NL: Triangulate a set of vertices on the sphere . Parameters ---------- vertices : ( M , 3 ) ndarray XYZ coordinates of vertices on the sphere . Returns ------- faces : ( N , 3 ) ndarray Indices into vertices ; forms triangular faces  name: faces from sphere vertices </e> Calculate normals from vertices and faces . Parameters ---------- verices : ndarray faces : ndarray Returns ------- normals : ndarray Shape same as vertices",normals from v f
<e> NL: Implementation of the conjugation of a quaternion name: qconj v </e> Calculate the w field of a quaternion ,quat from qx qy qz
<e> NL: Split a list into chunks of ` ` n ` ` length  name: array split </e> Return list of chunks,chunk range
<e> NL: Get versions of all direct dependencies based on the currently present Pipfile.lock  name: get direct dependencies version </e> Get all direct dependencies based on requirements.in file and generated Pipfile.lock from it ,get direct dependencies requirements
<e> NL: Flatten a nested list one level . : param list nested_list : A nested list : rtype : list name: flatten list </e> Returns True if a 2-nested list contains at least one truthy value . : param l : a nested list : return :,has values
"<e> NL: Tries to find a single project by name or ID . Raises an error if none or multiple projects found  name: project lookup </e> Find file by name , None if none or multiple ",search file by name
<e> NL: Read lines from f until a blank line is encountered  name: skip to blank </e> Read lines from f until a blank line is encountered ,skip to blank
<e> NL: Return True for likely dict object  name: infer dict </e> Return True for likely dict object via duck typing ,infer dict
"<e> NL: If the given , non - null object has a value at the given path , returns the value at that path . Otherwise returns the provided default value name: path or </e> Returns true if the specified object property at given path satisfies the given predicate ; false otherwise",path satisfies
<e> NL: Register a human - friendly name for the given type . This will be used in Invalid errors : param t : The type to register : type t : type : param name : Name for the type : type name : unicode name: register type name </e> Cache known ActivityType 's to remove useless latency . : param domain : : type domain : : param name : : type name : : param version : : type version : : return : : rtype :,get activity type
<e> NL: commands : command | commands command name: p commands </e> Return number of all intercepted commands filtered by ' which ' field . Args : cmds_file : Path to the txt file with intercepted commands . which_list : A list of strings to filter command by ' which ' field ,number of cmds by which
"<e> NL: Return the current job configuration for the provided job  name: get job config </e> Evaluate the time / memory requests for the grid job , allowing for ints or formulas",evaluate resource requests
"<e> NL: Get the number of coded value from a key . If several keys of the same name are present , the total sum is returned . : param bytes key : the keyword to get the size of : rtype : int name: codes get size </e> Get the length of the string representation of the key . If several keys of the same name are present , the maximum length is returned . : param bytes key : the keyword to get the string representation size of . : rtype : int",codes get string length
<e> NL: Parse the artist name of a card name: parse artist </e> Parse the mana cost of a card,parse mana
<e> NL: Scale a folded joint site frequency spectrum  name: scale joint sfs folded </e> Scale a folded site frequency spectrum ,scale sfs folded
<e> NL: Return keyword arguments for PIP install  name: pip kwargs </e> Return keyword arguments for PIP install ,pip kwargs
<e> NL: Get snapshot type from vm . Args : vm_name : The virtual machine name . Returns : Info obtained from remote hyper - v host  name: get snapsshot type </e> List vm snapshots . Args : vm_name : The virtual machine name . Returns : Info obtained from remote hyper - v host ,list vm snaps
"<e> NL: Add a port number if necessary . : param broker : Raw broker name : return : Fixed broker name name: fix broker </e> Returns all cleaving contexts stored in the broker . : param broker : : return : list of tuples of ( CleavingContext , timestamp )",load all
<e> NL: Check if a file exists and is non - empty  name: file exists </e> Check to see if a file exists or is empty ,is valid
<e> NL: Creates a Data Uri for a Favicon : param img_url : Url of Favicon : return : str name: create data uri </e> Look for a favicon under the domain,get favicon
<e> NL: Unlinks a bank account . : param i d : The bank i d . : type i d : str : returns : Information returned from post request  name: unlink bank account </e> Validates a Finnish bank account number ,validate account number
"<e> NL: Prompts user for username and password , gets API key from server if not provided  name: login uname pwd </e> Prompts user for username and password gets API key from server if not provided ",login uname pwd
"<e> NL: Iterator : visit a tree , yielding each node in DFS order . : param root : the root node of the tree  name: visit tree </e> requires that value is already in tree with node as the root",find node
<e> NL: Calculate the CRC for the value in Python 3 name: py3 crc16 </e> Calculate the CRC over a range of bytes using the CCITT polynomial ,crc ccitt
<e> NL: Recursively parse filter options into dicts . Parameters ---------- options : A list of tuples The filter options Returns ------- dict The resulting dictionary name: option list to dict </e> Decorator for all search filter options,filter opts
<e> NL: Create DatetimeIndex for the Dataframe localized to the timezone provided as the label of the third column  name: format index raw </e> Returns copy of DataFrame with stretched DateTimeIndex ,stretch signals
<e> NL: Return the auth token for the default org as stored in the config . Return None if not found or default org is not set  name: get default token </e> Do n't mangle the wrong org by accident,validate master id
<e> NL: Load Manifold from Wavefront obj file  name: obj load </e> Load Manifold from Stanford PLY file ,ply load
"<e> NL: Get "" local "" info for a single block of given backup , this is for "" Data "" surface  name: get local data array </e> Get "" remote "" info for a single block of given backup , this is for "" Data "" surface ",get remote data array
<e> NL: Makes a Flask response with a XML encoded body name: output xml </e> Makes a Flask response with a XML encoded body,output xml
<e> NL: Convert binary data to a hex string  name: hex str </e> Format binary data into a string for debug purpose,get log buffer
<e> NL: This will return a list of the non - keyword arguments : param function : function to check arguments for : return : list of arguments name: function args </e> Helper method for screening keyword arguments,.ok kwarg
<e> NL: This Context Manager redirects STDERR to a StringIO objects which is returned from the Context . On exit STDERR is restored  name: capture stderr </e> This Context Manager redirects STDOUT to a StringIO objects which is returned from the Context . On exit STDOUT is restored ,capture stdout
<e> NL: Find scene texture dependencies of the current scene that are not referenced : return : set < str > name: find scene textures </e> Find scene texture dependencies of the current scene that are not referenced : return : set < str >,find scene textures
"<e> NL: Returns a tuple ( [ Issue ] , File | None )  name: parse file </e> Returns a tuple with the file path and format found , or ( None , None )",find file format
<e> NL: Convert raw query results to a DataFrame  name: convert results to df </e> Create the results DataFrame ,initialise commodity sources
<e> NL: Marshal a Python Exception into a ` ` Response ` ` object with a body that is a JSON string suitable for use as a JSON - RPC response with a content - type of ` ` application / json ` ` and return the response  name: make error response </e> Sort the keys in a JSON - RPC response object ,sort response
<e> NL: Create key to sign request with name: create signing key </e> Generate the AWS4 auth string to sign for the request ,.get sig string
<e> NL: Seek to an absolute position in stream  name: seek to position </e> Get position in byte stream ,cio tell
<e> NL: Adjust the bounding box as specified by user . Returns the adjusted bounding box  name: adjust bounding box </e> Shrink the bounding box bb by factor in order to prevent unneeded work due to rounding ,shrink bb
<e> NL: Chrom key function  name: chr key func </e> Get chrom as key ,get chr key
"<e> NL: Returns True if this key has a default , False otherwise . : returns : True if this key has a default , False otherwise  name: has default </e> Returns True if the given path resolves against the default URL resolver , False otherwise . This is a convenience method to make working with "" is this a match ? "" cases easier , avoiding unnecessarily indented try ... except blocks ",is valid path
<e> NL: Determines whether or not one 's code is executed inside of an ipython notebook environment  name: is kernel </e> Return whether or not this function is executed in a notebook environment ,is notebook
"<e> NL: Check and parse size specs as either a single [ s ] or a list of [ s , s , s , ... ] name: check size </e> Check and parse thickness specs as either a single [ s ] or a list of [ s , s , s , ... ]",check thickness
<e> NL: Remove the nexus nve binding  name: remove nexusnve binding </e> Remove the nexus nve binding ,remove nexusnve binding
"<e> NL: Tries to make a time out of the value . If impossible , returns None . : param value : A value of some ilk . : return : Time : rtype : datetime.time name: try parse time </e> Tries to make a time out of the value . If impossible , returns None . : param value : A value of some ilk . : return : Date : rtype : datetime.date",try parse date
<e> NL: given a key return a list of values from the matrix with that key  name: matrix values </e> reverse the shuffled list with the original key : param lst : shuffled list : param key : shuffle key : return : original list,shuffle reverse
<e> NL: List all of the local package repositories  name: list repos </e> returns all the repositories in the database,get repositories
<e> NL: Returns the most recently changed file in a folder . Args : folder_path : The path to the folder to search Returns : A string with the filename of the most recently changed file in the folder  name: get most recent file in dir </e> Finds the most recently saved operative_config in a directory ,get latest operative config
"<e> NL: Get a representation of the feature name associated to a string trace attribute value Parameters ------------ trace Trace of the log trace_attribute Attribute of the trace to consider Returns ------------ rep Representation of the feature name associated to a string trace attribute value name: get string trace attribute rep </e> For a given trace , return a mapping from activity to frequency in trace . Parameters ---------- trace : ` tuple ` of ` str ` a trace as a tuple of activities Returns ------- ` dict ` mapping from activity to frequency in trace",activity 2 freq
<e> NL: Return a PEP 440-compliant version number from VERSION  name: get version </e> Return a PEP 440-compliant version number from VERSION ,get version
"<e> NL: Autopurge subcommand . Parameters : api : the API instance to use . Returns : int : 0 if all success , 1 if one failure  name: subcommand autopurge </e> Show subcommand . Parameters : api : the API instance to use . Returns : int : always 0 ",subcommand show
<e> NL: Returns a list of header strings that could be passed to a compiler name: pkg config header strings </e> Returns a list of header strings that could be passed to a compiler,pkg config header strings
<e> NL: Parse a geometry file in txt format name: parse txt </e> Parse the given rgb . txt file into a Python dict ,parse rgb txt file
<e> NL: Pull names of required props from the props object . Parameters ---------- props : dict Returns ------- list List of prop names ( str ) that are required for the Component name: required props </e> Move the relationships to appropriate location in the props,to rest rels
<e> NL: List of available map types as 2-tuples  name: map type vocab </e> List of maps available in * * escher * * Returns : list : map names,list escher maps
<e> NL: Build wallet credentials dictionary ( postgres specific )  name: wallet credentials </e> Build a wallet configuration dictionary ( postgres specific ) ,wallet config
<e> NL: Return True if value is an integer  name: is int </e> Determine if value is an integer ,is number
<e> NL: r Compute the total flux or turnover flux that is produced by the flux sources and consumed by the flux sinks name: total flux </e> Return the flux command as string : param ` flux_path ` : the full path to the flux bin : param ` no_errors ` : a flag to determine if this a test run to ignore errors,get flux cmd
<e> NL: Utility method to retrieve a list of server groups  name: server group list </e> Utility method to retrieve a list of server groups ,server group list
<e> NL: Load JSON data from a file and return as dict or list  name: load json </e> Load a json file and add is parent dir to resulting dict ,json add collection dir
<e> NL: Merge dict list to a dict object : param dicts : dict list : return : dict name: dict merge </e> Merge a dictionary ( b ) into another ( a ) and override any field in a which is also present in b : param a : dict to be updated : param b : dict with values to update : param path : : return : dict a,override dict
<e> NL: Decorate a delta and check that the new paths in it are unique . : return : A generator over delta  name: check delta unique new paths </e> Decorate a delta and check that the file ids in it are unique . : return : A generator over delta ,check delta unique ids
<e> NL: Expands any derived SI units into their true SI unit equivalents . : param dict units : units dictionary : return : expanded units : rtype : dict name: expand units </e> Return a dict of units that match the filter ,get units
<e> NL: Return True if the element is an entity reference  name: is reference </e> Return True if the element is a physical entity,is physical entity
<e> NL: Returns just the modification time for the named object ( tries obj : first and then model : ) . Returns None if the object does not exist . Does not create a shelf if there is n't already a shelf at the given location  name: check time </e> Given a SQLAlchemy Table object return a Shelf description suitable for passing to Shelf . from_config ,introspect table
<e> NL: Checks if path is to a file  name: is file </e> checks if a file is stored securely,assert secure file
"<e> NL: Parameter : String ( unicode or bytes ) . Returns : The ` text ` , with each instance of "" -- "" translated to an em - dash character  name: educate dashes </e> Parameter : String ( unicode or bytes ) . Returns : The ` text ` , with each instance of "" -- "" translated to an en - dash character , and each "" --- "" translated to an em - dash character ",educate dashes old school
<e> NL: Determine whether the given response indicates that the token is expired . : param response : The response object . : return : True if the response indicates that the token is expired  name: is expired token response </e> Determine whether the given response indicates that the token is expired ,. is expired token response
"<e> NL: "" Path= "" path - value name: is path av </e> Encodes a path value ",encode path
<e> NL: Parses a list for non - matches to a regex Args : urls : iterable of urls custom_regex : string regex to be parsed for Returns : list of strings not matching regex name: remove regex </e> Parse a list for non - matches to a regex ,remove regex
<e> NL: Return True for likely dict object  name: infer dict </e> Check if criterias for Likely Benign are fullfilled,is likely benign
"<e> NL: Rescales all values to live in [ 0,1 ]  name: rescale 01 </e> Set all variables to live setting",set live
"<e> NL: Burst , emit from center , velocity in fixed angle and random speed name: emitter 9 </e> Burst , emit from center , velocity in fixed angle and random speed",emitter 9
<e> NL: Return the most recent timestamp in the operation  name: get last update </e> Recursively finds the most recent timestamp in the given directory ,get last modified timestamp
"<e> NL: Clean the given input options  name: clean options </e> Clean input toml , increasing the chance for beautiful output",clean toml text
<e> NL: Construct the full name for the node given its path  name: index to name </e> Construct an indented name for the node given its path ,index to nice name
"<e> NL: Arrow file format to a numpy ndarray or a list of numpy ndarray name: arrowfile to numpy </e> Creates a magnitude spectrum from image params : image : A numpy ndarray , which has 2 or 3 dimensions ( BGR ) return : A numpy ndarray , which has 2 dimensions",create magnitude spectrum
"<e> NL: Return True if the xlog is a .backup file , False otherwise It supports either a full file path or a simple file name . : param str path : the file name to test : rtype : bool name: is backup file </e> Return True if the xlog is a .history file , False otherwise It supports either a full file path or a simple file name . : param str path : the file name to test : rtype : bool",is history file
<e> NL: Format a bytes value into something more readable name: format bytes </e> Translate a CommException into something more useful to the user,translate exception
<e> NL: Unlock a cache file by deleting a directory name: unlock cache file </e> Unlock a locked user,users unlock
<e> NL: This function the derivative features  name: derivative extraction </e> This function extracts temporal derivative features which are first and second derivatives ,extract derivative feature
<e> NL: Get the bounding box of a ` ` g ` ` node  name: bounding box group </e> Retrieve the bounding box of a volume in millimetres ,get bounding box
<e> NL: This function converts the ' yes ' and ' no ' YAML values to traditional Boolean values . .. versionchanged : : 2.5.2 A conversion is now only attempted if the value is not already in Boolean format  name: convert yaml to bool </e> This function converts the ' yes ' and ' no ' YAML values to traditional Boolean values ,convert yaml to bool
<e> NL: Get the list of all registers to be used for features involving specific registers  name: register list </e> registers the end of a request,end request
"<e> NL: return User object for given i d , or return None if not found name: fetch user </e> Return the min - isr for topic or None if not specified",get min isr
<e> NL: min and max x and y name: get graph extent </e> Calculate min and max of array with guards for nan and inf ,safe minmax
