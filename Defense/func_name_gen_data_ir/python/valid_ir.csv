nl,func_name
<e> NL: Return ` ` True ` ` if the given rectangle is small enough  name: rectangle small p </e> Return True if the specified file is small enough to process in memory ,is tiny
<e> NL: Return link to ` func ` in source code name: get source link </e> show code of func or module,show code
"<e> NL: Check the given path , printing out any warnings detected . @return : the number of warnings printed name: check path </e> Check the given path , printing out any warnings detected . @return : the number of warnings printed",check path
<e> NL: Normalize the datatype if the type information is in the comm  name: normalize datatype </e> Normalize the datatype if the type information is in the comm ,normalize datatype
<e> NL: Convert a number of seconds to a more readable representation  name: sec to readable </e> Convert a file path into a more readable title ,filename to title
"<e> NL: Return empty output dictionary for a state : param state : the state of which the output data is determined : return : the output data of the target state name: create output dictionary for state </e> Generate a unique |state id| for the current state of the given object . Parameters ---------- obj The object for which to compute the state sid . debug If ` True ` , produce some debug output . Returns ------- The generated state i d ",generate sid
<e> NL: Create a python template file importing the given packages . : param list packages : the name of the packages to import : returns : the path to the created tempkate file : rtype : str name: use template </e> Checks for undeclared file conflicts in the given packages ,cmd check conflicts
<e> NL: Extracts the embedded push value  name: get embedded push value </e> Extracts the name which may be embedded for a Jinja2 filter node,grok filter name
<e> NL: Set a page number for each article name: paginate articles </e> Finds the ` xref ` attribute value of each article if it exists,find references
<e> NL: Count the number of lines in a file name: count lines </e> count the number of terms in the study group,count terms
<e> NL: Clean a string for a translation dictionary . Removes extra whitespace and a number if found . Args : text ( str ) : String to be cleaned . Returns : String with extra whitespace and leading number ( if found ) removed  name: td clean string </e> Clean a string for addition into the translation dictionary . Leading and trailing whitespace is removed . Newlines are converted to the UNIX style . Args : text ( str ) : String to be cleaned . Returns : A cleaned string with number removed ,clean string
<e> NL: Return True if an instance exists named ` instance_name `  name: instance exists </e> generate instance_id to instance_name map . If an instance has no name it will have value ' unknown ' ,get instance id to name map
"<e> NL: for use when calling command - line scripts from within a program . if a variable is present , add its proper command_line flag . return a string  name: add flag </e> for use when calling command - line scripts from withing a program . if a variable is present add its proper command_line flag . return a string ",add flag
<e> NL: Helper for iterating only nonempty lines without line breaks name: iter lines </e> Helper for iterating only nonempty lines without line breaks,iter lines
"<e> NL: Calculate likelihood ratio . : param item1 : item1 in expression : type item1 : float : param item2 : item2 in expression : type item2 : float : return : LR+ and LR- as float name: LR calc </e> ( item1 , deps , func ) , ( item1 , ... ) -- > { item1 , ( set(deps ) , set(funcs ) ) }",consolidate relations
<e> NL: Checks if the response is an ACK frame  name: is ack </e> Checks if the response is an error frame ,is error
<e> NL: Strip leading and trailing space | str -- > str name: strip surrounding spaces </e> Strip leading and trailing angle brackets ,strip brackets
<e> NL: Set up command line parsing  name: parse command line arguments </e> Set up command line parsing ,parse command line arguments
<e> NL: Renders the app list for the admin dropdown menu navigation  name: admin dropdown menu </e> Renders the app list for the admin dropdown menu navigation ,admin dropdown menu
<e> NL: Process the variable name to make it more human - readable  name: get variable and source </e> Adjust the vendor field to make it human readable,adjust raw vendor
<e> NL: Splits string with space or comma - separated list of attribute names and returns a set with white - space stripped values name: attr set </e> Splits the str given and returns a properly stripped list of the comma separated values ,list from csv
<e> NL: Create a 8x(n*8 ) matrix where n is the number of tiles in a list of tiles : param list_of_tiles : : return : name: combine multiple tiles </e> Separate tiles by suits and count them : param tiles_34 : array of tiles to count : return : dict,count tiles by suits
<e> NL: Remove optgroups from a choice tuple . Args : choices ( tuple ) : The choice tuple given in the model . Returns : The n by 2 choice tuple without optgroups  name: remove optgroups </e> Get the human readable value for the DB value from a choice tuple . Args : choices ( tuple ) : The choice tuple given in the model . db_val : The respective DB value . Returns : The matching human readable value ,get hr val
"<e> NL: Returns a list of datetimes for the first day of each month between two dates , inclusive of the start and end dates  name: months between </e> Return list of dates within a specified range inclusive ",date range
<e> NL: Removes a random element from a list and returns it . : param elements : list of elemetns : return : the selected element name: random pop </e> return a random element from a list,get random val from list
<e> NL: Return image inside a QLabel object name: get image label </e> Adds a QLabel contaning text to the given menu,add menu label
"<e> NL: Import a file with full path specification . Allows one to import from anywhere , something _ _ import _ _ does not do  name: import path </e> So we can support potential circular import problems , by using normal import_string import specification ",load target class
"<e> NL: Opens a simple yes / no message box , returns a bool name: get yesno </e> Yes / no dialog with message",yesno box
<e> NL: Return the A record list of a given domain : param domain : domain ( string ) : return : IP Addresses ( list ) name: get a record </e> Create the set of pencils over a domain . Parameters ---------- domain : domain object Problem domain Returns ------- pencils : list Pencil objects,build pencils
<e> NL: Get path to sample data directory for given tag model name: get testdata path </e> Return formatted sample tag from filename using regex ,get tag
<e> NL: Find a group ID from a string containing a group name or ID . Raises ValueError if the string ca n't be resolved to a valid group ID on the system  name: name to gid </e> get a resource group name from a VMSS ID string,get rg from id
"<e> NL: Given a value , determine if it can represent BED block sizes . : param value : a value to check : type value : str : return : if the specified value can represent BED block sizes : rtype : bool name: is block starts </e> Given a value , determine if it can represent BED block sizes . : param value : a value to check : type value : str : return : if the specified value can represent BED block sizes : rtype : bool",is block sizes
<e> NL: c - a - a ' : magnesium chloride sulfate [ PP87ii ]  name: psi Mg Cl SO4 PP87ii </e> a - a ' : chloride sulfate [ PP87ii ] ,theta Cl SO4 PP87ii
"<e> NL: Loads videos from files  name: load videos </e> Returns a list of videos pageNo : page number , start from 0 pageSize : number of videos per page",all list
"<e> NL: Given a docname path pick apart and return name of parent name: parse parent </e> Given a docname path , pick apart and return name of parent",parse parent
<e> NL: Helper function that returns the node data of the node with the name supplied name: get the node dict </e> Returns the node name ,ast name
<e> NL: Return a copy of the given settings . Parameters ---------- settings : dict of dicts A dictionary which we will return a copy of . Returns ------- lsetting : dict of dicts A copy of the settings  name: copy settings </e> Merges two python dicts by making a copy of first then updating with second . Returns a copy ,merge two dicts
<e> NL: Parse configuration and add Rflink sensor devices  name: devices from config </e> Parse configuration and add Rflink sensor devices ,devices from config
<e> NL: Returns either default time stamp or current unix time and expiry seconds to get signature time stamp name: get signature timestamp </e> Read Synchronization File and return sample stamp and time,read snc
<e> NL: Helper function that will wait for the status of the service to match the provided status before an end time expires . Used for service stop and start name: status wait </e> Returns a unique service status,get svc
<e> NL: Return boolean if a reaction is a transport reaction ( from annotations ) . Parameters ---------- rxn : cobra . Reaction The metabolic reaction under investigation  name: is transport reaction annotations </e> get iterator for the reaction participants ( reactants + products ) @type reaction : libsbml . Reaction @rtype : Iterator,get participants
"<e> NL: Compute the * n * moment of the data list * data * . Parameters ---------- data : list Data to take the moment of . n : int Moment number . Returns ------- float * n * moment of the data  name: get moment </e> A function to calculate a hash value of multiple integer values , not used at the moment Parameters ---------- input_list Returns -------",int array hash
"<e> NL: Return the total memory of current machine Returns : name: get total memory </e> Checks configuration and if current machine is not specified , tries to set it . Returns ------- str Current machine ",find if current machine
<e> NL: Walk an unpacked egg s contents skipping the metadata directory name: walk egg </e> Walk an unpacked egg s contents skipping the metadata directory,walk egg
"<e> NL: Given a model instance and a field name ( or attribute ) , returns the value of the field or an empty string  name: get field value </e> Detect whether given attribute field Parameters ---------- gff_line ffs Returns -------",guess kind of gff
<e> NL: Ensure URL contains minimum information to be used name: validate url </e> Ensure setting match minimum resources required for used programs ,ensure min resources
<e> NL: Get and return the content of the given log file  name: . get content </e> Get the content of a file Return string content,file get contents
<e> NL: Return the file with the given name : param str name : Name of the data file : return : Corresponding file : raises : ValueError when name is not known name: get data </e> Delete the function that is associated with ` name ` from all instances of this class Args : name ( str ) : A name corresponding to the desired function . Raises : KeyError : If no function corresponding to ` name ` exists ,remove function
"<e> NL: Checks if the status provided is a success status . @param status : integer The status code to check if is for a successful operation . @return : boolean True if the status is a success status , False otherwise  name: is success </e> Simple function to test if the JIP software bibaries are present . Parameters ---------- jip_dir : str the JIP binaries directory . Returns ------- status : bool the JIP installation status ",check jip install
<e> NL: Compute the checksum values given HRP and data  name: bech32 create checksum </e> Compute checksum by given image path and algorithm ,compute image checksum
<e> NL: Return a reference to a database . : param name : The name of the database . : type name : str . : returns : ` ` pymongo.database . Database ` ` -- a database object  name: get database </e> Create the entire database . Parameters ---------- pth : str Path where the database is created ,db create
<e> NL: Get the size of a remote image in pixels : param : return : tuple containing the width and the height of the image in pixels name: get remote image size </e> Returns primary screen width and height in pixels,get screen dimensions
"<e> NL: For the given graph return the cut value for all binary assignments of the graph  name: graph cuts </e> For the given graph , return the cut value for all binary assignments of the graph . Taken from QuantumFlow",graph cuts
<e> NL: given a string or a path to an XML file return an XML object  name: xmlto python </e> Perform find or findall on given xml with string from param ,xml search helper
"<e> NL: Checks whether the given id is an ObjectId instance and if not wraps it  name: . ensure object id </e> Checks whether the given i d is an ObjectId instance , and if not wraps it ",ensure object id
"<e> NL: Get current event loop . If the loop is closed , a new loop is created and set as the current event loop . Returns ------- loop : : obj:`asyncio . EventLoop ` The current event loop name: get open loop </e> Abort the execution of the current step or loop and yield an warning message ` msg ` if ` expr ` is False",stop if
<e> NL: Return host mor from VM uuid  name: get host mor for vm </e> Return hostname from host mor ,get hostname for host mor
"<e> NL: Pass in a list of points , determine the maximum and minimum latitude and longitude values , create a square ( 4 points ) from the list . : param area : original list of points : return : list of Points name: area converter </e> Takes a N length list of q - points and returns an N - 2 length list of booleans indicating whether the direction has changed between each pair of q - points",direction changed
<e> NL: Make the cache control headers based on a previous request s response headers name: make headers </e> Make the cache control headers based on a previous request 's response headers,make headers
<e> NL: Determine whether the supplied filename looks like a possible name of python  name: looks like python </e> Determine whether the supplied filename looks like a possible name of python . : param str name : The name of the provided file . : return : Whether the provided name looks like python . : rtype : bool,looks like python
<e> NL: Returns the ASCII decoded version of the given HTML string . This does NOT remove normal HTML tags like < p > . It is the inverse of htmlEncode ( )  name: html decode </e> Returns the ASCII decoded version of the given HTML string . This does NOT remove normal HTML tags like < p > ,html decode
<e> NL: Return the name of a log level  name: get level name </e> Returns the proper log level core based on a given string,log level from string
"<e> NL: Parse the POS feature output by Mecab : param uni_feature unicode : : return ( ( pos1 , pos2 , pos3 ) , word_stem ): name: feature parser </e> compare Wyckoff positions Parameters ---------- pos1 , pos2 : tuple tuples with Wyckoff label and optional parameters",pos eq
"<e> NL: Same , but return True if this is a file  name: is file </e> same , but put back together",wrap text3
"<e> NL: Given a token denoting a string , return the contents of the token without the surrounding quotes . So for a token denoting the code ` "" I am a string "" ` , return the string containing ` I am a string `  name: read string body </e> Get an example signal of a STEM detector Example ------- > > > import atomap.api as am > > > s = am.example_data.get_detector_image_signal ( )",get detector image signal
<e> NL: Return the file extension  name: file extension </e> Return the file extension to use for format,format to ext
"<e> NL: Return the path from start to end  name: find path </e> Return the parameters of the simulator , excluding start , end , and delta_t ",parameter names
<e> NL: Determine an output filename based on the ` Content - Disposition ` header  name: get filename from content disposition </e> Determine an output filename based on the ` Content - Disposition ` header ,get filename from content disposition
<e> NL: headers : header | headers header name: p headers </e> Getter for the asconv headers ( asci header info stored in the dicom ),get asconv headers
<e> NL: Return Git project config  name: get git project config </e> Try to find user and project name from git remote output @param [ String ] output of git remote command @return [ Array ] user and project,user project from remote
<e> NL: get logger instance : return : Logger : logger instance name: get instance </e> Get a logger instance . : param identifier : identifier of logger as addressed in configuration . : return : the requested logger ,get instance
<e> NL: Check if a given string is a valid domain label : param label : The domain label name: validate domain label </e> Check if LIBSVM label is formatted like so : < label > if just label < label>:<instance_weight > if label and instance weight both exist : param libsvm_label :,is valid libsvm label
"<e> NL: Add the given value to the beginning of the environment var  name: prepend to env var </e> Traverse the tree to merge quotations , given a quotationList ( computed with findQuotation ) . Fill quoteIndexToNode ( map from the index of the beginning of the quote to the node ",quotation traversal
<e> NL: Iterate over frames generated on the fly name: frames iter gen </e> Iterate over frames from a dataset stored in disk,frames iter dataset
<e> NL: Checks if the configuration file exists . : return : Returns True if the configuration file exists and False otherwise . : rtype : bool name: config file exists </e> Returns True if the given configuration file uses EPD_username ,is using epd username
"<e> NL: Triangulate a set of vertices on the sphere . Parameters ---------- vertices : ( M , 3 ) ndarray XYZ coordinates of vertices on the sphere . Returns ------- faces : ( N , 3 ) ndarray Indices into vertices ; forms triangular faces  name: faces from sphere vertices </e> returns the order of vertices to triangulate the polygon",get vertex order
"<e> NL: Extract and format function / method parameters from frame . : param frame : Frame object : returns : string representing function args , like ' a=5 , b=0 ' name: format args </e> Build padding params with given constraints . Next formula can clarify what frame is : padding_length = data_length MOD frame",with constraints
<e> NL: Automatically creates dispatches for messages without them  name: prepare dispatches </e> Automatically creates dispatches for messages without them ,prepare dispatches
"<e> NL: Turn a list of words into a shell - safe string . Args : words : A list of words , e.g. for a command . Returns : A string of shell - quoted and space - separated words  name: shell escape list </e> Accepts string and searches for it in conlang words list and English words list . If word exists in database , returns True , otherwise returns False ",word exists
<e> NL: Return the order by syntax for a model . Checks whether use ascending or descending order and maps the fieldnames  name: get order by </e> Sorts a DataFrame according to its nullity in either ascending or descending order ,nullity sort
<e> NL: Returns a list of the CREATE INDEX SQL statements for all models in the given app  name: sql indexes </e> Returns a list of the DROP INDEX SQL statements for all models in the given app ,sql destroy indexes
<e> NL: Derive tf . Tensor name from an op / tensor name . We do not check if the tensor exist ( as no graph parameter is passed in ) . : param name : op name or tensor name name: as tensor name </e> Strips the tensor name to reflect the op name ,format tensor name
<e> NL: Calculate student marks  name: calc student marks </e> Add the student 's information to the rubric file This help for collecting the marks after marking done,add information to rubric
<e> NL: Strips comments and filter empty lines  name: ignore comments </e> Skip comments and empty lines : param f : the tsv file handler : return : the first not empty line with no comments,skip comments and empty
<e> NL: Check that obj is a string and then convert it to unicode . Parameters ---------- obj : Any Object that should be a string Returns ------- str ` obj ` as a string . Raises ------- ValueError If ` obj ` is not a string  name: validate str </e> Tests if obj is a class instance of any type . Parameters ---------- obj : any Input object Returns ------- out : bool Flag if obj is class instance or not,is instance
"<e> NL: Return a list consisting of : py : class:`cea.config . Parameter ` objects for each parameter of a script name: parameters for script </e> Try and parse the contents of cea/__init__.py for the version . return "" 0.1 "" if nothing is found",read version
<e> NL: Returns True when the CUDA backend is in the Bohrium backend name: is cuda in stack </e> Returns True when the Proxy component is in the Bohrium backend,is proxy in stack
"<e> NL: Load the config as a dict from a given config file : param config_file : Path to config file : return : Dict containing the config name: load config </e> Given a path to the config file , load its contents and assign it to the config file as appropriate ",resolve info
<e> NL: RE parser for classify.oclc service ( work branch )  name: parser work </e> RE parser for classify.oclc service ( publisher and year ) ,parser pub
<e> NL: Get the first accent from the right of a string  name: get accent string </e> Get the first accent from the right of a string ,get accent string
<e> NL: Formats the SqlWorkloadTypeUpdateSettings object removing arguments that are empty name: format sql workload type update settings </e> Formats the AutoPatchingSettings object removing arguments that are empty,format auto patching settings
<e> NL: Checks whether a given model is registered  name: is model registered </e> Checks whether a given model is registered . This is used to only register models if they are n't overridden by the application,is model registered
"<e> NL: The entropy of the user 's contacts . Parameters ---------- normalize : boolean , default is False Returns a normalized entropy between 0 and 1  name: entropy of contacts </e> The entropy of the user s contacts ",entropy of contacts
<e> NL: Extract all imports from a python script name: extract imports </e> Extract all imports from a python script,extract imports
<e> NL: Get the operands and operators into lists from a string expression name: read expression </e> Generator to extract operators and operands in pairs,operator operands
"<e> NL: Return a command that will run program . Args : program : The string name of the program to try to run . Returns : commandline list of strings to run the program ( eg . with subprocess.call ( ) ) or None name: find runner </e> Run a program the "" hard way "" so we do n't lose our UID ",run task
"<e> NL: Explicit integration of the covariance term , using scipy 's sparse matrix for C U - density function C - transition matrix name: advance cov </e> Explicit integration of the covariance term , using scipy 's sparse matrix for Csurf surf - density function along the surface Csurf - transition matrix x - grid",advance surf cov
<e> NL: Return a list of all of the user s roles  name: get user roles </e> Get the list of all available roles,get roles
<e> NL: Returns the GeoQuerySet spatial reference identifier  name: get srid </e> Returns the GeoQuerySet spatial reference identifier ,get srid
<e> NL: Returns forward DBH24 TST barrier in kcal / mol name: get dbh24 Vf </e> Returns DBH24 TST names,get dbh24 tst
<e> NL: Get the Django connection : return : the django connection name: get connection </e> Django doesn t particularly understand REST . In case we send data over PUT Django won t actually look at the data and load it . We need to twist its arm here ,coerce put post
<e> NL: r Avoid extraneous whitespace around keywords  name: whitespace around keywords </e> r Avoid extraneous whitespace around an operator ,whitespace around operator
<e> NL: Recover funds where possible name: recover funds </e> In the IOU fungible the supply is set by Issuer who issue funds ,.issue funds
"<e> NL: box - cox transform table name: box cox </e> [ 0 - 9]{1,3}:[0 - 9]{1,2}:[0 - 9]{1,2 }",t TIMESTAMP
<e> NL: Returns Extended Resource for service type management  name: get resources </e> Returns Extended Resource for service type management ,get resources
<e> NL: Returns an array resulting of selecting rows of the input blocks name: filter rows </e> Get an array of blocks at the specified height ,get block height
<e> NL: safe version of add name: safe add </e> safe version of add,safe add
<e> NL: Return connection object  name: .get connection </e> Return new RackSpace CloudFiles Connection,get conn
<e> NL: Obtain an element s symbol from its Z number name: element sym from Z </e> Obtain Cromer - Mann formula and coefficients for a specified element . * symbol * : string symbol of an element Return instance of CromerMannFormula ,get cmformula
<e> NL: apply properties to the molecule object Returns : None ( alter molecule object directly ) name: add properties </e> Shortcut function to prepare molecule to draw . Overwrite this function for customized appearance . It is recommended to clone the molecule before draw because all the methods above are destructive ,ready to draw
"<e> NL: Returns if obj1 aspects obj2 within its orb considering a list of possible aspect types  name: is aspecting </e> Returns if obj1 aspects obj2 within its orb , considering a list of possible aspect types ",is aspecting
<e> NL: finds out whether this is an ordered or unordered list name: google list style </e> Finds out whether this is an ordered or unordered list : type style : dict : rtype : str,google list style
<e> NL: Returns a class based on class name name: str to class </e> Returns a VLCPanel class,vlcpanel factory
<e> NL: Check if input is iterable : param iterable : : return : name: is iterable </e> Test if a element is iterable Parameters ---------- el : object Returns ------- iterable : boolean if True then then el is iterable if Fales then not,element iterable
<e> NL: Returns if the line is a comment header line  name: is comment header </e> Determine if a given comment token is an end - of - line comment or not ,is eol
<e> NL: Calculate labels and cost function given a matrix of points and a list of centroids for the k - modes algorithm  name: labels cost </e> Calculate labels and cost function given a matrix of points and a list of centroids for the k - modes algorithm ,labels cost
<e> NL: Return an iterator to a file - like object that yields fixed size chunks name: file chunk iter </e> Return an iterator to a file - like object that yields fixed size chunks : param file_object : a file - like object : param file_chunk_size : maximum size of chunk,file chunk iter
<e> NL: Get region i d from name . Return region i d  name: get region id </e> Get language code from region ,get lang
"<e> NL: Deserializes to primitive type . : param data : data to deserialize . : param klass : class literal . : return : int , long , float , str , bool . : rtype : int | long | float | str | bool name: deserialize primitive </e> @param d : { long | str}private exponent @param n : { long | str}modulus",private key
<e> NL: Get data from Response . : param response : Response object : return : json data name: get data </e> Get the reason code from the API response : param response : Response object in JSON : return : String - reason code,get reason code
"<e> NL: Create a structing element composed of the origin and another pixel x , y - x and y offsets of the other pixel returns a structuring element name: strel pair </e> Create a structing element composed of the origin and another pixel x y - x and y offsets of the other pixel returns a structuring element",strel pair
<e> NL: Encode special characters in a text so that it would be XML - compliant . : param text : text to encode : return : an encoded text name: encode for xml </e> UCS2 text encoding algorithm Encodes the specified text string into UCS2-encoded bytes . : param text : the text string to encode : return : A bytearray containing the string encoded in UCS2 encoding : rtype : bytearray,encode ucs2
"<e> NL: Get the IP that this machine uses to contact the internet  name: get public ip </e> Get the IP that this machine uses to contact the internet . If behind a NAT , this will still be this computer 's IP , and not the router 's ",get public ip
<e> NL: Parse a file path  name: parse file path </e> Parse * .cov file ,parse cov
<e> NL: Create the config file if does n't exist already  name: create if not exists </e> Return the path to the stats_name file . : raises : ResourceNotFoundError if the file does n't exist and create is false ,get stats file
<e> NL: Add shared arguments to the convert or mogrify parser  name: build parser </e> Add shared arguments to the convert or mogrify parser ,build parser
<e> NL: Group comments by the round to which they belong name: group comments by round </e> Group comments by the round to which they belong,group comments by round
"<e> NL: length ( + List , -Len ) name: builtin length </e> Allocate alignment score / edit matrix . m is len(genomic ) , n is len(flowdna ) . Return old_score_column , score_column , traceback_matrix ",allocate flow alignment matrices
"<e> NL: If parts is an array join them with os.path.sep else return untouched name: make path </e> Save content to the given file . If file_name is an array , join it with os.path.sep",save to output
<e> NL: Determine if the given string is a glob or not . : param glob : The potential glob pattern . : type glob : str | Any : return : Whether the given string is a glob or not . : rtype : bool name: is glob </e> Determines whether the string is a gitignore glob expression . : param line : Given string . : return : True if the string is a glob expression . False otherwise ,is glob exp
<e> NL: Load yaml config file and return dictionary  name: get yaml config </e> Load the config yaml file into a dictionary ,load config
<e> NL: Utility for simple deserialization function name: make dictionary from TLV format </e> Returns the HasProperties class to use for deserialization,. deserialize class
<e> NL: Retrieve the data of the recipe item of the given type for the given recipe name: get recipe item data </e> Retrieve the Android Version of the given recipe,get android version
<e> NL: Check if the given path is valid  name: validate path </e> Check if sdcard is a valid path ,is valid sdcard
<e> NL: Return given sequence as an active record  name: get sequence raw </e> Get preview file as active record ,get preview file raw
<e> NL: Calculates the control value for the given number . : type number : int : param number : The number to calculate the control value . : rtype : int : return : The control value for the given number  name: calculate control value </e> Return True if the given control name exists in the control dictionary and has a suitable value such as TRUE or ON ,boolean control
<e> NL: Make sure that the gene panels exist in the database Also check if the default panels are defined in gene panels name: check panels </e> Provide GC annotated intervals for error correction during panels and denoising ,annotate intervals
"<e> NL: Return the index in s of the start of the line containing s[i ]  name: find line start </e> Return the screen column width of one line of a text layout structure . This function ignores any existing shift applied to the line , represented by an ( amount , None ) tuple at the start of the line ",line width
<e> NL: Call main ( ) and log all exceptions as errors name: main log error </e> Call main ( ) and log all exceptions as errors,main log error
<e> NL: A faster SELECT DISTINCT unnest(director ) FROM meta_imdb using meta_imdb_directors name: get director </e> A faster SELECT DISTINCT unnest(actors ) FROM meta_imdb using meta_imdb_actors,get actors
<e> NL: Reads the dataset given by identifier from HDX and returns Dataset object name: .read from hdx </e> Reads the user given by identifier from HDX and returns User object,.read from hdx
"<e> NL: Return Python estimator estimatorParamMaps and evaluator from a Java ValidatorParams  name: . from java impl </e> Return Python estimator , estimatorParamMaps , and evaluator from a Java ValidatorParams ",from java impl
"<e> NL: Set the sentence boundaries based on the already separated sentences . : param doc : doc.user_data should have a list of Sentence . : return doc : name: set custom boundary </e> Set heads to doc in UD annotation style . If fail to set , return doc without doing anything ",set heads
<e> NL: Get the current date time and parse it to YYYY - MM - DD_hh - mm : return : ( string ) the current time parsed as YYYY - MM - DD_hh - mm name: get datetime </e> Provide current time as YYYY - MM - DD_HH - MM - SS Parameters -------- None Returns -------- time_str : str current time string,current time
<e> NL: Write a content dict ( * obj * ) into a \*.json file name: write json </e> Convert a obj file into a shape file,obj to shp
"<e> NL: Checks if the given type is a union type . : param type _ : The type to check : return : True if the type is a union type , otherwise False : rtype : bool name: is union type </e> Check if class is a generic type , for example ` Union ` or ` List[int ] ` : param type _ : type to check",is type hint
<e> NL: Pull out any profiles with the prefix ' auto - refresh- ' in the name . Parameters ---------- - profiles - the profiles read from the aws credentials file Returns ------- A dict of profiles that are prefixed by ' auto - refresh- ' in the name  name: extract auto refresh profiles </e> split profiles by days,split profiles by days
<e> NL: Show all available ' entry points ' available for searching . An entry point defines a uri that provides unfiltered access to all elements of the entry point type . : return : list of entry points by name : rtype : list(str ) name: object types </e> Show all available entry points available for searching . An entry point defines a uri that provides unfiltered access to all elements of the entry point type ,.object types
"<e> NL: Call dot command and provide helpful error message if we cannot find it  name: call graphviz dot </e> Call dot command , and provide helpful error message if we can not find it ",call graphviz dot
<e> NL: Convert this graph to a node - link JSON object . : param graph : BEL Graph name: to nodelink </e> Convert this graph to a Node - Link JSON object ,to json
<e> NL: Replace a string with a list of substrings  name: normalize str </e> Slice substrings from each string element in a column ,str slice
<e> NL: Performs Hilbert transform of f. Parameters ---------- f : array Values of function on a equidistant grid . ker : array Kernel used when performing Hilbert transform using FFT . Returns ------- array Hilbert transform of f name: hilbert fredriksen </e> Generates kernel for Hilbert transform using FFT . Parameters ---------- n : int Number of equidistant grid points . Returns ------- array Kernel used when performing Hilbert transform using FFT ,kernel fredriksen
<e> NL: Remove the specified app from the server  name: rm app </e> Remove the DNS server from the network interface,rm dns
"<e> NL: Get the time modified for the coverage data Args : cov_data ( CoverageData ) : coverage data object Returns : float : time stamp of the last modification of coverage file name: get coverage timestamp </e> Set time coverage global attributes Based on input content , define the time coverage attributes as recommended by CF ",set time attributes
"<e> NL: update constant classes so the keys of CONST_CLS can be reused name: update const classes </e> update constant classes , so the keys of CONST_CLS can be reused",update const classes
<e> NL: Generate random string  name: random str </e> Generate n random regions of size in the provided base spread ,random regions
"<e> NL: Returns the size of the batch dimension . Assumes a well - formed batch , returns 0 otherwise  name: get batch size </e> Returns the size of the batch dimension . Assumes a well - formed batch returns 0 otherwise ",get batch size
<e> NL: Loading a dictlet finder extension . Returns : ExtensionManager : the extension manager holding the extensions name: load plugins </e> Loading a dictlet finder extension . Returns : ExtensionManager : the extension manager holding the extensions,create adapter
"<e> NL: Makes sure refund_address is valid . Currently not implemented  name: refund address </e> Splitting info into variables and retrievals . Currently not used , but could be implemented for production rules ",splitting submodules
<e> NL: Creates a list of product tokens from a * source * string . Individual tokens are separated by white space  name: list from str </e> Get the number of tokens in a string sperated by space ,get string size
<e> NL: test if object is a list or tuple name: is iter non string </e> test if object is a list only containing dict like items,is list of dict like
<e> NL: Return a normalized arXiv identifier from obj  name: normalize arxiv </e> Return a normalized arXiv identifier from ` ` obj ` ` ,normalize arxiv
<e> NL: Calculate absolute azimuth of given point based on relative azimuth : param absolute_angle_to_point : Relative angle to point : type absolute_angle_to_point : float : param azimuth : global azimuth : type azimuth : float name: calculate side point azimuth </e> Parses an azimuth measurement in azimuth or quadrant format ,parse azimuth
<e> NL: Bundle a file ( or directory ) and return the name of the installed file ( or directory )  name: bundle file </e> Handles replacement strings in the file or directory name,replace name
"<e> NL: Constructs a ResNet-18 model . Args : pretrained ( bool ) : If True , returns a model pre - trained on ImageNet name: se resnet18 </e> Constructs a ResNet-101 model . Args : pretrained ( bool ) : If True , returns a model pre - trained on ImageNet",se resnet101
"<e> NL: Get the page class for the template defined in the database . : param str template : The template name . : returns : The class for the ` template ` , or None if it does n't exist  name: get page class </e> Get the feature template for this media",feature template
<e> NL: Returns if the files are valid for this filetype name: is supported content </e> get extname according filetype : param filetype : filetype ( in config.get_key('valid_filetype ' ) ) : return : file 's extend name,get file ext
"<e> NL: Converts a config parser object into a dictionary . : param configs : The config parser instance to convert into a dictionary . : return : A dictionary representation of the config parser  name: configs to dict </e> Given a path , gets a config parser",get config parser
<e> NL: Returns list of all valid words in page  name: make words </e> UK standard page is 1000 words per page ,uk 1000 words standard page
<e> NL: Return the merge flattened type of the source type name: merge flatten type </e> Return the merge flattened type of the source type ,merge flatten type
"<e> NL: Get list of zero - valued numpy arrays for specified list of numpy arrays : param array_list : list of numpy arrays : return : list of zeros of same shape as input name: get neutral </e> Return True if object is a sequence of numpy arrays , e.g. a list of images as 2D arrays . : param obj : list of arrays : return : boolean",is list of arrays
<e> NL: Get the path for a bad root url  name: get bad url redirect path </e> Get the root URL for the IBM Streams REST API ,get rest api
"<e> NL: Return ` ` True ` ` if ` ` x ` ` is a positive number ; otherwise return ` ` False ` `  name: valid speed </e> Return True if value is a floating point number , False otherwise ",is float
"<e> NL: Returns True if Git is installed , else False name: git exists </e> Returns True if SVN is installed , else False",svn exists
<e> NL: Return the path to the configuration file  name: glymurrc fname </e> Read a configuration file Parameters ---------- config_file_path : str the path to the configuration file we want to load Returns ------- config_parser : SafeConfigParser the configuration object .. note : : Raises IOError if the procedure fails ,read configuration file
<e> NL: Get the collection  name: .get by signature </e> Take the first ` n ` items of a collection ,take n
<e> NL: Returns True if the inference from this timestep is predicted the input for the NEXT timestep  name: .is temporal </e> Set the model timestep ,set time step
<e> NL: Set the timezone of the Palo Alto proxy minion . A commit will be required before this is processed  name: set timezone </e> Set the hostname of the Palo Alto proxy minion . A commit will be required before this is processed ,set hostname
"<e> NL: Do check whether we need a pull , we get the hash of the HEAD of the remote 's master branch . Then , we see if we have this object locally  name: is pull needed from remote </e> Set is we are a fork master or not : param b : True if we are master process , False if we are a child process . : type b : bool : return Nothing",set master process
<e> NL: Convert a HTTP request  name: convert http request </e> Set an HTTP Cache Control header on a request ,set http caching
<e> NL: Get cache key of instance name: get cache key </e> Get all possibles cache keys for given instance,get all cache keys
"<e> NL: Raises an error if the value string contains invalid characters  name: cookie value string </e> Returns ` ` input_vars ` ` as a flat dictionary where keys are tuples in the form ` ` ( process_name , var_name ) ` ` . Raises an error if the given format appears to be invalid ",flatten inputs
<e> NL: Remove rows from input DataFrame . Parameters ---------- data : pd . DataFrame Input dataframe columns : List[str ] Column list to filter Returns ------- pd . DataFrame Filtered DataFrame name: remove common items </e> Load background DataFrame Args : df_path : Path to DataFrame Returns : Background DataFrame,load df
"<e> NL: Expand the unit name to the base units . Parameters ---------- name : float or str The unit name to be expanded , or possibly a numerical factor . Returns ------- list[float or str ] Expansion result as a list of factors and base unit names  name: get base units </e> Look up the "" base "" unit for this unit and the factor for converting to it . Returns a 2-tuple of ` factor , base_unit ` ",get conversion factor
"<e> NL: Convert from a name , like ' ethfinex.eth ' , to a label , like ' ethfinex ' If name is already a label , this should be a noop , except for converting to a string and validating the name syntax  name: dot eth label </e> Convert from a name like ethfinex . eth to a label like ethfinex If name is already a label this should be a noop except for converting to a string and validating the name syntax ",dot eth label
<e> NL: Read SVM model in PICKLE format : param svm_file_name : name of the file to read from name: read svm </e> Read SVM model in PICKLE format : param svm_file_name : name of the file to read from : return : a tupple of weight and biais,read svm
<e> NL: Returns parent node of the given node : param node : str : param full_path : bool : return : str name: node parent </e> Returns default value of the attribute in the given node : param node : str : param attribute_name : str : return : object,attribute default value
<e> NL: Create categories from a breadcrumb string name: create from breadcrumbs </e> Create categories from a breadcrumb string,create from full slug
<e> NL: Get a member from an object by ( string ) name name: get member </e> Returns member by name from parent class if it exists ,.find parent member
<e> NL: Return the application cache directory . If the directory path does not yet exists then create it  name: cache dir </e> Return the application data directory . If the directory path does not yet exists then create it ,data dir
"<e> NL: Bisect ` func(i ) ` , returning an index such that consecutive values are greater than ` x ` . If ` x ` is present , the returned index is past its last occurrence . EOF is assumed if ` func ` returns None  name: bisect func right </e> Bisect ` func(i ) ` , returning an index such that preceding values are less than ` x ` . If ` x ` is present , the returned index is its first occurrence . EOF is assumed if ` func ` returns None ",bisect func left
<e> NL: The method formats a string and removes all bad query chars : param term : : return : name: remove bad chars </e> removes all chars in char_list from str_,remove chars
<e> NL: Extracts put option table for input ticker and expiration date @param : ticker @param : date name: get puts </e> Extracts call option table for input ticker and expiration date @param : ticker @param : date,get calls
<e> NL: Disassemble all instructions in bytecode name: disassemble all </e> Compute the line numbers for all bytecode instructions ,compute lineno
<e> NL: Given a point and a line segment return the vector from the point to the closest point on the segment  name: point to line </e> Return position of point regarding a segment : param : : point : point that we position : segment : segment that : return : - ' LEFT ' - ' RIGHT ' - ' ON ' - ' NEITHER ',point position segment
<e> NL: Tokenizes a string suppressing significant whitespace  name: tokenize wrapper </e> Tokenizes a string suppressing significant whitespace ,tokenize wrapper
<e> NL: Strip the Ethernet frame from a packet  name: strip ethernet </e> Strip the Ethernet frame from a packet ,strip ethernet
<e> NL: Return build statistics for this build name: get build stats </e> Check if build on pull request build ,is pull request
<e> NL: Retrieves the output class for a specific name  name: .get output class </e> Get the oldest object for a specific class name,get oldest
<e> NL: Attempt to convert pandas . NaT name: encode as pandas </e> Attempt to convert pandas . NaT,encode as pandas
<e> NL: Convert a series to numeric values  name: to numeric </e> Convert a series to categorical values ,to categorical
<e> NL: Returns a list with all the file paths in the specified directory and subdirectories  name: get all files in directory </e> Set up relative paths for subdirectories ,set paths
"<e> NL: Tries to convert to float , returns x if it ca n't name: float or x </e> Try to send args to an existing application . @return false if it ca n't cannect to one ",send server
<e> NL: Return the integer value or die with the error message provided  name: get int or die </e> Convert n digit binary result from the QVM to a value on a die ,process results
<e> NL: Reconcile a unit based on its dimensionality  name: get unit from dimensions </e> Reconcile a unit based on its dimensionality ,get unit from dimensions
<e> NL: Returns aliased backend names  name: aliased backend names </e> draw anti - aliased line between two endpoints ,clip and draw aaline
"<e> NL: Function to get the two points with the highest distance from a list of points : param points : The points to check : return : The two points with the highest distance name: get major axis </e> Given a number of points to use and the bounds , return a triplet of integers for a uniform mesh with approximately that many points ",get nx ny nz
"<e> NL: Generate a symmetric random matrix with zeros along the diagonal  name: fully random weights </e> Solves X*a = b for a where X is a banded matrix with 1 or zero , and args along the diagonal band",set garch arch c
<e> NL: Returns the magnitude bins corresponing to the catalogue name: get catalogue bin limits </e> Gets the Weichert adjustment factor for each the magnitude bins,get weichert factor
<e> NL: Return the active form template for our record name: get modal template </e> Check whether the active OpenGL context suffices our requirements ,check opengl context
"<e> NL: Given a string or bytes input , return a string . Args : bytes - bytes or string enc - encoding to use for decoding the byte string  name: decode bytes </e> Given a string or bytes input return a string ",decode bytes
<e> NL: Get configuration from configuration file  name: get configuration from file </e> Get list of CAs from configuration : rtype : list : Returns list of CAs loaded from configuration file,get ca configuration
<e> NL: Format hostname for display  name: format hostname </e> Format the URL pattern for display in warning messages ,describe pattern
"<e> NL: Get all the representations for the events of a trace associated to a string event attribute values Parameters ------------- trace Trace of the log event_attribute Event attribute to consider Returns ------------- values All feature names present for the given attribute in the given trace name: get values event attribute for trace </e> Clean the trace . For now , this just means replacing values of -999.0 with 0.0",clean trace
"<e> NL: Converts a column index to a column name  name: col name </e> Internal function to be used with apply to multiply each column in a dataframe by every other column a b c - > a*a , a*b , b*b , b*c , c*c",mul cols
<e> NL: Test if an array is a square matrix  name: is square matrix </e> Square function . Returns : np.ndarray : array with square values on source positions ,square source
"<e> NL: Return request 's ' Authorization : ' header , as a bytestring . Hide some test client ickyness where the header can be unicode  name: get authorization header </e> Return request 's ' Authorization : ' header , as a bytestring . Hide some test client ickyness where the header can be unicode ",get authorization header
<e> NL: Merge ' dict1 ' and ' dict2 ' dicts into a new Dict . ' dict2 ' has precedence over ' dict1 '  name: merge dicts with copy </e> Input : dict1 - first check in this dict ( and remove if there ) key - key in dict1 default_value - default value if not found dict2 - then check from here Output : value,get from dicts
<e> NL: Return the directory to store data in  name: infer config base dir </e> Replace any object value by ' internal data ' string to store in Mongo ,sanitize workflow exec
"<e> NL: Remove expressions corresponding to the given regex in a text name: clean on regex </e> Split note 's text according to regex , and return fields",dict from text
"<e> NL: must be an integer name: is int </e> Each value in the sequence must be an allowed values . Otherwise , False ",values in acceptable entries
<e> NL: Map a function f:{primitive } - > B to a dictionary  name: dict map </e> build a dictionary with the data necessary to construct the given primitive,serialize primitive
<e> NL: Return the appropriate detector class based on the name . : param detector_name : Name of the detector : return : Detector class : rtype : auto_tag.detectors . BaseDetector name: detector factory </e> Get the time delays between the detectors in the network compared to a reference detector,get network time delays
"<e> NL: Compute Julian day from Gregorian day , month and year . Algorithm from wikipedia 's julian_day article . Return : The julian day number name: gdate to jdn </e> Compute Julian day from Gregorian day month and year ",gdate to jdn
<e> NL: Decode a Base58 encoded string as an integer name: b58decode int </e> Decode Base58 encoded bytes or string as integer ,decode to int
<e> NL: Reads a tab separated value file  name: read csv </e> Reads a tab separated value file ,read tsv
<e> NL: Get substring matching regex rule . : param string : string to search for substring : type string : str : param pattern : regex pattern : type pattern : regex : return : str matching pattern search or None : rtype : list name: get substrings with regex </e> Wrap regex compilation in a TagError if it fails : param pattern : The string pattern to compile : return : The regex Pattern,compile regex
<e> NL: Gets distributed rank or returns zero if distributed is not initialized  name: get rank </e> Gets total number of distributed workers or returns one if distributed is not initialized ,get world size
<e> NL: Pad a string of bits with zeros to make its length a multiple of 8  name: pad byte </e> Pad the left side of a bitarray with 0s to align its length with byte boundaries ,build byte align buff
<e> NL: Return None if not found  name: get chain by sid </e> Called if Url not found ,not found
<e> NL: Returns the list of distributions which are available  name: get available dists </e> Return which platforms are available,avail platforms
<e> NL: Get data from ` filename ` ( hdf5 file )  name: get data </e> is ` filename ` is a NeXus HDF5 file ?,is ne xus file
<e> NL: Find duplicate keys in a layer of ordered pairs . Intended as the object_pairs_hook callable for json . load or loads  name: find duplicate keys </e> Find duplicate keys in a layer of ordered pairs . Intended as the object_pairs_hook callable for json.load or loads . : param data : ordered pairs : return : Dictionary with no duplicate keys : raises ValueError if duplicate keys are found,find duplicate keys
<e> NL: Reduce the array along a given axis by mean value name: reduce mean </e> Remove mean from numpy array along axis,remove mean
"<e> NL: Convert a COCO detection label to the image name . Args : label ( list of dict ) : an image label in the COCO detection format . Returns : str : image name  name: coco as image name </e> Computes the precision score of one image . Parameters ---------- label : string The true label of the image predictions : list A list of predicted elements ( order does matter , k predictions allowed per image ) k : int MAP@k Returns ------- score : double",map per image
"<e> NL: "" c - a : lead(II ) nitrate [ PM73 ]  name: bC Pbjj NO3 PM73 </e> "" c - a : lead(II ) perchlorate [ PM73 ] ",bC Pbjj ClO4 PM73
"<e> NL: Returns ` ` datetime.datetime ` ` from natural language time deltas > > > parse_human_datetime('now ' ) < = datetime.now ( ) True name: parse human timedelta </e> Returns ` ` datetime.datetime ` ` from natural language time deltas > > > parse_human_datetime(""now "" ) < = datetime.now ( ) True",parse human timedelta
<e> NL: Function to turn a tag into a string . Args : tag : the tag value Returns : the tag as a string name: tag to str </e> Transforms tag attributes . kwargs - name : String - value : String,transform attribute
"<e> NL: Determines if an expression is a valid function call name: is parans exp </e> Determines if an expression is a valid function "" call """,is parans exp
<e> NL: Retrieve a simple OAuth Token for use with the local http client  name: get oauth token </e> Makes a HTTP call authenticated with the OAuth token ,make authenticated call
<e> NL: implement full DCM system name: DCM update </e> implement full DCM using PX4 native SD log data,PX4 update
<e> NL: Return a random leaf count for building binary trees  name: generate random leaf count </e> Return random node values for building binary trees ,generate random node values
<e> NL: Returns the key of a midi file if it is a postfix of the filename name: get key from filename </e> Parse a postfix map file and return values ,parse map file
<e> NL: Find the setup.py script and returns the path to the setup.py file  name: find setup </e> Evals the env.py script ,eval env
"<e> NL: Returns list of log entries from Elasticsearch name: fetch events </e> Split the output of git log into separate entries per commit . Parameters ---------- whole_log : str A string containing the entire git log . Returns ------- list(str ) A list of log entries , with each commit as its own string ",split commits
<e> NL: Sets the color of the specified color control  name: set color </e> helper function for cycling over color list if the number of items is higher than the legnth of the color list,get color
<e> NL: Return the choices we should use for a question . : param Question question : The question : rtype : List of String or None name: get question choices </e> Turns the field generating functions on QuestionField into a series of options Formatted to be consumed by Question.type.choices,get field options
"<e> NL: Returns the Z - scores of the input returns . Parameters ---------- returns : Series or DataFrame , required Series or DataFrame of returns Returns ------- Series or DataFrame name: get zscores </e> Gets the unique count of categorical features in a data set . Parameters ----------- data : DataFrame or named Series Returns ------- DataFrame or Series Unique value counts of the features in a dataset ",get unique counts
<e> NL: Load the configuration from a YAML file name: load config </e> Load a YAML configuration file ,load yaml config
<e> NL: Partition a list of integers into a list of partitions name: integer partition </e> cpc subset partition list Return the list of partitions which is managed by one compute service ( cpc subset ) : param cpc : cpc : return : list of partitions managed by compute service,cpcsubset partition list
<e> NL: transform camelCase dict key to snake_case Args : dict ( dict ) : dict to transform key of Returns : dict : transformed dict name: prettify key </e> Transform metadata model mappings Parameters ---------- queryables : dict typename : dict,transform mappings
<e> NL: Add the local timezone to ` value ` to make it aware  name: local timezone </e> Add the local timezone to value to make it aware ,local timezone
<e> NL: Determine if a directory is acceptable for building . A directory is suitable if any of the following are true : - it does n't exist - it is empty - it contains an existing build cache name: is cache dir appropriate </e> True if d is a string and it s an existing directory ,dir param valid
<e> NL: Compute the string - value of a node  name: string value </e> Compute the initial path label of a node recursively ,get initial path helper
<e> NL: Split a string into items and trim any excess spaces from the items name: split and strip </e> Split a string into items and trim any excess spaces,split and strip without
<e> NL: The smaller the better name: get auc </e> The ratio is smaller the better,ratio scores
<e> NL: Rotate the given point by angle name: rotate point </e> Average rotate a given grid,rotate grid
<e> NL: Get a NumPy array view of a VNL vector  name: get array view from vnl vector </e> Get a NumPy array view of a VNL vector ,get array view from vnl vector
"<e> NL: Return a python unicode value from a UCN . Converts a Unicode Universal Character Number ( e.g. "" U+4E00 "" or "" 4E00 "" ) to Python unicode ( u'\u4e00 ' ) name: ucn to unicode </e> Convert a Unicode Universal Character Number ( e.g. "" U+4E00 "" or "" 4E00 "" ) to Python unicode ( u'\u4e00 ' )",ucn to unicode
<e> NL: Renders a templated yaml document from a string  name: render from string </e> Renders a templated yaml document from file path ,render from path
"<e> NL: must be an iterable ( list , array , tuple ) name: is iterable </e> must be an iterable ( list , array , tuple )",is iterable
"<e> NL: Read all remaining strings from standard input , convert each to a float , and return those floats in an array . Raise a ValueError if any of the strings can not be converted to a float  name: read all floats </e> Read all remaining strings from standard input , convert each to a bool , and return those bools in an array . Raise a ValueError if any of the strings can not be converted to a bool ",read all bools
<e> NL: Infer preferred max figure width from output format  name: get maxwidth </e> Infer preferred figure format from output format ,get figformat
<e> NL: Create a ZIP archive  name: create zip </e> Create a SHAR archive ,create shar
"<e> NL: If x contains a single element , return it ; otherwise return x name: single element </e> As an element is valid and contains text , extract it and return",extract text from element
<e> NL: Convert an ISO formated date and time string to a datetime object . : param str timestring : String with date and time in ISO format . : rtype : datetime : return : datetime object name: timestring to datetime </e> Converts an ISO week date tuple into a datetime object ,iso to gregorian
<e> NL: Replace all calls to ` orig ` to ` repl ` in module ` mod ` . Returns the references to the returned calls name: replace all calls </e> Calls the analytics_data_excel module to create the Workbook,create excel workbook
<e> NL: Get the current scribe log scheme  name: scribe log scheme </e> Get the current stderr log scheme ,stderr log scheme
"<e> NL: Check if image is greyscale , convert if it is n't . Convert to float and invert intensities  name: check and negate </e> Check if flatboxed RGB pixels could be converted to greyscale",try greyscale
"<e> NL: Return the result of a Future object  name: await result </e> Wait for the result of a future in a way that can be interrupted by a KeyboardInterrupt . This is not necessary in Python 3 , but is needed for Python 2 . : param future : a future to get result of : type future : Future",interruptible get result
"<e> NL: Loads a json value from a file and converts it to the corresponding python object  name: load json value from file </e> Given jd as a reconstituted json.loads ( ) of the result from .to_json ( ) , return the corresponding object ",from json dict
<e> NL: Configure a logger object name: configure logger </e> Configure the default logger for Flowy ,setup default logger
<e> NL: Ensure that b is text in the specified encoding  name: to str </e> Convert text to bytes of the specified encoding ,safe bytes
<e> NL: Generate a status string for the status code : param int status : the status code to look - up : returns : string for the value or an appropriate Unknown value name: response for status </e> Given a status we give the coloration for the simple mode . : param str status : An official status output ,get simple coloration
<e> NL: Get the select options for the model selector : return : name: get model choices </e> Get the select options for the application selector : return :,get application choices
"<e> NL: Try to get value name ( call get_name method ) : param ref : Not used : type ref : : param value : value to name : type value : str : return : name or '' : rtype : str name: to name if possible </e> Get the definition name of the given $ ref value(Swagger value ) . Args : ref : ref value ( ex : "" # /definitions / CustomDefinition "" ) Returns : The definition name corresponding to the ref ",get definition name from ref
<e> NL: Returns the bounding box coordinates of a country : return : name: get country bbox </e> Gets the bounding box for an image in display ( pixel ) coordinates,get im window extent
<e> NL: Returns the list of installed Python dependencies name: get bundle </e> Returns the signature of installed Python dependencies,bundle signature
<e> NL: Encode a positive integer as a big - endian list of digits in the given base  name: to base </e> Helper function : generate a random number as a lower - endian digits list ,random number lower endian
<e> NL: Return a list with all variables in the given formula that appear free  name: free variables </e> Return the set of all variables that appear free in the given effect ,collect effect free variables
"<e> NL: Progressively creates a sha256 of a file . It works for large files it is done in chunks : param file_path : : param chunk_size : : return : sha256 or NOne name: create sha256 from file </e> sha256 may be None , in which case it is assumed no special handling through black list is needed ",convert if needed
<e> NL: Decode base64 data of unknown format  name: decode unknown from base64 </e> Decode raw_data from base64 / ungzip,decode data
<e> NL: Convert enbedded bytes to strings if possible . List helper  name: decode embedded list </e> Convert enbedded bytes to strings if possible . This is necessary because Python 3 makes a distinction between these types ,decode embedded strs
"<e> NL: Given a list of paths , return a list of paths name: get files </e> Create patch include paths , i.e. a "" negation "" of the exclude paths ",patch path filter
<e> NL: Process a date string return a datetime object name: . http date </e> Given a string representing a date return a datetime object,datestring to date
"<e> NL: Get the exact words in lowercase in the tree object . Args : tree ( Tree ) : Parsed tree structure Returns : Resulting string of tree ` ` ( Ex : "" The red car "" ) ` ` name: get raw </e> Take the given tree , generate a conversion table and apply the transformation in - place in the tree . Also return the tree ",convert dynamic require
"<e> NL: get request . POST , if POST is empty return None name: get post data </e> If current method is PUT or POST , return concatenated ` request.form ` with ` request.files ` or ` None ` otherwise ",get form data
<e> NL: Tell the web service that the web connector is finished with the updated session . @param ticket the ticket from web connector supplied by web service during call to authenticate method @return string telling the web connector what to do next  name: close connection </e> Sets up and starts / restarts the web service ,setup server
<e> NL: Checks if the given value is a list comprised only of strings  name: check string list </e> Checks if the given value is a list comprised only of numbers ,check number list
<e> NL: Return the current local UTC offset in hours and minutes  name: get local time zone </e> Return the offset in seconds between UTC and the given interferometer,get timezone offset
<e> NL: Safely decodes a string to unicode if it is n't already . Ensures that the output is a unicode object  name: to unicode </e> Safely encodes a string from unicode if it is n't already ,from unicode
<e> NL: Check whether an array is a numpy array name: is numpy array </e> Check whether array is valid De : code cube ,assert isdcube
<e> NL: Evaluate endpoint errors and returns detailed description . : param endpoint : endpoint : type endpoint : proton . Endpoint : param endpoint_type : type of the endpoint : type endpoint_type : str : return : error message : rtype : str name: evaluate endpoint error </e> Delete specific log level by endpoint Returns a endpoint : param endpoint : endpoint that needs to be fetched : type endpoint : str : rtype : dict,rm log
<e> NL: convert the 3 rows to a list of string name: matrix to string </e> Convert list of parameters to string,make params string
<e> NL: Get a logger with sensible defaults This method returns a logger from logging by name that has been set with sensible defaults if the logger has n't already been setup with any handlers . The default handler is a stream handler to stdout  name: get logger </e> Builds a logger for you with a SlackHandler and sensible defaults ,build logger
"<e> NL: Returns the trailing number from a string . Returns : int , None : Returns int if found , ` ` None ` ` otherwise  name: get trailing number </e> Returns ` int(x ) ` if ` x ` is a valid ` int ` or ` None ` otherwise . ` x ` is valid if ` 1 < = x < = limit ` ",int or none
<e> NL: This method return the path of one folder attachment for app forum . Args : topic ( obj ) : Topic object . Returns : str : Path attachment  name: get folder attachment </e> This will create the ` welcome forum ` with a welcome topic . Returns True if it 's created successfully ,create welcome forum
<e> NL: Adds missing tokens needed to activate a transition Parameters ---------- t Transition that should be enabled marking Current marking name: add missing tokens </e> Get places with missing tokens Parameters ---------- t Transition to enable marking Current marking,get places with missing tokens
<e> NL: Get the type for a parameter : param name : the name of the parameter : type name : str : return : the type registered name: parameter type </e> Unpack the type parameter from ContainerType[T ] ,match type container
<e> NL: Raise an exception if the specified email address is not compliant with RFC 2822 . : param address : an email address . @raise AssertError : if the specified email address is not compliant with RFC 2822  name: assert valid address </e> Indicate whether the specified email address is compliant with RFC 2822 . : param address : an email address . : return : ` True ` if the specified email address is compliant with RFC 2822 ; ` False ` otherwise ,is address valid
"<e> NL: Check required fields are present : param design_dict : : param throw_exceptions : Throw json schema exceptions . If false , returns bool on any exception : return : name: validate dict </e> Check required fields are present : param design_dict : : param throw_exceptions : : return :",validate dict
<e> NL: Helper function for calculating coverage and density name: calculate covden for treshold </e> Used for calculating mean density with a slide window,slide window average
<e> NL: Returns a default options dictionary name: get options </e> Build a default config from an iterable of options ,build default config
"<e> NL: Converts a list of triples [ ( 0 , 255,0 ) , ... ] into flat list [ 0 , 255 , 0 , ... ] name: flatten RGB </e> Converts a packed float RGB format to an RGB list Args : float_rgb : RGB value packed as a float Returns : color ( list ) : 3-element list of integers [ 0 - 255,0 - 255,0 - 255 ]",float to rgb
<e> NL: Shorten print of query if it starts with WITH and is long  name: shorten queryprt </e> If a path is longer than max_width it substitute it with the first and last element joined by ... . For example this . is . a . long . path . which . we . want . to . shorten becomes this ... shorten,long path formatter
<e> NL: Convert a pandas dataset to a NumPy dataset name: as numpy dataset </e> Convert a dataset with float multiclass probabilities to a dataset with indicator probabilities by duplicating X rows and sampling true labels ,expand dataset
<e> NL: Fetches the public key from an OIDC Identity provider to verify the JWT . : param openid_provider : the openid provider 's domain . : return : Public Keys name: get public keys </e> Upload public key to cloud provider . Similar to EC2 import_keypair ,import keypair
"<e> NL: Take a row and use the column names from cursor to turn the row into a dictionary  name: to dict formatter </e> Reindex a pandas DataFrame so that it becomes square , meaning that the row and column indices contain the same values , in the same order . The row and column index are extended to achieve this ",make df square
<e> NL: Return Lm(k ) as the length of the curve  name: calc L </e> Computes the approximate length of the parametric curve ,length curve
<e> NL: Get the traceback object from the context  name: get traceback from context </e> SNAGGED FROM traceback . py Altered to return Data,extract stack
<e> NL: Open a connection to our database name: namedb open </e> Do our best to extract host and database specification from DSN ,split dsn
<e> NL: Lists all the supported languages name: get all languages </e> Look at all supported languages . Assume each language is a subdirectory of the parser . Special omission of python cache and test directories,get available languages
<e> NL: Read the configuration file  name: find config </e> Read the .last_check file ,read last check
<e> NL: Value or default ( for attributes ) name: val default </e> Create default CDN attributes ,azion cdn
<e> NL: Phase genotypes in a trio or cross where possible using Mendelian transmission  name: phase by transmission </e> Phase progeny genotypes from a trio or cross using Mendelian transmission ,phase progeny by transmission
<e> NL: Function to determine the type of a member . Args : member ( class|function ) : The member to check for . Returns : int : Value for class or function  name: determine member type </e> Call functions to free each member,free pyc
<e> NL: Does the object have length 2? name: validate pair </e> Does t have wider arguments than s ?,is more general arg prefix
<e> NL: Encode credential(s ) from a json string . ` Args : ` credential : str The credential json string to be encoded . ` Returns : ` str The encoded credential  name: encode from json str </e> Encode credential(s ) from a json file . ` Args : ` credential_file : str The path to the json file with the credential to be encoded . ` Returns : ` str The encoded credential ,encode from json file
<e> NL: Parses a URL to determine a file name  name: filename from url </e> Parses a URL to determine a file name . Parameters ---------- url : str URL to parse ,filename from url
<e> NL: Check if key is valid for track . : param key : key to be checked : type key : str : return : key : rtype : str|None name: validate track key </e> Cancels and closes a previously created One Line Progress Meter window : param key : Key used when meter was created : type key : ( Any ),one line progress meter cancel
<e> NL: Process the subscription data according to out model name: process subscription data </e> Process the subscription data according to out model,process subscription data
"<e> NL: Create an identity for a given user instance . Primarily useful for testing  name: get identity </e> Toggles ` ` DEBUG ` ` value , useful for testing",debug stahp
"<e> NL: Calculate the center of a polygon : return : The center ( x , y ) name: calc center </e> Generate a blank HTML map file : param lon_avg : center longitude : param lat_avg : center latitude : return : file name",generate blank map html
<e> NL: * Helper function * name: make cronjob list </e> Helper function to escape uncomfortable characters ,escape chars
<e> NL: Write text to a file  name: write file </e> Write each decision tree in an ensemble to a file ,output tree ensemble
<e> NL: Calculate inclination predicted from latitude using the dipole equation name: inc from lat </e> Calculate inclination predicted from latitude using the dipole equation Parameter ---------- lat : latitude in degrees Returns ------- inc : inclination calculated using the dipole equation,inc from lat
<e> NL: return list of reactants of a reaction name: get listOfReactants </e> return list of products of a reaction,get listOfProducts
<e> NL: Get user input value from stdin name: console input </e> Convenience utility for managing passphrase input from stdin,parse passphrase cmdline arg
<e> NL: Coerce to a list  name: to list </e> Coerce a retention period to a Python value ,coerce retention period
"<e> NL: Set some nicer defaults for matplotlib plots for ipython notebooks name: matplotlib defaults </e> Check whether matplotlib is using an inline backend , e.g. for notebooks",use inline backend
<e> NL: Return the data for the status name: reftrack status data </e> Return the data for the alien status,reftrack alien data
<e> NL: Validate extra context  name: validate extra context </e> Validate extra context ,validate extra context
<e> NL: Assert that the class is correctly configured name: class check </e> Assert that the class is correctly configured,class check
<e> NL: Load the tool implementation for the given tool name  name: load tool </e> Returns the command used to execute the ( GNU ) ` ` time ` ` tool ( not the built in shell tool ) ,time file
"<e> NL: might have to run with denseQ multiple times ! name: make dense </e> This behaviour allows a composite with oneshot ancestors to run multiple times , resetting the oneshot variables after each execution",repeatable behavior
<e> NL: Convert to lowercase < dotted>|lowercase string to lowercase < dotted>|lowercase : force string to lowercase or raises name: transform lowercase </e> Convert the names of the supported built - in operations to lowercase for comparison and invoke generation purpose ,get lowercase builtin map
<e> NL: Apply a parsed XPath Query to a list ( sequence ) of ` trees `  name: apply parsed xpath query </e> Returns a sequence of trees.nodeid and trees.slug to be used to update the trees slug table value ,generate update values
"<e> NL: Returns the window rectangle excluding toolbars . : param ` window ` : a : class:`wx . Window ` derived window ; : param ` docks ` : a list of : class:`AuiDockInfo ` structures  name: get internal frame rect </e> Get the ID and class of a window Returns ------- Tuple[str , str ] ( window i d , window class )",get wm class
"<e> NL: Returns the position just after a double newline in the given string  name: find double newline </e> Removes all names after a certain position . If position is None , just returns the names list ",filter after position
<e> NL: Read CSV file as list or dict name: read csv </e> Create a register object from a CSV file : param csvfile : CSV file path or stream : type csvfile : os . PathLike or file object,from csv
"<e> NL: Fix typo in proccess_manager parameter name: v111 defaults process manager </e> Fix the discrepancy coming from old Raspa calculations , having a typo in the conversion label ",get molec uc to mg g
<e> NL: Compare DFPT SCF cycles  name: abicomp dfpt2 scf </e> Compare ground - state SCF cycles ,abicomp gs scf
"<e> NL: Returns true if the addition of the ' test ' connection would create a cycle , assuming that no cycle already exists in the graph represented by ' connections '  name: creates cycle </e> return True if the Graph as cycle",has cycle
"<e> NL: Get current event loop . If the loop is closed , a new loop is created and set as the current event loop . Returns ------- loop : : obj:`asyncio . EventLoop ` The current event loop name: get open loop </e> Remove a handler from a loop , ignoring EBADF or KeyError ",try remove handler
<e> NL: Get julian day value from modified julian day value . Param : mjd - modified julian day ( should be > = 0.0 ) Returns : Julian day  name: mjd to jd </e> returns julian day = day since Jan 1 of year,julian day
"<e> NL: Find packages to pack  name: find packages </e> Get / cache a language pack Returns the langugage pack from cache if it exists , caches otherwise > > > get_language_pack('fr')['Dashboards ' ] "" Tableaux de bords """,get language pack
<e> NL: Get the default global configuration option Parameters ---------- param : str The config parameter name: get default parameter </e> Get the default global configuration option Returns ------- str Path to global config file,get default config filepath
<e> NL: Return the new sort title from the title  name: title sort </e> Constructs a sensible plot title from the ` ` model ` ` ,get plot title
<e> NL: Find all user sets  name: get user sets </e> Find all user sets ,get user sets
<e> NL: Legacy filter for determining if a given dict is present  name: is sub dict </e> Legacy filter for determining if a given dict is present ,is sub dict
<e> NL: Check if date is in ISO 8601 format  name: validate date </e> Attempts to parse a date formatted in ISO 8601 format,datetime is iso
"<e> NL: Create 3D array for rgb image . Parameters ---------- r : 2D array g : 2D array b : 2D array name: make cube </e> Update allele frequency . Parameters ---------- ` ` ind_base_prob ` ` : 2d - array like , n x 4 matrix ",m step
<e> NL: Function that returns true if the given name can be used as a filename name: is legal filename </e> Converts an arbitary string to one that could be used as a filename ,clean str
"<e> NL: given a hostname : port return a tuple ( hostname , port ) name: split hostname from port </e> Returns a ( hostname , port ) from the environ variable if set",get mpd default
<e> NL: Read data from file . Expands home name: read file </e> Reads a file and returns it as json object . Expands home,read json
"<e> NL: Check if a string 's Chinese characters are Simplified . This is equivalent to : > > > identify('foo ' ) in ( SIMPLIFIED , BOTH ) name: is simplified </e> Check if a string 's Chinese characters are Traditional . This is equivalent to : > > > identify('foo ' ) in ( TRADITIONAL , BOTH )",is traditional
<e> NL: Return the list of built - in probes  name: list probes </e> Return the list of built - in probes ,list probes
<e> NL: Convert string value to native python values . : param str value : value to interprete . : returns : the value coerced to python type name: native value </e> Convert string value to native python values . : param str value : value to interprete . : returns : the value coerced to python type,native value
<e> NL: Get current user profile  name: get current userprofile </e> Get current user ,get current user
<e> NL: A bar chart showing value axis region starting * below * zero  name: sample h4b </e> A bar chart showing value axis region starting * below * zero ,sample v4b
"<e> NL: Vectorized version of amp2db amp : a np array of db values out : if given , put the result here name: amp2db np </e> Vectorized version of m2f midinotes : an array of midinotes out : if given , put the result here",m2f np
<e> NL: get output filename from input filename name: get ofile </e> Get raw mediainfo output for given filename ,get raw xml
<e> NL: Standard post - processing callback ; basic cleaning  name: after processing </e> Standard pre - processing callback . Save a pointer to the processed objects ,before processing
<e> NL: Return dict with block as key and level as value : param blocks : block_id : rtype : dict name: level dict </e> Check if name comes from a block on the main path : param name : block_id : rtype : bool,is main name
<e> NL: Checks if a value is a valid percent : param number : The number to validate : return : bool name: is percent </e> Valid a cellphone number . : param phone_number : Cellphone number . : type phone_number : str : returns : true if it 's a valid cellphone number . : rtype : bool,valid number
<e> NL: Get the file from cache or from web name: build list </e> loading data from scratch or from cache,load data
<e> NL: Decomposes the polygon into one or more convex sub - polygons . Keyword arguments : polygon -- The polygon Returns : An array or polygon objects  name: polygon decomp </e> Import all polygons from a .poly file . Returns a list of the imported polygon filters,import all
<e> NL: Create a new Matrix with attributes taken from ` other ` but with the values taken from ` values ` if provided name: create from other </e> Shamelessly taken from DateField.to_python : param value : : return :,parse date
"<e> NL: if , while , for and try might not be finished , because another part might still be parsed  name: flows finished </e> _ declared_class_registry might be safer ..",get metadata
<e> NL: Take some 1d data and scale it so that min matches 0 and max 1  name: scale to zero one </e> Set the x - scale of the canvas such that the minimum x value is min and the maximum x value is max ,set xscale
"<e> NL: Given a frontend name , or None , and based on the global configuration , returns the frontend to connect to or None  name: get frontend host </e> Build a hass frontend ready string out of the sourceAttribution ",build hass attribution
<e> NL: Returns the segment name based on recorder configuration and input host name . This is a helper generally used in web framework middleware where a host name is available from incoming request 's headers  name: calculate segment name </e> Returns the segment name based on recorder configuration and input host name . This is a helper generally used in web framework middleware where a host name is available from incoming request s headers ,calculate segment name
"<e> NL: returns the std deviation , mean and median of an array representing uneven timestamps creates a new array that contains the differences between two consecutive timestamps : param values : array containing uneven timestamps : return : std deviation , mean , median name: calc utils timeseries </e> returns the std deviation , the mean , and the median of an array : param values : array to calculate : return : std deviation , mean , median",calc utils
<e> NL: Get first operator that is present or None name: get op </e> Returns server operator name or None ,sc opname
<e> NL: Make a simple atmospheric correction formula  name: simple atmo opstring </e> Make a simple atmospheric correction formula ,simple atmo opstring
"<e> NL: Returns the value of an environment variable : param name : str , name of the environment variable name: get env var </e> Read variables from the environment : param env_vars : a dict with key a name , value a environment variable name : param strict : boolean , if True enforces that all specified environment variables are found",read environment
<e> NL: Create a saver for the variables we want to checkpoint  name: define saver </e> Create a saver for the variables we want to checkpoint . Args : exclude : List of regexes to match variable names to exclude . Returns : Saver object ,define saver
"<e> NL: Open cards from a txt file  name: open cards </e> Open the file "" multinest.txt "" and extract the weight values of every accepted live point as a list ",weights from file weighted samples
<e> NL: Concatenate the coordinates of the point - > X || Y name: convert point to addr </e> Concatenate the index and the value of the series ,label both
"<e> NL: Returns True if the two strings are equal , False otherwise . The time taken is independent of the number of characters that match . This code was borrowed from Django 1.5.4-final name: constant time compare </e> Returns True if the two strings are equal , False otherwise . The time taken is independent of the number of characters that match . Theoretically , this is useful in avoiding timing attacks related to simple string equality checks ",constant time compare
<e> NL: Convert a filename to a file:// url name: to file url </e> Attempt to split a URL to a filename on disk,split url to filename
<e> NL: Please have a look at the function description / documentation in the V - REP user manual name: simx get uislider </e> Please have a look at the function description / documentation in the V - REP user manual,simx get distance handle
"<e> NL: Add config keys to the env name: setup env with config </e> Get env to be used by the script process . This env must at the very least contain the proxy url , and a PATH allowing bash scripts to use ` ctx ` , which is expected to live next to the current executable ",get process environment
<e> NL: Traverse the directory tree identified by start until a directory already in checked is encountered or the path of furious . yaml is found  name: find furious yaml </e> Traverse the directory tree identified by start until a directory already in checked is encountered or the path of mapreduce . yaml is found ,find mapreduce yaml
<e> NL: Formats a list of users available on Dapi name: format users </e> Check that the package_name is not registered on Dapi ,.check name not on dapi
<e> NL: Create a file with the given contents  name: write file </e> Create and return an anonymous gist with a single file and specified contents,make gist
<e> NL: Return current battery capacity ( as percent of total capacity ) name: battery capacity </e> Validate ScalingConfiguration capacity for serverless DBCluster,validate capacity
<e> NL: Download ` url ` to destination ` fname `  name: download data </e> Download image from url to the destination : param url : url to the image : param destination : where the image will be stored : return : None,download image
<e> NL: Return the first items and last item from a list Raises ------ Empty if the given list is empty name: init last </e> split data using | separator and remove first item ( because the first item is empty ),get parts
"<e> NL: Checks if a widget is a valid in the backend : param widget : QWidget : return : bool , True if the widget still has a C++ object , False otherwise name: is valid widget </e> Returns a valid new index for the given list widget ` list_wid `",make valid index
<e> NL: Return the sanitized filename of a header file  name: pretty header filename </e> Returns a sanitized filename from the one given ,get safe filename
<e> NL: returns the repository from the given path : param str path : path in a repository : return : stalker.models.repository . Repository name: find repo </e> Open and return the repository containing the specified file ,open repo
"<e> NL: Return metabolites that are only consumed in reactions  name: find orphans </e> node_type = "" metabolites "" | "" reactions """,degree dist
<e> NL: convert milliseconds in a human readable time name: formated time </e> Get time span in milliseconds of files in a queue ,queue duration
<e> NL: Divide the received image in multiple tiles name: slice image </e> Divide the received image in multiple tiles,slice image
<e> NL: Try to locate the Box folder  name: get box folder location </e> Locate file in folder,find path
"<e> NL: Unpack the whole buffer , including header pack . Args : buffer ( bytes ) : Bytes representation of a openflow message . Returns : object : Instance of openflow message  name: unpack message </e> Unpack the whole buffer including header pack ",unpack message
<e> NL: Load the tool implementation for the given tool name  name: load tool </e> Execute the write_state tool ,execute tool
<e> NL: Return signal from object and signal name  name: get signal </e> Detect an handler and return its wanted signal name ,is handler
"<e> NL: Construct a child edge from two parent edges . Args : index ( int ) : Index of the new Edge . left_parent ( Edge ) : Left parent right_parent ( Edge ) : Right parent Returns : Edge : The new child edge  name: get child edge </e> Helper function to obtain the weight of the edge between two nodes , with exception handling , returns 0 if no edge is found",get edgeVal
"<e> NL: Adjust a difference map into an opacity mask for a given lowest opacity  name: tweak diff </e> Set opacity of window . If opacity is None , request is ignored ",set opacity
<e> NL: Get a namespace object name: metadef namespace get </e> Convert an argparse namespace object to a dictionary ,namespace to dict
<e> NL: Returns the visit foreign key attribute model class  name: visit model cls </e> Returns all models that are referenced by a foreign key of the given class ,parent classes
"<e> NL: Change all the key names in a dictionary to lower case , remove "" _ "" in the key names . Parameters ---------- dic : dict Returns ------- dict dictionary with updated key names name: unify keys </e> Add human readable key names to dictionary while leaving any existing key names ",map keys
<e> NL: Returns validation of a value as an integer  name: is integer like </e> Returns value as in integer,to digit
<e> NL: Get the value of the given environment variable  name: get envvar </e> Get the environment variable or return exception ,get env variable
<e> NL: Used internally by image_property_create and image_property_update  name: image property delete </e> Used internally by image_property_create and image_property_update ,image property update
<e> NL: Return the number of fingers needed to play the given fingering  name: fingers needed </e> Return the number of fingers needed to play the given fingering ,fingers needed
<e> NL: Creates a Rhino Transform instance from a : class:`Transformation ` . Parameters ---------- transformation ( : class:`Transformation ` ) : Compas transformation object Returns ------- : class:`Rhino . Geometry . Transform ` RhinoCommon Transform object name: xform from transformation </e> Creates a Rhino Transform instance from a : class:`Transformation ` . Args : transformation ( : class:`Transformation ` ) : the transformation . Returns : ( : class:`Rhino . Geometry . Transform ` ),xform from transformation
<e> NL: Cautious assessment of the response body for no content  name: no content response </e> Cautious assessment of the response body for no content ,no content response
<e> NL: Use OS facilities to determine if a process is running name: os is running </e> Our best approximation of how to map facilities to zones,from zone
<e> NL: Reduce the array along a given axis by sum square value name: reduce sum square </e> Reduce the array along a given axis by sum square value,reduce sum square
<e> NL: Parser for list buckets response . : param data : Response data for list buckets . : return : List of : class:`Bucket < Bucket > `  name: parse list buckets </e> Parser for list buckets response ,parse list buckets
<e> NL: Checks if ` ` tagging ` ` is installed  name: tagging available </e> checks if grpcio - tools protoc is installed,has grpcio protoc
"<e> NL: Remove redundant tuples . : param tuples : list of string of tuples . : return : list of string of unique tuples  name: uniquefy tuples </e> takes list of ( frame_size , frame_frames ) tuples and converts it to a list of ( cumulative_size , frame_frames ) tuples",sizes to offsets
"<e> NL: Returns the enemy player . The player to move next . : param player : current player name: get enemy </e> Get rid of ( A ) or ( C ) when a player has it attached to their name : param player : list of player info - > [ number , position , name ] : return : fixed list",fix name
<e> NL: Return the indy - sdk TRUST_ANCHOR role for Org Hub anchor . : return : TRUST_ANCHOR role name: least role </e> Return the TRUSTEE indy - sdk role for an anchor acting in an AnchorSmith capacity . : return : TRUSTEE role,least role
<e> NL: Retrieve list of data from PhagesDB . : param url : A URL from which to retrieve data . : type url : str : returns : A list of data retrieved from the URL . : rtype : list name: retrieve data list </e> Converts the returned data from the url and converts the JSON to a list : param url : String : return : List,get result
<e> NL: Execute ` command ` and return the response  name: telnet request </e> Execute ` command ` and return the response ,telnet request
<e> NL: provides a string representing the sampling ( e.g. for the tilenames ) Parameters ---------- sampling : int the grid sampling = size of pixels ; in metres . Returns ------- sampling_str : str string representing the sampling name: encode sampling </e> Used to over - sampling unbalanced data,re sampling
<e> NL: Return an HTML string with all help texts of all configured validators in an < ul >  name: password validators help text html </e> Return a list of all help texts of all configured validators ,password validators help texts
"<e> NL: Get the version string ( e.g. "" 1.2.3 "" ) name: get fisx version str </e> Get UPF version ",get upf version
"<e> NL: Get messages from a group . group : str : i d of the group to get messages for before_id : int : i d of the message to start at , going backwards limit : int : number of messages to fetch at once name: get messages </e> Retrieves the messages from a public , group , or direct channel ",channels messages
<e> NL: Scrape the game . : param game_id : game : return : DataFrame with info for the game name: scrape game </e> Fetch all sids using game type,fetch sid
<e> NL: Returns the list of the projects 's names  name: get project names </e> Prints the the policy and corresponding rejected resources from projects,print project policies rejection
<e> NL: Return the path to the configuration file  name: glymurrc fname </e> Return the path to the file containing the redundant files and directories to be removed prior to log file creation . : return : file path ( string ) ,get redundant path
<e> NL: Joint distribution of values from pmf1 and pmf2 . Args : pmf1 : Pmf object pmf2 : Pmf object Returns : Joint pmf of value pairs name: make joint </e> Joint distribution of values from pmf1 and pmf2 ,make joint
<e> NL: Return the manufacturer name for a given manufacturer IDENT  name: mfg short name </e> Return the manufacturer name for a given manufacturer IDENT ,mfg name
<e> NL: Merge dict list to a dict object : param dicts : dict list : return : dict name: dict merge </e> Return a dict where Quantities ( usually from a JSON file ) have been converted from unit / value Parameters ---------- idict : dict Input dict Returns ------- obj : dict or Quantity,convert quantity in dict
"<e> NL: Return name of currently active backend . if no backend has been loaded , loads and returns name of default backend . : raises passlib.exc . MissingBackendError : if no backends are available . : returns : name of active backend name: get backend </e> Return the active default backend",get active backend
<e> NL: Strips a prefix from a string if the string starts with the prefix  name: strip prefix </e> Prepend the Plone site URL to the prefix if it starts with /,expand absolute prefix
"<e> NL: Checks if a file is locked by opening it in append mode . If no exception thrown , then the file is not locked  name: is locked </e> Returns the list of UUIDs locked by this thread ",get locks
<e> NL: mesh.face_angles is the ( 3 x d x n ) matrix of the angles of each of the faces of the mesh ; d is the number of dimensions of the mesh embedding and n is the number of faces in the mesh  name: face angles </e> Return the index of faces in the mesh which break the watertight status of the mesh ,broken faces
<e> NL: Return a list of public attribute names  name: get public attributes </e> Return a list of all public files ,list public files
<e> NL: Takes a datetime object and returns a datetime at midnight of the given day name: midnight datetime </e> Retrieve the last biz day from today or from d if the arg is given . Holidays are ignored : params d : A datetime object . : return : A datetime object of the last biz day ,get last work day
"<e> NL: Determines whether the specified code is valid . : param code : The code : type code : string : returns : True if the specified code is valid , False otherwise . : rtype : boolean name: is valid </e> Compare code , removing swarm metadata if necessary : param code_1 : : param code_2 : : return : True if same code , False otherwise",compare byte code
"<e> NL: Initialise a 3x3 tensor , the argument is a list of 3 real numbers for the diagonals , the returned tensor is an array name: initialise complex diagonal tensor </e> Initialise a 3x3 tensor with the plate depolarisation matrix , returns a tensor",initialise plate depolarisation matrix
<e> NL: Builds the implication graph from the formula name: build graph </e> Builds the implication graph from the formula,build graph
<e> NL: Register a function as a plug - in name: register embeddings </e> Read model output variables ( e.g. Plug - in Gait ),get model data
"<e> NL: Checks the availability of the dependencies . Args : verbose_output ( Optional[bool ] ) : True if output should be verbose . Returns : bool : True if the dependencies are available , False otherwise  name: check dependencies </e> Verify that external dependencies are installed . Prints a message to stderr and returns False if any dependencies are missing . : returns : bool",verify dependencies
<e> NL: Read expressions from files  name: load expressions </e> Read expressions from file and return only expressions of genes in gene_set ,get expression
<e> NL: Allow file object to already be opened in any of the valid modes and and leave the file in the same state ( opened or closed ) as when the function was called  name: get file mode </e> Allow file object to already be opened in any of the valid modes and and leave the file in the same state ( opened or closed ) as when the function was called ,get file mode
<e> NL: Returns a random string of length string_length  name: random string </e> Returns a random string of length string_length,random str uuid
<e> NL: Operations that should be performed to modify class attributes prior to registration  name: before registration </e> Operations that should be performed to modify class attributes prior to registration ,before registration
<e> NL: Create white noise for background name: create noise </e> Samples a 3D cube of white noise of desired size,white noise
"<e> NL: Given a string like "" dimension(a , b , c ) "" return the list of dimensions [ ' a','b','c ' ]  name: split dimensions </e> Delete a physical dimension from the list of dimensions . Please note that deleting works only for dimensions listed in the custom file ",delete dimension
<e> NL: Install application - specific HDF5 image handler . : param handler : Handler object  name: register handler </e> Install application - specific GRIB image handler . : param handler : Handler object ,register handler
<e> NL: List the npm modules that get installed in a docker image for the react server name: list npm modules </e> List the npm modules that get installed in a docker image for the react server,list npm modules
"<e> NL: Checks if a file should be skipped based on its name . If it should be skipped , returns the reason , otherwise returns None  name: should skip file </e> Returns True if the file should be skipped based on the passed in settings ",should skip
"<e> NL: : param str target : Path to executable file : return str , str : Name of brew formula , if target was installed with brew name: find brew name </e> Get latest builds for multiple Brew components : param tag_component_tuples : List of ( tag , component_name ) tuples : param session : instance of Brew session : return : a list Koji / Brew build objects",get latest builds
"<e> NL: Check to see if the given IP address is a valid IPv4 or IPv6 address . Returns True or False name: validate ipaddr </e> Try to identify an IPv4 address in the given content . * Unhandled * IPv6 , which geocoder sometimes returns . Parameters ---------- content : str Returns ------- ip : str or None",identify ip
<e> NL: Given a list of sensations return the SDRs that would be obtained by numTraversals random traversals of that set of sensations  name: .random traversal </e> Given two lists of sensations create a new list where the sensory SDRs are union of the individual sensory SDRs . Keep the location SDRs from the object ,create superimposed sensory sdrs
<e> NL: Get a Provider1Definition for the provider that handles the manifest machinery  name: get manifest def </e> Get a Provider1Definition for the provider that handles the exporters machinery ,get exporters def
<e> NL: Return a prototype Scanner instance for scanning LaTeX source files when built with latex  name: la te xscanner </e> Return a prototype Scanner instance for scanning LaTeX source files when built with pdflatex ,pdfla te xscanner
"<e> NL: Return an image preview from a LUT name . This images are cached into a global structure . : param Union[str , numpy.ndarray ] colormap : Description of the LUT : rtype : qt . QImage name: get colormap image </e> Return a grayed version image preview from a LUT name . This images are cached into a global structure . : param Union[str , numpy.ndarray ] colormap : Description of the LUT : rtype : qt . QImage",get grayed colormap image
<e> NL: Get the table row from the gene item name: row from item </e> Return the table row from an input item,row from item
"<e> NL: Check link status Args : link : link to check status Returns : tuple of status ( bool ) and status code name: link status </e> Confirms a link , ie , flips its status to True ",confirm link
"<e> NL: Convert an object to either a scalar or a row or column vector  name: vector or scalar </e> Convert an offset in a file to ( row , column ) coordinates",offset to column line
<e> NL: Create a relative symbolic link if symlink path is given  name: create symlink </e> Create a symlink from link_filename to real_filename ,safe setup link
<e> NL: find a list of run directories in the directory given : param directory : : return : list of DirectoryStatus objects name: find runs </e> find a list of run directories in the directory given : param directory : : return : list of DirectoryStatus objects,find runs
<e> NL: Get the path of the GPG binary  name: get gpg path </e> Get the path to the Anaconda binary,get conda bin
<e> NL: Process a node element entry into a dict suitable for going into a Pandas DataFrame  name: process node </e> Process a way element entry into a list of dicts suitable for going into a Pandas DataFrame ,process way
<e> NL: Return the name of the notebook name: get notebook name </e> Return the default language given the notebook metadata and a file extension,default language from metadata and ext
<e> NL: Returns the valid encodings for a given encoding range  name: get encodings in range </e> Add a separator after default encodings in encoding combobox,add separator after default encodings
"<e> NL: Return True if x is a valid URL ; otherwise return False  name: valid url </e> Return True if the target is valid , False otherwise",test target
"<e> NL: Replaces escaped characters by unescaped characters . For example , double backslashes are replaced by a single backslash . The behavior for improperly formatted strings is undefined and can change . : param escaped : the escaped string : rtype : the original string name: unescape new line </e> Ensure that some characters are escaped before writing to XML",escape specials
<e> NL: Returns a server with a given i d : param nova : the Nova client : param server : the old server object : return : the list of security groups associated with a VM name: get server security group names </e> Returns a dictionary of a VMs info as returned by OpenStack : param nova : the Nova client : param server : the old server object : return : a dict of the info if VM exists else None,get server info
<e> NL: Determine whether provided address is IPv6 or not  name: is ipv6 </e> Determine whether the provided address is within a network range ,is address in network
<e> NL: Compute the proportion fixed for reference allele and alternate allele name: fix proportions </e> Computes hard calls from probability matrix . Args : a1 ( str ) : the first allele a2 ( str ) : the second allele probs ( numpy.array ) : the probability matrix Returns : numpy.array : the hard calls computed from the probabilities,hard calls from probs
"<e> NL: Return list of models configured for a named index . Args : index : string , the name of the index to look up  name: get index models </e> Converts a negative index into a positive index . Args : index : The index to convert . Can be None . dim : The length of the dimension being indexed ",wrap neg index
"<e> NL: Set the system default security policy , and return the previous value . This method should only be called by system startup code . It should never , for example , be called during a web request  name: set security policy </e> This method should only be called during unit testing , e.g. to test auto - adding reactors ",clear global state
<e> NL: Return the root path of a path relative to an absolute path  name: find root path </e> Outputs root path of the module . Acounts for changes in path when app is frozen . Returns ------- str string with root module path See also -------- : func:`we_are_frozen `,module path
"<e> NL: Returns False if the file is binary or image  name: is good file for multiqc </e> I run these scripts on platforms that do n't support openmeta , or do n't have the binary , or a working binary , or ..",is openmeta working
<e> NL: get the docker images url list name: get docker images url </e> Start the build to create Docker images . : param codebuild_project : CodeBuild project that builds docker container images ,create docker images
<e> NL: Setup the smoothing sigmas array for registration name: setup shrink factors </e> Setup the smoothing sigmas array for registration,setup smoothing sigmas
<e> NL: Format a line of Matlab into either a markdown line or a code line  name: format line </e> Converts a line of CollectAllelicCounts into AMBER line ,counts to amber
<e> NL: Find and return all directories in the specified directory . Arguments : directory -- the directory to find directories in Returns : a list of directories including current directory name: find directory list </e> Find the last backup given a directory with dated child directories ,get last
"<e> NL: Return ` True ` if ` cover_p ` covers ` f ` . Same as ` covers ` . Here the computation happens over the concrete variables ( ` x ` ) , so it is less efficient  name: covers naive </e> Return True if array of longitudes covers the whole sphere ",is longitude global
<e> NL: Appends a trailing slash to a string ( intended for use with a directory path ) If a trailing slash is already present an additional one will * not * be appended name: append trailing sep </e> Strip trailing slash if exists . : param str value : The value to strip trailing slash from . : returns : Path without a trailing slash,strip trailing slash
<e> NL: Displays the headers and data list together name: document result list </e> Displays the data of a target ,target data
"<e> NL: Read data from csv file  name: load csv py </e> reads in a csv of data , excluding the header row : param csv_file : csv file of data , defaults to ' allofplos_metadata.csv ' : return : list of tuples of article metadata",read corpus metadata from csv
<e> NL: Run a shell command given the command 's parsed command line name: run command splits </e> Run the command on a host using the username ,ssh with username
<e> NL: Return link to ` func ` in source code name: get source link </e> Return function link to notebook documentation of ft . Private functions link to source code,get fn link
<e> NL: Generates weight array where valid values have the weight value and NaNs have 0 weight value  name: weight array </e> Used for weight generation by calculate_731_checksum,weight generator
<e> NL: Get the user token from a request Default : - in URL parameters : ? token=<token > - in header : Authorization : token < token > name: get token </e> Helper function to extract a token from the request header ,get token from header
<e> NL: Called before a record is updated through the view . : returns : ` ` accpac . Continue ` ` or ` ` accpac . Abort ` ` : rtype : int name: on before update </e> Called before a record is fetched through the view . : returns : ` ` accpac . Continue ` ` or ` ` accpac . Abort ` ` : rtype : int,on before fetch
<e> NL: Build a list of IP prefixes found in Bird configuration  name: get ip prefixes from bird </e> Return the variable name set in Bird configuration ,get variable name from bird
<e> NL: Returns a string of the form cluster / database that says where a particular shard of data resides . : param collection_name : The collection name for the shard : param shard_key : The shard key to look for name: where is </e> Return a configuration object of MongoDBManager for given collection_name If collection_name in any configuration file then use the configured collection_name Else use the given collection_name instead,mongo config for collection
<e> NL: Check if the name is a future import from another module  name: is from future import </e> tree.io seems to anticipate this function . It is copied from another module ,get widgets
<e> NL: Decode escape sequences . Args : s ( str ) : String that should be decoded . Returns : str : Result of decoding escape sequences  name: decode escape </e> Encode escape sequences . Args : s ( str ) : String that should be encoded . Returns : str : Result of encoding escape sequences ,encode escape
"<e> NL: Checks if the file to be imported is the same as the file that 's already on the instance name: check import </e> If the annotations file is in the same format as the original data files , this method can be used to extract a dict of query ids and answers ",get answers from data
<e> NL: Reverse the effect of setup_paste_factories ( )  name: teardown paste factories </e> Reverse the effect of enable_metadata_credential_caching ( ),disable metadata credential caching
<e> NL: Make a get request  name: make get request </e> Make request parameters right ,prepare request
<e> NL: return list of reactants of a reaction name: get listOfReactants </e> return list of products of a reaction,get listOfProducts
<e> NL: Returns a list of interface numbers from the output tshark - D . Used internally to capture on multiple interfaces  name: get tshark interfaces </e> Returns a list of interface numbers from the output tshark -D. Used internally to capture on multiple interfaces ,get tshark interfaces
<e> NL: Return Filesystem or None name: get filesystem </e> Find a filesystem path for module ` i d ` or ` None ` if not found ,find module simple
<e> NL: Returns True if the user has this property set  name: get property </e> Returns True if this Property is set ,get global property
<e> NL: Generate all perfect matchings of given bipartite graph  name: generate perfect matchings </e> Generate all maximum matchings of given bipartite graph ,generate maximum matchings
"<e> NL: Find the offset tuple for a single offset  name: find offset </e> Convert the delete opcode from a word based offset , to a character based offset ",convert delete
<e> NL: Read the network file and return as nx . Graph or nx . DiGraph Arguments --------- fh : string file handle or file name name: read network </e> Return a nx . Graph object,bipartite graph
<e> NL: Archive objects at the top level of a module  name: get persistent rep obj </e> Compares two python dictionaries at the top level and report differences if any to stdout,dict diff and report
"<e> NL: Reads and tokenizes text Takes a text as input , and outputs raw and normalized texts name: read text </e> Takes a string representing a regular expression as input and tokenizes it ",tokenize regex
<e> NL: Returns the value of a global variable name: value of global </e> Sets a global variable for tracking the timer accross multiple files,code timer
"<e> NL: Determines the delimiter of the SBtab table Parameters ---------- sbtab_file : str SBtab table in string representation . Returns : str Delimiter of the SBtab table ( ' ' , ' , ' , or ' ; ' ) name: check delimiter </e> Extracts all allowed SBtab table types from the definitions file . Returns : list List of supported SBtab table types ",extract supported table types
<e> NL: Distance in meters between two close points specified in degrees  name: earth distance small </e> Distance ( in meters ) between two points in WGS84 coord system ,wgs84 distance
"<e> NL: Returns the indices that are not in the given indices , up to the given size . : param indices : The indices to invert . : param size : The exclusive maximum index . : return : A inverted indices  name: invert indices </e> Return the sum1_ij and sum2_ij values given the input indices and data instances ",compute sum values
"<e> NL: Ensure the type of the value is as expected , then return the value . : param value : value of any type : param class_or_type_or_tuple : expected type : return : value of expected type name: assert type </e> Return the checksum if the type is the expected ",get checksum
<e> NL: Return index of the first number in the string ` ` a ` ` name: number index </e> Initialize the parties in the MuSig session and set their index number ,signers init
<e> NL: Finds out whether there are intervals to expand and creates the charset name: parse charset </e> Finds out whether there are intervals to expand and creates the charset,parse charset
"<e> NL: Update the logging level for logger . Parameters ---------- default_level : const int A value in the set { logging . DEBUG , logging . INFO , logging . WARNING , logging . ERROR , logging . CRITICAL } name: update default level </e> Gets a variant from the parser while disabling logging ",get variant silent
<e> NL: Perform inference of SOMPY Model  name: sompy infer job </e> Load inference model from file,bnn load model
<e> NL: Return entry type for a given entry  name: get entry type </e> Grab the checksum file for a given entry ,grab checksums file
<e> NL: Convert a pandas . Series into an xarray . DataArray  name: .from series </e> Convert * obj * to an : class:`xarray . DataArray ` with sparse . COO storage ,as sparse xarray
<e> NL: Gets a Claim ` claim_id ` : param transport : Transport instance to use : type transport : ` transport.base . Transport ` : param request : Request instance ready to be sent . : type request : ` transport.request . Request ` name: claim get </e> Get a stats exporter and running transport thread ,new stats exporter
<e> NL: Calculate default ssh - user based on image - if of AWS instance  name: ssh calc aws </e> Calculate instance login - username based on image - name ,cmd ssh user
<e> NL: Returns the value of the matched xpath element name: get value </e> Set the requested attribute key and value for matched xpath element ,set attribute
<e> NL: Computes the index of an order in the order vocabulary : param order : The order to get the index from : return : The index of the order ( None if not found ) name: order to ix </e> @summary : query status of order @param orderno : order no,query order
"<e> NL: Given a list of actions , remove the ones that CAN be restricted to ARNs , leaving only the ones that can not . : param actions_list : A list of actions : return : An updated list of actions : rtype : list name: remove actions that are not wildcard arn only </e> Get the actions that are within the privileged list : param privileges : : return : list of allowed actions",get privileged actions
<e> NL: Merges the default adapters file in the trimmomatic adapters directory name: merge default adapters </e> Merges the default adapters file in the trimmomatic adapters directory Returns ------- str Path with the merged adapters file ,merge default adapters
<e> NL: Run Python import on all plugin listed in plugin folder . It returns the imported module  name: load plugin modules </e> allows other ' plugin ' code to be imported into a game . this works a little like load module,import plugin
"<e> NL: JSON decoding hook to recover ` Var ` objects . Use this as the ` object_hook ` keyword argument of ` json.load `  name: json decode hook </e> Hook function passed to json - deserializer as "" object_hook "" . EnumEncoder in runhistory / runhistory ",enum hook
<e> NL: Get the dependencies from item type and public i d  name: get item dependencies </e> Get the dependencies ,get requirements
<e> NL: Calculates binary metrics given the specificity  name: get stats </e> Calculates binary metrics given the specificity ,get stats
"<e> NL: Given the layer object , return the relationships of the layer objects to packages and to the previous layer name: get layer relationships </e> Given a layer object , check against cache to see if that layer i d exists if yes then load any relevant layer level information . The default operation is to not redo the cache . Add notices to the layer 's origins matching the origin_str",load from cache
<e> NL: Apply the conda activate command to conda install commands  name: apply conda activate </e> Setup config commands for conda ,. setup config from kwargs
<e> NL: Helper to get the C list pointer in a numba containers  name: container get data </e> Helper function to determine the difference of two values that can be np.uints . Works in python and numba mode . Circumvents numba bug # 1653,is in max difference
<e> NL: Posts a signed message to LTI consumer : param consumers : consumers from config : param lti_key : key to find appropriate consumer : param url : post url : param body : xml body : return : success name: post message </e> Posts a signed message to LTI consumer,post message
<e> NL: get_connection_object : param root_dir : : type root_dir : str : param specie : : type specie : str : rtype : sqlite3.Connection name: get connection object </e> get_specie_db_path : param root_dir : : type root_dir : str : param specie : : type specie : str : rtype : str,get specie db path
"<e> NL: parse an ISO8601 date string If it is None or not a valid ISO8601 timestamp , it will be returned unmodified . Otherwise , it will return a datetime object  name: parse date </e> parse an ISO8601 date string If it is None or not a valid ISO8601 timestamp , it will be returned unmodified . Otherwise , it will return a datetime object ",parse date
"<e> NL: For a range indicated from start to end replace with replacement  name: replace token range </e> For a range indicated from start to end , replace with replacement ",replace token range
"<e> NL: Returns a list of all known resource dirs for a given resource  name: get resource dirs </e> Returns effective resource group , workspace and name for the given resource",get effective resource parameters
"<e> NL: Build and return the wallet ` data ` dict with the mnemonic and wallet password name: wallet data </e> Get the wallet 's balance . Returns a dict with ' available ' and ' total ' balances , indicating what can be spent right now , and what is the total including unconfirmed funds . : rtype : dict",get balance
<e> NL: Create an instance from a standard list  name: .from list </e> Create an INstanceAttribute from a list of InstnaceFields,concatenate fields
<e> NL: Detect a workflow path if it is not passed  name: validate path </e> Detect a workflow path if it is not passed ,validate path
<e> NL: Compute the flatness of every face of a volmesh . Parameters ---------- volmesh : volmesh object Returns ------- dict A dictionary of flatness deviation for every face of the volmesh  name: volmesh face flatness </e> Compute the areaness of every face of a volmesh . Parameters ---------- volmesh : volmesh object Returns ------- dict A dictionary of area deviation for each face of the volmesh ,volmesh face areaness
<e> NL: Compute the * n * moment of the data list * data * . Parameters ---------- data : list Data to take the moment of . n : int Moment number . Returns ------- float * n * moment of the data  name: get moment </e> The bulk moment is x**2+y**2+z**2,is bulk moment
"<e> NL: Return an object of dolfin FunctionSpace , to be used in the optimization pipeline : param mesh : The mesh : type mesh : : py : class:`dolfin . Mesh ` : returns : An object of functionspaces : rtype : object name: get spaces </e> Loads a dolfin mesh",load mesh
"<e> NL: If ` ` freesurfer_home ` ` is not set , try to make an intelligent guess at it name: guess home </e> If freesurfer_home is not set try to make an intelligent guess at it",guess home
<e> NL: Delete a model identified by name in a given API name: delete api model </e> Deletes stage identified by stageName from API identified by restApiId,delete api stage
"<e> NL: Invert an affine transformation . A transformation ( A , T ) is inverted by computing ( A^{-1 } , -A^{-1 } T ) name: affine inverse </e> Given an set of transformation angles , generate a series of transformation matrices",transformation matrix
"<e> NL: Helper function to clean up the response from the statistics endpoint by removing misspelled statistics keys . : param statistics : Dictionary containing statistics , modified by reference : return : name: fix statistics keys </e> Time a function multiple times and return results and statistics . Expects a function without arguments ",time repeat
"<e> NL: Return a constant indicating the type of coupling . Depending on the type of coupling , one of the constants from : class:` . CouplingClass ` is returned . Args : coupling : Tuple of minimum and maximum flux ratio name: classify coupling </e> Generate list of ops to implement a SWAP gate along a coupling edge ",swap ops from edge
"<e> NL: from list of vectors of v in absolute frame , rotate q vector component around u angle in deg result is an array name: rotate around u </e> from list of vectors of v in absolute frame , reflect vector on plane defined by its normal u angle in deg result is an array",reflect on u
<e> NL: Print token values . Useful for debugging  name: text printer </e> Strips type information from rendered data . Useful for debugging ,strip type info
<e> NL: preprocess data by removing extra space and normalize data  name: preprocess text </e> preprocess data by removing extra space and normalize data ,preprocess text
<e> NL: Returns request data extracted from web.ctx  name: get data from request </e> Returns request data extracted from web . ctx ,get data from request
"<e> NL: return a list of string encodings to try name: get encodings </e> Return a list of code , name , description of valid encodings ",get valid
<e> NL: Determine if Word is available on the current system  name: has word </e> Return open Word . Application handle or None if Word is not available on this system ,get word app
<e> NL: Normalize extension Converts given extension to canonical format for storage : param extension : original extension : return : normalized extension name: normalize extension </e> change extension to type : param extension_name : extension name : return : type,extension to type
<e> NL: Waits for an occurrence of the specified event for a given session  name: wait on event </e> Waits for page loaded,wait for page loaded
"<e> NL: check if path is testcase path or path list . Args : path ( str / list ) : file path or file path list . Returns : bool : True if path is valid file path or path list , otherwise False  name: is testcase path </e> return either ' < path > ' or ' line N of < path > ' or ' lines M - N of < path > ' ",describe source
<e> NL: Return the path to qemu binary for the target architecture name: default qemu binary </e> Return the binary 's architecture ,get arch
<e> NL: Calculates the electronic entropic contribution ( J/(mol*K ) ) of the molecule Selec = R(Ln(multiplicity ) name: calc electronic entropy </e> # Electronic entropy evaluation # Depends on multiplicity Calculates the electronic entropic contribution ( J/(mol*K ) ) of the molecule S_elec = R(Ln(multiplicity ),calc electronic entropy
<e> NL: Convert matplotlib color scale to plotly color scale . : param cmap : matplotlib color scale function : param res : resolution to use : return : list of string use by plotly name: matplotlib to plotly </e> Returns a color scale to be used for a plotly figure,get colorscale
<e> NL: Returns the filename of the file to read name: get file </e> Read parameters from TOML file . Parameters ---------- filename : str or Path The name of the file to read . Should have extension ' .toml ' . Returns ------- dict A dictionary representation of the parameters file ,read parameter file
<e> NL: Return list of tasks in ` job_list ` such that string ` msg ` occurs in the STDOUT log file  name: filter by outmsg </e> Return list of tasks from ` job_list ` that were unsuccessfully terminated ,filter unsuccessful
<e> NL: Return all data directories for given package . Args : _ _ pkg : Package name name: get data dirs </e> Return all configs for given package . Args : _ _ pkg : Package name _ _ name : Configuration file name,get configs
"<e> NL: Load ( or create ) item layout . Returns : dict : item layout in format { identifier : ( column , row ) } name: get layout </e> Load ( or create ) dungeon layout . Returns : dict : dungeon layout in format { identifier : ( column , row ) }",get layout
<e> NL: Get suggestions for ValueError exception  name: get value error sugg </e> Get suggestions for NameError exception ,get name error sugg
<e> NL: returns true if the compiler is gfortran-4.5.x name: is gfortran45x </e> returns true if the compiler is gfortran-8 or later,is gfortran8plus
<e> NL: Append text to a functions existing docblock  name: append to docs </e> Append text to file,write text to file
<e> NL: Returns the n largest indices from a numpy array  name: smallest indices </e> Find the indices of the n largest and smallest ( respectively ) values in an array . : param data : the data array : param n : the number of indices to find : return : two lists : one with the smallest indices and one with the largest,n largest smallest
<e> NL: Get a Provider1Definition for the provider that handles the manifest machinery  name: get manifest def </e> Get a Provider1Definition for the provider that knows all the categories,get categories def
<e> NL: Compresses numpy array from RAM to RAM name: compress array </e> Returns the minimum RAM required to run an IOS image . : param path : path to the IOS image : returns : minimum RAM in MB or 0 if there is an error,get minimum required ram
<e> NL: Stream an entire remote annotation file from physiobank name: stream annotation </e> Stream an entire remote annotation file from physiobank Parameters ---------- file_name : str The name of the annotation file to be read . pb_dir : str The physiobank directory where the annotation file is located ,stream annotation
<e> NL: Return an argument for the request parser . : param param : Swagger document parameter : return : Request parser argument name: get parser arg </e> Returns a parser for query parameters from swagger document parameters . : param params : swagger doc parameters : return : Query parameter parser,get parser
<e> NL: Specifies whether to always send extra HTTP headers with the requests from this page . : param headers : Map with extra HTTP headers . : type headers : Headers name: set extra httpheaders </e> Update the default requests HTTP headers with OSMnx info ,get http headers
"<e> NL: ' Refresh ' an existing lock by re - writing the file containing the owner 's unique i d , using a new ( randomly generated ) i d , which is also returned  name: refresh lock </e> Refresh an existing lock ",refresh lock
<e> NL: Either generate a template or use the one provided name: output template </e> Validate matplotlib axes or generate one if not provided,get matplotlib ax
<e> NL: If an error is a percentage we convert to a float then calculate the percentage of the supplied value  name: error value processor </e> Return percentage of sample_count in total_samples ,get percentage
<e> NL: Return true if the file to generate has already been generated before name: is file already in cache </e> Assuming that output has already been generated and stop executing the rest of the substep,done if
<e> NL: Returns a list of folders that match the wildcard passed in ( honoring asterisks ) by recursively searching the starting_dir and below  name: find folders recursively </e> Returns a list of files that match the wildcard passed in ( honoring asterisks ) by recursively searching the starting_dir and below ,find files recursively
<e> NL: Return a count of the number of frames name: count frames </e> Compute number of time frames of spectrogram,num frames
<e> NL: Load plugins from ` modules ` . Returns a Plugins object with the loaded and configured plugins  name: load plugins </e> Return any ` ` MarkdownExtension ` ` plugins ,load markdown extensions
"<e> NL: Get group i d from token : param token : : return : name: get id by token </e> Create id / token mappings for sequences . : param sequences : list of token sequences : return : mappings from i d to token , and token to i d",create dictionary
"<e> NL: Return the centroid of given coordinates list or tuple : param coordinates : ( list or tuple ) coordinates list or tuple : param precision : ( int ) precision of coordinates ( number of decimal places ) : return : ( tuple ) centroid name: coordinates to centroid </e> Calculate the average position of a list of lat , long coordinates . Parameters ---------- * coordinates : list or tuple List of ( lat , lng ) coordinates . Returns ------- tuple",calc avg position
<e> NL: Check if a file exists  name: file exists </e> Check if a group exists,group exists
<e> NL: lmfit 2nd order polynomial model name: poly2o model </e> lmfit 2nd order polynomial model,poly2o model
<e> NL: Gets if a node is valid or not for parsing . @type node : Node @param node : The Xml node to be validated . @rtype : bool @return : The valid or not valid value  name: valid node </e> Checks if a node is a valid field or method in a embedded document ,node is embedded doc attr
<e> NL: Import module from a file . Used to load models from a directory . name ( unicode ) : Name of module to load . loc ( unicode / Path ) : Path to the file . RETURNS : The loaded module  name: import file </e> Import module from a file . Used to load models from a directory ,import file
<e> NL: Adapted from UStreamTV plugin ( ustreamtv.py ) name: parse proxy url </e> Credit : streamlink / plugins / ustreamtv.py : UHSClient : parse_proxy_url ( ),parse proxy url
"<e> NL: Read 1 byte of data as ` signed char ` . Parameters ---------- data : io . BufferedReader File open to read in binary mode Returns ------- int Python integer name: read signed char </e> Read 1 byte of data as ` char ` . Parameters ---------- data : io . BufferedReader File open to read in binary mode Returns ------- bytes Python string of length of 1 , encoded as bytes",read char
<e> NL: returns True if all necessary components are available to support the .to_pcm ( ) method name: supports to pcm </e> returns True if all necessary components are available to support the .to_pcm ( ) method,supports to pcm
<e> NL: Resizes mini masks back to image size . Reverses the change of minimize_mask ( ) . See inspect_data.ipynb notebook for more details  name: expand mask </e> Resizes mini masks back to image size . Reverses the change of minimize_mask ( ) . See inspect_data.ipynb notebook for more details ,expand mask
<e> NL: Convert DataFrame index from datetime to epoch time Parameters -------------- index : pandas Index DataFrame index in datetime Returns ---------- pandas Index DataFrame index in epoch time name: datetime to epochtime </e> creates a datetime index,make datetime index
<e> NL: Extract the contact info from a vCard component . : param component : the input vCard component text . : return : a dictionary containing the extracted contact info  name: extract contact from component </e> Extract the contact info from a vCard . : param vcard : the vCard text to convert . : return : a list containing the extracted contact info ,extract contacts from vcard
<e> NL: Check if the given request uses a whitelisted method  name: is client method whitelisted </e> Check if the given request uses a whitelisted method ,is client method whitelisted
"<e> NL: Opens a simple yes / no message box , returns a bool name: get yesno </e> Opens a simple yes / no message box , returns a bool",get yesno
<e> NL: return cipher_type letter from cipher name: get cipher type </e> Rotated XOR cipher ,rotated xor
<e> NL: Removes trailing characters from a string if that does not make it empty : param value : A string value that will be stripped . : param chars : Characters to remove . : return : Stripped value  name: safe rstrip </e> Removes trailing characters from a string if that does not make it empty : param value : A string value that will be stripped . : param chars : Characters to remove . : return : Stripped value ,safe rstrip
<e> NL: Adds a highlight tag to the given nodes  name: highlight nodes </e> Adds a highlight tag to the given edges ,highlight edges
<e> NL: Resizes an image preserving the aspect ratio  name: scale image </e> Resizes an image by fitting it into the box without changing the aspect ratio ,resize cmd
<e> NL: Check that all serialization compatibility quirks have been preserved . Used primarily for testing  name: check quirks </e> Intended primarily for testing _ step_function_fast correctness,step function correct
<e> NL: Generate harmonics of a given frequency for least squares fitting  name: har nphi </e> Generate harmonics of a given frequency for least squares fitting ,har n
<e> NL: Gets the most recent backup on the backup media  name: get most recent backup </e> Recover the backup config ,get backup config
<e> NL: Generate a unique identifier  name: gen uuid </e> Generate a unique string,unique string
"<e> NL: Parse the code parameter from the a URL : param str url : URL to parse : return : code query parameter : rtype : str name: parse code </e> Parse the url to decide which driver should be loaded . : param url : str : return : Module name , str",parse url
<e> NL: Returns a string of the geometry type based on the number  name: geometry type </e> Get the right text based on the number of ` ` items ` ` ,get many text
"<e> NL: Given a list of export file names , zips up all the files with those names and returns and http response  name: zip response </e> makes a sorted list of all roi.zips . Requires zips to be named with suffix SeriesXXX.zip",get sorted zipfile list
"<e> NL: Return a set of non - unique values for iterable values  name: non unique </e> Check if input items are unique Parameters ---------- values : set set of all values Returns ------- True / False , MULTI / unique value",is uniq
<e> NL: Return fieldnames and values of either a namedtuple or GOEnrichmentRecord  name: . get field values </e> Return fieldnames of either a namedtuple or GOEnrichmentRecord ,. get fieldnames
<e> NL: Return the current job configuration for the provided job  name: get job config </e> Submit a batch job to combine the outputs of a reading job ,submit combine
<e> NL: Get the meta - data of the text boxes  name: get text and icon size </e> Get the readings meta - data ,get meta data
"<e> NL: Creates an prefix property transducer based on given alphabet : param bool preserving : input preserving transducer , else input altering : param list|set alphabet : alphabet : rtype : SFT name: prefix transducer </e> Creates an suffix property transducer based on given alphabet : param bool preserving : input preserving transducer , else input altering : param list|set alphabet : alphabet : rtype : SFT",suffix transducer
<e> NL: This function excludes the tables and relationships with tables which are in the exclude ( lst of strings that represent tables names ) name: exclude tables </e> Ensure the dependencies are inline tables,format toml
"<e> NL: Return whether the connection should be closed  name: should close </e> Inspect a log line and groups it by connection being openend or closed . If neither , return False ",opened closed
"<e> NL: Return the MPI rank if mpi is installed . Otherwise , return 0 . : return : ( int ) name: mpi rank or zero </e> Map numpy types to MPI datatypes ",dtype to mpitype
"<e> NL: Read a date from the metadata date and return a datetime.date object , or return None if the object ca n't be found or interpreted as a date  name: get metadata date </e> Return the release date for this printing as a date object ",get printing date
<e> NL: Formats error as string . Args : error ( Exception ) : Error . Returns : str : Error message  name: error to string </e> Returns the grizzly s internal address value . Returns a negative error value in case of error ,.get device address
<e> NL: Ping a list of servers : param list servers _ : List of servers : returns : List of servers with ping time name: ping servers parallel </e> Return a list of netflix optimized servers,filter netflix servers
"<e> NL: Detect if running on the Raspberry Pi or Beaglebone Black and return the platform type . Will return RASPBERRY_PI BEAGLEBONE_BLACK or UNKNOWN  name: platform detect </e> Detect if running on the Raspberry Pi or Beaglebone Black and return the platform type . Will return RASPBERRY_PI , BEAGLEBONE_BLACK , or UNKNOWN ",platform detect
<e> NL: This function download a file from server name: download file </e> Download a single file from GDC ,py download file
<e> NL: Load regex pattern from file txt Args : filepath : the path specified name: load pattern from file </e> Load string from txt file Args : filepath : the path specified,load string from file
<e> NL: Check if IP is local name: is local ip </e> Check if repository is local,check for local repos
"<e> NL: Pack a list of tuples containing strings . : param items : list of tuples : return : list name: pack list of tuples </e> Return a list of method ( name , object ) tuples ",find methods
<e> NL: Check different items in matrix classes . : param vector : input vector : type vector : list : return : bool name: class check </e> Check input vector items type ,vector check
"<e> NL: Return the name of padding scheme used in signature scheme  name: get padding </e> Return a list of : class:`XAttr ` for a scheme definition , with some proper values specified if a scheme is given ",xsd attributes scheme
<e> NL: Pick an embedding size for ` n ` depending on ` classes ` if not given in ` sz_dict `  name: def emb sz </e> Pick an embedding size for ` n ` depending on ` classes ` if not given in ` sz_dict ` ,one emb sz
"<e> NL: Check if file exists . : return : True if file exists , false if not exists or is a directory . : except : None name: file exists ne </e> chekcs if a key exists . Works only for files , and not directory . Cheaper than exists , which employs a list ",file exists
<e> NL: Generate a unique transfer ID  name: make transfer ID </e> Generate a unique file ID for OutboxFile ,make file id
<e> NL: Determine all columns which are mentioned in the list of predicates . Parameters ---------- predicates : The predicates to be scaned  name: columns in predicates </e> Retrieve names of components or predicates from nested data : param value : data to extract name or to retrieve predicates from : return : names of components or predicates as a string,retrieve data
"<e> NL: Best effort attempt to get any POSIX errno codes from exception  name: get errno fields </e> Set the current ' measure level ' used in deciding how much effort to expend creating FFTW plans . Must be an integer from 0 ( least effort , shortest time ) to 3 ( most effort and time ) ",set measure level
<e> NL: Return supported template names  name: get templates </e> Return supported template names ,get templates
"<e> NL: Check that the given file does not exist  name: file does not exist </e> Removes the target file name , catching and ignoring errors that indicate that the file does not exist . @param filename : The file to remove . @param disable : boolean to flag if want to disable removal",silent remove
<e> NL: Return a BT Smart Hub scanner if successful  name: get scanner </e> Return a Sky Hub scanner if successful ,get scanner
"<e> NL: calculates the jump height between tone and previous tone name: get jump points </e> selects up , down or equal and tone group length",get up down equal characteristics
"<e> NL: "" c - a : potassium Co(CN)6 [ PM73 ]  name: bC K CoCN6 PM73 </e> "" c - a : potassium W(CN)8 [ PM73 ] ",bC K WCN8 PM73
<e> NL: Create a output directory if it 's not exists  name: create dir </e> Create directory but first delete it if it exists,create directory
<e> NL: Loads a JSON Schema validation schema name: load validation schema </e> Retrieve and parse a JSON schema ,get schema
"<e> NL: Recursively parses all settings with with _ prefix to a bool . : type settings : dict : param settings : Dictionary containing settings name: parse flags </e> Returns a menu to switch users quickly . Settings required : : settings . TEST_USERS = ( ( ' user1 ' , ' pass1 ' ) , ... ) settings . DEBUG = True FOR TESTING PURPOSE ONLY",switch users
"<e> NL: Apply a weighted OLS fit to data Args : X ( ndarray ) : independent variables y ( ndarray ) : dependent variable w ( ndarray ) : observation weights Returns : tuple : coefficients and residual vector name: weight fit </e> Compute a linear regression model , regressing y onto x Input --- x : ndarray independent variable data y : array dependent variable data verbose : bool , optional whether to print results of linear model fit Returns --- fitted statsmodels OLS object",run linear model
<e> NL: Perform a forward lookup of a hostname  name: lookup forward </e> Perform a forward lookup of a hostname ,lookup forward
<e> NL: Return list of sequences from a list of samples . : param samples : list of samples : param registry : connector registry : return : name: get sequences </e> Print class prediction to STDOUT Args : samples(pandas DataFrame index ) : List of samples classes(list ) : list of classes pred(list ) : list of probablities predictions,print class
<e> NL: Set item to last position if position not defined  name: before insert </e> Calculate a direction between two positions pos1 is current position pos2 is previous position,calc direction
<e> NL: Converts a SciPy sparse matrix in * * Compressed Sparse Row * * format to an iterable of weighted edge triples  name: csr gen triples </e> Converts a SciPy sparse matrix in * * Compressed Sparse Column * * format to an iterable of weighted edge triples ,csc gen triples
"<e> NL: Executes a command : param command : The command to execute : return : The status code name: execute command </e> Pass a command list to subprocess.check_output . Returning None if an expected exception is raised : param cmd : The command to execute : return : Stripped string output of the command , or None if error",check output and strip
<e> NL: Check if a name should be excluded  name: should be excluded </e> Validating if the instance should be logged or is excluded,validate instance
<e> NL: Turn a possibly string enum into an integer enum  name: as enum </e> Determines if a namestack is an enum namestack,is enum namestack
"<e> NL: Get committed block list : param blobxfer.models.azure . StorageEntity ase : Azure StorageEntity : param int timeout : timeout : rtype : list : return : list of committed blocks name: get committed block list </e> Generate local path view and total size required : param blobxfer.models.azure . StorageEntity ase : Storage Entity : rtype : tuple : return : ( local path view , allocation size )",generate view
"<e> NL: Get intersection of solutions , from grounding Args : grounding ( bytes ) : grounded model optimum ( str ) : optimal score Returns : TermSet : intersection name: get intersection communities from g </e> Get intersection of communities solutions Args : grounding ( bytes ) : grounded model optimum ( str ) : optimal score Returns : TermSet : intersection",get exchanged metabolites intersection
<e> NL: Add the version of wily to the help heading  name: add version </e> Add the version of wily to the help heading . : param f : function to decorate : return : decorated function,add version
"<e> NL: Given a location ( assumed to be a URL ) , attempt to determine the store from the location . We use here a simple guess that the scheme of the parsed URL is the store ... : param uri : Location to check for the store name: get store from location </e> Method to be called from within a parse action to determine the end location of the parsed tokens ",get tokens end loc
"<e> NL: Normalize name e.g. filename|analyze name Args : name ( str ) : string to normalize Returns : str : normalized string name: normalize name </e> Normalize some of the string characters , preserving original length : param text : string to normalize : return : normalized string",normalize smb preserve len
<e> NL: Build directed indicator matrix . Build the sparse directed indicator matrix ` J ` from a graph adjacency matrix . Parameters ---------- adj_mat : matrix The original adjacency matrix . Returns ------- J : sparse matrix A directed indicator matrix in sparse form  name: build J </e> Returns sparse matrix with edges as an adjacency matrix Parameters ---------- faces : array of shape [ n_triangles x 3 ] The mesh faces Returns ------- edges : sparse matrix The adjacency matrix,mesh edges
"<e> NL: Get terminal width and height Return ( width , height ) tuple name: get terminal size </e> Returns a tuple ( width , height )",get dims
<e> NL: Get running notebook server data . Returns ------- data : dict Keys are ports and values are server data  name: get running notebooks </e> Get running notebook server data . ( Anticipating server / notebook split ) . Returns ------- data : dict Keys are ports and values are server data ,get running servers
<e> NL: Returns all values for the given : class:`Value ` type  name: get all values </e> Returns all entities for the given : class:`Entity ` type ,get all entities
"<e> NL: This function converts the adf files into tiff files Keyword Arguments : input_adf -- name , name of the adf file output_tiff -- Name of the output tiff file name: Convert adf to tiff </e> This function converts the bil files into tiff files Keyword Arguments : input_bil -- name , name of the bil file output_tiff -- Name of the output tiff file",Convert bil to tiff
"<e> NL: returns a dictionary of values in the header of the given file name: read header </e> Reads a Mechbase file found in file_path , returning a tuple with the header and a list of numpy arrays with the actual measurement values ",dr to values
<e> NL: Parse a YAML configuration file . Raises FileNotFoundError or HomeAssistantError . This method needs to run in an executor  name: load yaml config file </e> Blocking function to populate data in the heap . This is run in an executor ,.fill buffer
"<e> NL: From a given path , return its parent path . : param path : the node path as string . : return : the parent path as string  name: path parent </e> As same as * nix command ` touch ` : param path : path string",touch file
<e> NL: Find a version in a line . : param line : : return : name: find in line </e> Read an extracted line and return the artist and song part : param ligne : Line from the server to parse : return : The title and the artist included in the line in a tuple,parse line
<e> NL: For functions that return c_void_p  name: voidptr output </e> For functions that return a c_char_p array ,chararray output
"<e> NL: Check if a dimension of a unit is Zero . Parameters ---------- unit : object Unit expression . Returns ------- bool name: dim iszero </e> number of unit extracted from unit_name Parameters ---------- unit_name : str , unit # # # Returns ------- int",parse unit number
<e> NL: Find all packages that have been released : param platform : Platform to filter on name: package list </e> Find all teams that have performed releases : param platform : Platform to filter on,team list
<e> NL: Returns a rotation matrix around the selected axis by an angle  name: rotation around axis </e> Returns a label string for the selected axis,subplot label
<e> NL: Return an user if it exists  name: process email </e> Returns a cached copy of the user if it exists or calls auth_get_user otherwise ,get user
"<e> NL: Returns a list of num_points points in the line from p0 to p1 . The list includes p0 and p1 and points are ordered from p0 to p1  name: interpolate line </e> compute butt cap of width 2*hw for [ p0,p1 ] ",caps butt
<e> NL: Return list of valid context names  name: context names </e> Return list of valid context names ,context names
<e> NL: Convert integer to roman numeral  name: int to roman num </e> Convert an integer to a roman numeral,to roman
<e> NL: Download the data from Yann s website unless it s already here  name: maybe download </e> Download filename from url unless it 's already in directory ,maybe download
<e> NL: Guess value of example e under hypothesis h name: guess value </e> The value of example e under disjunction d,disjunction value
"<e> NL: Set value under key Args : key(str ) : Name of new or existing key value(str ) : New value for key Returns : Value set name: spot set </e> Append new ( unique ) value to the list of ' key ' . If ' key ' does not exist , create new list ",append add
<e> NL: Remove blank elements in val and return ret name: de blank </e> any elements of ret not indexed by idx are set to fill_value ,fill untouched
"<e> NL: Compare the lhs and rhs lists to see if the rhs contains elements not in the lhs name: new in rhs </e> After resolving symlinks , is path lhs either equal to or nested within path rhs ?",path really within
<e> NL: Get JOINING GROUP property  name: get joining group property </e> Get JOINING TYPE property ,get joining type property
<e> NL: Filter DataFrame by at least n valid values in at least one group  name: minimum valid values in any group </e> Validate that kwargs are at least in one signature of the methods Raises an error if it 's not the case,validate kwargs
<e> NL: Get the schema index path from the current application  name: get schema index path </e> Get the index path from the current application ,get component index path
"<e> NL: Find the last sql keyword in an SQL statement Returns the value of the last keyword , and the text of the query with everything after the last keyword stripped name: find prev keyword </e> Find the last sql keyword in an SQL statement Returns the value of the last keyword and the text of the query with everything after the last keyword stripped",find prev keyword
<e> NL: Returns the value of a global variable name: value of global </e> sets the path to the global variable,set workspace path
"<e> NL: Distance between a point p and a line defined by a , b and c. a , b , c : the line $ x + by + c = 0 $ p : the point name: signed distance point to line </e> Return the projection of the point p on the line defined by a , b and c with $ x + by + c = 0$",orthogonal projection point to line
<e> NL: Check to see if a pool has the specified connection : param str pid : The pool ID : param connection : The connection to check for : type connection : psycopg2.extensions.connection : rtype : bool name: has connection </e> A low latency check for an internet connection . : param str hostname : Hostname to use for connection check . : returns : Connection availability . : rtype : bool,check connection
<e> NL: Return default endpoint if specified  name: default endpoint </e> Create and initialise the Overpass API object . Passing the endpoint argument will override the default endpoint URL ,generate overpass api
"<e> NL: Get the line number of the first non - empty line in a list . Args : lines ( list of str ) : A list of text . Returns : int : If non - empty line exists return the line number , otherwise 0  name: get first line </e> Return the line spacing rule value calculated from the combination of * line * and * lineRule * . Returns special members of the : ref:`WdLineSpacing ` enumeration when line spacing is single , double , or 1.5 lines ",line spacing rule
<e> NL: This function performs the text - to - speech synthesis . Arguments --------- transcript : string Transcript of the speech Returns ------- np.ndarray -- The vocal speech name: synthesize vocal speech </e> Given an input string part of speech tags the string then generates a list of ngrams that appear in the string . Used to define grammatically correct part of speech tag sequences . Returns a list of part of speech tag sequences ,regenerate good tokens
<e> NL: Make a deep copy of list and dict objects  name: deepcopy strip </e> Make a deep copy of list and dict objects . Intentionally do not copy attributes . This is to discard CommentedMap and CommentedSeq metadata which is very expensive with regular copy.deepcopy ,deepcopy strip
<e> NL: Returns a list with pods contained in both given lists name: get pods contained in both lists </e> Remove all pods with these labels in this namespace,cleanup pods
<e> NL: Convert a timezone string to a timezone object  name: timezone from str </e> If a timezone is inferred from data check that it is compatible with the user - provided timezone if any ,maybe infer tz
<e> NL: Query for objects from a list of i d : param obj_type : object type : param query : query to get list of ids : return : list of objects name: id query to obj </e> Takes a query tree and returns the elements in list form . Args : query_tree ( dict ) : A nested dictionary that organizes queries by domain then intent . Returns : list : A list of Query objects ,flatten query tree
"<e> NL: Rotates a plane ( collection of points ) about an axis defined by pt1 and pt2 by an angle theta . args : pt1 : First point defining axis . pt2 : Second point defining axis  name: rotate plane </e> Given two points , gives us the coefficients for a parabola . args : pt1 : The first point . pt2 : The second point ",two pt parabola
<e> NL: return list item number or default if don t exist name: get or default </e> Don t look I m hideous!,extract authenticity token
<e> NL: Create JSON object from a file  name: file to json </e> Create / return ` ` Classification ` ` object from JSON,from json
<e> NL: Returns a CONSOLE_SCREEN_BUFFER_INFO structure for the given console or stdout filehandle is a Windows filehandle object returned by msvcrt.get_osfhandle ( ) name: get csbi </e> Convenience function for GetConsoleMode filehandle is a Windows filehandle object returned by msvcrt.get_osfhandle ( ),get console mode
"<e> NL: Get all the classes defined in a given module . Args : module ( module ) : Module for lookup Returns : List(tuple(str , o ) ) name: get classes defined in module </e> Register verb implementations in the module Parameters ---------- module : module Module with the implementations . verb_names : list Names of verbs implemented in the module . datatype : str A name of the datatype implemented . e.g ' dataframe ' , ' dict '",register implementations
<e> NL: Return the closest matching playlist name that starts with begin  name: get near plname </e> Return the closest matching playlist name that starts with begin ,get near name
<e> NL: Get a ssh client from the thread local cache  name: get ssh client </e> Used to get cache client,get cache
<e> NL: Convert a schedule from array to schedule form name: array to schedule </e> Return an available ND given an ID and a schedule ,ND SDR available
"<e> NL: Return HSL color components for given weight , where the max absolute weight is given by weight_range  name: weight color hsl </e> Return HSL color components for given weight where the max absolute weight is given by weight_range ",weight color hsl
<e> NL: Create a workload from a string in YAML format . Parameters ---------- yaml_str : str The YAML string of the workload . Returns ------- workload : Workload The initialized workload  name: from yaml </e> Get the workload from the storagegroup object . : param storage_group : storagegroup -- object : returns : workload -- str,get workload
"<e> NL: Check if replication is to be enabled . : param extra_specs : extra specifications : returns : bool - true if enabled , else false name: is replication enabled </e> Forces compilation cache to be generated for every subresource script . : param enabled : : type enabled : bool",set produce compilation cache
"<e> NL: Returns the section heading for the issue or None if this issue should be ignored  name: issue section </e> AB test ( Issue 3712 ) alters the string for media edge , this resoves it",get media edge comment string
<e> NL: Define a vector 's ctype  name: define ctype </e> Define a vector 's view ,define view
<e> NL: Find a group ID from a string containing a group name or ID . Raises ValueError if the string ca n't be resolved to a valid group ID on the system  name: name to gid </e> Parses a string for a valid gauge ID Args : s : The string to be parsed Returns : Returns a matching gauge ID or None if not found,parse for gauge
"<e> NL: Return a database engine . Args : db_dir ( str ) : Where the database is written to . Returns : Engine : The DB engine  name: get engine </e> Create the SQL database engine . Parameters ---------- path : string , default None Path for the database engine . Returns ------- data_str : Engine Engine from database ",db engine
<e> NL: Generate default configuration  name: get default config </e> Generate a configuration file with sample data ,init config
<e> NL: Return a shell - escaped version of the string * s *  name: single quote </e> Return a shell - escaped version of the string * s * ,single quote
<e> NL: Normalize the path(s ) value  name: parse normalized paths </e> Normalize a path obtained from the database ,normalize path
<e> NL: Prompt for an input for gravity and validated to be between 1.0 and 1.2 : arg ctx : Click context : arg prompt : User prompt . Will be checked for bounds : return : entered value as float name: get gravity input </e> Prompt for an input for temperature and automatically resolve unit ( Celcius or Fahrenheit ) : arg ctx : Click context : arg prompt : User prompt . Correct unit will be appended : return : entered value as float,get unit input
<e> NL: Resolve backend name from a deprecated name or an alias  name: resolve backend name </e> Returns deprecated backend names ,deprecated backend names
<e> NL: Is valid RSA private key ? : param str privkey : Private key file contents in PEM : returns : Validity of private key . : rtype : bool name: valid privkey </e> Reads a private key PEM block and returns a RSAPrivatekey : param private_key_pem : The private key PEM block : param passphrase : Optional passphrase needed to decrypt the private key : returns : a RSAPrivatekey object,read private key
<e> NL: given a classpath like foo . bar . Baz return module foo . bar and class Baz objects name: get objects </e> Parse a list of option strings like foo = bar baz = qux and return a dictionary . Will raise if keys are repeated ,parse option dict
"<e> NL: "" c - a : sodium chloride [ SP78 ]  name: bC Na Cl SP78 </e> "" c - a : sodium bromate [ SP78 ] ",bC Na BrO3 SP78
<e> NL: Compute the Euclidean distance between : math:`x ` and : math:`y ` . Expected dimension of x is 2 . Expected dimension of y is 2  name: euclidean distance </e> Compute the Euclidean distance between : math:`x ` and : math:`y ` . Expected dimension of x is 2 . Expected dimension of y is 2 ,euclidean distance
<e> NL: Get a user from given credentials name: .by credentials </e> Get credentials or prompt for them from options,get credentials
<e> NL: Python 2 compatible version of traceback.format_exception Accepts negative limits like the Python 3 version name: format exception </e> Python 2 compatible version of traceback . format_exception Accepts negative limits like the Python 3 version,format exception
<e> NL: Load json data from file . Parameters ---------- path : str Path to the json file . Returns ------- dict or list Json data  name: load json </e> Return the json data,fetch json data
<e> NL: Calculate the distance between home coordinates and geometry  name: distance to geometry </e> Calculate the distance between home coordinates and geometry ,distance to geometry
"<e> NL: Build service JSON in Stackdriver Monitoring API from SLO configuration . Args : slo_config ( dict ) : SLO configuration . Returns : dict : Service JSON in Stackdriver Monitoring API  name: build service </e> Build SLO i d from SLO configuration . Args : slo_config ( dict ) : SLO configuration . full ( bool ) : If True , return full resource i d including project . Returns : str : SLO i d ",build slo id
"<e> NL: Add parameters for model download script : param parser : Parser object : return : name: add download models arguments </e> Get the settings from a given parser , for a given script . : param parser : : param script : : return :",get settings
"<e> NL: Given the list of packages , group them by the Python version they are built for . Return : ( dict ) Python version : list of packages name: packages by version </e> Computes the version of packages after installing to_install ",simulate installation of
<e> NL: min and max x and y name: get graph extent </e> Process the min / max occurrence indicators,process occurs attrs
<e> NL: find the mean x for each label y name: mean xper y </e> Returns a dataframe with the mean absolute shap values for each feature ,mean absolute shap values
<e> NL: Generates an SSH deploy public and private key  name: generate ssh key </e> Create public and private ssh - keys ,generate rsa key pair
<e> NL: Use the mouse to cut ( remove ) some links : param path : path : type path : typing . List['bpy.types . OperatorMousePath ' ] : param cursor : Cursor : type cursor : int name: links cut </e> Remove logic brick connections : param path : path : type path : typing . List['bpy.types . OperatorMousePath ' ] : param cursor : Cursor : type cursor : int,links cut
"<e> NL: Normalize a numpy array of 3 component vectors with shape ( N,3 ) : param numpy.array arr : The numpy array to normalize : rtype : numpy.array name: normalize v3 </e> Normalize a numpy array of 3 component vectors shape=(n,3 )",normalize v3
<e> NL: Verify that a .zip file is valid and working . : param filepath : Filename . : type filepath : str name: zip verify </e> Verify that a tar.xz file is valid and working . : param filepath : Filename . : type filepath : str,txz verify
"<e> NL: Return a leaf nodeid - > node dictionary with "" parent "" and "" leaf "" ( average child "" leaf "" value ) added to all nodes  name: indexed leafs </e> Return parent node of leaf ",get parent
<e> NL: Returns dictionary of some basic features that can be calculated for segmented time series data name: base features </e> Returns dictionary of some basic features that can be calculated for segmented time series data,base features
<e> NL: Utility that detects and returns the columns that are forward returns name: get forward returns columns </e> Utility that detects and returns the columns that are forward returns,get forward returns columns
"<e> NL: Check if the object has a callable method with the given name , if yes return the method , otherwise return None : param theobj : the object that contains the method : param name : the name of the method : return : the method or None name: has method </e> Check if the Class supports the operation . : param path : Path of the collection or non - collection class . : param method : Method name . : return : True if the method is defined , false otherwise ",check class op
<e> NL: dynamically build autocomplete options based on an external file name: get default preds </e> dynamically build autocomplete options based on an external file,get default preds
<e> NL: Return a list of files to validate from files . If a member of files is a directory its children with a . json extension will be added to the return value  name: get json files </e> globs_to_include is a list of file name globs If the number of found files does not match num_files then no files will be included ,find all or none
<e> NL: Return a user if exists  name: process scopes </e> Return user name stored in JSON body . : raises InvalidTokenError in case user name does not exists ,user name
<e> NL: Waits for FILENAME to update waiting up to TIMEOUT seconds . Returns True if a save was detected and False otherwise  name: wait for save </e> Waits for nb_name to update waiting up to TIMEOUT seconds . Returns True if a save was detected and False otherwise ,wait for save
"<e> NL: solves lap_sparse X_i = B_i for each phase i. An LU decomposition of lap_sparse is computed first . For each pixel , the label i corresponding to the maximal X_i is returned  name: solve bf </e> solves lap_sparse X_i = B_i for each phase i , using the conjugate gradient method . For each pixel , the label i corresponding to the maximal X_i is returned ",solve cg
<e> NL: Tries to convert a value to a type constructor  name: to type constructor </e> Tries to convert value into boolean ,try value to bool
<e> NL: Checks whether ` action ` is a Flux Standard Action ( FSA )  name: is FSA </e> Checks whether Link action is disabled ,is disabled action
<e> NL: Returns assigned or unassigned depending on the state of the analyses the analysisrequest contains . Return unassigned if the Analysis Request has at least one analysis in unassigned state . Otherwise returns assigned name: assigned state </e> Returns unassigned port ranges according to IANA ,iana unassigned port ranges
"<e> NL: Generate random colors . To get visually distinct colors , generate them in HSV space then convert to RGB  name: random colors </e> Converts the RGB colors we get from ImageGrab into HSV for the NanoLeaf ` colorsys.py ` expects and provides values in range [ 0 , 1 ] , but we get and need them in a different range",rgb to hsv
<e> NL: Return HTML report file first lines  name: html init </e> Return HTML report file dataset type ,html dataset type
"<e> NL: Check if a file exists . Parameters : - filename : file to be checked Return false if file does n't exist , true if it exists  name: check file </e> Get a reference to a file and make sure it exists Returns : path : The path to the file , if it exists Raises : ValueError : If the provided file does not exist",get file
<e> NL: redis master has no particular configuration name: configure redis master </e> redis slave has a slaveof statement referencing master,configure redis slave
<e> NL: Calculate the average gradient for a shared variable across all towers  name: aggregate single gradient </e> Calculate the average gradient for each shared variable across all towers ,avg grads
<e> NL: Given a message or header return the header  name: extract header </e> Return a message header fragment dict ,.create header
"<e> NL: Encodes a numpy array into a PNG string . Args : image : a numpy array with shape [ height , width , 3 ] . Returns : PNG encoded image string  name: encode image array as png str </e> Encodes a numpy array into a PNG string . Args : image : a numpy array with shape [ height , width , 3 ] . Returns : PNG encoded image string ",encode image array as png str
<e> NL: Split a Path type containing a single NaN separated path into multiple subpaths  name: split path </e> Split a Path type containing a single NaN separated path into multiple subpaths ,split path
<e> NL: Create a new sample in LIMS  name: make sample </e> Create a new container in LIMS ,make container
<e> NL: Parse API data into the Python types our binding expects name: parse row </e> Parse API data into the Python types our binding expects,parse row
<e> NL: Create a figure instance  name: create figure </e> Create a window with a figure widget ,new figure
<e> NL: Pre - validate stream  name: pre validate </e> Pre - compute some values ,agg sum
"<e> NL: jinja2 template filter for color conversion to CSS text : param color : color as 3/4 items tuple / list , or as hex color like ' # aabbcc ' or ' aabbcc ' : return : : str : css color name: filter color </e> Returns the hex color for any valid css color name > > > lookup_color('aliceblue ' ) ' F0F8FF '",lookup color
<e> NL: Adds all runtime deps to build deps name: runtime to build </e> Check internal deps for dep_list,exist deps
<e> NL: Partition an integer . n ( int ) : the integer to partition k ( int ) : the number of elements in a partition min_size ( int ) : the minimum size of an element in the partition return : a generator of partitions as tuples name: integer partition </e> Generates all valid Partitions that differ from the given partition by one flip . These are the given partition 's neighbors in the metagraph of partitions ,all valid states one flip away
"<e> NL: Ask the user a question and expect a yes ( y ) or no ( n ) answer : param question : A question to the end user : return : True if the user answers ' y ' , False if the user answers ' n ' name: yes or no </e> Ask a question to the user , retry until the reply is valid",ask bool
<e> NL: Mint loan identifiers  name: loan pid minter </e> Generate links for loan ,loan links factory
"<e> NL: r Split and strip and discard empties  name: parse multi options </e> Split and strip and discard empties . Turns the following : A , B , into [ "" A "" , "" B "" ]",parse multi options
<e> NL: Get a set of collection IDs from the NDA GUID API . Args : data_structure_row : a dictionary returned by the NDA GUID data API . Returns : a set of collection IDs as integers  name: get collection ids from links </e> Get a set of experiment IDs from the NDA GUID API . Args : data_structure_row : a dictionary returned by the NDA GUID data API . Returns : a set of experiment IDs as integers ,get experiment ids from links
<e> NL: Compile the LLVM IR string with the given engine . The compiled module object is returned  name: compile ir </e> Compile the LLVM IR string with the given engine . The compiled module object is returned ,compile ir
<e> NL: Describe whether the policy represented by this class must be included  name: policy is required </e> Describe whether the policy represented by this class must be included ,policy is required
"<e> NL: Verifies that git is accessible and in the PATH . : return : True if accessible , false if not name: is git accessible </e> Test if a file exists at path on a host accessible with SSH ",exists remote
<e> NL: Gets the height of the given image . Args : filepath ( str or Path ) : filepath to image file . Returns : int : Image height  name: get image height </e> Uploads a . jpg image with the given filepath via the AdWords MediaService ,upload image
"<e> NL: Restore resource 's path and name from storage 's table . Args : table ( str ) : table name Returns : ( str , str ) : resource path and name name: restore path </e> Convert resource 's path and name to storage 's table name . Args : path ( str ) : resource path name ( str ) : resource name Returns : str : table name",convert path
<e> NL: Gets all text between the first [ ] in a string . : param string : String to search for text . : return : All text between [ ] name: search between brackets </e> Accepts a hex text string and translates it into a binary text string . Returns the binary text string ,hex2 bin str
<e> NL: usage ( arguments are optional ) : bond - watch < bond - name > < retry - interval > name: update config </e> checking Coo - Coo hydrogen - bond exception,check coo coo exception
<e> NL: Returns whether given node is referenced or not : param node : str : return : bool name: node is referenced </e> Returns a bool whether or not this node is a bhyve hypervisor,is bhyve hyper
<e> NL: Return empty output dictionary for a state : param state : the state of which the output data is determined : return : the output data of the target state name: create output dictionary for state </e> Returns the next state needed for reach the state Operation Enabled : param string target : Target state : return string : Next target to chagne,next state for enabling
<e> NL: Creates a dictionary representation of the parameter : param target : The function object in which the parameter resides : param name : The name of the parameter : param description : The documentation description for the parameter name: create argument </e> Generate documentation for single parameter of function : param param : dict contains info about parameter : param sub : prefix string for recursive purposes,create param doc
<e> NL: Find common attrs for project list : param sql_obj1 : : param sql_obj2 : : return : name: find common pr </e> Find common attributes for SQL join condition : param sql_obj1 : : param sql_obj2 : : return :,find common cond attrs
<e> NL: Returns a list of synonyms for a given expression name: fetch synonyms </e> take the similarity index from a two list of synonyms,similarity synonyms
"<e> NL: Convert a schedule from array to schedule form name: array to schedule </e> Return schedule from number , timedelta , or actual schedule ",maybe schedule
<e> NL: MEASUREMENT REPORT Section 9 . 1 . 21 name: measurement report </e> EXTENDED MEASUREMENT REPORT Section 9 . 1 . 52,extended measurement report
<e> NL: Get / set ' no - cache ' cache control status name: no cache </e> Sets a Cache - Control header ,cache control
"<e> NL: Exception middleware which returns the error as JSON string - > { "" message "" : error , "" status_code "" : code } : param error : Exception The exception object : return : str name: json exception </e> Returns all trace of error as list , which consists with tuples ( error line location , an error ) . : param exception _ : is the exception that whose trace is needed . : return : the list of tuples ",get trace
<e> NL: Deduces the full path to the occam shared / dynamic library  name: get occamlib path </e> Find the path to a dynamic library in a subfolder . Returns the full filename ,find library
"<e> NL: Converts 1 to True and 1 and None to False  name: binary int to bool </e> Converts "" True "" to True None to False . Case - insensitive ",string to bool
<e> NL: This method returns the maximal number of floors in the building . : param html_parser : a BeautifulSoup object : rtype : string : return : The maximal floor number name: get offer total floors </e> This method returns the floor on which the apartment is located . : param html_parser : a BeautifulSoup object : rtype : string : return : The floor number,get offer floor
<e> NL: Retrieve a parameter from the request . If the parameter is not present the default is returned name: get long or default </e> fetch the page parameter from request query,get page
<e> NL: Returns true if o is in e name: expr contains </e> Returns true if the first word in status is ' select ' ,is select
"<e> NL: Converts a dictionary of parameters to a readable string . : param parameters : A dictionary of parameters : return : A readable string of parameters and their values name: readable parameters </e> Apply appropriate multiplication factors to parameters . Parameters ---------- params : dict A dictionary of parameters and their values for running the software . See "" Use "" documentation for further details ",apply factors
<e> NL: wait_statement : WAIT select_item_list FROM identifier opt_WHERE opt_AFTER name: p wait statement </e> update_table_statement : UPDATE identifier SET col_expr_list opt_WHERE opt_USE_LOCK,p update table statement
"<e> NL: If there is a pending timeout , remove it from the IOLoop and set the ` ` _ timeout ` ` global to None  name: maybe stop timeout </e> If there is a pending timeout remove it from the IOLoop and set the _timeout global to None ",maybe stop timeout
<e> NL: r Return a list of items in indexable at positions indices  name: at indices </e> Get list of known indexable filenames from pygment lexer internals,get index filenames
<e> NL: Find the largest graph connected components the contains one given node name: graph connected component </e> Retain the top N largest components,retain top n
<e> NL: Get the ` path ` in the config file  name: get path </e> Gets the value of the specified key in the config file ,get value
<e> NL: Convert a timestamp value to a datetime name: to generalized time </e> Convert a GPS timestamp to datetime object : param timestamp : GPS timestamp in seconds . : return : datetime object ,gps to datetime
<e> NL: Extracts the contents of an archive info object name: extract info </e> Extracts the paths from the thin archive ,extract from thin archive
"<e> NL: This function checks to see if a special file . It checks if the file is a character special device , block special device , FIFO , or socket  name: is special file </e> Return the special character that ` c ` encodes . > > > escape_char(""n "" ) "" """,escape char
"<e> NL: Get the markers for the mesh . This is the default markers for fiberrules . : param str mesh_type : type of mesh , ' lv ' or ' biv ' : returns : The markers : rtype : dict name: get fiber markers </e> Get the root form without markers ",get root
<e> NL: Merge a list of dataframes with safe merge name: merge all </e> Merge a list of dataframes,merge list dataframes
"<e> NL: Return a list of all validation errors  name: get validation errors </e> Iterate over the validation errors , print to log.warn : param json_dict : : param schema_file : : return :",list errors
<e> NL: Check whether the port is unused Args : port ( int ) : port protocol ( str ) : application protocol ( tcp or udp ) Return : bool : whether the port is unused name: is unused port </e> ports should be of the format < int : port_number>/<str : protocol > where protocol is either tcp or udp : param port_list : < list > : return : < bool >,verify ports
<e> NL: Perform an inverse iteration to find the eigenvector corresponding to the given eigenvalue in a symmetric tridiagonal system  name: tridi inverse iteration </e> Computes eigenvector which corresponds to minimum eigenvalue ,minimum eigen vector
<e> NL: A function to compile configuration  name: compile function </e> Get a template path to compile a message ,.get template
<e> NL: A context manager that creates a temporary directory and changes the current directory into it  name: in temporary directory </e> A context manager that provides a temporary directory and cleans it up . Note : This context manager duplicates the base functionality of the tempfile . TemporaryDirectory ( ) context manager in Python 3.2 + Returns ------- str The path to the temporary directory,temporary directory
<e> NL: Get links to model data  name: get link </e> Get config with url links to models datas ,get links config
<e> NL: Convert ' value ' to float name: parse float </e> Convert options to list of float values and add to < extent > dict,add to dict
"<e> NL: Return two lists : plates with resp . source wells and target wells . In the final animation , source plates will be on the left and target plates on the right  name: list source and target plates </e> Return a list of well indices that correspond to the correct quadrant on a 384 well plate Parameters ---------- quad : Int The wells that need to be changed into a binary list Returns ------- List All the wells inside the desired quadrant",get quadrant indices
<e> NL: Check to see if we are in an IPython or Jypyter notebook  name: in notebook </e> Check if we are in IPython ,runs in ipython
<e> NL: Replace all of the symbols in the text  name: replace symbol </e> Assign IDs to all the symbols that will be involved in the SDD,compute symbol ids
<e> NL: invert txid string from bytes : param txid : txid byte string from wallet : type txid : bytes : return : inverted txid string : rtype : str name: invert txid </e> Return a txid : vout str,utxo str from utxo
<e> NL: e:/test / file.txt -- > file name: get file name without extension </e> Returns filename without extension > > > file_basename_no_extension('/home / me / file.txt ' ) ' file ' > > > file_basename_no_extension('file ' ) ' file ',file basename no extension
<e> NL: Load indentation data from disk Parameters ---------- path : path - like Path to experimental data callback : callable or None Callback function for tracking loading progress Returns ------- group : nanite . IndetationGroup Indentation group with force - distance data name: load group </e> Rate one or a list of force - distance curves Parameters ---------- data : nanite . Indentation or a list of those,rate fdist
<e> NL: Creates a subclass with value size constraint  name: .with size </e> Creates a subclass with value range constraint ,.with range
<e> NL: Convert portfolio value to portfolio ( linear ) return  name: to pct return </e> R_d : daily portfolio return series S_m : monthly portfolio std series times : month / day,bs std
"<e> NL: Given a token , get the token information for it  name: get token information </e> Given a token , get the token information for it ",get token information
<e> NL: Get the IDs of the GPUs that are available to the worker  name: get gpu ids </e> Get the name of all available gpus . : return : a list of all available gpus ,get available gpus
<e> NL: return closest XML ancestor node with a ` ` name ` ` attribute or the schema node name: get named parent node </e> Returns the closest ancestor to cls in bases ,nearest base
<e> NL: Add random noise to a random shapelet name: add noise </e> Adds random noise to a data series,add jitter
"<e> NL: Unpack byte object to text string , assuming big - endian byte order name: bytes to text </e> Unpack byte object to text string , assuming big - endian byte order ",bytes to text
<e> NL: c - c'-a : potassium sodium chloride [ GM89 ]  name: psi K Na Cl GM89 </e> c - c ' : potassium sodium [ GM89 ] ,theta K Na GM89
"<e> NL: Parse ` package ` string to package name and package specs . Args : package : a string , maybe with acceptable version specification(s ) Returns : parsed package requirement object name: parse package </e> Clean package data preliminarily to initializing package objects ",clean package data
"<e> NL: Like lstrip , but also returns the whitespace that was stripped off name: lstrip keep </e> Like rstrip , but also returns the whitespace that was stripped off",rstrip keep
<e> NL: Render a nested list of all the descendents of the given page including this page  name: pages menu </e> Return whether we should cache a page render,do not cache
<e> NL: Applicable to Brahmi derived Indic scripts name: is indiclang char </e> Applicable to Brahmi derived Indic scripts,is indiclang char
"<e> NL: Create structured dtype from a 2d ndarray with unstructured dtype  name: inflate dtype </e> reverse of _ ensure_data Parameters ---------- values : ndarray dtype : pandas_dtype original : ndarray - like Returns ------- Index for extension types , otherwise ndarray casted to dtype",reconstruct data
<e> NL: PHYSICAL INFORMATION Section 9 . 1 . 28 name: physical information </e> Read a block header but do not unpack . This is a replacement for get_blockheader . It skips f ahead 28 bytes ,skip blockheader
"<e> NL: Takes in a tuple and returns a string with spaces instead of commas name: tuple to str </e> Do some cleaning , remove double spaces new lines , clean commas and others : param str : : return :",clean str
"<e> NL: check_repo checks if a repo object is of type Repo from git , if not , attempts to make one : param repo : path to a local repo , a git . Repo object , or a url name: check repo </e> Get repo environment overrides dictionary to use in repo options process",get repo options env
<e> NL: Iterate through the stack of decorated functions until the original function . Assume that all decorators used functools.update_wrapper  name: walk decorator stack </e> Iterate through the stack of decorated functions until the original function ,walk decorator stack
<e> NL: Returns a list of the metadata of all capabilities in the vCenter  name: list capability definitions </e> Lists all licenses on a vCenter ,list licenses
"<e> NL: Returns the x509 from the contents of this string : param string : certificate contents as downloaded : type string : str : return : x509 or None name: get cert from string </e> extract and format certification information as comment Args : cert(cryptography.x509.Certificate , required ) : a x509 formatted certificate to process Returns : certification information as a string",describe cert
<e> NL: Detach a disk from a vm  name: . detach </e> Detach an iface from a vm ,. detach
<e> NL: Union of masks  name: join masks from masked array </e> Unify index masks and bool masks into bool masks,to column indices
<e> NL: Merge two dicts without modifying them inplace . Args : a ( dict ) : The first dict . b ( dict ) : The second dict . Overrides ` ` a ` ` on conflicts . Returns : dict : A merged dictionary  name: merge dicts </e> Recursively merge two dicts to create a new dict . Does not modify either dict . The second dict 's values will take priority over the first 's ,dict merge
"<e> NL: Resolve list ( convert provided value if not list ) . : param value : Value : type value : any name: resolve list </e> Return value or ( value , value ) if value is not a tuple ",to 2tuple
<e> NL: Load and read in configuration from local config file . : return Dictionary of the configuration  name: load config </e> Read the configuration files in config_file_sequence and return a dictionary of the parameter specified in their ' default ' section ,get smtp parameters
"<e> NL: Make sure any $ refs in the schema point properly back to this endpoint  name: rewrite refs </e> The refs in the schemas are arbitrary identifiers , and can not be used as - is as real network locations . This rewrites any of those arbitrary refs to be real urls servable by this endpoint ",rewrite ref
<e> NL: Checks if a matrix is a valid rotation matrix  name: is rotation matrix </e> Checks if a np.matrix is a valid SO2 pose ,is valid
<e> NL: Sets the settings . : param settings : The settings to set  name: set settings </e> Ensure default test settings are acceptable . Raises GabbiFormatError for invalid settings ,validate defaults
<e> NL: Split sequence into chunks  name: get chunks </e> Divides given sequence to n chunks,get chunk
<e> NL: Force utf8 string entries in the given datas name: to utf8 </e> Force utf8 string entries in the given datas,to utf8
<e> NL: Calculates RMS of means from zero before and after correction name: calculate rms means </e> Calculates RMS of rates from fitted_rates before and after correction,calculate rms rates
<e> NL: Find the indices of a set of pixels into another set of pixels . !!! ASSUMES SORTED PIXELS !!! name: index pix in pixels </e> Returns all the pixels neighbours of ipix,. neighbour pixels
<e> NL: Return a message indicating that echo is off  name: get echo message </e> Returns a message indicating that no data was found in the given clusters,no data message
<e> NL: Securely and interactively ask for a password name: ask password </e> Securely avaluate a Gdk . RGBA string ,eval rgba
<e> NL: Creates a parser suitable to parse the collection option in different subparsers name: collection option parser </e> Creates a parser suitable to parse the argument describing features ids in different subparsers,features ids argument parser
<e> NL: Parse X509 data from a DER encoded certificate : param certificate_der : Certificate in DER format : returns : crypto high - level x509 data from the DER - encoded certificate name: get x509 from der bytes </e> Parse a PKCS7 certificate bundle in DER or PEM format : param pkcs7 : A pkcs7 bundle in DER or PEM format : returns : A list of individual DER - encoded certificates,parse pkcs7 bundle
<e> NL: Returns True if x is numerically 0 or an array with 0 s  name: is zero </e> To sort file names numerically,numerical sort
<e> NL: Return the children of ` m ` and its direct parameters not registered in modules  name: children and parameters </e> Return the children of ` m ` and its direct parameters not registered in modules ,children and parameters
"<e> NL: Font contains glyphs for whitespace characters ? name: com google fonts check whitespace glyphs </e> Return 1 iff text[start : stop ] only contains whitespace characters ( as defined in Constants / Sets.py ) , 0 otherwise ",is whitespace
<e> NL: Build relation between postal codes and districts numbers name: build districts </e> Build relation between districts numbers and mps,build mps
<e> NL: Get a value from tag name: get tag value </e> Generate a CADF tag in the format name?value=<value > : param name : name of tag : param valuue : optional value tag,generate name value tag
"<e> NL: If * obj * is a non - string iterable , return * obj * . Otherwise , raise a ` TypeError ` with the given error message  name: list or raise </e> Raise TypeError if x is a str containing non - utf8 bytes or if x is an iterable which contains such a str ",to unicode optional iterator
<e> NL: Responsible for deriving the displayed value for the passed in field  name: get value from view </e> Utility for deriving shared key in ECDH procedure,derive shared key
<e> NL: Returns whether the system has a given executable : param executable : the name of the executable : type executable : str : rtype : bool name: has userland tool </e> Check if a file should be group executable,file group executable
"<e> NL: Return True if ` crumb_path ` is a valid Crumb value , False otherwise  name: is valid </e> Return the True if the ` arg_name ` is found in ` crumb_path ` ",has arg
<e> NL: Get the GitHub API token or the GitHub user if undefined  name: get token or user </e> Generates GitHub Markdown formatted API documentation using provided schemas in RequestHandler methods and their docstrings ,get api docs
"<e> NL: A helper to add a handler to a logger ensuring there are no duplicates  name: add logging handler once </e> Utility function to join a list by "" . "" ensuring that there are no repeated periods and that the final item ends in a period ",period join
<e> NL: Find the options for a given unit . Parameters ---------- unit : str The unit string Returns ------- list or None The list of similar units in crescent order or None if not found  name: find unit options </e> Find the conversion of a unit string . Parameters ---------- unit : str The unit string Returns ------- float or None The unit value relative to the standard or None if not found ,find unit
<e> NL: Get a NumPy array view of a VNL matrix  name: get array view from vnl matrix </e> Get a NumPy array view of a VNL matrix ,get array view from vnl matrix
<e> NL: Returns the number of bytes necessary to store the integer n  name: integer byte size </e> Returns the number of bytes necessary to store the integer n,integer byte size
<e> NL: Get the current process token name: get process token </e> Fetch the current process local data dictionary ,process data
<e> NL: Get the debug mode . Returns ------- The debug mode . True if currently in debugging mode  name: get debug </e> Sets up debug mode if there is a --debug argument on the commandline,get debug mode
<e> NL: Parse all [ server ] entries in the config file . Returns a dictionary mapping the server names to Server ( ) instances  name: parse servers </e> Collects server identifiers : param connection_pool : The connection pool to iterate through : param server_to_exclude : Server identifier to exclude,fetch identifiers
"<e> NL: Return the configuration directory path  name: get config directory </e> Returns the merged configuration , from the current directory and the user directory ",get config
<e> NL: returns the metadata of an EPW file path ( string ) filepath to the EPW file out : a dict containing EPW metadata name: epw metadata </e> muck with the date because EPW starts counting from 1 and goes to 24 ,muck w date
<e> NL: Neg tuple t_a returning tuple name: fq6 neg </e> Neg tuple t_a returning tuple,fq2 neg
"<e> NL: Given an Elastic client and and index , attempt to close the index : param elastic_client : Elastic client : param index : Index which is to be closed : return : Response from Elastic name: close index </e> Given an Elastic client and and index , attempt to open the index : param elastic_client : Elastic client : param index : Index which is to be opened : return : Response from Elastic",open index
<e> NL: Test save and load S3 : param ods : ods : return : ods name: through omas s3 </e> Test save and load Python pickle : param ods : ods : return : ods,through omas pkl
<e> NL: Wait until what return True name: wait until </e> Run the specified process and wait until it finishes ,run process
<e> NL: Internal callback function to be used with the callback API  name: src input callback </e> Callback for parsing to a ` ` datetime ` ` with ` ` opt_date_format ` `,cb time
<e> NL: Remap coordinates from cartesian to polar name: map crt to pol </e> Remap coordinates from polar to cartesian,map pol to crt
<e> NL: Convert a list of definition strings to a dictionary  name: defines to dict </e> Create a definition dictionary for the VNI input method . Returns a dictionary to be passed into process_key ( ) ,get vni definition
"<e> NL: Convert a date object to ' year , month , day , hour , minute , second . ' name: date to um date </e> timestamp to date . : param timestamp : int , e.g.1537535021 : return : Year - Month - Day Hour : Minute : Second",time to date
"<e> NL: Jedi caches many things , that should be completed after each completion finishes . : param delete_all : Deletes also the cache that is normally not deleted , like parser cache , which is important for faster parsing  name: clear time caches </e> Fortpy caches many things , that should be completed after each completion finishes . : param delete_all : Deletes also the cache that is normally not deleted , like parser cache , which is important for faster parsing ",clear caches
<e> NL: Compress file under tar mode which type more popular use in Unix operating system when compress failed with return source path : param source : source file path : return : zip file path name: tar file </e> Compress file under zip mode when compress failed with return source path : param source : source file path : return : zip file path,zip file
<e> NL: Creates a button with given information name: new button element </e> add simple button with bound action,add button
<e> NL: Validate the configuration and return an SNMP scanner  name: get scanner </e> Validate the configuration and return an Xfinity Gateway scanner ,get scanner
<e> NL: Initialize peer info table entry name: atlas init peer info </e> Create a peer table from the peer DB,atlasdb load peer table
"<e> NL: Tries to find a link with get_link creates a new link if link not found  name: .get or create </e> Retrieve ' next ' link , if applicable ",get collection links
<e> NL: Converts a human readable time string into seconds  name: to seconds </e> Converts a human readable sting to regModeS,string to regulation mode
<e> NL: Used to add custom Jinja2 filters to the env name: set jinja filters </e> Updates a Jinja2 env by adding custom functions and filters ,update jinja2 env
"<e> NL: Converts EmailAddress to SendinBlue API array name: email object </e> Converts EmailAddress to SendGrid API { email , name } dict",email object
<e> NL: Converts @opt to a string if it is n't one already . @opt : ( # dict ) dsn options name: to dsn </e> Enable gradients sharing globally . Parameters ---------- enabled : boolean Whether to share grads . Returns ------- None Examples -------- > > > import dragon.memonger as opt > > > opt . ShareGrads ( ),share grads
<e> NL: Calculate base id and version from a resource id  name: base id </e> Validates the given resource id ,is valid resource id
"<e> NL: Parse parametric sweep task factory object , and return task list . : param dict factory : A loaded JSON task factory object  name: expand parametric sweep </e> Parse file iteration task factory object , and return task list . : param dict factory : A loaded JSON task factory object ",expand task per file
<e> NL: Return all properties of kind in the specified range  name: get properties of kind </e> Gets all properties for all profiles in the specified store,get all profiles
<e> NL: Replace unsupported characters in unicode string . : param txt : text to filter : type txt : str : returns : Unicode text without any characters unsupported by locale : rtype : str name: utf8 replace </e> Convert JSON Unicode escapes in ' txt ' into actual characters,parse unicode escapes
"<e> NL: Returns s with a random character deleted name: delete random character </e> Returns list of project service classes . The list contains services whose resources need to be deleted prior , the project they are associated with , deletion . The resources can not be most likely deleted after the project is deleted first ",get project associated cleanup services
<e> NL: Set the color map of the current ' color ' scale  name: set cmap </e> Set the color map of the current color scale ,set cmap
<e> NL: Get all sales for a given time period name: sales for time period </e> Get all sales for a given time period,sales for time period
<e> NL: Build a map message  name: map helper </e> Build map from elements to element numbers ,compute element numbers
"<e> NL: Determines if the file is gzipped or not . Uses magic number . Args : filename ( str ) : The file to examine . Returns : bool : True if it is a gzipped file , False otherwise  name: is gzipped </e> Check if file gzipped ",is gzipped
<e> NL: Read all text from file at ` path `  name: read from path </e> Returns a list of n - grams read from the file at ` path ` ,get ngrams
<e> NL: Workaround for loading a big pickle file . Files over 2 GB cause pickle errors on certin Mac and Windows distributions . : param f : : return : name: load big file </e> Workaround for loading a big pickle file . Files over 2 GB cause pickle errors on certin Mac and Windows distributions . : param f : : return :,load big file
<e> NL: iterates all emojis in a text name: iter emoji entities </e> Returns the count of emojis in a string,emoji count
<e> NL: Build a gauges bulk as expected by the BE . : param gauges : Gauges to bundle . : type gauges : dict name: build gauges </e> Read a gauge file and return time series and values with outside gauges removed Supporting function to read_gauges_file,read one gauge file
<e> NL: Guess the optimal depth to use for the given list of arguments . Args : packages ( list of str ) : list of packages . Returns : int : guessed depth to use  name: guess depth </e> Guess the optimal depth to use for the given list of arguments ,guess depth
"<e> NL: Convert to a CTrait if the object knows how , else return None  name: trait cast </e> Knows if the server is streaming",is streaming
<e> NL: Splits the specified file into smaller files  name: split file </e> Split large message into smaller messages each smaller than the max_length ,split message
<e> NL: Apply a list of decorators to a given function . ` ` decorators ` ` may contain items that are ` ` None ` ` or ` ` False ` ` which will be ignored  name: apply decorators </e> Apply a list of decorators to a given function ,apply decorators
"<e> NL: Takes in path arg , if string , casts to Path name: init path </e> Takes in path arg , if string , casts to PurePath . Path objects are passed through , not cast back to PurePath ",init pure path
<e> NL: Verify if the management port of Splunk is responsive or not Args : splunk ( dict ) : details of the Splunk instance Returns : bool : True if Splunk is responsive . False otherwise name: is responsive splunk </e> Delete a splunk user by email,delete user
"<e> NL: Read a tree stored in mixed ascii / binary format . Attributes are also registered as tree object attributes . : param filename : path to the tree file : return : a pair ( tree , attribute_map ) name: read tree </e> Estimates a tree using fasttree : param alignment_fn : The aligned fasta format file to estimate a tree from . : return : The estimated tree filename if its created . Else False",estimate tree
<e> NL: Parse a configuration file / text using the given iterable  name: parse words </e> Parse a configuration file / text using the given iterable ,parse words
"<e> NL: If the list has duplicates , return one of the duplicates . Otherwise , return None  name: find duplicate </e> Given a list of parnames , including possible duplicates , returns a new list of parnames with duplicates prepended by one or more underscores to make them unique . This is also case insensitive ",unique parnames
"<e> NL: Return ' /a / b / c ' - > ( ' a ' , ' b ' , ' /c ' )  name: pop path2 </e> Return the keyid of ' key_value ' ",get keyid
<e> NL: Special behaviour when we have a multi line options name: split multiline </e> Special behaviour when we have a multi line options,split multiline
"<e> NL: Convert a Mapper 1-complex to a networkx graph . Parameters ----------- graph : dictionary , graph object returned from ` kmapper.map ` Returns -------- g : graph as networkx . Graph ( ) object name: to networkx </e> Simple wrapper for graph to adjacency matrix . Parameters ---------- graph : object The networkx graph object . Returns ------- matrix : array The numpy adjacency matrix ",networkx to adjacency
"<e> NL: Get the database defined in the settings , name: get database </e> Convert a timestamp as defined in the soap interface to the time format stored in the database ",timestamp to ordinal
<e> NL: Merge ' dict1 ' and ' dict2 ' dicts into a new Dict . ' dict2 ' has precedence over ' dict1 '  name: merge dicts with copy </e> Merge ' dict1 ' and ' dict2 ' dicts into ' dict1 ' . ' dict2 ' has precedence over ' dict1 ' ,merge dicts
"<e> NL: Remove None - valued keys from a dictionary , recursively  name: clean dict </e> Remove None - valued keys from a dictionary recursively ",clean dict
<e> NL: Just apply our own extension profile  name: apply generic setup profile </e> Set the encode / decode to our own encrypt_encode / encrypt_decode ,set backend funcs
"<e> NL: Writes a batch of size lines to buff  name: batch stream </e> from buff and xpoints , returns ypoints = buff[xpoints ] eventually smoothed by moving average over 2*nsmooth+1 positions",get ypoints
<e> NL: splits the discrete trajectories into conditional sequences by starting state name: split sequences multitraj </e> splits the discrete trajectory into conditional sequences by starting state,split sequences singletraj
"<e> NL: See if the user has one of their own local .cfg files for this task , such as might be created automatically during the save of a read - only package , and return their names  name: get usr cfg files for py pkg </e> See if the user has one of their own local . cfg files for this task such as might be created automatically during the save of a read - only package and return their names ",get usr cfg files for py pkg
<e> NL: Loads the HParams configuration from a hparams file of a trial  name: load hparams </e> Split hparams based on key prefixes ,parse hparams
<e> NL: Get the key of the maximum value in a dictionary . Parameters ---------- dictionary : dict Dictionary to evaluate . Returns ------- int Key of the maximum value  name: get max value key </e> Returns maximum value of a dictionary ,dict max
<e> NL: Return ` True ` is a process with the given PID is running  name: pid running </e> Return True if a process with the given PID is currently running ,pid exists
<e> NL: returns the number of images in a directory name: num images in dir </e> Returns the total number of images in gallery,get gallery size
"<e> NL: Get all subclasses of a class . Args : c ( type ) : Class to get subclasses of . Returns : list[type ] : List of subclasses of ` c `  name: get subclasses </e> Returns an attribute directly associated with this class ( as opposed to subclasses ) , setting default if necessary",class local
"<e> NL: Mint loan identifiers  name: loan pid minter </e> I believe this adds zeros to avoid errors e.g. , 30yr loan vs 40yr loan",add zeros to array
<e> NL: n - c : carbon - dioxide sodium [ HMW84 ]  name: lambd CO2 Na HMW84 </e> n - c : carbon - dioxide bisulfate [ HMW84 ] ,lambd CO2 HSO4 HMW84
"<e> NL: Send HttpResponseRedirect to LOGOUT_URL  name: logout with message </e> Send HttpResponseRedirect to LOGOUT_URL . ` msg ` is a message displayed on the login page after the logout , to explain the logout reason ",logout with message
<e> NL: Get the model field of a schema field : param Schema schema : a marshmallow schema : param str field : the name of the schema field : return str : the name of the field in the model name: get model field </e> Convert a poly model field to an OpenAPI 3 SchemaObject . : param field : the field to be converted : param apistrap : the extension used for adding reusable schema definitions : return : a schema,poly model field to schema object
"<e> NL: Guess the input type of the parameter based off the default value if unknown use text name: . guess type </e> Guess the input type of the parameter based off the default value , if unknown use text",guess type
<e> NL: Get right color for the state : param state : the state : type state : str : return : the color related of the state : rtype : str name: get state color </e> Returns the Fock state Args : n ( int ) : the occupation number fock_dim ( int ) : the size of the truncated Fock basis Returns : array : the Fock state,fock state
<e> NL: - > boolean : True - valid duration - > boolean : False - invalid duration name: values valid </e> - > boolean : True - valid syntax - > boolean : False - invalid syntax,syntax valid
<e> NL: Return a dictionary of values contained in a given connection string name: parse connection string </e> This method generates a dictionary of the query string parameters contained in a given editable URL ,build editable options
<e> NL: Adjust the bounding box as specified by user . Returns the adjusted bounding box . - bbox : Bounding box computed from the canvas drawings . It must be a four - tuple of numbers  name: adjust bounding box </e> Apply a single ' all ' label to a given bounding box . This bounding box must be as specified by the : map:`bounding_box ` method ,bounding box to bounding box
<e> NL: Make a temporary file with contents  name: temp filename </e> Make a temporary python file return filename and filehandle ,temp pyfile
"<e> NL: Split apart command - line lists / ranges into a list of numbers  name: convert arg range </e> Split line into ( numbers , text ) ",nums and text
"<e> NL: getattr for a dot separated path If an AttributeError is raised , it will return None  name: getattr path </e> getattr for a dot separated path",getattr path
<e> NL: Check if a given record is indexed  name: can elasticsearch </e> Check if a given object is a record ,is record
<e> NL: returns theta but with gradient ( theta[0 ] ) and intercept ( theta[1 ] ) to angle and displacement name: gradient to angle </e> returns theta but with angle ( theta[0 ] ) and displacement ( theta[1 ] ) to gradient and intercept,angle to gradient
<e> NL: Import a dotted module path and return the attribute / class designated by the last name in the path . Raise ImportError if the import failed  name: import string </e> Import a dotted module path and return the attribute / class designated by the last name in the path . Raise ImportError if the import failed ,import string
<e> NL: Determine if the root device is a volume  name: is booted from volume </e> List LVM volume group associated with a given block device ,list lvm volume group
<e> NL: Gets the subclasses of a class  name: get subclasses </e> gets the pks of an uml class ,get pks
<e> NL: Converts predicted labels to probabilistic labels . Args : preds(ndarray ) : Predicted labels . n_classes(int ) : Total number of classes . Returns : ndarray : predicted probabilities  name: pred to prob </e> Utility function for ploting predicted probabilities as bar plots,plot to array
<e> NL: Generates a dictionary with safe keys and values to pass onto Neo4j : param query : string with the Cypher query to execute : param user_ns : dictionary with the IPython user space name: extract params from query </e> Generates a dictionary with safe keys and values to pass onto Neo4j,extract params from query
"<e> NL: Return the first item in iterable that matches predicate , or None if no match name: find first </e> Break a iterable on the item that matches the predicate into lists ",break iterable
"<e> NL: Read file contents from file filename name: get file contents </e> Extracts a file 's contents from a "" file "" input in a CGI form , or None if no such file was uploaded ",get cgi parameter file
<e> NL: iterate through all of the type signatures in a sequence name: typeseq iter </e> Iterate through all the single - axis neighbors of a coordinate tuple . Order is deterministic ,iterate neighbors
<e> NL: Calculate the total number of line in the given file  name: get total line for file </e> Calculate the total number of types for each part of speech taggers ,get pos counts
"<e> NL: Returns true if the given text matches the given regex pattern  name: is match </e> Take mask and will create a key to unmask suspected data , then check if the xor'd data matches a regex pattern",deobfuscate simple
"<e> NL: Merge metadata of run on multiple grid districts name: process metadata </e> Computes the partisan bias for the given ElectionResults . The partisan bias is defined as the number of districts with above - mean vote share by the first party divided by the total number of districts , minus 1/2 ",partisan bias
<e> NL: True if T is a transition matrix name: is transition matrix </e> Tests whether T is a transition matrix,is transition matrix
"<e> NL: Axes : x - anterior , y - superior , z - right name: create patella acstest </e> Calculate the ISB pelvis anatomic coordinate system axes : x - anterior , y - superior , z - right",create pelvis acsisb
<e> NL: Factory methods to create Record from pymarc . Record object  name: .from record </e> Factory for record bucket generation ,default bucket link factory
<e> NL: Update config options with the provided dictionary of options  name: update config </e> Update module_options with any options defined in module path ,load module opts from file
<e> NL: Calculates the Poisson log - likelihood  name: poisson ll </e> Log likelihood for a categorical random variable,log lik categorical
<e> NL: Scale the figure size from matplotlibrc by the factors given in the array scale the first element is for the width the second for the heigth  name: scale figs </e> radi_ev is the equal volume radius e is the ratio of the diameter to the heigth,rsp cilinder
<e> NL: r Ratio of rainfall to total precipitation name: liquid precip ratio </e> r Average daily precipitation intensity,daily pr intensity
<e> NL: return the python object saved in the given path : param path : the path to be loaded : return : name: load obj </e> Loads the TensorRec model and TensorFlow session saved in the given directory . : param directory_path : str The path to the directory containing the saved model . : return :,load model
<e> NL: Returns True if the elements of s when sorted are consecutive integers  name: all consecutive </e> The invariant for all Vector operations . Returns ` True ` when the elements are correctly ordered ,is ordered
<e> NL: The amount one needs to rotate from angle a1 to angle a2 in a clockwise direction . I.e. increasing a1 until it reaches a2 . @param a1 : The first angle . @param a2 : The second angle  name: clock angle </e> merge two lists by overwriting the original with the second one if the key exists : param a1 : : param a2 : : return :,merge list no duplicates
"<e> NL: Get the size of a remote image in pixels : param : return : tuple containing the width and the height of the image in pixels name: get remote image size </e> Converts size in characters to size in pixels : param size : size in characters , rows : return : size in pixels , pixels",convert tkinter size to Wx
<e> NL: Parse SDFile data part into dict name: optional data </e> Parse SDFile data part into dict,optional data
<e> NL: Properly quotes reserved characters for the http request . Parameters ---------- url : string any valid request url Returns ------- url : string url with properly quoted reserved characters name: url quote </e> Return a list of the reserved characters ,list url unsafe chars
"<e> NL: Take list of iterables / non - iterables and outputs a list of non - iterables  name: flatten list </e> saves a list of iterables , commonly they are length 2 and contain floats , but the fmt parameter can be changed for flexibility pickles them to a file named using the string sequence_filename , in the directory that this module is located in",save sequence
<e> NL: Load global yaml file if one exist . : param yaml_path : : return : None name: load yml </e> load yaml file given a file string - like file path . return must be a dictionary . : param yaml_path : : param verbose : : return :,yaml load
<e> NL: Get the default local IP address  name: get ip </e> Get a stream 's local address ,get stream address
<e> NL: Extract actions from class  name: extract actions from class </e> Render actions available ,application actions
"<e> NL: Get the column index from the header of the csv name: get column index </e> Get a dictionary where k = header name , v = column index . : param infile : CSV file to read from : return : dictionary where k = header name , v = column index",get headers
<e> NL: converts a numpy array to a GPUArray name: to gpu async </e> converts a numpy array to a GPUArray,to gpu
<e> NL: Returns the path of an executable file  name: find executable </e> Handle resource management within an executable file ,bundle dir
<e> NL: Suppress the standard out messages  name: suppress stdout </e> Suppress ProgressBar 's warning ,get progressbar
<e> NL: import module from python file path and return imported module name: get imported module from file </e> import module from python file path and return imported module,.get imported module from file
<e> NL: Get the select options for the model selector name: get model choices </e> Get the select options for the application selector,get application choices
<e> NL: Turn an utf8 path into a unicode path  name: unicode path </e> Format a path in utf8 quoting it if necessary ,format path
"<e> NL: Resolve dict type based on string Parameters ---------- dict_type : [ ' sndict ' , ' ndict ' , ' dict ' , ' odict ' ] Dict - type in string format Returns ------- class name: resolve dict type </e> Resolve dict type based on string Parameters ---------- dict_type : [ ' ndict ' , ' dict ' , ' odict ' ] Dict - type in string format Returns ------- class",resolve dict type
<e> NL: Load a GOParser object from a pickle file . The function automatically detects whether the file is compressed with gzip . Parameters ---------- fn : str Path of the pickle file . Returns ------- GOParser The GOParser object stored in the pickle file  name: read pickle </e> Load a GOParser object from a pickle file . The function automatically detects whether the file is compressed with gzip . Parameters ---------- fn : str Path of the pickle file . Returns ------- ` GOParser ` The GOParser object stored in the pickle file ,read pickle
<e> NL: Read at most nlines lines from file filename . If nlines is < 0 the entire file is read  name: read nlines </e> Reads first nlines lines of Combosaurus data from filename_in and writes shortened data to filename_out,shorten dataset
<e> NL: Parse the header and return a header object name: get header </e> Return the source of a header in a partially preprocessed state ,get header
"<e> NL: Expand a list of headers into a dictionary . headers : a list of [ ( key , value ) , ( key , value ) , ( key , value ) ] Returns : a dictionary representation of the list name: header list to dict </e> Convert key - value dictionary into CLI argument list ",to argv
<e> NL: .. versionadded : : 1.0.0 name: io submit </e> Set all datetimes to system time . The ` ` utc ` ` parameter of other methods will be used . This can be changed by calling ` ` set_utc ( ) ` ` . .. versionadded : : 0.1.0,unset utc
"<e> NL: Remove overlaps from a set of polygons . : param polys : List of polygons . : returns : List of polygons with no overlaps  name: minimal set </e> Determine each polygons node ( x , y ) coordinates from _ extract_all_polygons ( )",polygon coords
<e> NL: Checks whether ` chars ` is a control character  name: is control </e> Checks whether ` chars ` is a control character ,is control
"<e> NL: Parse "" state "" column from ` qstat ` output for given job_id Returns state for the * first * job matching job_id . Returns ' u ' if ` qstat ` output is empty or job_id is not found  name: parse qstat state </e> Parse "" state "" column from ` qstat ` output for given job_id Returns state for the * first * job matching job_id . Returns ' u ' if ` qstat ` output is empty or job_id is not found ",parse qstat state
<e> NL: Captures the output of PyClips objects that print directly to stdout  name: get clips output </e> Temporarily captures / redirects stdout ,output capturing
<e> NL: gets a single products metadata name: get product metadata path </e> gets a single products metadata,get product metadata path
<e> NL: Returns a random alphanumeric string of length ' length ' name: random key </e> Generate a ' random ' key of length ' length ' We are using pseudorandom since we are not a bank ,random key
<e> NL: Strips a newline from the end of text  name: strip trailing newline </e> Strips the accents from the defined substring of the given text . Works for text both in unicode NFD and NFC format,strip accents
"<e> NL: MNIST dataloader with ( 32 , 32 ) sized images  name: get mnist dataloaders </e> > > > freq = octave_space(4 , 32 , 1 ) > > > print(freq ) [ 4 . 8 . 16 . 32 . ]",octave space
<e> NL: Create a menu from actions  name: create action menu </e> Create dialect specific actions ,create dialect actions
<e> NL: Build foreman - maintain advanced procedure run service - start name: run service start </e> Build foreman - maintain advanced procedure run maintenance - mode - disable,run disable maintenance mode
<e> NL: This function retrieves information about the latitude and longitude of the DEM map  name: DEM lat lon </e> This function calculates the slope and aspect of a DEM map ,Calc Gradient
<e> NL: returns a sheet index based on user input from a list of sheet names : list param sheets : List of sheet names : return : sheet index : rtype : int name: get sheet from input </e> Return processor by processing a given sheet of a spreadsheet file ,process table
"<e> NL: generates unique hashable items in list1 , in the same order they were given in name: unique items </e> Returns unique items in list_ in the order they were seen ",unique ordered
<e> NL: Get a field to sort by name: get sortkey </e> Pipe sort by name cmd in case sort by coordinates,prepare bam file
"<e> NL: Create a simulation plan ( what to record , etc . ) from a simulation config file  name: load sonata simulation plan </e> Logarithmic probability distribution : evaluation : Observed data to compared with simulation data . : type : list : simulation : simulation data to compared with evaluation data : type : list : return : Logarithmic probability distribution : rtype : float",log p
<e> NL: Get meta - information about a file . Parameters ---------- filepath : str Returns ------- meta : dict name: get file meta </e> Get meta - information about a file ,get file meta
<e> NL: Verify there is a window / tab present by URL Parameters : url : value name: verify window present by url </e> Verify whether there is a provider for the URL ,has provider for url
<e> NL: Iterator over all tickets name: tickets of horae </e> Iterator over the tickets of a client,tickets of client
<e> NL: Check to see if the version specified has already been uploaded to the configured index name: version already uploaded </e> check the first 100 reads to see if a FASTQ file has already been transformed by umis,is transformed
"<e> NL: Determine wether we can push the ref If the ref is further ahead than the tag we only want to push up to this tag  name: get push src </e> Returns a tuple ( ahead , behind ) describing how far from the remote ref the local ref is ",stat ahead behind
"<e> NL: Find the unique scene labels Parameters ---------- scene_list : list , shape=(n , ) A list containing scene dicts Returns ------- labels : list , shape=(n , ) Unique labels in alphabetical order name: unique scene labels </e> Find the unique scene labels",unique scene labels
<e> NL: Convert any numpy objects into built - in Python types  name: sanitize np </e> Accessor for XSD built - in types ,builtin types
<e> NL: Set the log level to log level defined in config  name: update log level </e> Add an option ' --log - level ' to set the log level ,ocrd loglevel
<e> NL: Unpack a telstate value from its encoded representation  name: h5 telstate unpack </e> Create a telstate view by appending ` name ` to all existing namespaces ,relative view
<e> NL: Extracts the current balance from the html tree structure . : param tree : The HTML page name: current balance </e> Extracts transactions from the html tree structure and returns a list . : param tree : The HTML page,current transactions
<e> NL: convert an LDAP entry dict to a passwd map tuple name: passwd convert </e> convert an LDAP entry dict to a hosts map tuple,hosts convert
"<e> NL: Get the clipboard s text on OS X  name: osx clipboard get </e> Get clipboard text data . Return a unicode instance , or None ",x xclip get
<e> NL: Test whether at least one Nvidia GPU is available  name: is gpu usable </e> r Return True if at least one GPU is available,check gpu existence
<e> NL: Calculate time series mean values for a dataset : param dataset : Dataset object : type dataset : : class:`dataset . Dataset ` : returns : time series for the dataset of shape ( nT ) name: calc time series </e> Receives raw dataset and adds pre - processed dataset in XML format used in the ACL - RD - TEC-2.0,preprocess dataset acl xml
<e> NL: Determine if the file is an image name: is image file </e> Test if the data set is an image,is image
<e> NL: Returns a full show dir / metadata / episode.jpg path for MediaBrowser episode thumbs . ep_obj : a TVEpisode object to get the path from name: get episode thumb path </e> Returns the path where the episode thumbnail should be stored . Defaults to the same path as the episode file but with a .metathumb extension . ep_obj : a TVEpisode instance for which to create the thumbnail,get episode thumb path
"<e> NL: Function returning a glass catalog instance . Arguments : catalog : name of supported catalog ( CDGM , Hoya , Ohara , Schott ) Raises : GlassCatalogNotFoundError : if catalog is n't found name: get glass catalog </e> Add our indexes to the catalog . Doing it here instead of in profiles / default / catalog.xml means we do not need to reindex those indexes after every reinstall ",add indexes
<e> NL: Called when the window gets destroyed Hides the window . : param Gtk . Window window : The window : param Gdk . Event event : Event data name: on delete event </e> Compute power spectrum density for given window : param window : : param standardize : : return :,get power spectrum density
"<e> NL: Specifies whether to always send extra HTTP headers with the requests from this page . : param headers : Map with extra HTTP headers . : type headers : Headers name: set extra httpheaders </e> Generate a list of headers to send with the request . Args : config ( glean . Configuration ) : The Glean Configuration object . Returns : headers ( list of ( str , str ) ) : The headers to send ",get headers to send
<e> NL: checks for the presence of the specified file or directory in the current working directory name: file present </e> Checks that the given file path exists in the current working directory ,changelog file option validator
"<e> NL: Dispatch an event to sublocations of a given object When a move event happens for an object , it 's important to notify subobjects as well  name: dispatch to sublocations </e> Dispatch the event from an existing orm obj ",dispatch orm event
<e> NL: Read defaults from given path . See : data:`DEFAULTS_PROVIDERS ` for inner workings  name: read defaults file </e> Import and read defaults from given Python entity . See : data:`DEFAULTS_PROVIDERS ` for inner workings ,read defaults python
"<e> NL: Group outputs into contitional and stable : param node : ast node : returns : tuple of ( contitional , stable ) name: conditional lhs </e> Group lhs and rhs into contitional , stable and undefined : param node : ast node : returns : tuple of ( contitional_lhs , stable_lhs),(contitional_rhs , stable_rhs ) , undefined",conditional symbols
"<e> NL: Get the snapshot list from snapshot dir name: get snapshot list dir </e> Get the creationTime and state from current snapshot xml , and create a new xml for snapshot - create with redefine and current flags ",create redefine xml
<e> NL: Form helper to create a new catalog name: inline catalog helper </e> Helper method for catalog based folder contents ,get obj position in parent
"<e> NL: Get a role 's ID . Args : role ( obj ) : a Python object . Returns : str : the role 's ID or None  name: get role id </e> Given a name , validates that the role exists whether it is a proper ID or a name . Returns the role if one was found , else None ",get role
<e> NL: Cleans VCS uris from pipenv . patched . notpip format name: add ssh scheme to git uri </e> Retrieves dependencies for the requirement from pipenv . patched . notpip internals ,get dependencies from pip
<e> NL: recursively convert dict content into string name: dict to str </e> recursively convert dict content into string,to dict str
<e> NL: null terminate a string name: null term </e> null terminate a string,null term
<e> NL: Check a connection is available @Args : * [ connection ] if connection is alive return True @Returns : * [ bool ] name: check connection </e> Set connection to use as default when requesting ' device ' without connection specification,set default connection
<e> NL: Set the output prefix name: set prefix </e> Retrieve the output prefix,get prefix
<e> NL: returns the default configuration directory path name: get directory </e> Return the default configuration - file path ,get default configfile path
<e> NL: Turn URL string into parameters  name: split url string </e> Turn supported_os into a condition ,convert supported osto conditions
<e> NL: Convert JSON string to object name: deserialize requirements </e> Convert all unicode strings occurring in a JSON object to utf-8 encoded string of type str . : param object value : a JSON node : returns object :,unicode to str
<e> NL: Strip non - printable characters from a line . : param line : The line to clean up . : return : The stripped line . : rtype : str name: strip non printable </e> Recursive search for the line 's hydrological level . Parameters ---------- line : a Centerline instance Returns ------- The line 's order,line order
<e> NL: Calculate the vorticity vector from the vorticity tensor in tree dimensions name: vorticity vector3d </e> Calculate the vorticity vector from the vorticity tensor in two dimension,vertical vorticity2d
"<e> NL: check if path is testcase path or path list . Args : path ( str / list ) : file path or file path list . Returns : bool : True if path is valid file path or path list , otherwise False  name: is testcase path </e> If edges given , saves the path provided . Returns whether the path is disconnected or not",check edges
<e> NL: Gathers facts from the < file - list/ > RPC  name: get facts </e> Gathers the _ is_linux fact using the < file - show/ > RPC on the EVO version file ,get facts
<e> NL: Called before a view locks for a fetch . : returns : ` ` accpac . Continue ` ` or ` ` accpac . Abort ` ` : rtype : int name: on before fetch lock </e> Called before a view locks for a read . : returns : ` ` accpac . Continue ` ` or ` ` accpac . Abort ` ` : rtype : int,on before read lock
<e> NL: Helper function for argument parsing  name: int or str </e> for argument parsing ; restricts float value from 0 to 1,restricted float
<e> NL: Create a client for mesh service APIs  name: mesh service create </e> Create a client for mesh volume APIs ,mesh volume create
<e> NL: A helper method to read of bytes from a socket to a maximum length name: socket recvall </e> A helper method to read of bytes from a socket to a maximum length,socket recvall
<e> NL: Compute product of Hankel matrix ( gene_vect ) by vector prod_vect . H is not computed M is the length of the result name: SFastHankel prod mat vec </e> Compute product of Hankel matrix ( gene_vect ) by vector prod_vect . H is not computed M is the length of the result,FastHankel prod mat vec
<e> NL: Simply gets input from user name: get input </e> Gets input from user,term input
<e> NL: Return a mapping of exit codes to status strings . Args : context ( scriptworker.context . Context ) : the scriptworker context Returns : dict : the mapping of exit codes to status strings  name: get reversed statuses </e> Open the log and error filehandles . Args : context ( scriptworker.context . Context ) : the scriptworker context . Yields : log filehandle,get log filehandle
<e> NL: Attempts to read a python version string from a runtime . txt file name: read version </e> Attempts to read a python version string from a runtime.txt file : param path : to source of the string : return : python version : rtype : unicode or None,read version
<e> NL: Disable serial data logger name: disable logger </e> Enable serial data logger,enable logger
"<e> NL: Reads bytes from a buffer . Returns a tuple with buffer less the read bytes , and the bytes  name: read bytes </e> Allocate a buffer on the device with specified number of bytes ",alloc device
<e> NL: Checks to see if the list contains any values that are not iterable . : param lst : list to check : return : True if any value in the list is not an iterable name: is list flat </e> True if any value contains any of the strings in the ' strings ' iterable . Only used by guess_compose ,val in str
<e> NL: Find position values in an edf asci representation Parameters ---------- asc_str : str String with edf asci represenation as returned by read_edf  name: find edf pos </e> Find artifacts in an edf asci representation Parameters ---------- asc_str : str String with edf asci represenation as returned by read_edf ,find edf triggers
<e> NL: c - a - a ' : magnesium chloride hydroxide [ HMW84 ]  name: psi Mg Cl OH HMW84 </e> a - a ' : chloride hydroxide [ HMW84 ] ,theta Cl OH HMW84
<e> NL: Convert a datetime object to a serializable int . Parameters ---------- time : datetime.datetime The datetime to convert . Returns ------- int The timestamp of the datetime object  name: encode time </e> Formats datetime object to structured data compatible datetime string ,structured data datetime
<e> NL: Get a resource type name: metadef resource type get </e> GET a resource and return the 1st element found,get resource
<e> NL: Return highest available version for a package in a list of versions . Uses pkg_resources to parse the versions . @param versions : List of PyPI package versions @type versions : List of strings @returns : string of a PyPI package version name: get highest version </e> Returns highest available version for a package in a list of versions Uses pkg_resources to parse the versions,get highest version
<e> NL: Replace all values case - insensitive - matching values in - line in a list . Return whether any values were replaced  name: list replace ci </e> Replace all values matching values in - line in a list . Return whether any values were replaced ,list replace
<e> NL: Update the snippet 's settings name: update snippet settings </e> Update component settings ,update settings
<e> NL: get domain reserved memory name: get reserved memory </e> get domain current memory inside domain,get current memory
<e> NL: Calculate p / z where p is real efficiently name: mpc mpf div </e> Calculate 1 / z efficiently,mpc reciprocal
"<e> NL: Return the page number of the given mention . If a candidate is passed in , this returns the page of its first Mention . : param mention : The Mention to get the page number of . : rtype : integer name: get page </e> If the bot is the first @mention in the message , then this function returns the stripped message with the bot 's @mention removed . Otherwise , it returns None ",extract query without mention
"<e> NL: Retrieves the scaffolder information . Yields : tuple[str , str ] : pairs of scaffolder names and descriptions  name: get scaffolder information </e> Retrieves the parsers information . Returns : list[tuple[str , str ] ] : parser names and descriptions ",get parsers information
<e> NL: Check if a file exists  name: file exists </e> Check if file exists with argparse,extant file
<e> NL: return list of species of a SBML model name: get listOfSpecies </e> return list of species of a SBML model,get listOfSpecies
<e> NL: Returns system uptime  name: uptime linux </e> get uptime of computer Returns : uptime ( : obj:`datetime.timedelta ` ),get uptime
"<e> NL: Implements scalarmult(B , e ) more efficiently  name: scalarmult B </e> Implements scalarmult(B , e ) more efficiently ",scalarmult B
<e> NL: Random page generator . @param total : Maximum number of pages to retrieve in total @type total : int @param site : Site for generator results . @type site : L{pywikibot.site . BaseSite } name: random page generator </e> Ancient page generator . @param total : Maximum number of pages to retrieve in total @type total : int @param site : Site for generator results . @type site : L{pywikibot.site . BaseSite },ancient pages page generator
"<e> NL: Display an OpenID response . Errors will be displayed directly to the user ; successful responses and other protocol - level messages will be sent using the proper mechanism ( i.e. , direct response , redirection , etc . )  name: display response </e> Display an OpenID response . Errors will be displayed directly to the user ; successful responses and other protocol - level messages will be sent using the proper mechanism ( i.e. , direct response , redirection , etc . ) ",display response
<e> NL: Add up nearest - neighbor parameters for a given sequence  name: pair deltas </e> Returns the ratio of the euclidean distance of each near - neighbor to that of the nearest neighbor for each particle ,normalized radial distance
<e> NL: Returns true if the left boundary of both boxes is within 2 pts name: bbox vert aligned left </e> Returns true if the left boundary of both boxes is within 2 pts ,bbox vert aligned left
<e> NL: Validate the given private key and raise an exception on failure : param str private_key : Private key as a 64-character hex string : raises InvalidPrivateKey : If the private key is invalid : return : The private key : rtype : str name: validate private key </e> Try to validate a private key . : param private_key_path : the path to the private key . : return : None : raises : an exception if the private key is invalid ,try validate fet private key path
<e> NL: remove an existing user from admins : param name : dom_name : return : success or failure name: remove admin </e> add an existing user to admins : param name : dom_name : return : success or failure,add admin
<e> NL: Get a list of GPU device ids ordered by increasing weighted average of processor and memory load  name: device by load </e> Set the current device for cupy as the device with the lowest weighted average of processor and memory load ,select device by load
"<e> NL: check to see if account owns the scope . : param scope : the scope to check . : param account : the account to check . : param session : The database session in use . : returns : True or false name: is scope owner </e> Checks to see if account exists . This procedure does not check it 's status . : param account : Name of the account . : param session : the database session in use . : returns : True if found , otherwise false ",account exists
<e> NL: Calculates the position of a relative notated rectangle within another rectangle . Parameters ---------- rect : Rectangle The container rectangle to contain the other reactangle . template : Rectangle the rectangle to be contained in the other rectangle  name: transform rect </e> Draws a rectangle with ` xcorners ` and ` ycorners ` . Background is made with ones and the rectangle with zeros . Returns : np.ndarray : 2d binary array ,rectangle mask
<e> NL: Returns the CloudFormation stack with name ` ` name ` ` . If it does n't exit returns None  name: get cf stack </e> Checks if the CloudFormation stack should be created or updated,deploy type
"<e> NL: Read feedback information from the stream and unpack it . : param stream : A stream of feedback data from APN . Can contain multiple feedback tuples , as defined in the feedback service protocol . : return A list containing all unpacked feedbacks  name: from binary string </e> Stop ALL printing of user feedback from package . Args : _ verbose : Boolean indicator whether or not feedback should be printed . Default False . Returns : True",stop print
<e> NL: Generate a valid slug for a page from source for the given language . Parent is passed so we can make sure the slug is unique for this level in the page tree  name: generate valid slug </e> Add a page to the context given its slug,get page
"<e> NL: get dates between start date and end date . ( includes start date and end date ) : type start : datetime.date | datetime.datetime : type end : datetime.date | datetime.datetime : rtype : list[datetime.date ] name: get dates </e> date : datetime.date eg : week = FromFirstDaysWeek.create_from_date(date(2016 , 9 , 18 ) )",create from date
<e> NL: Set browser windows size and user agent : param int width : for example 1024 : param int height : for example 768 : param str device_name : for example Nexus 5 : param str user_agent : not required param : return : namedtuple name: set device </e> deleted browser options from default : param str option : for example --verbose : return : list[str ],delete option
<e> NL: Sanitize the query text name: sanitize query text </e> Sanitize flags passed into df,clean flags
"<e> NL: Return whether * derived * is out - of - date relative to * original * , both of which are full file paths  name: out of date </e> Returns True if derivative is out - of - date wrt original , both of which are full file paths ",out of date
<e> NL: Returns a UUID(value ) if the value provided is a str . : param value : str or UUID object : return : UUID object name: str to uuid </e> Get the document fullpath . : param str uuid : The document 's uuid,get document
<e> NL: Get the global plugin manager name: plugins get mgr </e> Return the plugin manager ,get plugin manager
<e> NL: Get the names of all the .o files in the given directories  name: get obj </e> Given a list of files in contents remove all files named ipynb or directories named images and return the result ,remove ipynb files
<e> NL: return the mimetype from the given string value name: .find type </e> Get the mimetype from the HTTP response,get mimetype from response
"<e> NL: Converts a configuration dictionary into a ClassificationScheme . : param conf : dict : return : ClassificationScheme name: class scheme from config </e> Reads the ClassificationScheme of a gdal . Band : param band : gdal . Band : return : ClassificationScheme , None if classes are undefined ",from raster band
<e> NL: Take a ' path ' to an .ibw file and returns a neo.core . AnalogSignal  name: open data </e> Convert the contents of a dataframe into Neo : class:`Events < neo.core . Event > ` ,create neo events from dataframe
"<e> NL: Load the content of the config file . If no config_path is specified , get the default of config file . : param config_path : path to the config file or None : returns : the content of the config file name: get config file </e> Load config file from config_path or test configuration",load config file
<e> NL: Get all the directories name: get local dirs </e> Get the paths for the XDG config directories ,get xdg config dirs
<e> NL: Generate singer compatible catalog for the kafka topic name: generate catalog </e> Generate singer schema for kafka messages MESSAGE_TIMESTAMP : Automatically will extract from kafka metadata MESSAGE : The original kafka message DYNAMIC_COLUMNS_FOR_PK : optional,generate schema
<e> NL: Validates that the string is a valid IP address  name: is ip address </e> Validates that the given string is a valid URL,validate url
<e> NL: r Calculates heat transfer Fourier number or Fo for a specified time t characteristic length L and specified properties for the given fluid  name: Fourier heat </e> r Calculates heat transfer Peclet number or Pe for a specified velocity V characteristic length L and specified properties for the given fluid ,Peclet heat
<e> NL: Counts the number of basic changes a Change will make name: count changes </e> Counts the number of basic changes a ` Change ` will make,count changes
<e> NL: Get keys of a dictionary by a value  name: keys by value </e> Return random keys of dictionary,shuffle dictionary
<e> NL: Load the configuration from a YAML file name: load config </e> Load secrets and embed it into the configuration YAML ,secret yaml
<e> NL: Register an authentication method name: register auth method </e> Method to register an object class ,register object class
<e> NL: Create a confirmation irc message to send to new users with a confirmation link . Args : confirmation ( models . Confirmation ) : The confirmation database entry . Returns : str : The irc message to send  name: irc confirmation </e> Check if completion needs confirmation,should confirm completion
"<e> NL: If input is not a string , then return input . If input is a string , then try to convert to int , then try to convert to float  name: string to num </e> Return input converted into a float . If failed then return default ",to float
<e> NL: Used to map keys from config files to Python parameter names  name: normalize keys </e> Map trace to parameter names ,map trace to names
<e> NL: Yield all the rdefs leading to a component ( or ` child ` ) eschema . We must take care of etypes that are composed of themselves  name: children rdefs </e> Yield all the rdefs leading to a composite ( or ` parent ` ) eschema . We must take care of etypes that are composed of themselves ,parent rdefs
"<e> NL: Determines if the cursor is a reference to something , i.e. an identifier of a function or variable . : param cursor : A clang cursor from the AST . : return : True if the cursor is a reference  name: is reference </e> Returns a list with column names retrieved from the description of a cursor . : param psycopg2.extensions.cursor cursor : The cursor . : return : list",get column name
<e> NL: [ a - zA - Z_](\.[a - zA - Z_0 - 9]|[a - zA - Z_0 - 9 ] ) * name: t IDENTIFIER </e> [ A - Z][a - zA - Z_0 - 9 ` ' ] *,t CONID
"<e> NL: Returns the number of rows in table  name: num rows </e> Calculate the number of columns and rows required to divide an image into ` ` n ` ` parts . Return a tuple of integers in the format ( num_columns , num_rows )",calc columns rows
<e> NL: Get all annotations that are n't actually defined . : return : The set of all undefined annotations name: get undefined annotations </e> Get annotations for the specified entity,get annotations
<e> NL: Check that a list of ` patterns ` are valid dirs . Arguments : patterns ( list ) : a list of directory patterns . Returns : bool : True if all patterns match existing directories  name: validate patterns are dirs </e> Very simple patterns . Each pattern has numOnes consecutive bits on . The amount of overlap between consecutive patterns is configurable via the patternOverlap parameter ,get simple patterns
<e> NL: Return the path to an included declaration name: declaration path </e> Return the path to an included declaration,declaration path
<e> NL: Retrieve compiled pattern expressions . : returns : compiled regular expressions for supported filename formats : rtype : list name: get expressions </e> Convert strings of authwords to compiled regular expressions . This regexp will later be used to match these words in authors strings ,compile authwords
<e> NL: List a ZIP archive  name: list zip </e> Iterate over zip archive ,iter zip
<e> NL: Find the unique elements of the array and return another array with indices to the array of unique elements  name: make invmap </e> Return the indices of all duplicated array elements ,dup idx
<e> NL: Get object user . Args : obj ( object ) : Object that contains the user user ( object ) : User object . Returns : object : Object user  name: get object user </e> Returns user Store object ,get store
<e> NL: Extract details for a single stream from the catalog name: stream details from catalog </e> Extract catalog from VO web service ,get catalog
<e> NL: Template tag to render a feedback form  name: feedback form </e> Template tag to render a feedback form ,feedback form
<e> NL: Get the code object for the given function  name: get func code </e> Get classifications for a given patent_search object ,get classifications
<e> NL: Duplicate sys . stdout and sys . stderr to new StringIO  name: tee output python </e> Duplicate sys.stdout and sys.stderr to new StringIO ,tee output python
"<e> NL: Parse out a key and update the opts with any override data name: parse key </e> Parse * dsn_url * into a tuple of ` ( cls , opts ) ` ",parse dsn
<e> NL: Copy ( overwrite ) file only if the contents have changed  name: smart copy </e> Copy files only when contents differ ,copy path maybe
"<e> NL: utility function to convert a float array into a valid uint8 image . # Arguments x : A numpy - array representing the generated image . # Returns A processed numpy - array , which could be used in e.g. imshow  name: deprocess image </e> Return an numpy array of np.uint8 representing the selection . The array can be smaller than the size of data ",unpack selection
"<e> NL: "" Test if a string or other is a number Examples -------- > > > _ is_number('3 ' ) True > > > _ is_number(3 . ) True > > > _ is_number('a ' ) False name: is number </e> Whether the value is or can be converted to a number . > > > is_number('fish ' ) False > > > is_number('20.2 ' ) True > > > is_number(70 ) True",is number
<e> NL: Check if ` event ` is inside : data:`events ` . Parameters ---------- event : str The name of the event . Raises ------ : exc:`EventNotFound ` When the event is not in : data:`events `  name: event exists </e> Make sure any event day we send back for weekday repeating events is not a weekend ,check weekday
<e> NL: Get registered layouts  name: get registered layouts </e> Utility function for merging multiple layouts ,merge layouts
<e> NL: Admin dashboard tag for cartridge to show daily sales totals . Excluding tax and shipping  name: sales current month </e> Admin dashboard tag for cartridge to show daily sales totals . Excluding tax and shipping ,sales today
"<e> NL: Return a Python datetime object from an an RFC1123 date . Returns a datetime object with a timezone . If no timezone is found in the input string , assume local time  name: parse date time </e> Get a datetime in the local timezone from date and optionally time",get local datetime
<e> NL: Returns all options in a list sorted according to their option numbers . : return : the sorted list name: as sorted list </e> Returns a list of all FSPS filter names . Filters are sorted by their FSPS index ,list filters
<e> NL: Gets the ID of the current user . Fetches it if not present . Returns : Current user ID  name: get current user id </e> Return the current user ID . : return : A unique user ID string or ` ` None ` ` if not available ,fetch current user id
<e> NL: Returns the : py : class:`Absence ` of the holder if it does not yet exist one is created name: absence of holder </e> Returns the : py : class:`PlannedResources ` of the holder if it does not yet exist one is created,planned resources of holder
<e> NL: Parse the custom configuration options given to flake8  name: parse options </e> Parse the configuration options given to flake8 ,parse options
<e> NL: Define CLI arguments and options for isilon_create_users  name: isilon create users cli </e> Define common CLI arguments and options ,base cli
<e> NL: Returns a list of the prime factors of n name: prime factor </e> return all the factors of n,get factors
<e> NL: Check if an element from a list is the only element of a string  name: isin alone </e> Gets a string that will hopefully help in identifing an element when there is an error ,element identification string
<e> NL: Convert the model into a dict for serialization name: to rest </e> Convert the single model into a dict for serialization,to rest model
<e> NL: Get the filename of the config file associated with the given package or module  name: get config filename </e> Find file associated with the package key ,get associated file
<e> NL: This is a faster implementation of deepcopy via pickle  name: fast deepcopy </e> Util for safe deepcopy of a dict . Solves the issue with ' TypeError : ca n't pickle dict_items objects ' of the default ' copy.deepcopy ' ,safe deepcopy dict
<e> NL: Helper function to validate the ' sparsity ' input  name: sparsity validator </e> Hard thresholding function on Tensor A with sparsity s,hard threshold
<e> NL: Return a string that is the name of the function f name: get func name </e> Internal helper that returns the default endpoint for a given function . This always is the function name ,endpoint from view func
<e> NL: return a shortest table name name: constraint name </e> return a shortest table name,model name
<e> NL: Parses the provided arguments and exits on an error . Use the option -h on the command line to get an overview of the required and optional arguments  name: parse the arguments </e> Parses the provided arguments and exits on an error . Use the option -h on the command line to get an overview of the required and optional arguments ,parse the arguments
"<e> NL: Parses the string and returns an iterable of tuples ( key , value ) : raises : ValueError name: parse string </e> Expects iterable to be ( key , value ) tuples ",group to dict
"<e> NL: Create a dictionary from an iterable such that the keys are the result of evaluating a key function on elements of the iterable and the values are lists of elements all of which correspond to the key  name: group by key func </e> Return a list of at most ` n ` elements of an iterable , or all the elements of the iterable if there are less than ` n `",take at most
"<e> NL: Get right color for the state : param state : the state : type state : str : return : the color related of the state : rtype : str name: get state color </e> adds state abbreviations to a dataframe , based on state codes",convert state codes
"<e> NL: A small utility function for getting the current console window 's width , in Windows . : return : The current console window 's width  name: get windows console width </e> Get information about this current console window ",get console info
<e> NL: Yield paths of all imported modules  name: iter module paths </e> Yield filenames for all loaded Python modules ,get loaded modules
"<e> NL: returns the number of colors name: string count colors </e> X : rows = observations , cols = variables varcol : variable for which different colors should be assigned N : number of colors that can be used",pretty coloring
<e> NL: Asserts that ` topic > = expected `  name: to be greater or equal to </e> Asserts that ` topic = = expected ` ,to equal
<e> NL: Returns Twitter user ID for the given handler name: get id </e> Returns Instagram user ID for the given handler,get id
<e> NL: Get a list of all volume drivers  name: get volume drivers </e> Get a list of all devices on pci slots using xhci drivers,get udev xhci devices
<e> NL: Manage response for request GetPhaseHistory . : param context : request context : param response : response received : return : a list of game states : type context : RequestFutureContext : type response : responses . DataGamePhases name: on get phase history </e> Manage response for request VoteAboutDraw . : param context : request context : param response : response received : return : None : type context : RequestFutureContext,on vote
"<e> NL: Returns a list of the dicom files within root_path Parameters ---------- root_path : str Path to the directory to be recursively searched for DICOM files . Returns ------- dicoms : set Set of DICOM absolute file paths name: find all dicom files </e> Recursively traverses from root_path to find all .mat files Returns a list of .mat files , with full path Parameters ----------------------- root_path : string The absolute path to start searching from",get matlab filepaths
"<e> NL: Given a UUID , attempt to return a catalog brain  name: uuid to catalog brain </e> Read a date out of a catalog brain ",brain date
"<e> NL: Given the index ' k ' ( i.e. , the 1-d index ) , find the equivalent index in ' [ f , p ] ' ( i.e. , the 2-d index )  name: k to fp </e> Convert an index among allowed speeds to its corresponding speed : param index : the speed index [ ] : return : the corresponding speed [ m / s ]",index to speed
<e> NL: Returns the energy of the compound per atom ( unit_energy / atom ) Parameters ---------- energy : float the energy of the compound formula : string the formula of the compound Returns ------- energy : float The energy per atom name: get compound energy per atom </e> Parse stdout and return the energy of the reference wavefunction ,parse reference energy
<e> NL: Convert a ` Table ` row into a dict name: row to dict </e> Convert a table row to a dictionary ,row to dict
"<e> NL: Given a path to a management directory returns a list of all the command names that are available  name: find commands </e> Required by the ` ` check ` ` management command , this returns a list of messages from all the relevant check functions for this version of Django ",run checks
"<e> NL: Checks remote options if any , otherwise this will set default remote options  name: setup remote options </e> Return a map containing the settle modes as provided by the remote . Skip any default value ",get remote settle modes
"<e> NL: Unlink path but do not complain if file does not exist  name: unlink f </e> Unlink a file , but do n't complain if it does n't exist ",soft unlink
<e> NL: Converts ISO8601 date and time and returns only the date . Parameters ---------- date : str datetime string . Returns ------- date : str Date as Y - m - d format . name: date convert </e> Checks the dekad of a date and returns the dekad date . Parameters ---------- date : datetime Date to check . Returns ------- new_date : datetime Date of the dekad ,check dekad
<e> NL: Normalize the path 's case  name: os path normcase </e> Normalize the key name to title case ,normalize name
"<e> NL: Convert to boolean from String Return : a boolean value If the string is not a representation of a boolean value , the method returns False  name: to boolean </e> Convert a string to a boolean value ",.to bool
<e> NL: Add new typedef for code only  name: typedef code </e> Typedef generator for event statistics records ,typedef event stat
<e> NL: Normalize attribute names for shorthand and work arounds for limitations in Python s syntax name: .clean attribute </e> Normalize attribute names for shorthand and work arounds for limitations in Python 's syntax,clean attribute
"<e> NL: Residual function to minimize name: residual rel </e> MEV distribution function , to minimize numerically for computing quantiles",mev fun
<e> NL: Loops PSMs and outputs dictionaries passed to writer . Dictionaries contain the PSMs and info to which split pool the respective PSM belongs name: generate psms split </e> Loops PSMs and outputs dictionaries passed to writer . Dictionaries contain the PSMs and info to which split pool the respective PSM belongs,generate psms split
<e> NL: Compute Mash distances of sketch file of genome fasta to RefSeq sketch DB  name: mash dist trusted </e> Transcrypt the sketch python code to javascript . : param sketch_name : name for new sketch : type sketch_name : string : return : file names : rtype : list of strings,transcrypt sketch
"<e> NL: Custom function to compute list of topic targets based on MQTT topic and/or transformation data . Obtains MQTT topic , transformation data and service object . Returns list of topic target identifiers  name: topic target list </e> Topic name of this dialog service Returns ------- topic_name : str Topic name of this dialog service",topic name
<e> NL: a - a ' : chloride nitrate [ PK74 ]  name: theta Cl NO3 PK74 </e> c - a - a ' : lithium chloride nitrate [ PK74 ] ,psi Li Cl NO3 PK74
<e> NL: Gets the compute instance that is to have the storage attached  name: get inst to attach </e> Gets the storage instance that is to have the compute attached ,get vol to attach
<e> NL: Convert given value to int  name: to int </e> Convert ' value ' to int,parse int
"<e> NL: Pack a sequence of values into a LLVM struct  name: pack struct </e> Helper that returns the format for struct.pack , given a size and a signedness > > > struct_fmt(4 , False ) ' I ' > > > struct_fmt(8 , True ) ' q '",struct fmt
"<e> NL: Check if a path exists , and is a file  name: is file </e> Check if path exists and is a file",exists file
<e> NL: Read the block and drive properties from dbus drive props object to determine our best guess at the drive type  name: get drivetype from dbus drive properties </e> Query the SQLite3 DB for the drive offset ,drive db query
<e> NL: Consume the queue by reading lines off of it and yielding them  name: consume queue </e> Setup persistence diagrams by reading off distances,process distances
"<e> NL: Return a Numpy array from a Pandas dataframe  name: if pandas df convert to numpy </e> Return a Numpy array from a Pandas dataframe . Iterating over a DataFrame has weird side effects , such as the first row being the column names . Converting to Numpy is more safe ",if pandas df convert to numpy
<e> NL: Static factory method to create an equivalent instance of this type from the given ` Metadata ` instance . : param metadata : the ` Metadata ` instance to create an instance of this class from : return : the created instance of this class name: from metadata </e> Get instance metadata ,get metadata
"<e> NL: p_to_f(p , pd , pdd = None ) : Convert period , period derivative and period second derivative to the equivalent frequency counterparts . Will also convert from f to p name: p to f </e> Converts P , Pdot to F , Fdot ( or vice versa ) Convert period , period derivative and period second derivative to the equivalent frequency counterparts . Will also convert from f to p",p to f
<e> NL: Get grid lines connected to given buses  name: connected grid lines </e> Get transformer connected to given buses ,connected transformer
<e> NL: Create classifiers token dictionary name: create intent token dict </e> Create intent token dictionary,create intent token dict
<e> NL: Return a guess for the URI type based on the URI string uri  name: guess uri type </e> Generates a raw URI - M based on the archive it belongs to . Supported URI patterns are found in ` archive_mappings ` ,generate raw urim
"<e> NL: Transform the dict to a person object and return the person . : param d : dict , the dictionary to create a Person from  name: from dict </e> Load and return the person dataset ",load person dataset
<e> NL: Test if a method implements the required interface  name: check method </e> Return a list of meta_type who implements the given interface ,meta types for interface
<e> NL: Turn a possibly string enum into an integer enum  name: as enum </e> Take an integer and interpret it as a set of enum values ,parse bitfield
<e> NL: Parse the input as a list : param string the string to parse : return a list containing the input from the user name: parse as list </e> Parse a string containing a sequence of PEM Tacks . Raise a SyntaxError if input is malformed ,create from pem list
<e> NL: clean dictionary object to str : param dict : dictionary name: clean dict </e> Return a clean - up vars dict . All private variables are removed and magni configgers are converted to dictionaries . Parameters ---------- vars_dict : dict The dictionary of variables to clean . Returns ------- cleaned_vars : dict The cleaned dictionary of variables ,clean vars
<e> NL: Deregisters a decoder for a specific encoding method . Args : decoder ( type ) : decoder class . Raises : KeyError : if the corresponding decoder is not set  name: deregister decoder </e> Registers a decoder for a specific encoding method ,.register decoder
"<e> NL: Split the given path into directory , basename and extension : param path : : return : list(str ) name: split path </e> Split extension off the path info",split extension
<e> NL: Convert many - to - many fields  name: serialize m2m </e> In many cases this is equivalent to cs.vertcat ,seq to SX matrix
<e> NL: Cut unicode string from left to fit a given width  name: unicode left </e> Cut unicode string from right to fit a given width ,unicode right
"<e> NL: Split Uniform Resource Identifier ( URI ) : param str uri : URI : return tuple : filename(str ) , group(str ) name: split uri </e> Parses provider and term from given identifiers annotation uri . Parameters ---------- uri : str uri ( identifiers.org url ) Returns ------- ( provider , identifier ) if resolvable , None otherwise",parse annotation info
"<e> NL: If text contains upper case characters , return True  name: contains upper </e> If text contains lower case characters , return True ",contains lower
<e> NL: Return the corresponding job status for the input server job status . Args : api_status : Server job status . Returns : Job status  name: api status to job status </e> Check whether a job exists and return a bool . Parameters ---------- status_dir : str Directory containing json status file . job_name : str Unique job name identification . Returns ------- exists : bool True if the job exists in the status json ,job exists
<e> NL: Turn a list of lists into a single list  name: merge lists </e> Turn a list of metadata into a list of printable representations,metadata repr as list
<e> NL: Checks that * spark * is available  name: sparkml installed </e> Checks that * skl2onnx * converter is available ,skl2onnx installed
"<e> NL: Prepare config for use - apply defaults , validate schema . Args : cfg : dict , config . Returns : dict , validated config with defaults  name: prepare config </e> Set config defaults ",load defaults
<e> NL: Reset one or more options to their default value  name: reset option </e> reset the parameter to default value,reset params
<e> NL: Returns all serial devices with a given name name: get ports by name </e> Uses the Windows Management Instrumentation to identify serial devices ,. detect available configs
"<e> NL: Create a BZIP2 archive  name: create bzip2 </e> Checks if a file is compressed ( gzip , bzip2 or xz )",is compressed
"<e> NL: Return current MPI rank and number of ranks None , None - if MPI environment is not available : return : rank , max_rank name: get ranks info </e> Test if current environment is MPI or not",is mpi env
<e> NL: Get the histogram number and name from a histogram random I d : param int ranId : the random I d assigned to a histogram : returns : the sequential I d ( hId ) number for the histogram ( str ) name: lookup hist id </e> Compute the histogram ( pdf ) of the data,build pdf
"<e> NL: Once all adjacent tiles are located , this checks to see if any of them tiles contain the next letter we need . If the next letter exists in the adjacent tiles , but that is n't the end of the word then the function is called again name: check letter </e> Finds all of the tiles that a object could intersect with Returns the norms and corners of any of those that are drivable",find candidate tiles
"<e> NL: Obtain the source code of a Python function and create an AST . : param f : Python function . : return : A 4-tuple of ( AST , function filename , function line - number , source code as string )  name: function to ast </e> Parses the given vyper source code and returns a list of python AST objects for all statements in the source . Performs pre - processing of source code before parsing as well as post - processing of the resulting AST ",parse to ast
<e> NL: Get a casting callable for a field type / value  name: get cast type </e> Mimic numpy 's casting for np.sum,get sum dtype
"<e> NL: Return ( duration , is_negative ) between two TimePoint objects . duration -- is a Duration instance . is_negative -- is "" - "" if time_point_2 is in the past of time_point_1  name: date diff </e> Check if a string is a valid duration accepted by DuckDuckGo . A valid duration is d ( past day ) , w ( past week ) , m ( past month ) or a ( any time ) ",is duration
<e> NL: Returns a list of booleans corresponding to the first instance of each unique item  name: unique flags </e> Returns sets of elements recognisable as booleans,get boolean elements
<e> NL: Get a global scope registered with the model . : param scope : The scope to register : type scope : orator.orm.scopes.scope . Scope or str name: get global scope </e> Validate if each element in a list is a registered scope ,validate scopes
"<e> NL: Creates a configuration object from the given : obj:`dict ` . Parameters ---------- data : dict Dictionary to generate the new configuration object with . Returns ------- Configuration The new configuration from the given dictionary data  name: from dict </e> Parses the JSON file containing the datasets configuration . Moreover , it validates the loaded object against the defined schema . Returns : config ( dict ) : dictionary of ( dataset_id ) - > configuration ",load datasets config
<e> NL: return tx fee from tx size in bytes name: calculate tx fee </e> str - > int Bitcoin uses tx version 2 for nSequence signaling . Zcash uses tx version 2 for joinsplits ,guess version
"<e> NL: Return a printable token Args : token ( str ) : The token to print . Returns : str : The reformatted token  name: printable token </e> Convert token to float . Args : token ( str ) : a string token to convert to float Returns : float if the token can be converted , otherwise the token",convert to float
<e> NL: Query group by a group name . : param name : Name of a group to search for . : returns : Group object or None  name: get by name </e> Return a ` dict ` of group name to repo names ,get groups
<e> NL: Checks if the server is running . : return : is running ? : rtype : bool name: is running </e> Connect to host and execute SELECT 1 to make sure it 's up and running . : return : True if server is ready for connections : rtype : bool,server ready
"<e> NL: Context of benchmark , which will update status of the run accordingly  name: benchmark context </e> Return the length of the longest benchmark name in a given list of benchmark JSON objects",find longest name
<e> NL: Initialize a materialized view instance from a YAML map : param name : view name : param name : schema map : param inobj : YAML map of the view : return : materialized view instance name: from map </e> Extract view name : param view : : return :,extract view name
<e> NL: Returns Extended Resource for service type management  name: get resources </e> Returns Extended Resource for service type management ,get resources
"<e> NL: Return a tuple of ( euid , egid ) for username  name: get euid and egid </e> Return ( euid , egid ) of process @pid . Raises an error if @pid does not exist",get process uid and gid
<e> NL: Helper function to extract plain text from .doc files : param doc_path : path to .doc file to be extracted : return : string of extracted text name: extract text from doc </e> Helper function to extract plain text from .doc files : param doc_path : path to .doc file to be extracted : return : string of extracted text,extract text from doc
"<e> NL: Flatten all edges that belong to the nodes . Returns : A list of all the flattened edges . If there was only one edge between two given nodes , that original edge is included in this list  name: flatten all edges </e> Return multiple edges between 2 nodes : return : list of edge IDs that connect the same nodes",multi edges
<e> NL: a - a ' : chloride sulfate [ HMW84 ]  name: theta Cl SO4 HMW84 </e> c - a - a ' : hydrogen chloride sulfate [ HMW84 ] ,psi H Cl SO4 HMW84
<e> NL: Retrieve the contents of the transcript file . Parameters ---------- file_name : str The path to the transcript file . Returns ------- text_to_read : list Lines from the transcript file  name: read transcript </e> Returns transcript format ,get transcript format
<e> NL: Calculate lambda in transition region ( smooth to rough )  name: lamb trans </e> Calculate lambda in smooth conditions ,lamb smooth
<e> NL: True if the object is a h5py . Dataset - like object . : param obj : An object name: is dataset </e> True if the object is a h5py . Group - like object . A file is a group . : param obj : An object,is group
<e> NL: Generate fixed - length random alpha only string  name: rand alphastr </e> Return a fixed - length random string : rtype : str,get random string
<e> NL: Monkey - patch urllib3 with SecureTransport - backed SSL - support  name: inject into urllib3 </e> Monkey - patch urllib3 with SecureTransport - backed SSL - support ,inject into urllib3
"<e> NL: Computes circular variance for giving boundary points , according to Peura et al . 1997 , "" Efficiency of Simple Shape Descriptors "" name: compute cvar </e> Computes the radial distance for the given boundary points , according to Xu et al 2012 , "" A comprehensive descriptor of shape """,compute radial distance
<e> NL: Return all instances from Model class name: get instances </e> Return all instances that compute ` feature_name `,get instances
<e> NL: Get keys specified in arguments returns list of keys or None name: find keys </e> Get keys specified in arguments,find keys
"<e> NL: Resize input image to original image size Args : image : image . ( H , W ) Return : img : resized image name: resize image </e> Change image format from others to jpg . Args : jpeg_dir : str , the dir only have image ",check image format
<e> NL: Print the value of each solution in an solution set . : param sol_set : solution set : return : no return name: print solution set </e> Check if x is distinct from each solution in seta . : param seta : a list : param x : a Solution object : return : True or False,is distinct
<e> NL: Returns a dictionary with all keys from : obj:`dictionary ` that are prefixed with : obj:`prefix `  name: extract prefixed keys </e> Return a modified dictionary with keys prefixed by prefix ,add prefix to dict
"<e> NL: For each index in peaks , returns the peak - to - trough ratio of the value at that peak to the average of the minimum values between the peak and its adjacent peaks  name: compute peak to troughs </e> Search a peak and its position in arrays xdata ad ydata . Return three integer : - peak position - peak value - index of peak position in array xdata This result may accelerate the fwhm search ",search peak
<e> NL: Check the user provided ` values ` . Parameters ---------- values : list of numpy.array A list of numpy array containing values . Return ------ values : list of numpy array name: check values </e> Check the user provided ` values ` . Parameters ---------- values : numpy.array A numpy array containing values . Return ------ values : numpy array,check values
"<e> NL: Returns a label if all the elements of an overlay agree on a consistent label , otherwise returns the default label  name: get overlay label </e> Returns a label if all the elements of an overlay agree on a consistent label otherwise returns the default label ",.get overlay label
<e> NL: c - a - a ' : sodium hydroxide sulfate [ PP87ii ]  name: psi Na OH SO4 PP87ii </e> c - a - a ' : sodium chloride hydroxide [ PP87ii ] ,psi Na Cl OH PP87ii
<e> NL: Returns the negative binomial log - likelihood of the data  name: nb ll </e> Returns the zero - inflated negative binomial log - likelihood of the data ,zinb ll
"<e> NL: Compute Hilbert indices . Parameters ---------- xint : ( N , d ) int numpy.ndarray Returns ------- h : ( N , ) int numpy.ndarray Hilbert indices name: hilbert array </e> Computes the Hilbert signals . Parameters ---------- filtered_signals : numpy.ndarray Prefiltered signals Returns ------- numpy.ndarray The Hilbert transformed signals",get hilbert signals
"<e> NL: Get user 's home directory name: get home path </e> Get home directory / base directory for borg : - BORG_BASE_DIR , if set - HOME , if set - ~$USER , if USER is set - ~",get base dir
<e> NL: Map categories from command - line to strings used by nordvpn api . : categories : a list of categories from the command - line . : returns : a list of mapped categories  name: map categories </e> Get categories from database and create the ones that do n't exist . : param genres_names : : return : A dict with Genres mapped to their name,get genres
"<e> NL: Read TCP port allocations from the allocation file  name: read allocations </e> Filtering only the VGPU allocations from a list of allocations . : param allocations : Information about resources allocated to the instance via placement , of the form returned by SchedulerReportClient.get_allocations_for_consumer ",vgpu allocations
<e> NL: Return a new list of namedtuples by zipping lists of namedtuples or objects  name: combine nt lists </e> Return a new list of namedtuples by combining dicts of namedtuples or objects ,get list w id2nts
"<e> NL: Split the given signature : param signature : : rtype : str , str : return : The r part for signature , The s part for signature name: split signature </e> skewedPV mocking the realdoniach signature ",donny pv
"<e> NL: Returns the effective ' inverse ' of the given order array , that is by returning the order array that would be needed to re - arrange back to the correct order  name: reverse order </e> Order the slices span in ascending order . When we are slicing a pbcarray we might be rolling and padding the array so it 's probably a good idea to make the array as small as possible early on ",order slices
"<e> NL: Process a list of reference answers . If equal or more than half of the reference answers are "" CANNOTANSWER "" , take it as gold . Otherwise , return answers that are not "" CANNOTANSWER ""  name: handle cannot </e> Validate answers are 1 through 4 and only numbers",validate answers
<e> NL: Replace illegal characters with underscore name: sanitize column names </e> Replace illegal characters with underscore,sanitize column names
"<e> NL: Calculates the volume of a label image . Args : image ( sitk . Image ) : The 3-D label image  name: calculate volume </e> Invert a displacement field using one voxel of padding in the computation . Parameters ---------- field : sitk . Image Input displacement field . Returns ------- sitk . Image The inverse of the displacement , computed under padding ",invert displacement padded
<e> NL: checks whether the db exists or not if it is then return the connection else create an new one with repo table and returns the connection Args : db_path : path to check Returns : connection : An sqlite3 connection object name: get data db </e> Checks the type of connection and tries to create it,create new connection
<e> NL: use processors to collect build metrics  name: process build metrics </e> use processors to compute file metrics ,compute file metrics
"<e> NL: Convert an IPv6 address from binary form into text representation , used when socket.inet_pton is not available  name: inet6 ntop </e> Convert an IPv6 address from binary form into text representation used when socket . inet_pton is not available ",inet6 ntop
<e> NL: Returns the value of a global attribute Global attribute meaning an attribute for all the resources from a rtype : param name : Name of the attribute : type name : str : rtype : str name: get global </e> Convert given raw attribute name into a valid React HTML tag attribute name . : param name : attribute to convert : return : valid attribute : type name : str : rtype : str,safe react attribute name
<e> NL: Find and set additional dependencies of current project in context name: set target additional dependencies </e> Handles additional link dependencies,set target additional dependencies
"<e> NL: Returns a list of valid limit order types which can be placed onto the Independent Reserve exchange platform . : return : list [ "" LimitBid"",""LimitOffer "" ] name: get valid limit order types </e> Returns a list of valid primary currency codes . These are the digital currencies which can be traded on Independent Reserve . This method does not take any parameters . : return : list",get valid primary currency codes
<e> NL: Return the absolute filepath to the default XML schema file . : param xml : the pre - parsed XML object : return : the XSD absolute filepath name: get default schema filepath </e> Return the absolute filepath to the XML schema file that can be used to parse the given XML . : param xml : the pre - parsed XML object : return : the XSD absolute filepath,get schema filepath
<e> NL: Yield successive n - sized chunks from l name: chunk list </e> Yield successive n - sized chunks from a list . Args : list : The list to chunk . chunk_size : The max chunk size . Returns : List of lists ,split chunk
<e> NL: Change dash ' - ' to CamelCase string in string param keyword : string which has to be modified as above return : string . Example one - two changes to OneTwo name: dash to camelcase </e> Change underscore ' _ ' to CamelCase string in string param keyword : string which has to be modified as above return : string . Example one_two changes to OneTwo,underscore to camelcase
<e> NL: Return a list of all the interfaces names name: interfaces names </e> Get a list of all IPv4 interfaces found in this computer,get all ipv4 addresses
<e> NL: Performs ` ` nexus3 script list ` ` name: cmd list </e> Performs ` ` nexus3 list ` `,cmd list
"<e> NL: query means like words of the key word from datamuse API , then return those most sound like the key word : param word : the key word : return : name: pho words </e> Take a word and build it into the dict map . Modify the words dicts in place and then return the int that represents the given word",word map
<e> NL: quick funtion to plot the data : param x : : param y : : param fig : : param ax : : param line : : param linethickness : : return : name: plot data </e> Plots residuals from a regression . : param y_true : True values : param y_pred : Models predicted value : param title : Plot title : param ax : Pass your own ax : return : matplotlib . Axes,plot residuals
<e> NL: Convert a character indent into a number of spaces that should be used . Tabs are set to be equivalent to 4 spaces . Args : indent ( str ) : String indent . Returns : int : Number of whitespaces that is equivalent to the provided string  name: indent char2int </e> Counts the indent levels on the front . It is assumed that one tab equals 4 spaces ,indent level
<e> NL: This just imports the module specified  name: check extmodule </e> the cx_Oracle module implicitly imports datetime ; make sure this happens ,load cx Oracle
<e> NL: a generator that returns all the keys in a set of nested Mapping instances . The keys take the form X . Y . Z name: iteritems breadth first </e> a generator that returns all the keys in a set of nested Mapping instances . The keys take the form X.Y.Z,iteritems breadth first
<e> NL: Parse the sub - entity . : param data : dictionary with sub - entity data . : param parser : parser of the Siren entities . : returns : parsed sub - entity . : raises : : class : ValueError  name: parse sub entity </e> Marshal the sub - entity . : param sub_entity : either embedded link or embedded representation . : param marshaler : marshaller for the Siren entities . : returns : dictionary with sub - entity data . : raises : : class : ValueError ,marshal sub entity
<e> NL: Get all parent item IDs for each item in dict keys  name: get id2parents </e> Get all parent item IDs for each item in dict keys ,get id2children
<e> NL: Create a directory Args : path ( str ) : The path of the directory Returns : True if the directory could be created . False otherwise name: create directory </e> Create directory . Args : directory : path to directory Returns : Absolute path to created directory str,create dir
<e> NL: Write the activity indicators inside ` I ` to a dictionary name: to dict </e> Adds indicators to a ohlc df using ' finta . TA ',add indicators
<e> NL: Render logs into a format suitable for CLI output  name: render logs </e> Transforms the 4-dimensional output tensor into a suitable image format ,process output
<e> NL: returns true if the dictionary has a list with more than one element name: has mult values per item </e> Returns 1 if sequence has more items than number and 0 if not ,more than
<e> NL: Set up connection to api name: es setup connection </e> Set up the otter - api service ,make service
<e> NL: Enumerate and filter contents of a directory  name: grep dir </e> Enumerate Duco module tree ,enumerate node tree
<e> NL: Return True if error in connecting to db  name: retry if db connection error </e> A built - in check to see if connecting to the configured default database backend succeeds ,check database connected
<e> NL: Removes the edges from path that occur even number of times . Returns a set of edges name: path to cycle </e> Find all good quartets and removes the middle edges ,remove all P4
<e> NL: Temporarily overrides an environment variable  name: environment variable </e> Override environment variable value temporarily,override env
<e> NL: xor_expression : and_expression OP_XOR xor_expression | and_expression name: p xor expression </e> and_expression : or_p_expression OP_AND and_expression | or_p_expression,p and expression
"<e> NL: Walk source directory tree and convert each sub directory to a package name  name: find packages </e> walk a directory tree , using a generator",do recursive
<e> NL: Returns the images for the given entry . : param entry : An Entry instance  name: get entry images </e> Checks if an nginx parsed entry is an ' ssl on ' directive . : param list entry : the parsed entry : returns : Whether it 's an ' ssl on ' directive : rtype : bool,is ssl on directive
<e> NL: Replaces missing items in a CSV with a given missing representation string  name: replace missing csv </e> complete missing attributes with those in fallbackModule,stitch modules
<e> NL: Local replacement for os.path.isdir ( )  name: path is dir </e> Replacement for os.path.split ( ) ,path split
<e> NL: Custom JSON decoder that allows construction of a new Smi instance from a decoded JSON object  name: .json hook </e> Use moving average to get better readings ,get average
<e> NL: Serialise a Double value . i -- integer ( 1 or 2 ) ( unknown values are treated as 1 ) name: serialise double </e> Convert a raw Double value to an integer . Returns 1 or 2 ( unknown values are treated as 1 ) ,interpret double
<e> NL: Undo an embed operation Args : what : What has once be the destination array orig_shape : The shape of the once original array Returns : The closest we got to the undo name: undo embed </e> Undo what ` install_figura_importer ` _ did ,uninstall figura importer
"<e> NL: Split a key into word and sense , e.g. ( "" usage example "" , "" NOUN "" ) . key ( unicode ) : The key to split . RETURNS ( tuple ) : The split ( word , sense ) tuple  name: split key </e> Create a key from a word and sense , e.g. "" usage_example|NOUN "" . word ( unicode ) : The word . sense ( unicode ) : The sense . RETURNS ( unicode ) : The key ",make key
<e> NL: Get the key and value out of docstring line  name: get key value </e> Parses title and description out of a docstring ,parse docstring
<e> NL: Parse a list of arguments into a dict name: parse args </e> u Parse a list of arguments into a dict,parse args
<e> NL: Convert JSON string into an object  name: str to json </e> Convert an object holding raw analysis results into a dictionary . This is meant for JSON dumping ,raw to dict
<e> NL: Converts a BBN to a networkx graph for drawing . : param bbn : BBN . : return : Directed acyclic graph  name: convert for drawing </e> Gets a JSON serializable dictionary representation . : param bbn : BBN . : return : Dictionary ,to dict
"<e> NL: Validate that the supplied uri is handled by this class . Returns : True if the URI is valid for this class , else False  name: valid uri </e> Validate that the supplied uri is handled by this class . Returns : True if the URI is valid for this class , else False ",valid uri
"<e> NL: Total liquid molarity [ mol.m-3 ] , from thermodynamics . c_k in [ mol.m-3 ]  name: c T </e> Dimensional density of electrolyte [ kg.m-3 ] , from thermodynamics . c_k in [ mol.m-3 ] ",rho dimensional
"<e> NL: Create a fresh temporary directory , based on the fiven prefix . Returns the new path  name: create working dir </e> Create a fresh temporary directory based on the fiven prefix . Returns the new path ",create working dir
<e> NL: Create initial guess for root solver name: guess root vals </e> Construct feasible initial guess for transformation matrix A ,fill A
<e> NL: Compare before and after results from various salt functions returning a dict describing the changes that were made  name: compare dicts </e> Compare before and after results from various salt functions returning a dict describing the changes that were made,compare lists
<e> NL: Convert local track or directory URI to absolute path  name: local uri to path </e> Convert local filesystem path to sqlite uri ,path to local sqlite uri
<e> NL: Decode base64 image to binary string . Args : img_base64 : base64 image bytes . Returns : binary image data  name: base64 to img bin </e> Convert base64 string to an image array . The function can handle raw string or bytes encoded sting . Arguments : ---------- base64_str : bytes or raw string of image in base64 format Returns : -------- img : standard image array,base64 str to img
"<e> NL: Helper function . : param d : dictionary : type d : dict : param key : key to retrieve from dict : type key : str : return : value of specified key if not None , otherwise empty dict name: safe get </e> Check if a key exists in a map and if it 's not None : param dict : map to look for key : param key : key to find : return : true if key is in dict and not None",not in dict or none
<e> NL: Create a comment . : param comment : Class instance of Comment ( ) as parameter . : return : Boolean indicating success of database action  name: create comment </e> Create a WebhookMetadata from a comment added to an issue ,build from issue comment
<e> NL: insert_jobs function inserts data into Brain . Jobs table name: insert jobs </e> insert_jobs function inserts data into Brain . Jobs table jobs must be in Job format : param jobs : < list > of Jobs : return : < dict > rethinkdb insert response value,insert jobs
"<e> NL: Checks if the given type is a object type . : param type _ : The type to check : return : True if the type is a object type , otherwise False : rtype : bool name: is object type </e> Gives the order of the type for the dictionary Args : t ( type ) : The type to compare Returns : 1 for ( dict , OrderedDict ) , 0 otherwise",compare type
<e> NL: Construct a curve from the GUID of an existing Rhino curve object . Parameters ---------- guid : str The GUID of the Rhino curve object . Returns ------- curve : compas_rhino.geometry . RhinoCurve The wrapped curve  name: from guid </e> Find knee of a decreading curve using the kneedle algorithm . Parameters ---------- s : array_like Decreasing curve . Returns ------- int Knee as an index ,find knee
<e> NL: Parse and translate a SPARQL Query name: prepare query </e> Returns a list of SPARQL Update Algebra expressions,translate update
<e> NL: Resolve service_info from service  name: get info from service </e> Resolve service_info from service ,get info from service
<e> NL: Check if a value is an integer  name: is integer </e> Check that the stepszie in t is an integer x dt,check integrate dt
<e> NL: Add gradient clipping of ` clip ` during training  name: clip grad </e> Add gradient clipping of clip during training ,clip grad
"<e> NL: Function to get the maximum value  name: get max </e> A function to get the pmin value for the aplpy chart , as a function of the instrument . Args : fc_params : the parameters of the finding charts ( a dictionary ) Returns : pmin ( float ) : the pmin value",get pmin
"<e> NL: Resize input image to original image size Args : image : image . ( H , W ) Return : img : resized image name: resize image </e> Set + image+ anchor points to centre of image",centre image
<e> NL: Return the contents and metadata of a given table  name: load data table </e> Extract the Latin Etymology ID tags from the table of contents ,get tags
<e> NL: Calculate significance by controlling for the false discovery rate  name: significance fdr </e> False discovery rate of Benjamini - Yekutieli,fdr by
<e> NL: Gets tracks from an album using Spotify 's API name: get tracks from album </e> Fetches new tracks ( as of the given date ) released by the current Spotify user 's followed artists,fetch new releases
"<e> NL: Return a list containing a warning that the pattern is invalid . describe_pattern ( ) can not be used here , because we can not rely on the urlpattern having regex or name attributes  name: get warning for invalid pattern </e> We can not use a basic ` ` reverse('product_default_start ' ) ` ` here because * organization * and ` ` get_broker ` ` might be different ",product url
<e> NL: Provide linestyle via index . @param i : index name: load linestyle </e> Provide marker via index @param i : index,load marker
<e> NL: Get AWS keys from environmental variables if available Returns ------- ACCESS_KEY : str SECRET_KEY : str Notes ----- Reads AWS_ACCESS_KEY and AWS_SECRET_KEY name: get key from environ </e> Get AWS keys from default S3fs location if available . Returns ------- ACCESS_KEY : str SECRET_KEY : str Notes ----- Reads ~/.passwd - s3fs to get ACCESSKEY and SECRET KEY,get key from s3fs
<e> NL: Helper function for unit testing to read the last line of a file  name: read last line </e> Helper function . Needed for easier testing,get application
<e> NL: Returns a list of all table names  name: list tables </e> Returns a list containing i d and names of all styles ,get styles list
<e> NL: Find all files in a folder with certain extension name: get files by ext </e> create a generator listing all files with a particular extension in a folder arborescence The recursivity is broken when at least 1 file with a particular extenssion is found ,recursive file gen
"<e> NL: given a path , create a folder from the path if one does n't already exist returns True if folder was created , False is folder already existed name: make folder </e> Attempts folder creation Tries to create a folder . Raises an exception if one exists already ",make folder
<e> NL: Return the default location for the project directory depending of the operating system name: get default project directory </e> Return the default location for the project directory depending of the operating system,get default project directory
"<e> NL: We often use the same servers which one are we running on now ? name: guess server name </e> Often images are provided without an extension , so we try to find a suitable one using glob ",get real image from path
"<e> NL: Adds an extension to filename . : param filename : original filename . : param extension : extension to add  name: add extension </e> Strips out preceding path and file extension from a filename . : param filename : Filename , possibly including path and extension . : return : Filename without path and without extension ",get base filename
"<e> NL: Normalise multiple vectors , assuming they lie in the XY plane . Parameters ---------- a : array XY(Z ) components of vectors . Returns ------- array The normalized vectors in the XY plane  name: normalize vectors xy numba </e> Scale multiple vectors by a given factor , assuming they lie in the XY plane Parameters ---------- a : array XY(Z ) components of the vectors . factor : float Scale factor . Returns ------- array Scaled vectors ( XY ) ",scale vectors xy numba
<e> NL: Calculates and returns an array of the electron density  name: calc n density </e> Adjust the structure electron density based on structure name ,adjust RED by structure name
<e> NL: Return the span of the first group that matches the pattern  name: get span </e> Returns the first group that matches the rgx_pattern in the string_to_search ,find expression
<e> NL: This writes a database version to the db . : param db : database : param version_no : new version int : param meta : any json : return : the provided version  name: store new version </e> Splits a database cross reference string in the format db : accession : version into its constituents,split dbxref
<e> NL: return ' 2.7 ' from ' backport - sha-2.7 ' raises ValueError if the specified branch name is not of a form that cherry_picker would have created name: get base branch </e> return 2 . 7 from backport - sha - 2 . 7,get base branch
<e> NL: Returns True if the IP address is valid and False if not  name: is valid ipaddress </e> Returns true if the fork was split into two parts and false if not . Parameters ---------- mp : dictionary The measured data . Returns ------- forkIsSplit : boolean,is fork split
<e> NL: Extract points from given dict . Extracts the points from the given dict and returns a Unicode string matching the line protocol introduced in InfluxDB 0.9.0  name: make lines </e> Format a report as per InfluxDB line protocol,line protocol
<e> NL: Convert the given object to a commit if possible and return it name: to commit </e> Convert the given object to a commit if possible and return it,to commit
<e> NL: Convert timezone name + current date to current timezone offset . Args : tz_name : Returns : name: convert tz name to now tz offset </e> Will return the current time adjusted using the input timezone offset ,get offset time
"<e> NL: Generate a coherent tag , given previous tag and current label  name: get coherent next tag </e> Generate a coherent tag given previous tag and current label ",get coherent next tag
"<e> NL: Find next available port on local machine : return : int - port number name: find free port </e> Gets a random , available local port",get available local port
<e> NL: Return connection object  name: .get connection </e> Return an slb connection,slb connect
<e> NL: construct context variables needed by the chooser JS name: get chooser js data </e> construct context variables needed by the chooser JS,get chooser js data
<e> NL: look for dependency that setuptools cannot check or that are too painful to install with setuptools name: find missing modules </e> look for dependency that setuptools can not check or that are too painful to install with setuptools,find missing modules
"<e> NL: Return the code objects from the dump  name: get co from dump </e> gets all allocators instances from the dump , order them by size ",make size caches
<e> NL: Check if PID is running for Windows systems name: is pid running on windows </e> Check if PID is running for Windows systems,is pid running on windows
<e> NL: Helper decorator to register a check function  name: define check </e> class decorator to Register mf make,register make
<e> NL: Deregisters a path specification credentials . Args : credentials ( Credentials ) : credentials . Raises : KeyError : if credential object is not set for the corresponding type indicator  name: deregister credentials </e> set Lizard login credentials,set headers
<e> NL: Check if a file exists  name: file exists </e> Check if a file exists ,file exists
"<e> NL: Return a function which gets width and height of console ( linux , osx , windows , cygwin )  name: environ cols wrapper </e> Return a function which gets width and height of console ( linux , osx , windows , cygwin ) ",environ cols wrapper
<e> NL: Predict the category of a company from its c_vector : param c_vector : vector of size 512 as a string : return : probability of being a product company name: predict proba category </e> Predict the category of a company from its c_vector : param c_vector : vector of size 512 as a string : return : category ( S or P ),predict category
<e> NL: Get a ' true ' or ' false ' string and convert to True / False  name: get flag from text </e> Determine True / False from argument,process bool arg
<e> NL: Returns the version of the dll ( after init ) name: full version </e> Check if the version of vJoyInterface.dll and the vJoy Driver match,driver match
"<e> NL: Check if number is convertible to float . : Parameters : # . number ( str , number ) : Input number . : Returns : # . result ( bool ) : True if convertible , False otherwise name: is number </e> Returns True if value is convertible to float",is convertible to float
"<e> NL: Internal test function , do not use this  name: test cldr locale pattern </e> Gets rid of the existing engine . Useful for unittesting , use with care . Do not call this function if there are multiple threads accessing the engine . Only do that in single - threaded test environments or console sessions ",refresh engine
<e> NL: [ a - zA - Z_.][a - zA - Z0 - 9_.]+ name: t WORD </e> [ a - zA - Z][a - zA - Z0 - 9_$ ] *,t ID
"<e> NL: Calculate the size of the grid . Parameters ---------- data : array - like The normalized data . use_default_square : bool Define the grid as the minimal possible square . Returns ------- int , int The width and height of the grid  name: get grid size </e> Get the contours for a 2D grid of data at the specified levels as a fraction the integral over the whole grid ",grid HPD contours
<e> NL: Return a yaml dict from a file or string with error handling  name: yaml load </e> Creates new observations from formset . Error handling is performed by upper layers ,create new observations
<e> NL: Add HTTP _ to the relevant headers that its not included with  name: fix http headers </e> Add tid to the relevant map ,add tid
<e> NL: Minify the given file  name: minify file </e> Minify script in a very insecure way ,min script
<e> NL: Get a directory for logging name: get log dir </e> Get a logging handle ,get logger
<e> NL: Helper to strip special characters from filepaths name: format query </e> Helper method that translates Windows and Unix filepaths,transform path
"<e> NL: Removes DB specific fields from the topic data Args : topics : DB entry Returns : Standardized topic dict name: generate topic response </e> Removes the /topics/ prefix from the topic name , if present ",sanitize topic name
<e> NL: Must be called at the very beginning of a script  name: init project </e> Must be called at the very beginning of a script ,use project
<e> NL: Convert Markdown content into HTML name: convert md source </e> Transforms a Markdown text into HTML ,to markdown
<e> NL: Check if a repository is archived name: is archived </e> Get the furthest ancestor repository that is not archived ,get parent repo
<e> NL: Gaussian1D model function derivatives  name: fit deriv </e> Drude1D model function derivatives ,fit deriv
"<e> NL: Filters a list by removing all the None value within the list  name: filter list </e> Filters the dict recursively , removing all $ -entries . Not the best performance - solution right now ",filter config dict recursive key
<e> NL: CRC16 implementation acording to CCITT standards  name: crc16 nojit </e> Returns the mutation context acording to CHASM ,get chasm context
<e> NL: Breaks a package string in module and class . : param package : A package string . : return : A config dict with class and module  name: get config from package </e> Breaks a package string in module and class ,get config from package
<e> NL: Get canonical version of taxon  name: canonical taxon name </e> Get taxon name without suffix ,canonical taxon
"<e> NL: Initialize a new file that starts out with some data . Pass data as a list dict or JSON string  name: .with data </e> Initialize a new file that starts out with some data . Pass data as a list , dict , or JSON string ",with data
<e> NL: Create a BWA index from an input fasta file  name: create bwa index from fasta file </e> Discovers the paths to BWA and Samtools ,which path
"<e> NL: Generates predictions on a novel data array using a fit classifier clf is a classifier that has already been fit arr is a data array identical in dimension to the array clf was trained on Returns the array of predictions  name: gen preds </e> Helper function to choose an individual channel from a cube Arguments : predictions : RAMONVolume containing a numpy array ( x , y , z ) Returns : pixel_out : The raw trained classifier",choose channel 4d 3d
<e> NL: Encode every value of a dict to UTF - 8  name: encoded dict </e> Encode every value of a dict to UTF-8 . Useful for POSTing requests on the ' data ' parameter of urlencode ,encoded dict
<e> NL: Smooths a set of points name: with inverse </e> Smooths an input set of coordinates by applying Chaikins ,chaikins corner cutting
<e> NL: Get the n - best logits from a list  name: get best indexes </e> Compute softmax probability over raw logits ,compute softmax
<e> NL: Define groups in given docs if not present or empty . : param docs : list of docs name: create root group </e> Fit a parsimonious language model to terms in docs ,parsimonious wordcloud
"<e> NL: Returns the element symbol , even when a valence is present name: fix valence </e> Check if the preceding words increase , decrease , or negate / nullify the valence",scalar inc dec
"<e> NL: Search for an attribute with the given name and dimension . If such an attribute does not exist , create one  name: get attr by name and dimension </e> Additional check for the dimension model to ensure that attributes given as the key and label attribute on the dimension exist ",check attribute exists
<e> NL: Split and validate path for an object . : param req : a swob request : returns : a tuple of path parts as strings name: get obj name and placement </e> Split and validate path for an account . : param req : a swob request : returns : a tuple of path parts as strings,get account name and placement
"<e> NL: Get the number of entries in the file  name: get nentries </e> Ipset seems to add entries in a non - deterministic order when doing atomic replace . This will cause the differ to output changes even when there are none . To fix this , ensure the entries for each ipset is sorted before being diffed ",diff filter
<e> NL: counts the number of bits in a number name: n bits8 </e> Return the resolution from the number of bits ,get resolution from bits
"<e> NL: Function for obtaining the longest file / path name in ` dirname ` . @param dirname : The name of the directory to examine . @type dirname : str @return : The longest path , and the path length . @rtype : tuple name: get length </e> * * Dirname * * ( i.e. , parent directory ) of the passed path if this path has a dirname * or * raise an exception otherwise ",get dirname
<e> NL: Add reporting arguments to an argument parser . Parameters ---------- parser : ` argparse . ArgumentParser ` Returns ------- ` argparse . ArgumentGroup ` The argument group created  name: add reporting args </e> Add reporting arguments to an argument parser . Parameters ---------- parser : ` argparse . ArgumentParser ` Returns ------- ` argparse . ArgumentGroup ` The argument group created ,add reporting args
<e> NL: Returns address from LLDB value . : param lldb . SBValue obj : LLDB value object . : return : Address from LLDB value . : rtype : int | None name: get address value </e> Returns object description from LLDB value . : param lldb . SBValue obj : LLDB value object . : return : Object description from LLDB value . : rtype : str | None,get description value
<e> NL: Returns the bounding box coordinates of a country : return : name: get country bbox </e> Based on given location coordinates and radius in kilometers returns coordinates of the bounding box ,get bounding box
<e> NL: Concatenate all columns of a dataframe into a pd . Series name: concat columns </e> Concatenate list of columns into a string ,cols str
<e> NL: Convert an object to either a scalar or a row or column vector  name: vector or scalar </e> Convert an object to either a scalar or a row or column vector ,vector or scalar
<e> NL: Returns the generator point of a given curve via its OpenSSL EC_GROUP  name: get ec generator by group </e> Returns the affine coordinates of a given point on the provided ec_group ,get affine coords via EC POINT
<e> NL: Adds data to the message object name: add to message </e> Adds sane block data to a transaction_sequence,add block data
<e> NL: Default implementation for match error handling  name: default match error handler </e> Default handling for incoming lines ,on line
"<e> NL: @brief load yaml object from yaml file @param file yaml file name string @retval yaml object name: load yml </e> Load configuration from a YAML file . Raise FileNotFoundError if path does not exist . Raise yaml . YAMLError if YAML file is invalid . Raise ValueError if YAML file does not contain a root object . Raise ValueError if YAML file is missing "" bucket "" value ",load config
"<e> NL: Get the options from the command line  name: handle cmd options </e> Given a dictionary of command options , return the name of the task : param options : Options passed to the handle method of the management command : return : The task name ( str )",get task name
"<e> NL: Parse the code parameter from the a URL name: parse code </e> Parse the nyquist_vel parameter , extract from the radar if needed ",parse nyquist vel
"<e> NL: convert Google - style Mercator tile coordinate to ( lng , lat ) of top - left corner of tile name: get lng lat from tile pos </e> convert lng / lat to Google - style Mercator tile coordinate ( x , y ) at the given zoom level",get tile pos from lng lat
"<e> NL: Player - Player mode handler . : param seq_len : sequence length : type seq_len : int : return : players sequences as dict name: player player handler </e> Convert contacts into numpy matrix . @param contacts contact list as obtained from "" parse "" @param seq_len sequence length @return np.array((seq_len , seq_len ) , score )",get numpy cmap
<e> NL: Get a registered class by the given name  name: get class </e> Get a previously - registered convex polyhedron by its name,convex polyhedron shapedef
"<e> NL: Returns whether a wallet is locked with a passphrase . Returns : bool : True if the wallet has been locked with a passphrase , False otherwise  name: is locked </e> Generate Veo wallet : return : address , private_key , passphrase",generate wallet
<e> NL: Attempt to convert L to a single array  name: try array </e> Convert bigraphemes to single Cyrilic ,convert to monographeme
<e> NL: Truncate lists to maximum length  name: trunc list </e> Truncate lists to maximum length ,trunc list
<e> NL: Convert a state - by - state TPM to a state - by - node TPM  name: state by state2state by node </e> Broadcast a state - by - node TPM so that singleton dimensions are expanded over the full network ,expand tpm
"<e> NL: Return a tuple if ` ` x ` ` is iterable or ` ` ( x , ) ` ` if ` ` x ` ` is integer  name: as shape </e> Raise TypeError if x is a str or if x is an iterable which contains a str ",to utf8 optional iterator
"<e> NL: PARTIAL RELEASE Section 9 . 1 . 26 name: partial release </e> Computes eq . 26 for a radius r , slope t , axis ratio q , and coordinates z",hyp2f1 series
<e> NL: Fast Hankel structured matrix matrix product based on FastHankel_prod_mat_vec name: FastHankel prod mat mat </e> returning to data from Q and QstarH Based on FastHankel_prod_mat_vec ,Fast Hankel2dt
<e> NL: user pandas to read data from file : param file : : return : pandas data frame name: read data from file </e> Given a file name loads as a pandas data frame,load tabular file
<e> NL: Returns a future for a given object name: get future </e> Returns a future for a given object,get future
<e> NL: Return the contents of a CSS file resource  name: read css </e> Return the contents of javascript resource file ,copy javascript
<e> NL: Find seeds for this project  name: find seeds </e> Find migrations for this project ,find migrations
<e> NL: Configuration flags for executing g++ on Cygwin name: gxx modifier cygwin </e> Configuration flags for executing g++ on MacOS,gxx modifier darwin
<e> NL: Parse a for statement  name: parse for statement </e> Parse a return statement . Ex : return 5 ;,parse return
<e> NL: Get the device ID when given a device name name: .device id from name </e> Get the device that a given path exists on ,get device
<e> NL: Lists all local packages below a path that could be installed  name: list local packages </e> NotImplemented : cufflinks has some strict plotly limits so could n't be reliably installed,plotly timeseries
<e> NL: Specifies whether to always send extra HTTP headers with the requests from this page . : param headers : Map with extra HTTP headers . : type headers : Headers name: set extra httpheaders </e> Set the headers used in the Cloud Files Request . : return headers :,set headers
"<e> NL: Build a Surface instance , based on an input type : param surface_type : one of the supported surface types : return : Instance of the corresponding surface lass , or None name: make surface </e> r Determine if one surface is in the other ",no intersections
"<e> NL: Parse a list string into a list of strings name: parse list </e> Parse a configuration value , splitting by whitespace and/or commas and taking quoting into account , etc . , yielding a list of strings ",parse list
<e> NL: Return the Value depending on the Type name: get value for type </e> Skip questions depending on the type answer ,post type
"<e> NL: Read everything up to the next ' ; ' . This is outside the formal grammar . The InvalidParameter TokenList that is returned acts like a Parameter , but the data attributes are None  name: get invalid parameter </e> Read everything up to one of the chars in endchars . This is outside the formal grammar . The InvalidMailbox TokenList that is returned acts like a Mailbox , but the data attributes are None ",get invalid mailbox
<e> NL: Return the data for descriptor name: taskfileinfo descriptor data </e> Parse HS_DESC_CONTENT response events for descriptor content Update the HS instance object with the data from the new descriptor ,new desc content
"<e> NL: Read initial one- , four- or eight - unit value from graph6 integer sequence . Return ( value , rest of seq . ) name: data to n </e> Convert an integer to one- , four- or eight - unit graph6 sequence . This function is undefined if ` n ` is not in ` ` range(2 * * 36 ) ` ` ",n to data
<e> NL: Initialize peer info table entry name: atlas init peer info </e> Get the given peer s info,atlas get peer
<e> NL: Takes a background color and returns the appropriate light or dark text color . Users can specify the dark and light text color or accept the defaults of black and white name: find text color </e> compare brightness values to see if a color - scheme is light or dark,is dark theme
"<e> NL: Verify the page title is not the given value Parameters : title : value name: verify title is not </e> @param url : page to get the title from @return : the page title in utf-8 or None in case that any kind of exception occured e.g. connection error , URL not known",get title of page
<e> NL: c - a : magnesium hydrogen - phosphate [ HFM89 ]  name: bC Mg HPO4 HFM89 </e> n - n ' : magnesium - hydrogen - phosphate sodium [ HFM89 ] ,lambd MgHPO4 Na HFM89
"<e> NL: Separate script and command args : param args : script args : return : tuple(['script args'],['command ' , ' names ' , ' and commands args ' ] ) name: parse args </e> Edit the current state Args : args ( object ) : Cli args",cli edit state
<e> NL: Filter custom fields from a given set of fields . : param fields : set of fields : returns : an object with the filtered custom fields name: filter custom fields </e> Needed to evaluate nested fields - e.g. collateral fields,get fieldname
<e> NL: Gets a list of all directories which are also routes in routes/ name: get route entities </e> Returns a list of routes to configure the Local API Service based on the APIs configured in the template ,. make routing list
"<e> NL: Check if an object is a sequence or not . Parameters ------------- obj : object Any object type to be checked Returns ------------- is_sequence : bool True if object is sequence name: is sequence </e> Check if the Dict passed in POST is of valid format or not . ( if there 's an "" @type "" key in the dict ) : param object _ - Object to be checked",valid object
<e> NL: Get the groups to which a user belongs name: get user groups </e> Predict ' input ' vector which categories it belongs to ,bnn predict
<e> NL: Return the root nodes of all the trees in forest name: forest to root nodes </e> Returns ( nat ) log of number of binary trees with ` size ` internal nodes ,log number binary trees
<e> NL: Convert numpy array image to pil image  name: img arr to pil img </e> Convert pil image to binary string ,pil img to img bin
<e> NL: Read a run - length encoded run from the given fo with the given header and bit_width . The count is determined from the header and the width is used to grab the value that 's repeated . Yields the value repeated count times  name: read rle </e> Read a run - length encoded run from the given fo with the given header and bit_width ,read rle
<e> NL: Check whether the port is unused Args : port ( int ) : port protocol ( str ) : application protocol ( tcp or udp ) Return : bool : whether the port is unused name: is unused port </e> Find an unused local port . returns : int : an unused port number,get open port
<e> NL: Format the API response to the desired output format name: format response </e> Converts duckling output to the correct format ,to entities
<e> NL: Get project settings as a string name: get project settings as string </e> Get project settings only,get project settings only
"<e> NL: Decorate a Theano tensor with Astropy units Args : obj : The Theano tensor unit ( astropy . Unit ) : The units for this object Raises : TypeError : If the tensor already has units name: with unit </e> Pad the middle dimension of a 3D tensor with "" padding "" zeros left and right . Apologies for the inane API , but Theano makes this really hard ",temporal padding
"<e> NL: ( a , a , a ) etc , a=1 / sqrt(3 ) ( 8 points ) name: genOh aaa </e> Implements r=1 / sqrt(sum((1 / S)*(q.v)^2 ) per note from Alexander Brady",ellipse size
<e> NL: Create a TCP socket with the CLOEXEC flag set  name: create tcp socket </e> Create a pipe with FDs set CLOEXEC ,pipe cloexec
<e> NL: ( ( [ 0 - 9]+[.][0 - 9]*)|([.][0 - 9]+))([Ee][+-]?[0 - 9]+ ) ? name: t REAL </e> Get an entry 's URL field ( url or ee ) ,main url
<e> NL: This method should return an instantiated class and set its response to the requests . Response object  name: .load http response </e> Convert an tornado . HTTPResponse object to a requests . Response object,new response
<e> NL: Returns the proto fields used by this algorithm name: get proto fields </e> Returns a FileDescriptorSet proto to be used by tf.io.decode_proto ,get descriptor set
<e> NL: Get the file size for a file - like object : param fp : file - like object : return : name: get file size </e> Get byte size of file - like object : param data_buffer : file - like object : return : total size in bytes,get buffer size
<e> NL: Get the proper set of health metrics for the specified ES version name: health stats for version </e> Returns a funnel chart for the metrics specified in the GET variables ,geckoboard funnel
"<e> NL: Get the value from a Component , in the form of : class:`memoryview ` . : param component : the component . : return : the value  name: get value </e> calculates the component a view is in",calc component name
<e> NL: Open a HTTP connection to the URL and return a file - like object  name: open url </e> Open a tunneled connection from a 0MQ url ,open tunnel
<e> NL: Disable the validation of the minimal slice count of 4 slices . This allows for converting data with less slices . Usually less than 4 could be considered localizer or similar thus ignoring these scans by default USE WITH CAUTION ! name: disable validate slicecount </e> Enable the validation of the minimal slice count of 4 slices again ( DEFAULT ENABLED ),enable validate slicecount
<e> NL: Return a filename for a package with the given information  name: package filename </e> Given a filename walk its ast and determine if it declares a namespace package ,declares namespace package
<e> NL: Raise an exception if an attribute it missing in a Node name: parse required attr </e> Raise an exception if there are different amount of specified occurrences in src ,assert occurrence
"<e> NL: returns a list of argmax ( key ) and max ( value ) from a dictionary All keys within err_delta will be included in list  name: multi argmax vmax dict </e> returns the argmax ( key ) and max ( value ) from a dictionary if pick_random_best is True , then decide ties randomly ",argmax vmax dict
<e> NL: ! @brief Convert a 32-bit int to an IEEE754 float name: u32 to float32 </e> ! @brief Convert a 64-bit int to an IEEE754 float,u64 to float64
<e> NL: Gets a list of architectures for which KVM is available on this server  name: .get kvm archs </e> Get a list of architectures given our dockerfiles,get platforms
<e> NL: takes a stream with the content of the configuration file as input and returns a ( hot ) stream of arguments  name: parse config </e> Run discovery mode for every stream in the tap configuration : param config : connection and streams configuration : return : list of information about every stream,discover streams
<e> NL: Reads everything available from the socket - used for debugging when there is a protocol error : param socket : The socket to read from : return : A byte string of the remaining data name: read remaining </e> try to get socket type from srv record : param proto : record protocol according to service.proto.<domain > template : return : socket type or -1 if unknown protocol,guess socket type
<e> NL: Serializes n as variable size integer to the provided buffer . Buffer has to ha : param n : : param buffer : : param offset : : return : name: dump uvarint b into </e> Read all lines from access_log_path starting at start_position and append them to an empty buffer . Return that buffer ,access log to buffer
<e> NL: Checks if the server is running version corresponding to ' version_string ' name: assert version </e> Return True if version_string is in v1.0.0 form,version needs aka
<e> NL: Return EUC character from a Python Unicode character  name: python to euc </e> Encode a number as a unicode character ,encode number
<e> NL: Return a dict of ISO 3166 - 1 Alpha 2 country codes to ISO 3166 - 1 Alpha 3  name: map country alpha2 to country alpha3 </e> Convert ISO 3166 ` code ` to localized country name ,code to name
"<e> NL: Fills both values to whichever is not equal to 0 , or leaves in place  name: not 0 </e> leaves related articles and wikitables in place",templates collector
<e> NL: The entire non - stiff DETEST suite of problems except the F ( discontinous ) problems  name: detest suite minus </e> The entire non - stiff DETEST suite of problems plus the problems from Shampine - Baca paper . More problems can be added,detest suite plus
<e> NL: Returns True if the given operand ( string ) contains a floating point number name: is float </e> Returns True if the given operand ( string ) contains an integer number,is int
<e> NL: Return True if the type is a List  name: is list type </e> Return True if the ` node ` has a an xsi : type attribute ,is typed
"<e> NL: For a given distance , converts this distance to a redshift , and then returns the 1+z factor for that distance : param distance : Astropy distance ( with units ) : return : Corresponding 1+z factor name: find zfactor </e> computes minimum distance from a point and a polyline i.e. browsing consecutive segments of the polyline . Returns the distance , and curvilinear position from extremities",dist to poly
<e> NL: Return the file with the given name : param str name : Name of the data file : return : Corresponding file : raises : ValueError when name is not known name: get data </e> Gets a file name for the generated doc files . : param name : Name of a folder or file . : param is_step : If name is related to step file or not . : return : The file name for the doc file ,get file name
<e> NL: returns the size of a folder in bytes : param folder : : return : name: get folder size </e> Query the folder i d of the directory ,get folder id
<e> NL: Returns adict with its values converted from Tcl objects to Python objects  name: tclobjs to py </e> Return value converted from Tcl object to Python object ,tclobj to py
<e> NL: Get the collection  name: .get by signature </e> get the corresponding collection of the given i d,get id col
<e> NL: Get the options from the command line  name: handle cmd options </e> Get a : py : class:` . CMakeBuilder ` object from the command line ,get cmake builder
<e> NL: Create a track object from a filename  name: track from filename </e> Parse track from YouTube ,go pafy
<e> NL: Common code between all 3 t - test functions  name: ttest finish </e> Common code between all 3 t - test functions ,ttest finish
"<e> NL: Calculate the zonalmean of a surface variable named in ' variable ' , selecting time ' indices ' , selecting the latitude bins in ' latitude ' name: zonalmean surface variable </e> Returns the variable for latitude",get lat variable
<e> NL: Validate schema using LXML Args : xsd_tree : uri_resolver : Returns : errors name: lxml validate xsd </e> Returns the target namespace used in the schema Args : xsd_tree : namespaces : Returns :,get target namespace
"<e> NL: Ensures a boolean value if a string or boolean is provided For strings , the value for True / False is case insensitive name: ensure boolean </e> Parses boolean values represented as ' yes ' or ' no ' ( case insensitive ) ",parse yes no
<e> NL: Get a list of entitlements on a repository  name: list entitlements </e> Get a list of entitlements on a repository ,list entitlements
"<e> NL: Convert a document into a list of tokens  name: simple preprocess </e> Convert a document into a list of tokens . This lowercases , tokenizes , de - accents ( optional ) . -- the output are final tokens = unicode strings , that wo n't be processed any further ",simple preprocess
<e> NL: Initializing users by hardcoding password . Another use case is to read usernames from an external file ( like /etc / passwd )  name: init users </e> Initializing users by hardcoding password . Another use case is to read usernames from an external file ( like /etc / passwd ) ,init users
<e> NL: Return the opponent colour . colour -- ' b ' or ' w ' Returns ' b ' or ' w '  name: opponent of </e> Convert a raw Color value to a gomill colour . Returns ' b ' or ' w ' ,interpret colour
<e> NL: Function for scaling a vector z to have length > threshold Used for threshold convergence . Parameters ---------- z : np.ndarray the vector to be scaled threshold : float the length threshold the vector should at least be Returns ------- np.ndarray a scaled version of z name: scale with threshold </e> Set signal to zero up to certain threshold . Parameters ---------- A : ndarray threshold : float Percentage of maximal amplitude value Returns ---------- A : ndarray Background subtracted array,background subtract treshold
<e> NL: Return a dictionary of all styles contained in an ODF document  name: load styles </e> Return dictionary of styles defined in * style_dir * ,read style directory
"<e> NL: GetArrayFromImage converts an ITK image to a numpy array , while ensuring the orientation is kept the same . Args : image ( ITK image ) : 2D or 3D ITK image Returns : numpy array name: get array from image </e> There is a bug in simple ITK for Z axis in 3D images . This is a fix ",. fix sitk bug
<e> NL: Return the base filename of a path without the extensions . : param file : The file path : return : The base name without extensions name: file name </e> Runs through the given list of file extensions and returns the first file with the given base path and extension combination that actually exists ,find first file with ext
<e> NL: Get settings from args name: get settings </e> Get settings value ,settings val
<e> NL: Formats the file size into a human readable format  name: format filesize </e> Formats the file size into a human readable format ,format filesize
<e> NL: Calculates the request payload size name: calculate size </e> Calculates the request payload size,calculate size
<e> NL: Converts datetime . datetime to int timestamp with microseconds name: prepare timestamp micros </e> Convert datetime . time to int timestamp with microseconds,prepare time micros
<e> NL: Add attributes of elements to ' attributes ' dictionary . : param element : : param attributes : : param prefix : : return : name: add attr2attributes </e> Add some helpful attributes to node ,format function node
<e> NL: Create a box from restart settings . Parameters ---------- restart : dict A dictionary with restart settings . Returns ------- box : object like : py : class:` . BoxBase ` The box created from the restart settings  name: box from restart </e> Create a system from restart information . Parameters ---------- restart : dict A dictionary with restart information . Returns ------- system : object like : py : class:` . System ` The system object we create here ,create system from restart
<e> NL: STOP DTMF Section 9 . 3 . 29 name: stop dtmf </e> STOP DTMF ACKNOWLEDGE Section 9 . 3 . 30,stop dtmf acknowledge
"<e> NL: Given a layer of estntltk objects , yields pairwise intersecting elements . Breaks when the layer is changed or deleted after initializing the iterator  name: iterate intersecting pairs </e> Given a layer of estntltk objects yields pairwise intersecting elements . Breaks when the layer is changed or deleted after initializing the iterator ",iterate intersecting pairs
<e> NL: Center the provided string for a given width . : param str s : the input string : param int width : the desired field width name: ansi center </e> Given a center and width in energy units get back a width in nm ,nm width
<e> NL: Converts a macho arch tuple into an arch string  name: arch from macho </e> Get a dict of the skipped tests per arch parsing the bs4 instance ,get skipped dict
<e> NL: Creates an enum instance from the corresponding value  name: from value </e> Creates an enum instance from the corresponding value ,from value
"<e> NL: Converts a protocol version number , such as "" 1.0 "" to a tuple ( 1 , 0 ) . If the version number is bad , ( 0 , ) indicating version 0 is returned  name: protocol tuple </e> Converts a protocol version number , such as "" 1.0 "" to a tuple ( 1 , 0 ) . If the version number is bad , ( 0 , ) indicating version 0 is returned ",protocol tuple
"<e> NL: Get amount of immediate children . : param node : Node : type node : Node or uuid4 name: get children count </e> Return highest , not occupied position in the children of ` ` node ` ` . : param node : : type node : Node or uuid4",find highest position
"<e> NL: Extract the saturation channel of a 3-channel image from the HSV color space . : param image : 3-channel image . : type image : numpy array . : return : The 1-channel image saturation channel . : rtype : numpy array name: get saturation </e> Normalize each channel in image : param image : NumPy array with shape ( ... , n_channels ) : return : Same image normalized over each channel",normalize channels
<e> NL: Enable the validation that checks that data is not multiframe implicit again ( DEFAULT ENABLED ) name: enable validate multiframe implicit </e> Enable the validation whether the volume is orthogonal again ( DEFAULT ENABLED ),enable validate orthogonal
<e> NL: Return the half - top - left of the given array  name: set htl </e> Return the half - top of the given array ,set ht
<e> NL: Wrap the response from getting a user into an instance and return it name: .wrap get user </e> Getting and testing response from the /products endpoint,get products
<e> NL: Returns the latest documents . : param count : Number of documents to be returned . Defaults to 5  name: get latest documents </e> Extract IDs from documents . : param documents : Dict of documents grouped by ` ` _ group_by_type ` ` . : returns : Dict of the same format with documents replaced by their ids ,extract ids
<e> NL: Check to see if the given IP address is a valid IPv4 or IPv6 address . Returns True or False name: validate ipaddr </e> Check if the provided ipv4 or ipv6 address is a valid CIDR address ,is valid cidr
"<e> NL: Get the installed version of a Node.js package . Returns ` ` None``is the package is not installed . If * local * is ` ` True ` ` , returns the version of the locally installed package  name: package version </e> Return version of the Quantum DataSet installed Returns None if no data is installed",check quantum dataset installation
<e> NL: Slice dataframe . : param dataframe : dataframe ; : param indices : iterable ; : param ax : int ; : return : dataframe ; name: slice dataframe </e> Retrieves data vote places ( bureaux de vote in French ) with geocodes . @param folder where to download @param as_df return as a dataframe @param fLOG logging function @return list of dataframe,villes geo
<e> NL: Get directory to work with  name: get directory </e> No idea how th f to get this to work,run command orig
<e> NL: Flattens a dict of arguments into a list for subprocess  name: flatten arguments </e> Return checker executable in the form of a list of arguments for subprocess . Popen,get checker executable
"<e> NL: a = b , c , alpha = beta=90,gamma=120 name: trigonal h </e> a = b = c , alpha = beta = gamma",trigonal p
"<e> NL: Turn a nD tensor into a 2D tensor with same 0th dimension . In other words , it flattens each data samples of a batch . # Arguments x : A tensor or variable . # Returns A tensor  name: batch flatten </e> Turn a n - D tensor into a 2D tensor where the first dimension is conserved ",batch flatten
<e> NL: Get a simple univariate time series data . : return : numpy array name: get data </e> Get the univariate time series data . : return : numpy array,get data
<e> NL: Return the file extension  name: file extension </e> Replaces the URL 's file extension ,change extension
"<e> NL: Returns the list of fields that are not connections . Returns : ( list of fields ) : The list of fields of this object that are not connections to other objects  name: true fields </e> Takes array of connections and returns a path . Connections is array of lists with 1 or 2 elements . These elements are indices of teh vertices , connected to this vertex Guarantees that first index < last index",restore path
"<e> NL: Checks if the provided value is a reference ( URL )  name: is reference </e> Return the component referred to by the provided reference , regardless of whether it is a normal or anonymous reference ",from pickled
"<e> NL: Instances of cls ( or a subclass of it ) will be returned unchanged . Any other type will be sent to cls ' constructor , which is responsible for type checking . cls defaults to Tag  name: check tag </e> Return the set of all child classes of ` cls ` . Parameters ---------- cls : Type Returns ------- frozenset[Type ]",flatten subclass tree
"<e> NL: Prompt ` username ` for password . Parameters ---------- username : str name of the TissueMAPS user Returns ------- str password for the given user name: prompt for credentials </e> Prompt the user for the user , password and receiver values for the config . Returns : str , str , str : user e - mail , user password and receiver e - mail ( or whatever the user enters when prompted for these ) ",prompt for config values
<e> NL: Load the informations stored in a template . Parameters ---------- path : unicode Location of the template file . Returns ------- data : ConfigObj The data needed to rebuild the tasks . doc : unicode The doc of the template  name: load template </e> Read the source of a Django template returning the Unicode text ,read template source
<e> NL: Decodes the POST ed signed data name: decode signed user </e> Decodes the ` ` POST``ed signed data,decode signed user
"<e> NL: Return a list with all the available monitors  name: get available monitors </e> Return monitor config dictionaries for all the monitors , including the built it ones ",get all monitor configs
<e> NL: Checks whether ` ` s ` ` is a string of characters . : return : ` ` s ` ` if it is a string of characters : raise TypeError : When ` ` s ` is not a string of characters name: ensure string </e> Verify that a font contains a specific set of characters . Args : filepath : Path to fsontfile alphabet : A string of characters to check for ,font supports alphabet
<e> NL: Compute 1 / a mod p using the Euclidean algorithm  name: finite inverse </e> Uses the extended Euclidean algorithm to find a modular quotient ,divide mod
<e> NL: Utility function to determine whether the supplied href attribute is a telephone link  name: is tel link </e> Utility function to determine whether the supplied href attribute is an email link ,is email link
<e> NL: Get reverse complement of sequence  name: rev comp </e> Build reverse complement of ' s ' ,reverse complement
"<e> NL: Return whether a string has open quotes . This simply counts whether the number of quote characters of either type in the string is odd . Returns ------- If there is an open quote , the quote character is returned . Else , return False  name: has open quotes </e> Return whether a string has open quotes ",unmatched quotes in line
<e> NL: Creates a list ob bus arrays for PYPOWER  name: make bus list </e> Creates a list of generators for PYPOWER ,make gen list
"<e> NL: Given a list of tokens , return a generator of the chunks of text for the data in the tokens  name: expand tokens </e> Yields line number ranges and top - level elements of the syntax tree for a CMakeLists file , given a generator of tokens from the file . toks must really be a generator , not a list , for this to work ",parse file
<e> NL: Returns True if the system has a hardware clock capable of being set from software  name: has settable hwclock </e> Set hardware clock to value of software clock ,swclock to hwclock
"<e> NL: Returns the path to the configuration file , None if no file exists  name: get config filename </e> Returns the filter of the file or None if no file matches ",get filter for char
"<e> NL: Get all members of a group role , whether they are direct members or indirect members ( i.e. members of members of this role , etc . ) name: get members </e> Get the common ancestor for all the members : param members : The types ( schema entities ) in this union : return : The common ancestor , if any",get common ancestor
<e> NL: Decide what to do with the file  name: detect file </e> Decide how to set strict mode . If a value was provided -- always use it . Otherwise decide based on the existence of config_file ,strict mode strategy
"<e> NL: Extract event image and timestamp - image with no tag will be tagged as latest . : param dict event : start container event dictionary . : return tuple : ( container image , last use timestamp )  name: get event details </e> Generator for analyzing all the muon events Parameters ---------- source : ctapipe.io . EventSource input event source Returns ------- analyzed_muon : container A ctapipe event container ( MuonParameter ) with muon information",analyze muon source
<e> NL: Get the counter value name: get counter </e> Return an auto incremented value for the given counter,auto inc
"<e> NL: Return class or module object . if the argument is only a module name and return a module object . if the argument is a module and class name , and return a class object  name: helper import </e> returns the base class of module that has the same name as module",get base module class
<e> NL: Converts string to image object  name: image from string </e> Converts a string to its lexicographical order ,str to ord
"<e> NL: Return Ma where M is a 3x3 transformation matrix for each pixel name: threeDdot simple </e> Return Ma , where M is a 3x3 transformation matrix , for each pixel",threeDdot simple
<e> NL: Group objects as Nodes : param objects : list(str ) : return : dict name: group objects </e> Group objects by their models Args : objects ( : obj:`list ` of : obj:`Model ` ) : list of model objects Returns : : obj:`dict ` : dictionary with object grouped by their class,group objects by model
<e> NL: A predicate that matches a type string with an array dimension list  name: has arrlist </e> A predicate which matches a type string with an array dimension list ,has arrlist
<e> NL: Plot each particle 's mass versus eccentricity  name: mass ecc </e> Plot each particle 's mass versus size ,mass size
<e> NL: Converts an image to a 1-dimensional array Args : image ( object ) : The image to be converted Returns : array : The image as a 1-dimensional array name: to ndarray </e> Return image scaled to scaled_size . scaled_size should be a sequence with the same length as image ,scale multidimensional
"<e> NL: Returns the only one key and it s value from a dictionary  name: expand one key dictionary </e> Returns the time of the latest notification . : returns : Returns a dictionary of key / value pairs . But there is only one key , ' last_viewed_at '",get latest notification
<e> NL: Get the text for an Indicator node . : param node : Indicator node . : return : name: get i text </e> Simple ROI indicator . : param dataframe : : param decimals : : return :,return on investment
"<e> NL: Returns a mapping where all references to symbols are replaced with the current value of these symbols  name: resolve Ref values in mapping </e> Returns 1 if there are symbols between the entities , 0 if not ",symbols in between
<e> NL: Determines if the provided string is a valid Stellar transaction hash . : param str tx_hash : transaction hash to check : return : True if this is a correct transaction hash : rtype : boolean name: is valid transaction hash </e> Check if the tx hash is present and matches the terms . : param tx_message : the transaction message : return : whether the transaction hash is valid,is valid message
<e> NL: Adds query params to the given url : param url : the url to extend : param params : query params as a keyed dictionary : return : the url including the given query params name: create request url </e> Parse the query param looking for sparse fields params,parse param
<e> NL: Returns the list of custom color definitions for the TikZ file  name: get color definitions </e> Returns the list of custom color definitions for the TikZ file ,get color definitions
<e> NL: Generates secrets to audit from the baseline name: secret generator </e> Generates raw secrets by re - scanning the line with the specified plugin,raw secret generator
<e> NL: Translate a declarative docker configuration to a docker build command  name: build docker build command </e> Get user docker configuration,get config
<e> NL: return output of 822-date command name: get date 822 </e> return output of 822 - date command,get date 822
<e> NL: Generates root of the Swagger spec  name: generate openapi object </e> Build swagger spec section for pagination,get swagger pagination def
<e> NL: key function for sorting by entity name: sort by entity callback </e> Sorting function by default,sbst simple comparison
<e> NL: returns scale of map name: string scale </e> Parses a scale expression and returns the scale and a list of ranges ,parse scale
<e> NL: Associate this thread with a specific table name: table create </e> Close this thread 's table,table close
<e> NL: A helper function to look up an object by slug name: find by slug </e> A helper function to look up an object by key,find by key
<e> NL: Check to see if the samples are weighted Parameters ---------- parameters : list list of parameters stored in the result file samples : np.ndarray array of samples for each parameter name: check for weights </e> Teager Kaiser Energy Parameters ---------- ts : array of size [ 1 x samples ] Returns -------,teager kaiser energy
"<e> NL: Returns an appropriate serializer The first non - None serializer of these is returned : - the given ` serializer ` - object.serializer ( if it exists ) - a global default TMX serializer name: serializer getdefault </e> Eagerly strip comments , because the serializer ca n't output them right now anyway , and they trigger some funky errors ",strip comments
<e> NL: Return the path of a file directory : param file : file path : type file : str : return : File path : rtype : str name: get directory </e> Get rendered file from template file path ,get rendered file
"<e> NL: Returns the path to the best choice of guest tools . This returns a tuple ( in_guest , relative_path ) . If in_guest is true , then relative_path is guaranteed to be relative  name: find best guest tools </e> Get package file path , which is "" package_dir / relative_path "" ",get file path package
"<e> NL: Takes a list and creates a dict with the list values as keys . Returns a list of the created dict or an empty list name: list to dict list </e> Takes a native tweet ( dict ) . Returns list of all mentioned users in tuple form ( user id_str , user screen name ) , or empty list if none ",get users mentioned
<e> NL: Calls each element of sequence to invoke the side effect . Args : seq : Returns : None name: call each </e> Calls each element of sequence to invoke the side effect ,call each
<e> NL: Convert a list to a numpy array  name: convert array </e> Convert a vtkImageData to numpy array . .. seealso : : : meth:`vtkimagedata_from_array ` for the reverse ,vtkimagedata to array
<e> NL: Unpickle some data from a given path  name: load pickle </e> Unpickle a pstats . Stats object,unpickle stats
"<e> NL: Return a list of all parent directories for a path name: parent directories </e> Given a list of directories , return a list of files to watch for modification and subsequent server reload ",build reload files list
"<e> NL: "" c - a : lithium hydroxide [ PM73 ]  name: bC Li OH PM73 </e> "" c - a : lithium nitrate [ PM73 ] ",bC Li NO3 PM73
<e> NL: Return location of the user 's home directory  name: get home dir </e> Guess the location of home directories on a system,get homedir location
"<e> NL: Get positions relative to unit cell . If wrap is True , atoms outside the unit cell will be wrapped into the cell in those directions with periodic boundary conditions so that the scaled coordinates are between zero and one  name: get scaled positions </e> Get the primitive real space vectors for the unit cell and lattice type . Note that the resulting matrix will need to be scaled by a factor equal to the wavelength in Angstroms ",get real space primitive matrix
<e> NL: returns true with probability q name: rand choise </e> Remove rows with a localization probability below 0 . 75,filter localization probability
<e> NL: The bi - square weight function calculated over values of xx Parameters ---------- xx : float array Notes ----- This is the first equation on page 831 of [ Cleveland79 ]  name: bi square </e> The bi - square weight function calculated over values of xx,bi square
<e> NL: Grab the data stored in a .dat file name: grab data from dat file </e> Grab the data stored in a .json file,grab data from json file
<e> NL: Capitalize first letter of the given string . : param value : : return : name: capitalize first letter </e> Returns the lowered method . Capitalize headers prepend HTTP_ and change - to _ ,pre process method headers
<e> NL: Check that ` ` value ` ` is a positive integer  name: natural int </e> Check whether a value is a positive integer,check value
"<e> NL: Return a file descriptor from a file object . Parameters : fileobj -- file object or file descriptor Returns : corresponding file descriptor Raises : ValueError if the object is invalid name: fileobj to fd </e> Redirect stdout to the given file descriptor . If not file descriptor is given , creates a StringIO ( ) ",redirect stdout
<e> NL: Check whether two types are equal  name: is equal type </e> Returns whether two NetworkX graphs ( directed or undirected ) are equal ,graphs equal
"<e> NL: Routine providing a geometry for testing Returns ------- poly_siberia_antim_180plus : OGRGeometry 4-corner polygon in Siberia , crossing the antimeridian name: setup test geom siberia antimeridian 180plus </e> Routine providing a geometry for testing Returns ------- poly_spitzbergen : OGRGeometry 4-corner polygon over high latitudes ( is much curved on the globe )",setup test geom spitzbergen
"<e> NL: Check if a file exists . Parameters : - filename : file to be checked Return false if file does n't exist , true if it exists  name: check file </e> Remove ~/.onecodex file , returning True if successul or False if the file did n't exist ",remove creds
<e> NL: Validates that ' value ' is a list  name: validate list </e> assert helper that quickly validates default value . designed to get out of the way and reduce overhead when asserts are stripped ,validate default value
<e> NL: Returns a random instance from a list  name: get single from list </e> get a random exposure time Returns : - ` ` randomExptime ` ` -- a random exptime from a set of discrete values,random exptime
<e> NL: Remove files specified multiple times in a list  name: remove duplicate files </e> Clean regexes with groups occuring multiple times,clean regex
<e> NL: For a set of points in a 2 dimensional periodic system extend the set of points to tile the points up to to a given period  name: unwrap to layer </e> Translates cardinal points to xy points in the form of bounds . Useful for converting to the format required for WFS from REST style queries ,NSEW 2 bounds
<e> NL: Decoding Bencode string to native python data types name: bencode decoder </e> Add python types decoding . See JsonEncoder,date decoder
"<e> NL: Test if a card is a trifle master card name: is trifle </e> Add a card , return the i d of card ",add card
<e> NL: Return true if the given exception means that a stack does not exist : param exception : Exception : return : bool name: is boto stack does not exist exception </e> Create a dictionary with the priority information of the exception generated : param exception : : return :,format exception
"<e> NL: Return active stat file object if it exists name: get active statfileobj </e> Return new stat file object , record as active stat object",init statfileobj
<e> NL: Add a virtual service  name: add service </e> Add a new service,new service
<e> NL: Return the path to the config file in .config directory Argument : default : the default to use if ~/.config / gist does not exist  name: alternative config </e> gets the path to the default config - file,get default config file path
<e> NL: Map bboxes from the original image scale to testing scale name: bbox mapping </e> Finds the lowest scale where x < = scale ,get scale
<e> NL: Return a new consumer stats counter instance . : rtype : dict name: consumer stats counter </e> Return a new worker stats counter instance . : rtype : dict,worker stats counter
<e> NL: returns matching state for given state name name: get matching state for esi state </e> Generate google news for a given location . Parameters ---------- city : string city name state : string state name,get location googlenews
"<e> NL: Check if path is URL or not . : param url : path to check : return : boolean name: is valid url </e> Check if a custom page path is valid or not , to prevent malicious requests . : param path : custom page path ( url path ) : return : valid or not",validate custom page path
"<e> NL: > > > _ lex_syntax(""=123 "" ) ( ' = ' , ' 123 ' ) name: lex syntax </e> if the filter statement ( after where ) is fully specified eg ` where FOR = ' 123 ' ` or ` where doi!='123 ' `",line filter is complete
<e> NL: This function is used to train model according to Partial Least Squares(linear model )  name: PLS train </e> This function is used to train model according to Ordinary Least Squares(linear model ) ,OLS train
<e> NL: Get the default group type  name: get default group type </e> Get the default group type for migrating cgsnapshots . Get the default group type for migrating consistencygroups to groups and cgsnapshots to group_snapshots ,get default cgsnapshot type
<e> NL: Function parsing a YAML file name: parse yaml </e> The NCX file parsing,parser toc
<e> NL: Returns an str(value ) if the value is not None . : param value : None or a value that can be converted to a str . : return : None or str(value ) name: str if not none </e> Return the verify parameter . The value of verify can be either True / False or a cacert . : param cacert None or path to CA cert file : param insecure truthy value to switch on SSL verification,verification needed
<e> NL: Creates a map of letter use in a word . Args : word : a string to create a letter map from Returns : a dictionary of { letter : integer count of letter in word } name: letter map </e> Iterator over the first letter of each word,first letters
<e> NL: Decode a Bitcoin Base58 string to a number name: base58 dec </e> Decode bytes from Bitcoin base58 string and test checksum,check decode
<e> NL: Checks if user is logged in if username is passed check if specified user is logged in username can be a list name: is logged in </e> Checks if the user is logged in ,is logged in
<e> NL: Custom JSON decoder that allows construction of a new Smi instance from a decoded JSON object  name: .json hook </e> Function used to update KWinner modules boost strength after each epoch ,update boost strength
"<e> NL: Returns the group with passed i d or name . If it not exists it returns None  name: get group </e> Returns the ClassInfo object of the type . If not exists , it will be created ",get classinfo
<e> NL: Return bit list representation of integer  name: int to binary </e> Calculate bit size of the nonnegative integer n,gmpy bitcount
<e> NL: Transforms kafka message to singer record message name: kafka message to singer record </e> Insert single kafka message into the internal store,consume kafka message
"<e> NL: Check that process exists  name: process exists </e> Given that CVS directory exists , parse and process",handle cvs
<e> NL: Log - uniform prior distribution  name: log uniform prior </e> Uniform prior distribution ,uniform prior
<e> NL: Build comm for communicating among the node roots  name: create node roots comm </e> Create comms for communicating within a node ,create node comm
<e> NL: move down y_dist set x = 0 name: generate optimized y move down x SOL </e> Up move and down move initialize up move and down move : param df : data,get um dm
"<e> NL: Return a list of encoded strings with the values of the sequence data_row . The values in the sequences are converted to unicode first so if any values are already encoded strings , they must be encoded with ' ascii ' codec  name: encode values </e> Compute the lenght of a list of values encoded using an optimal code Parameters ---------- x : array - like , shape ( n_samples ) The values to be encoded . Returns ------- Return the length of the encoded dataset ( float )",optimal code length
<e> NL: Parse shared from doc name: parse shared </e> Parse directive from doc,parse directive
<e> NL: Return the battery capacity after last full charge ( measured as percent of total design capacity ) name: battery charge last percent </e> Return the battery capacity after last full charge ( measured in mAh ),battery charge last
<e> NL: Read a private key and optional certificate chain from a file name: read private key and certs </e> Loads an SSL context from a certificate and private key file ,load ssl context
<e> NL: Encode a segwit script hash to a bech32 address . Returns the bech32 - encoded string on success name: segwit addr encode </e> Decode a segwit address ,segwit addr decode
<e> NL: Returns ' false ' if the provided value is empty . Args : value ( object ) : the value Result : boolean : the result name: false if empty filter </e> Returns ' true ' if the provided value is empty . Args : value ( object ) : the value Result : boolean : the result,true if empty filter
<e> NL: Convert exit code to enum if possible . : param code : code to convert from : return : enum code if suitable else original code name: exit code to enum </e> Convert container exit code to signal number . : param code : container exit code : type code : int : return : signal number or None ( if * code * does not represent a signal ) : rtype : int or NoneType,get signal number from exit code
<e> NL: Return the spatial reference of a raster Parameters ---------- raster_path : str File path of the input raster . Returns ------- osr . SpatialReference : : class:`osr . SpatialReference ` object that defines the input raster 's project / GCS name: raster path osr </e> Return the spatial reference of a feature path Parameters ---------- feature_path : str File path to the OGR supported feature . Returns ------- osr . SpatialReference : : class:`osr . SpatialReference ` of the input feature file path,feature path osr
<e> NL: Create an iterator of tensors from node attributes of an ONNX model  name: get attribute tensors </e> Create an iterator of tensors from node attributes of an ONNX model ,get attribute tensors
<e> NL: Remove Padding with zeroes + last byte equal to the number of padding bytes name: remove zero len padding </e> Remove Padding with zeroes + last byte equal to the number of padding bytes,remove zero len padding
<e> NL: Write text to a file  name: write file </e> write some content to a tmp file,write to tmpfile
<e> NL: Looks for program in PATH . : param program : name of the program to find : returns : the complete path of the program or None if it could n't be found name: find program </e> return the list of modules in the program module,get modules
<e> NL: Returns the boolean evaluation of the value  name: check bool </e> Do a simple evaluation of the score ,process result
<e> NL: argument_list : argument | argument COMMA argument_list name: p argument list </e> argument_list : argument | argument COMMA argument_list,p argument list
<e> NL: Recursively apply a function to all dicts in a nested dictionary : param f : Function to apply : param data : Dictionary ( possibly nested ) to recursively apply function to : return : name: walk recursive </e> Recursively apply config s variables values to its property,parse config property
"<e> NL: If may_be_null returns nullable or if NULL can be passed in  name: may be null is nullable </e> Return description from a single row . We only return the name , type ( inferred from the data ) and if the values can be NULL . String columns in Druid are NULLable . Numeric columns are NOT NULL ",get description from payload
<e> NL: Get all institute trend graphs  name: get institutes trend graph urls </e> Institute trend graph for machine category ,get institute trend graph url
"<e> NL: Return a tuple of the number of mapped and unmapped reads in a BAM file name: bam read count </e> count the number of reads present in the file bam_file = pysam . AlignmentFile(file , "" rb "" ) Needs the bam file and bam index file to work",count bam
"<e> NL: Filter custom fields from a given set of fields . : param fields : set of fields : returns : an object with the filtered custom fields name: filter custom fields </e> Extract a set of fields into a new dict for indexing by resource server . Allow for these fields to be ` None ` when absent : - "" refresh_token "" - "" token_type """,convert token info dict
<e> NL: Return the list of users in the group  name: list members </e> Return the ssh_usernames . Defaults to a built - in list of users for trying ,ssh usernames
<e> NL: Reads the content of a .yaml file returns it as dictionary . Parameters ---------- path : string Path to the .yaml file to be read . Returns ------- yamlcontent : dictionary Content of the read .yaml file in dictionary format  name: read yaml </e> Create a dictionary out of the YAML file received Parameters ---------- path : str Path of the YAML file ,read config
<e> NL: Return the source classification probabilities using the default prior used Parameters ---------- samples : list list of samples for a specific result file name: default classification </e> Get synthetic classification data with n_samples samples ,get data
"<e> NL: Returns a list of tuples ( name , i d ) of assignments which have at least one ungraded submission name: get assignments needing grading </e> Returns a list of tuples ( name , i d ) of assignments which have at least one ungraded submission",get assignments needing grading
"<e> NL: Function for creating template instance from text template . : param str template : Text template to process . : return : Correct template instance , based on given text . : rtype : : py : class:`jinja2.Template ` name: make template </e> Shorthand to working with templates : param template : string template : param template_name : template filename : return :",get template
<e> NL: r Checks if l is a numpy array of integers name: is int vector </e> Checks if l is a numpy array of integers,is int vector
<e> NL: Converts a position vector in internal coordinates to absolute coordinates in Angstrom for a film structure ( 2D )  name: rel to abs f </e> Converts a position vector in internal coordinates to absolute coordinates in Angstrom ,rel to abs
<e> NL: Compute the Euclidean distance between : math:`x ` and : math:`y ` . Expected dimension of x is 2 . Expected dimension of y is 2  name: euclidean distance </e> Compute dissimilarity between rows of ` a ` and ` b ` as : math:`||a - b||_2 ^ 2 ` ,l2 dissimilarity
"<e> NL: Given the layer object , return the relationships of the layer objects to packages and to the previous layer name: get layer relationships </e> Get payloads from previous layer ",add payloads
<e> NL: Create a device - object to manipulate a specific device with  name: device create from str </e> Create a device - object to manipulate a specific device with ,device create from str
<e> NL: Return client calls for a chalice app  name: get client calls for app </e> Return client calls for a chalice app . This is similar to ` ` get_client_calls ` ` except it will automatically traverse into chalice views with the assumption that they will be called ,get client calls for app
"<e> NL: List unique elements , preserving order . Remember all elements ever seen  name: unique everseen </e> Returns unique elements , preserving order ",unique everseen
<e> NL: Create an Analysis object from a file  name: from file </e> Create an Analysis object from a directory ,from dir
<e> NL: Returns class that should be used to instance an ew dockable DCC window : return : class name: get dockable window class </e> Returns class that should be used to instance an ew dockable DCC window : return : class,get dockable window class
<e> NL: Calculate the total number of bytes across all files in this directory and its subdirectories  name: get dir size </e> This method will return the cumulative number of bytes occupied by the files on disk in the directory and its subdirectories ,get dir size recursively
<e> NL: Custom JSON decoder that allows construction of a new Smi instance from a decoded JSON object  name: .json hook </e> RETURN THE FIRST STEP IN PATH ALONG WITH THE REMAINING TAIL,tail field
<e> NL: Return the parser object for this script  name: get parser </e> Add arguments to parser for this script,construct parser
<e> NL: Load and return a config file  name: load config </e> Load a config file from ` ` filepath ` ` ,load config
<e> NL: Iterate through a data set  name: data iter </e> Iterate through programs to collect all their labels ,collect labels
<e> NL: Lowercase action set information keys Parameters ---------- asinfo : dict Action set reflection information Returns ------- dict Same dictionary with lower - cased action / param keys name: lower actionset keys </e> Lowercase parmList / exemplar keys Parameters ---------- parmlist : list parmList or exemplar reflection information Returns ------- list Same list with lower - cased name keys,lower parmlist keys
<e> NL: Show Java version Returns : str : Result of ` ` java -version ` ` name: java version </e> Takes a complicated raw_material like the run command and return something simple . Example : ' java HelloWorld -n 3 ' = > ' java ',create default name
<e> NL: Returns string p_s whose non - alphanum chars have been removed name: keep alphanum </e> Returns string p_s whose non - number chars have been removed,keep digits
<e> NL: Post - processing of the score matrix . Parameters ---------- scores ( n x k ) matrix of scores . Returns ------- scores : np.ndarray name: process scores </e> Scores the geolocation of a candidate . A distance of ` radius ` or more will result in a 0.0 score ,score geolocation
"<e> NL: take AWS tag body as CSV string , parse into dict . e.g. start=19:00,end=07:00 name: parse csvbody </e> take AWS tag body , parse into start , end times",parse offhours
<e> NL: Returns the ' energy ' contribution due to the difference from the average value within a region at each point  name: cv difference from average term </e> adds the constant harmonic contribution to the energy and the heat capacity,add harmonic contribution
<e> NL: Get the supporters logo path . .. versionchanged : : Changed in 3.2 from default_organisation_path to supporters_logo_path . : return : Default organisation logo path . : rtype : str name: supporters logo path </e> Retrieve the full path of used specified organisation logo ,organisation logo path
<e> NL: Maps a single transaction row to a dictionary  name: map transaction </e> Maps a single transaction row to a dictionary . Parameters ---------- txn : pd . DataFrame A single transaction object to convert to a dictionary . Returns ------- dict Mapped transaction ,map transaction
<e> NL: Find path of file in directory containing the search string name: find file </e> Find path of file in directory containing the search string,find file
<e> NL: Parse and validate the cloudformation template file . Parameters ---------- cf_client : object Cloudformation client for performing stack operations . template : str Filename of the cloudformation template . Returns ------- str Cloudformation template data  name: parse template </e> Connect to AWS CloudFormation : returns : boto.cloudformation.connection,connect cloudformation
<e> NL: Generate the cartesian product of a list of lists The elements of the result will be all possible combinations of the elements of the input lists . @param lists : a list of lists @return : the cross - product of the lists name: list product </e> Create the necessary number of lists to compute colors feature extraction . # Arguments : nbBins : Int . The number of bins wanted for color histogram . # Outputs : lists : A list of 2 * 3*`nbBins ` empty lists ,list creator
<e> NL: Determine if : raml_resource : is an attribute subresource . : param raml_resource : Instance of ramlfications.raml . ResourceNode . : param route_name : Name of the : raml_resource :  name: attr subresource </e> Determine if : raml_resource : is a singular subresource . : param raml_resource : Instance of ramlfications.raml . ResourceNode . : param route_name : Name of the : raml_resource : ,singular subresource
"<e> NL: When polysh quits we kill all the remote shells we started name: kill all </e> When polysh quits , we kill all the remote shells we started",kill all
<e> NL: Return a dictionary with { metric name : metric value } for all the metrics with the given names  name: metrics by name list </e> Convert a metric name into the operator and metric names ,metric parts
<e> NL: Calculate overall accuracy  name: overall accuracy calc </e> Returns accuracy score evaluation result . - overall accuracy - mean accuracy - mean IU - fwavacc,get scores
<e> NL: Read the Remote from the given path or initialize a new Remote . Args : path ( str ) : the path to the Remote . Returns : Remote : the initialized or read Remote  name: read or init remote </e> Run git config --get remote.<remote>.url in path . : param path : Path where git is to be run : param remote : Remote name : return : str or None,get remote url
<e> NL: Create new column this type from existing Args : column ( Column ) : Existing column to create from . Returns : : class:` . Column ` : new column name: create from </e> Generate a new column name that is guaranteed not to conflict with an existing set of column names ,robust column name
"<e> NL: Fetch url then return its content ( after save it on cache ) . : param str url : URL to fetch . : return str : raw URL content as str  name: fetch url </e> Fetch dictionary content after storing it , from gridfs or json . : param doc",fetch dict
"<e> NL: definition : func(b , h ) { ... } objective : returns you the volume of a tringular prism based on its base and height values V=(1/2bh)h name: volume of tri prism </e> definition : func(b1 , b2 ) { ... } objective : returns you the midsegment of a trapezoid on its two bases 1/2 ( base 1 + base 2 )",trapezoid midsegment
<e> NL: Up sample tick data to a tick based target index  name: up sample tick to tick </e> Down sampling tick data to a tick based target index ,down sample tick to tick
<e> NL: Input validation for integers  name: input validate int </e> Input validation for strings ,input validate str
<e> NL: Return the execution time of a query  name: execution time </e> Count execution time for marker ` ` t ` ` ,time pop
<e> NL: Return true if the file exists name: path exists </e> Return whether the file exists and print a message if it exists ,file exists
<e> NL: Return True if command line does not contain any help or display requests  name: command line ok </e> Return True if the qualifiers contain a NOT,. has not qual
"<e> NL: Extract the application i d from input text . : param text : text to parse : type text : str : return : application i d if found in the input : rtype : str name: parse application id </e> Uses regex to attempt to extract claims from a large string of text . : param text : Large string for claimset : type text : str : return : list of tuples ( claim_number , claim_text )",regex extract claims
"<e> NL: Calculates the value of sigmoid functions Arguments : Z -- A numeric value Returns : A -- The result of the sigmoid function calculation for the Z cache -- The initial value of Z name: sigmoid activation </e> Compute a normalized sigmoid function with specified range . Args : n ( int ) : number of samples to used r ( float ) : X range [ -r , r ] where to compute the sigmoid",norm sigmoid
"<e> NL: Given data in chunks , yield lines of text name: lines from stream </e> Given data in chunks yield lines of text",lines from stream
"<e> NL: Iterate through a data set  name: data iter </e> Iterate through fields as ` ( attribute_name , field_instance ) ` ",iterate over fields
"<e> NL: Deprecated . Use MediaRatios.standard instead . Acceptable min , max values of with / height ratios for a standard media upload : return : tuple of ( min . ratio , max . ratio ) name: standard ratios </e> Deprecated . Use MediaRatios.reel instead . Acceptable min , max values of with / height ratios for a story upload : return : tuple of ( min . ratio , max . ratio )",reel ratios
<e> NL: Get a beacon socket name: get beacon </e> Attaches data to beacon,attach data to beacon
<e> NL: Close the current instance of ` ` Plotter ` ` and its rendering window  name: close plotter </e> Get the previously active : class:`.plotter ` instance or default one ,get active plotter
<e> NL: Checks if the given token represents one of the given keywords name: match keyword </e> Checks if the given filename has one of the given extensions,has extension
"<e> NL: Given a path to an item in a git repository , find the root of the repository  name: find repo root by path </e> returns the relative path of the current directory to the git repository . This path will be added the filename path to find the file . It current_dir is the git root this function returns an empty string ",delta dir
<e> NL: Disable type profile . Disabling releases type profile data collected so far . * * EXPERIMENTAL * * name: stop type profile </e> Enable type profile . * * EXPERIMENTAL * *,start type profile
<e> NL: Return the extension of the file from the file path Parameters ---------- path : str path to the results file name: extension from path </e> Get speaker i d from a BAS partitur file Parameters ---------- path : str a path to the file Returns ------- str or None the speaker i d,parse speaker
<e> NL: Get the default widget or the widget defined in settings name: get default widget </e> Register widget in dictionary ,register widget
<e> NL: Returns the total electronic energy . Parameters ---------- scf_file : string path to the WIEN2k .scf file Returns ------- energy : float the energy of the system name: read energy wien2k </e> Return trace with total energy of three component stream,observed energy
"<e> NL: List unique elements , preserving order . Remember all elements ever seen  name: unique everseen </e> Unique elements , preserving order ",unique everseen
<e> NL: Upload data into given image from URL : param image_id : I d of image : param url : address with image 's data : return : dictionary with image info name: upload url </e> this function will downalod the image given url,downlaod file images
<e> NL: Merge two dicts without modifying them inplace . Args : a ( dict ) : The first dict . b ( dict ) : The second dict . Overrides ` ` a ` ` on conflicts . Returns : dict : A merged dictionary  name: merge dicts </e> Recursively merges two dicts . When keys exist in both the value of ' y ' is used . Args : x ( dict ) : First dict y ( dict ) : Second dict Returns : dict : Merged dict containing values of x and y,merge dicts
"<e> NL: Find all symbols in a tmc file that contain pragmas name: find pytmc symbols </e> Show the data type information gui Parameters ---------- tmc : TmcFile , str , pathlib . Path The tmc file to show",create types gui
<e> NL: Convert datetime objects into human readable name: expired keys </e> start < datetime > end < datetime > returns < str > human readable elapsed time,ts delta str
<e> NL: Generate a font file . Parameters ---------- font : str Font family . size : int Font size . characters : dict Custom characters set . Returns ------- str String ready to write in MicroPython file system  name: generate oled font </e> create a T1File instance from PFB font file of given name,from PFB filename
<e> NL: Normalize a given vector . Parameters ---------- a : array XYZ components of the vector . Returns ------- array The normalized vector  name: normalize vector numba </e> Get mappings from the square array A to the flat vector of parameters alpha ,get maps
<e> NL: Return a yaml file 's contents as a dictionary name: get yaml document </e> Return a yaml file s contents as a dictionary,get yaml document
"<e> NL: Load a file with the json module but report errors better if it fails . And have it ordered too ! name: load json path </e> Make the columns have better names , and ordered in a better order ",cleanup frame
"<e> NL: Perform a forward lookup of a hostname  name: lookup forward </e> Perform a simple DNS lookup , return results in a dictionary",dns lookup
<e> NL: Return metabolites that are only consumed in reactions . Metabolites that are involved in an exchange reaction are never considered to be orphaned . Parameters ---------- model : cobra . Model The metabolic model under investigation  name: find orphans </e> Remove metabolites that are not involved in any reactions and returns pruned model,prune unused metabolites
<e> NL: this method is used to deserialize a workitem from Pyro name: from dict </e> Add PyroAdapter to the list of available in Pyro adapters and handle new supported protocols This function should be called after reimport of Pyro module to enable PYROS:// again ,setup pskadapter
<e> NL: Perform a lexsort and return the sort indices and shape as a tuple  name: flds firstsort </e> Perform a lexsort and return the sort indices and shape as a tuple ,flds firstsort
<e> NL: Yield write_script ( ) argument tuples for a distribution 's entrypoints name: get script args </e> Yield write_script ( ) argument tuples for a distribution 's console_scripts and gui_scripts entry points ,get args
<e> NL: Return a generator of data read from the socket when the tty setting is enabled  name: frames iter tty </e> Returns a generator of data read from the socket when the tty setting is not enabled ,frames iter no tty
<e> NL: Consume digits of pi and compute 1 digit freq . counts  name: one digit freqs </e> Consume digits of pi and compute 1 digit freq . counts ,one digit freqs
<e> NL: Add constraints to a namespace that are LinearExpressions of basic constraints  name: add symbolic constraints </e> Add constraints to a namespace that are LinearExpressions of basic constraints ,add symbolic contents constraints
"<e> NL: Does the iterable contain any duplicate values? name: contains duplicates </e> Creates two lists derived from the supplied iterable : duplicate values and unique values Returns : unique , duplicate",unique duplicate
<e> NL: Return all load balancers associated with an account name: get all elbs </e> Return names of all load balancers associated with an account,list elbs
<e> NL: List oslo config options . Keep a list in alphabetical order name: list opts </e> Utility function which takes a list l and returns the minimum for the alphabetical order among all cyclic permutations of the list ,cycle sort
"<e> NL: Returns the magnitude of a vector : param vector : list(float , float , float ) : return : float name: vector magnitude </e> Returns a single ( or list of ) float(s ) with the V - band absolute magnitude(s ) Parameters ---------- spec_type : str , list The single or list of spectral types Returns ------- Mv : float , list",get stellar Mv
<e> NL: Try multiple times to run ' throw_random ' name: throw random </e> Try multiple times to run throw_random,throw random
<e> NL: Returns True if tweet contains a populated ' place ' field name: contains place </e> Takes a python - native tweet obect ( a dict ) . Returns True if a tweet contains a mention,contains mention
"<e> NL: write ( append ) the content of the TermSet into a file Args : termset ( TermSet ) : ASP termset outputfile ( str , optional ) : Defaults to None . name of the output file name: to file </e> input : string , name of a file containing a profile description output : asp . TermSet , with atoms matching the contents of the input file Parses a profile description , and returns a TermSet object ",read profile
<e> NL: Set the User - Agent string to be used for all requests . Arguments : * user_agent_string - ( string ) a string specifying the User - Agent header name: set user agent </e> Get Information about user that will be passed into The ' User - Agent ' header with requests,get user info
<e> NL: Determine whether or not the path matches one or more paths in the DISABLED_PATHS setting . : param path : A string describing the path to be matched  name: is disabled path </e> Determine whether or not the path matches one or more paths in the ENABLED_PATHS setting . : param path : A string describing the path to be matched ,is enabled path
"<e> NL: returns a value : count dictionary of the count of the number of times target has this value in data_subset , and the number of examples  name: target counts </e> Performs a simple query returning the count of each value of the field ' fieldname ' in the QuerySet , returning the results as a SortedDict of value : count",value counts
<e> NL: Pauses the execution if rate limit is breached . : param api : Api instance . : param response : requests . Response object name: rate limit sleeper </e> Pauses the execution if response status code is > 500 . : param api : Api instance . : param response : requests . Response object : param sleep : Time to sleep in between the requests ,general error sleeper
<e> NL: Generate 2d gaussian . Parameters ---------- shape : tuple of int The shape of the gaussian . sigma : float Sigma for gaussian . Returns ------- float 2D gaussian kernel  name: gaussian 2d </e> bivariateIntegral - Analytic integral over the specified bivariate Gaussian . Parameters ---------- params - list of floats - Values of parameters for the Gaussian . Returns ------- contInteg - float - Integral over the bivariate GAussian,bivariate integral
<e> NL: Is the current OS a Windows? name: . platform is windows </e> return True if the current distribution is running on debian like OS ,is archlinux
<e> NL: Returns all the available namespaces in the scene : return : list(str ) name: get all namespaces </e> Returns a list of sets found in the scene ( outliner ) : return : list < str >,get sets
<e> NL: Function for turning time into astronomical perspective  name: astro sec </e> Function for turning distance into astronomical perspective ,astro dist
<e> NL: Returns the Field object corresponding to the message . : param message : The message to convert . : type message : str : return : The corresponding Field object . : rtype : Field name: from showdown message </e> Creates the object using the information from a message ,from msg
<e> NL: Get indices of the element x in list l : param x : element to find : param list l : list to be inspected : return list : indices of the element name: find in list </e> Find size of a list object even if it is a one element non - list : param query_list : List to be sized,list size
"<e> NL: Ensure that the color scale is formatted in rgb strings . If the colorscale is a hex string , then convert to rgb  name: colors to rgb </e> Ensure that the color scale is formatted in rgb strings . If the colorscale is a hex string then convert to rgb ",colors to rgb
<e> NL: Return a dictionary with information about the node  name: node dict </e> Returns a dictionary encoding the information about this version of pyslim ,make pyslim provenance dict
<e> NL: Check if item matches expressions . : param item : Item : type item : byte.model . Model : param expressions : Expressions : type expressions : list of byte.base . BaseExpression name: is match </e> expressions : expression expressions,p expressions expression expressions
<e> NL: Loops over incoming data looking for base64 encoded data and converts them to a readable format  name: . sanitize resources </e> Loops over incoming data looking for base64 encoded data and converts them to a readable format ,sanitize resources
<e> NL: Collect the benchmark run information for the local environment  name: gather run info </e> Return project and benchmark from instancemethod for reporter ,project and benchmark
<e> NL: Check for use of LOG . * ( _ ( G319 name: no translate logs </e> Check for use of LOG . * ( _ ( V319,no translate logs
<e> NL: Add the initializer to the registry  name: register initializer </e> Add app to local registry by name,add usable app
<e> NL: Get the logger . The log level is set through the ` LOG_LEVEL ` environment variable . Args : logger_name ( str ) : The name of the logger . Returns : logging . Logger : The logger  name: setup logger </e> Get customized logger . Args : name : Name of the logger . level : Level to log . Returns : A logger ,get logger
<e> NL: Creates and empty context and explicitly assigns all permissions to false name: make context </e> Creates the root directory for a backup and assigns the provided gid . Permissions are set as 770 ,create backup root
<e> NL: Create the lines of the contact section Args : cons : the list of contacts indent : the original indentation Returns : A list of lines of the contact section name: make contact section </e> Returns the client of the contact of a Plone user,get user client
<e> NL: Make the redeem script for a p2sh - p2wpkh witness script name: btc make p2sh p2wpkh redeem script </e> Used in converting public key to p2wpkh script,mk p2wpkh script
"<e> NL: Check if a file or a folder exists name: check exists </e> Check if a folder exists , make it if it does n't , set it to home if None . : param folder : Folder to check . : type folder : str",generate workfolder
<e> NL: CLI bool selection  name: select bool </e> CLI selection given options ,select option
"<e> NL: Returns the vdi - ref of the cached image  name: find cached image </e> Ensure VDI is a snapshot , and not cached image ",is vdi a snapshot
"<e> NL: Apply power iteration for the weight parameter name: max singular value </e> Accroding the paper , we only need to do power iteration one time ",power iteration
<e> NL: Set the API key . : param api_key : String with the API key . : return : ` None ` name: set api key </e> Return a mostly obfuscated version of the API Key : param API_key : input string : return : str,obfuscate API key
<e> NL: Add letters based on the location of the images  name: letter annotations </e> Calculates an ilm order based on the shape of an image . This is based on something that works for our particular images . Your mileage will vary ,calc ilm order
<e> NL: Generator that produces sequence of keypairs for nested dictionaries  name: recursive keypairs </e> Generator that produces sequence of keypairs for nested dictionaries ,recursive keypairs
<e> NL: Create a new authenticated session from a configuration . Parameters ---------- configuration : Configuration The configuration to use  name: authenticated from configuration </e> Save a new configuration by name ,save config
<e> NL: Return element only if zoom condition matches with config string  name: filter by zoom </e> Return element only if zoom condition matches with config string ,filter by zoom
"<e> NL: Look up for a path in the process memory mapping . Return a Section object if found , None otherwise  name: process lookup path </e> Look up for an address in memory . Return an Address object if found , None otherwise ",process lookup address
<e> NL: Convert DataFrame back to pair of numpy arrays name: from data frame </e> Convert lists back to numpy arrays,core to numpy
"<e> NL: Splits title containing a year into a title , year pair  name: split title year </e> Splits a long title around the middle comma",split long title
"<e> NL: Get project i d through scan i d . : param scan_id : Integer , scantist scan i d : return : name: get proj id </e> login into Scantist backend and get an scantist token for source code scan : param org_id : Integer , scantist organization i d : return :",create scantist token
<e> NL: Return the number of calendar weeks in this week date year  name: get weeks in year </e> @param weeks_ago : specify how many weeks ago to give count for ( 0 = this week so far ),get week dates
<e> NL: Check a script is known to the resource map and that the script actually exists name: check scripts </e> Validate that the source directory exists and it contains the user script,validate source dir
<e> NL: Find but don t load all third party marshaller plugins  name: find thirdparty marshaller plugins </e> Get default package values for all third party libraries,get defaults
<e> NL: create a module cache in $ HOME/.sumo.modulecache if needed . returns the cache data  name: db cache </e> create a module cache in $ HOME/.sumo.modulecache if needed . returns the cache data ,build cache
<e> NL: Shortcut to send a sms using libnexmo api  name: send message </e> send out KOBE products via sms ( twilio package needed ),send sms
"<e> NL: If * n * is integer > = 2 returns it , otherwise an error  name: int greater equal2 </e> Check if input is csr or SparseLR and raise an error otherwise ",check csr or slr
"<e> NL: Return True if this is a git repo  name: is git </e> Get Git SHA , if it 's a Git repo ",get from repo
"<e> NL: Returns an error , as YAML export requires a directory as a target  name: export journal </e> Return the location of an export by name : param export_name : Target export : return : Location of target export or None",get export addr
"<e> NL: Returns True if the tracking URI has been set , False otherwise  name: is tracking uri set </e> Returns True if the experiment URI has been set , False otherwise ",is experiment uri set
<e> NL: Determine the name + version of the compiler name: compiler info </e> Helper function returning the library directory of libgfortran . Useful on OSX where the C compiler oftentimes has no knowledge of the library directories of the Fortran compiler . I don t think it can do any harm on Linux ,get libgfortran dir
<e> NL: AUTHENTICATION REQUEST Section 9 . 2 . 2 name: authentication request </e> IDENTITY REQUEST Section 9 . 2 . 10,identity request
<e> NL: Check if key is valid for track . : param key : key to be checked : type key : str : return : key : rtype : str|None name: validate track key </e> Normalize a global config key . Does not check validity of the key . : param str key : User - supplied global config key : return : The normalized key formatted as an attribute of : class:` . LDAP ` : rtype : str,normalize global config param
<e> NL: Calculates the local average concentration name: apply convolution </e> Theoretical overturned concentration ,c overturned
<e> NL: Probability that a value from pmf1 is less than a value from pmf2 . Args : pmf1 : Pmf object pmf2 : Pmf object Returns : float probability name: pmf prob less </e> Probability that a value from pmf1 is less than a value from pmf2 . Args : pmf1 : Pmf object pmf2 : Pmf object Returns : float probability,pmf prob less
<e> NL: Parse the header and return a header object name: get header </e> Creates the Determinant header,get determinants header
"<e> NL: If input is not a string , then return input . If input is a string , then try to convert to int , then try to convert to float  name: string to num </e> Try to refresh the TLD list from a remote source , if unable to then use the hardcoded values ",refresh tld list
<e> NL: Read file content from path name: read yaml config </e> Read content from file path,read file
<e> NL: Get the client IP from the request name: get client ip </e> Parses out the head and link properties based on the HTTP Request from the client and the Protobuf response from the validator ,. get metadata
<e> NL: Retrieve remote document by ID and return the entity  name: retrieve and parse document </e> The the entity id by the path ,.get id by impath
<e> NL: Transform tile coordinates to a quadkey name: .tile to quadkey </e> Convert the Google Maps tile coordinate to a Bing Maps quadkey ,tile to quadkey
<e> NL: Class decorator to add metaclass to our class . Metaclass uses to add descriptors to class attributes  name: classproperty support </e> Class decorator to add a logger to a class ,with logger
<e> NL: Build headers for a table related to hazard classes  name: make defaults hazard table </e> Returned this particular hazard classification ,layer hazard classification
<e> NL: Simple method for getting week numbers adjacent to a given week value name: moving window week </e> convert a dataframe 's week numbers to period objects,convert week numbers
<e> NL: defines the way to parse the magic command ` ` % encoding ` ` name: encoding parser </e> defines the way to parse the magic command ` ` % blob_up ` `,blob up parser
<e> NL: Create and populate an Array object from a data dictionary  name: from list </e> Populate puzzle based on a dictionary ,load puzzle from dict
<e> NL: Determine if exist or not : param client : SSHClient : param file_path : absolute path of file name: is exist </e> Determine if directory or not : param client : SSHClient : param file_path : absolute path of file,is dir
"<e> NL: Replace ' # ' char in pattern with supplied number , if no pattern is supplied generate short and unique name for the host . : param pattern : hostname pattern : param number : number to replace with in pattern : return : hostname name: generate hostname </e> Locate all files matching supplied filename pattern in and below supplied root directory . Parameters ---------- pattern : file pattern Pattern used in fnmatch.filter root : directory , default is os.curdir Directory where to start Returns ------- File list",locate files
<e> NL: Perform a regex match of a string against a list of patterns . Returns true if the string matches at least one pattern in the list  name: match regex list </e> Compares nm with the supplied patterns and returns True if it matches at least one ,match pattern
<e> NL: Get the latest downloaded events for the given key . : return : events for key name: latest events </e> Collect stacktraces for the given events ,record stacktrace
<e> NL: Takes care of strange group numbers  name: fix groups </e> This takes care of python2/3 differences,to string
"<e> NL: Display the headers and data list together  name: result list </e> Splits the header into lines , putting multi - line headers together ",get header lines
<e> NL: Find the fn tags included in author - notes name: full author notes </e> Find the fn tags included in author - notes,author notes
<e> NL: Pylint method to fix invalid_name error name: invalid name </e> Pylint method to fix no_value_for_parameter error,no value for parameter
<e> NL: Delete all subfields with subfield_code in the record  name: record delete subfield </e> test that the spec_info has all the required subfields spec_info : - name : Check that spec_info has all required subfields - level : error - function : openschemas.main.validate.criteria.structure.spec_info,spec info
<e> NL: Get the text of an XML tag  name: get text tag </e> Get the text from an XML property ,read property from xml
<e> NL: Convert from a bam to sam file name: bam to sam </e> To load an indexed bam file,load samfile
<e> NL: Parses a number with a currency . Args : match ( regex match ) : A match name: currency match </e> Gets a regex that should match the column,get regex
<e> NL: get long description from file : param path : the path of the file : param filename : the name of the file : return : The description contained in the file or the error string name: get long description from file </e> Return the name of file or a description ,describe file handle
<e> NL: Saves the config for jig in the Git repo . The ` ` config ` ` argument must be an instance of : py : class:`ConfigParser `  name: set jigconfig </e> Gets the config for a jig initialized Git repo ,get jigconfig
<e> NL: get Element class by its number name: from atomic number </e> get Element class by its number,from atomic number
"<e> NL: Return a JSON Schema object for a Django Form  name: get form schema </e> Return a modified version of a schema . The source schema * must * have a ' version ' attribute and a ' django ' section . The resulting schema is almost a copy of the original one , except for excluded options in the ' django ' section ",derivate django schema
<e> NL: Convert a String - based into an Integer - based target value  name: target string to int </e> Convert a String - based line into a list with input and target data ,line to list
"<e> NL: Describe this timedelta in human - readable terms . : param delta : datetime.timedelta object : returns : str , describing this delta name: describe delta </e> Describe this timedelta in human - readable terms ",describe delta
<e> NL: Returns the : py : class:`Absence ` of the holder if it does not yet exist one is created name: absence of holder </e> Returns the : py : class:`PlannedWorkTime ` of the holder if it does not yet exist one is created,planned worktime of holder
<e> NL: Set the display value name: . attr display </e> Set the value of zero_step_mode ,set zero step mode
<e> NL: Parses the query string of a URL and returns the value of a parameter  name: parse query param </e> Parses the given expression string and returns a query object . Requires Python > = 2.6 ,parse query
<e> NL: Switch to the specified database . : Parameters : - ` db_name ` : The database you switch to  name: switch database </e> Switch the status of a page ,change status
"<e> NL: Finds random locations within cleft for each i d in cleft ids . Finds a number of locations equal to num_locs , and returns a dictionary mapping each i d to its locations within a list  name: pick random locs </e> Assigns new ids to every cleft segment",assign unique ids serial
"<e> NL: Remove comment markers and superfluous whitespace . E.g. , ' test test # test ' - > ' test test test ' name: canonicalize whitespace </e> return test counts that are set via pyt environment variables when pyt runs the test",get counts
<e> NL: Get connection to haproxy socket  name: get conn </e> Enable Server in haproxy,enable server
"<e> NL: Reads a docstring in the CSC108 format and extracts the argument types . @param str docstring : The docstring to read . @return : A parsed output of the docstring  name: parse csc108 docstring </e> Copy docstring from a plotly.io function to a Figure method , removing the fig argument docstring in the process",copy doc without fig
<e> NL: Returns number of requests allowed per second for given size  name: get maxrate </e> Calculate RPS for all requests Args : data_frame ( DataFrame ) : data Returns : int : Requests per second,get rps
"<e> NL: check_repo checks if a repo object is of type Repo from git , if not , attempts to make one : param repo : path to a local repo , a git . Repo object , or a url name: check repo </e> Returns parent repo or input path if none found ",get repo parent
"<e> NL: Find the next token in str string from start_pos , we return the token and the next blank position after the token or str.size if this is the last token . Tokens are delimited by white space  name: next token </e> Get the nearest token which clearly identifies the next statement",nearest token
"<e> NL: Ensure that certain keys are available . - exchange - period name: price query filter </e> Price has a set of requirements : - period - > [ minute , hour , day ] - exchange - open - close - high - low - volumefrom - volumeto Ensure that we have all of them for inserts . Will",price insert filter
<e> NL: Fire form callbacks . : param fobi.models . FormEntry form_entry : : param django.http . HttpRequest request : : param django.forms . Form form : : param string stage : : return django.forms . Form form : name: fire form callbacks </e> Get partial form based on original Form and fields set . : param Form : django.forms . ModelForm : param list fields : list of field names ,get partial form
<e> NL: Convert class labels from scalars to one - hot vectors  name: dense to one hot </e> Convert class labels from scalars to one - hot vectors ,dense to one hot
<e> NL: Given a list of list of dicts return just the dicts  name: dict flat </e> This function gets as arguments an array of dicts through the dicts_objects parameter then it ll return the dicts that have a value value_of_filter of the key field_to_filter ,dicts filter
<e> NL: Does a given parsed zone file TXT record encode a missing - zonefile vector? Return True if so Return False if not name: is subdomain missing zonefiles record </e> Determine if a zone file hash was sent by a name . Return True if so false if not,namedb is name zonefile hash
<e> NL: Deletes a server deployment : param deployment_href : URL representing the deployment to delete : param nickname : ( optional ) String representing the nickname of the deployment : return : Boolean of operation success / failure name: delete deployment </e> Deletes a server from RightScale : param server_href : URL representing the server to delete : param nickname : ( optional ) String representing the nickname of the server : return : Boolean of operation success / failure,delete server
<e> NL: > > > nice_hex(0x1 ) ' $ 01 ' > > > nice_hex(0x123 ) ' $ 0123 ' name: nice hex </e> > > > nice_hex(0x1 ) ' $ 01 ' > > > nice_hex(0x123 ) ' $ 0123 ',nice hex
<e> NL: Helper function to check if an object is path - like name: check path </e> Helper function : return True if ' value ' is ' list - like ' ,is multi value
"<e> NL: Parses TibiaWiki 's effect template into a string effect . Parameters ---------- effect : : class:`str ` The string containing the template . Returns ------- : class:`str ` : The effect string  name: parse effect </e> Given odds ratio , calculate effect size ",convert or to beta
<e> NL: Get OS hardening sysctl audits  name: get audits </e> Get OS hardening apt audits ,get audits
"<e> NL: Returns the type wrapped in [ [ Optional ] ] if * x * is an optional , otherwise returns ` None `  name: extract optional </e> Gets a Tensor of type dtype 0 if tol is None validation optional ",get tol
<e> NL: Downloads a file from an url to a local file . Args : url ( str ) : url to download from . local_filename ( str ) : local file to download to . Returns : str : file name of the downloaded file  name: download file </e> Download a file pointed to by url to a temp file on local disk,download file
<e> NL: Create a skewed threshold graph with a given number of vertices ( n ) and a given number of edges ( m ) . The routine returns an unlabeled creation sequence for the threshold graph . FIXME : describe algorithm name: right d threshold sequence </e> Create a skewed threshold graph with a given number of vertices ( n ) and a given number of edges ( m ) . The routine returns an unlabeled creation sequence for the threshold graph . FIXME : describe algorithm,left d threshold sequence
<e> NL: Composes a simple dictionary used to display the project information : param looper . Project p : project that the info should be based on : return dict : dictionary with project information name: project info dict </e> Project a chromagram on the tonnetz ,to tonnetz
<e> NL: Read and log QEMU events . : param qmp : QMP handle : type qmp : QEMUMonitorProtocol name: read events </e> Wait until the VM is powered down and stopped . : param qmp : QMP handle : type qmp : QEMUMonitorProtocol,wait shutdown
<e> NL: is this requirement cyclic ? name: req cycle </e> is this requirement cyclic?,req cycle
"<e> NL: Set the package - level random number generator . Parameters ---------- new_rng : ` ` numpy.random ` ` or a : class:`numpy.random . RandomState ` instance The random number generator to use  name: set rng </e> Get randomly oriented unit vector . : param rstate : : py : class:`numpy.random . RandomState ` object , can be used to create reproducible pseudo - random sequences",random axis
"<e> NL: Transforms /some / path / foo.png into ( ' /some / path ' , ' foo.png ' , ' png ' )  name: target info from filename </e> Konversi url sebagai gambar ( PNG atau JPEG ) ",convert to image
<e> NL: Get the git repository at path . : param str path : The path of a git repository to return . : rtype : : class:`git.repo.base . Repo ` : returns : The git repository at path or None if no repository exists  name: get git repository </e> Checks if path is in a git repository . Args : path ( str ) : The path to check . Returns : bool : Whether the path is a git repository ,is git repository
"<e> NL: Transform a value in preparation for serializing as json no - op for strings , mappings and iterables have their entries made safe , and all other values are stringified , with a fallback value if that fails name: safe for serialization </e> Transform a value in preparation for serializing as json",safe for serialization
<e> NL: Checks if the given type is a object type  name: is object type </e> Checks if the given type is a string type ,is string type
"<e> NL: Read tab delimited file , handling ISA - Tab special case headers  name: line iter </e> Remove ISA - Tab specific information from Header[real name ] headers ",clean header
<e> NL: Returns the headers needed for the transfer request  name: get headers </e> Build message to transfer over the socket from a request ,build request
<e> NL: get the code in a javascript file name: get js </e> Return the filename of the javascript file ,get webasset js file
<e> NL: Generator function for patient subrecords  name: patient subrecords </e> Yield a patient ID and path for each patient folder in data_folder ,generate patient paths
<e> NL: Return the path to the executable Parameters ---------- executable : str name of the executable name: get executable path </e> Decode the callbacks to an executable form ,decode callbacks
<e> NL: Load the attributes saved in a json file into the object Parameters ---------- obj : flightline_project . FlightlineProject ( ) json_file : str - file location name: load from projectconfig </e> Saves the attributes of an object to the specified json file Parameters ---------- obj : flightline_project . FlightlineProject ( ) json_file : str - file location,dump to projectconfig
<e> NL: Checks an exception for given keywords and raises a new ` ` ActionError ` ` with the desired message if the keywords are found . This allows selective control over API error messages  name: check message </e> Checks an exception for given keywords and raises a new ActionError with the desired message if the keywords are found . This allows selective control over API error messages ,check message
<e> NL: expand English contractions found in sentence / token : args : sentence : string of complete sentence or a single token returns : sentence = string sentence / token without contractions name: expand contractions </e> Creates an extractor from each token in a sentence ,make response extractor
<e> NL: Return the percentiles corresponding to values in a distribution  name: vals to percentiles </e> Find the index where youy value appears in a list of percentiles : param value : : param percentiles : : return : example :,find percentile
<e> NL: Get SNMP Credential that matches name  name: get snmp cred by name </e> Get SNMP Credential that matches name and protocol ,get snmp cred by name and protocol
"<e> NL: Search the given library file and return path if found . If not found , add an error to the error collector and return None  name: find library or err </e> Get the full path to gdcmconv . If not found raise error",get gdcmconv
<e> NL: Compute the non - oriented area of a polygon ( can be convex or concave ) . Parameters ---------- polygon : list of lists A list of polygon point coordinates . Returns ------- float The non - oriented area of the polygon  name: polygon area footprint </e> This method is used to calculate the area of a polygon ,calculate polygon area
<e> NL: Checks that a basis set format exists and if not raises a helpful exception name: cli check format </e> Checks that a basis set exists and if not raises a helpful exception,cli check basis
<e> NL: Transform from a table of Cell objects to a table of cell region coordinates . This is primarily for testing purposes  name: table cells to regions </e> Convert a value into a table cell . Args : entry : The value to decorate width : Final size of the table cell in characters prepend : Prepend table border character Returns : Decorated table cell,decorate entry
<e> NL: Merge content of a dict in another name: merge dict </e> Merge the exitcases of two Links . Args : exit1 : The exitcase of a Link object . exit2 : Another exitcase to merge with exit1 . Returns : The merged exitcases ,merge exitcases
<e> NL: Helper function for merging dicts . This functino is called in : func:`Settings.update `  name: merge dicts </e> Helper function for merging config dictionaries,dict merge
<e> NL: Returns either default time stamp or current unix time and expiry seconds to get signature time stamp name: get signature timestamp </e> Create a formatted time stamp of current time @return : Time stamp of the current time ( Day Month Date HH : MM : SS Year ) @rtype : string,time stamp
<e> NL: Create new column this type from existing Args : column ( Column ) : Existing column to create from . Returns : : class:` . Column ` : new column name: create from </e> Check if a column is DateTime ( or implements DateTime ) : param Column col : the column object to be checked : rtype : bool,is datetime column
"<e> NL: create_table_statement : CREATE TABLE identifier ' ( ' create_definition_list ' ) ' name: p create table statement </e> create_definition_list : create_definition_list ' , ' create_definition",p create definition list many
<e> NL: return list ( len=4 ) of the rows surrounding the current one on all sides IF the surrounding row is within the bounds of the grid  name: get surr rows </e> If user does n't provide any padding around the mutation we need to at least include enough of the surrounding non - mutated esidues to construct candidate epitopes of the specified lengths ,check padding around mutation
<e> NL: Converts the raw request into a POST string . Parameters : data ( dict ) : The POST request data dictionary . Returns : str : The POST request data as a formatted string  name: create raw request </e> unloads username from default POST request,username from request
<e> NL: Utility function to obtain a random checker board  name: random checkerboard </e> Utility function to obtain a smoothed random checker board ,random checkerboard smooth
<e> NL: Returns the verbose name for the given formset name: formset verbose name </e> Returns the plural verbose name for the given formset,formset verbose name plural
<e> NL: Initializes all values that might be needed in order to avoid exceptions . : param repo_details : details associated with the analyzed repository . : return : name: initialize values </e> Initializes all values that might be needed in order to avoid exceptions . : param repo_details : details associated with the analyzed repository . : return :,initialize values
<e> NL: Sort a log based on a lambda expression Parameters ------------ log Log sort_function Sort function reverse Boolean ( sort by reverse order ) Returns ------------ new_log Sorted log name: sort lambda log </e> Sort a stream based on a lambda expression Parameters ------------ stream Stream sort_function Sort function reverse Boolean ( sort by reverse order ) Returns ------------ stream Sorted stream,sort lambda stream
<e> NL: Import a dotted module path and return the attribute / class designated by the last name in the path . Raise ImportError if the import failed  name: import class </e> Import a dotted module path and return the attribute / class designated by the last name in the path . Raise ImportError if the import failed . Inspired by Django,import string
<e> NL: 1 means v1 is bigger . 2 means v2 is bigger . 0 means tie  name: which variant is bigger </e> if_match_return_true = True means find duplicates if_match_return_true = False means find if there is only one copy of it ,get duplicate files
"<e> NL: Convert a few common variations of "" true "" and "" false "" to boolean : param text : string to test : return : boolean : raises : ValueError name: convert to bool </e> Convert a few common variations of true and false to boolean",convert to bool
<e> NL: Open a single labeled image at path and get needed information return as a dictionary name: process file </e> Input a list of labeled tuples and return a dictionary of sequentially labeled regions ,label sequential regions
<e> NL: Formats timestamp to human readable format name: format time </e> Formats timestamp to human readable format,format time
"<e> NL: Compare and return value name: less than </e> Ca n't compare relativedeltas directly , so as a hack , add it to a datetime and compare those ",is positive relativedelta
"<e> NL: Returns all roots of a forest , described by an adjacency list . Parameters ---------- adj : list an adjacency list Returns ------- roots : list a list of roots , ascendingly sorted  name: get roots </e> Return a new list of roots sorted first on the real part then the imag ",sort roots
"<e> NL: Extract parsed parameters from node . If this is class method For : def g(a : int , b : int = 2 ) : ... Extracted parameters : a : int , b : int = 2 name: extract params </e> Inferes an annotation node . This means that it inferes the part of ` int ` here : foo : int = 3 Also checks for forward references ( strings )",infer annotation
<e> NL: Get path to local executable . : param executable : Name of executable in the $ PATH variable : type executable : str : return : path to executable : rtype : str name: get path to executable </e> Gets the version of the IgBLAST executable Arguments : exec ( str ) : the name or path to the igblastn executable . Returns : str : version number ,get ig blastversion
<e> NL: Display a search form for searching the list  name: search form </e> Display a search form for searching the list ,search form
"<e> NL: Checks whether or not a command is installed / in the path : param command : THe command to check : return : True if installed , else False name: is installed </e> Checks if a string is an "" A "" command . Args : command : a string . Examples : "" "" @2 "" , "" "" D = A "" . Returns : A boolean . True , or False",is a command
<e> NL: Return a list of content types in a repository . : param Repo repo : The git repository . : returns : list name: list content types </e> Initializes a pygit Repository instance from a remote repo at ' url ',repo from url
<e> NL: Generates an i d for a state machine . It simply uses a global counter that is increased each time . : return : a new state machine i d name: generate state machine id </e> Generates an i d for a state It simply uses a global counter that is increased each time . It is intended for the name of a new state . : return : a new state machine i d,generate state name id
<e> NL: Check if the given path is valid  name: validate path </e> Check if the given location represents a valid cellular component ,get valid location
<e> NL: Load JSON data from a file and return as dict or list  name: load json </e> Load user - supplied value as a JSON dict . : param str user_value : User - supplied value to load as a JSON dict,process json
"<e> NL: Get the destination host for a message . : param host : explicit host to send the message to . : param instance : If an explicit host was not specified , use instance['host ' ] : returns : A host name: compute host </e> Must be called by frontend when host is ready . The call will launch all the callbacks , then remove the listeners list . @param host(QuickApp ) : the instancied QuickApp subclass",call listeners
<e> NL: Returns the names of the supplied arguments to the given function  name: get supplied positional parameter names </e> Returns a list of all tfvc branches for the supplied project within the supplied collection,get tfvc repos
<e> NL: Bring ratios in correct order of cell types : param ratios : : param labels : : param ref_labels : : return : name: sort celltypes </e> Split in_value according to the ratios specified in ratios,ratio split
"<e> NL: Make sure keys and values of dict is unicode  name: unicode dict </e> Clean a dictionary to make sure it contains only valid , non - null keys and values ",safe dict
<e> NL: Get a list of IP addresses from a CIDR  name: list cidr ips </e> Receives a whitelist_path containing 1 IP / CIDR per line and returns a list,parse whitelist file
"<e> NL: Takes an MSA object , a TreeNode object and a threshold as an input . Returns True if there are sequences that are shorter than the provided threshold within the MSA  name: short seqs </e> Takes an MSA and a description as an input and returns the sequence length of that description ",sequence len
<e> NL: List by their FQDNs all hosted zones in the bound account  name: list all zones by name </e> List by their IDs all hosted zones in the bound account ,list all zones by id
"<e> NL: This method takes in a string or UTF-8 input . The input will be base64 decoded , gzip decompressed , and json decoded . Returns a Python object  name: serverless payload decode </e> This method assumes valid JSON input . The input will be json encoded , gzip compressed , and base64 encoded ",serverless payload encode
<e> NL: Return an dict containing the list of migrations for the given version . Key : name of the migration . Value : path to the migration file  name: get migrations files mapping </e> Apply a migration to the SQL server,run migration
<e> NL: save a dict to json file name: save json </e> JSON save value encoding,to json value
"<e> NL: Transform x , y representation to precomputed form : param P : : return : name: conv xy to precomp </e> Return the coefficient of variation ( CV ) of a sequence of numbers . : param data_mean : Precomputed mean of the sequence . : param data_stdevp : Precomputed stdevp of the sequence ",coefficient of variation
"<e> NL: if the app and the envi are passed in the command line as ' app=$app:$env ' : return : tuple app , env name: get app env </e> Adds SBG namespace for CWL application ( tool , workflow ) . : param app : an instance of cwl . App : return : app with added SBG namespace",add sbg namespace
<e> NL: Prefix all path entries in model with the given prefix  name: apply prefix </e> Return stack objects with names that match the given prefix ,get cluster substacks
<e> NL: Verify the response status code . Parameters : response : value status_code : value name: verify response status code </e> Read a variable value from the status response page ,get variable
<e> NL: Reads a csv and returns a List of Dicts with keys given by header row  name: csv to dicts </e> Reads a csv file and returns a dictionary with the respective keys specified in the first row of the csv file ,read csv to dictionary
<e> NL: Check if a file is a HDF5 file using the magic number Args : path ( str ) : path to the file Returns : bool : Whether path points to a HDF5 file  name: is hdf5 file </e> Write metadata to a HDF5 file Parameters ---------- source : ` ctapipe.io.event_source ` output_filename : path,write metadata
<e> NL: Sanity check FASTA files  name: sanity check fasta </e> Sanity check FASTA files ,sanity check fasta
<e> NL: Create a JSON schema validator for the given schema . Args : schema_path : The filename of the JSON schema . schema : A Python object representation of the same schema . Returns : An instance of Draft7Validator  name: load validator </e> Get a JSON Schema by filename ,get json schema
<e> NL: Return a list names of the card sets in the loop  name: get loop names </e> Return a list names of the card sets in the loop ,get loop
<e> NL: Return all default arguments for the given function . : param func : The function for which to retrieve default arguments . : returns : A dictionary of default arguments  name: get default args </e> Return a dict containing the arguments and default arguments to the function ,arg lookup
<e> NL: Return whether or not a transaction ( dict format ) is a memo transaction . : param transaction : a dict format transaction : type transaction : dict name: is memo </e> Formats a transaction DataFrame ,make transaction frame
<e> NL: Parse a tag - length - value style beacon packet  name: parse ltv packet </e> Parse a tag - length - value style beacon packet ,parse ltv packet
<e> NL: Helper function for calc_center_centroid name: sine function derivative </e> Helper function for calc_center_centroid,sine function derivative
"<e> NL: Given a DatabaseObject in code.node , return relationships of derived nodes  name: get relationships </e> Given a DatabaseObject in code.node , return relationships of derived nodes ",get relationships lte
<e> NL: Check if input is iterable : param iterable : : return : name: is iterable </e> Identify whether the input is an iterable ,is iterable
<e> NL: Random Draw from given distribution name: draw from distrib </e> Draw distribution of the Portmanteu whiteness test ,plot whiteness
"<e> NL: Format keys and values in string . e.g. keys = [ ' a ' , ' b ' , ' c ' ] vals = [ 4 , 5 , 6 ] str = ' a:4 , b:5 , c:6 ' name: concat keys and values </e> Given a list of dask vals , return a single graph and a list of keys such that ` ` get(dsk , keys ) ` ` is equivalent to ` ` [ v.compute ( ) for v in vals ] ` ` ",extract graph and keys
<e> NL: Returns the entire phrase containing the head token and its dependents  name: all phrase text for head </e> Returns the begin and end offsets for the entire phrase containing the head token and its dependents ,phrase extent for head
"<e> NL: Extracts the hostname and port from a url address . : param address : an address to parse : returns : the hostname and port of the address : rtype : tuple of ( str , str ) name: parse address for hostname and port </e> Pings an address at a specific port using nmap and checks whether or not the address responds : param address : The address to ping : param port : The port to ping : return : Whether or not the device responds to the ping",port ping
"<e> NL: Determine whether a series of intervals are contiguous . Args : intervals : An iterable series of intervals where each interval is either a range or slice object . Returns : True if the intervals are in order , contiguous and non - overlapping , otherwise False  name: intervals are contiguous </e> Join overlapping intervals of Pandas DataFrame . Uses ` join_overlapping ` to join overlapping intervals of : class:`pandas . DataFrame ` ` d ` ",join overlapping frame
<e> NL: Construct a mesh from a Rhino mesh . Parameters ---------- cls : Mesh A mesh type . guid : str The GUID of the Rhino mesh . Returns ------- Mesh A mesh object  name: mesh from guid </e> Construct a cell from an egi . Parameters ---------- egi A mesh object representing the egi . Returns ------- cell A mesh object representing the unit polyhedron ,cell from egi
"<e> NL: Remove sources based on the proper motion range and signal - to - noise input ------ sources - pandas dataframe , SCAMP full catalog settings - dictionary , settings parameter : value pairs return ------ sources - pandas dataframe , sources data without the sources filtered in this step name: proper motion </e> Selection function either for getting a shuffled list of selected sources or a single source filtered by its network location . : param sources : reference list of sources : param netloc : network location of the source : return : list of selected sources",filter sources
<e> NL: Initialize a dictionary instance from a YAML map : param name : dictionary name : param name : schema map : param inobj : YAML map of the dictionary : return : dictionary instance name: from map </e> Make dictionary to map location name to IBGE code ,name to code
<e> NL: Check if file is ocad map file name: file is map </e> Check if file is ocad cours - setting file,file is cs
"<e> NL: Retrieve a mailbox and an email ID from a request  name: get mail info </e> Split a mailbox name If a separator is found in ` ` fullname ` ` , this function returns the corresponding name and parent mailbox name ",separate mailbox
<e> NL: Return the current context  name: get current context </e> Get current status of application in context,get app state
<e> NL: Render server alive interval option  name: format timeout </e> Render server alive count max option ,format keep alive packages
<e> NL: Convert string to bool : param value : string or bool : type value : str or bool : return : bool name: cast bool </e> Create Bool object from a compatible object . : param obj : - Boolean value . : return : - Converted value as a Bool object ,create from
"<e> NL: Converts a list of nx . Graphs to the internal SDF format . : param graphs : list of nx . Graphs . : return : list of molecules in the internal SDF format  name: nx to sdf </e> For each variable , list each of its markov blankets in graphs ",markov blankets
<e> NL: Create an ssh key name: create ssh key </e> Launches an ssh shell,launch shell
<e> NL: get ` models . Function ` objects from XML node entry : param entry : XML node entry : return : list of : class:`pyuniprot.manager.models . Function ` objects name: get functions </e> get list of ` models . OtherGeneName ` objects from XML node entry : param entry : XML node entry : return : list of : class:`pyuniprot.manager.models.models . OtherGeneName ` objects,get other gene names
"<e> NL: Returns true if the selenium selector is valid : param str _ by : Selenium By locator : param str path : Locator value : return : True , if the selenium selector is valid : rtype : bool name: is valid </e> Extend the selenium WebElement using the ExtendedRemoteWebElement or ExtendedFirefoxWebElement class",extend webelement
<e> NL: Returns an object as a list  name: wrap list </e> Formats an object and returns output as a string . For test purposes only ,formatter test output
<e> NL: Find all configuration references within block configurations name: find configuration references </e> Find all the configurations in this folder,find configurations
<e> NL: Reads an XML with untangle which is inside a ZipFile  name: read xml inside zip </e> Reads an XML with untangle which is in a ZipFile inside another ZipFile ,read xml inside nested zip
<e> NL: Gets credentials from environment variables name: get credentials from env </e> Read credentials from environment variables,read creds from environment variables
<e> NL: Converts a dictionary to an XML ElementTree Element name: convert dict to xml </e> Converts a dictionary to an XML ElementTree Element,dict to xml
"<e> NL: handleInvalidValues(values ) Modifies any invalid values ( NaN , Inf , -Inf ) to Inf , and turn masked values of masked arrays to Inf . Returns a copy if correction if needed  name: handle invalid values </e> Replace NaN and Inf ( there should not be any ! ) : param array : : return :",sanitize array
<e> NL: Takes a client and returns the set of keys associated with it . Returns a list of keys  name: get client alg keys </e> Takes a client and returns the set of keys associated with it . Returns a list of keys ,get client alg keys
<e> NL: Return an encrypted dict . Values converted to json before encrypted name: encrypted dict </e> Allows to deactivate encrypted communication ,set encrypted communication
<e> NL: Legacy method . Can be ignored  name: new vector </e> Legacy method . Can be ignored ,new vector
"<e> NL: Check the user provided ` values ` . Parameters ---------- values : list of numpy.array A list of numpy array containing values . Return ------ values : list of numpy array name: check values </e> Takes an array removes all values that are the same as the previous value . : param values : array of floats : return : cleaned array , indices of clean values in original array",clean out non changing
<e> NL: Ensures that x is a list of strings  name: ensure list of strs </e> Ensures a path is parsed ,normalise path
<e> NL: Format the labels metric and their values . Args : labels ( list ) : List of metric labels . Returns : str : A string with all the labels and their values separated by dots  name: parse labels </e> Returns the labels of table columns to display results : param dict facets : The facet dictionary : returns : The title labels : rtype : * list *,get labels
<e> NL: checks to make sure that the card passes a luhn mod - 10 checksum name: luhn check </e> checks to make sure that the card passes a luhn mod-10 checksum,luhn check
"<e> NL: Get the Neo4j password from the environment of from a file on disk : returns a username , password tuple for Neo4j connection name: get pwd from sys </e> Retrieve attributes from raw Neo4j property dict ",properties to attributes
<e> NL: Read BTi PDF event  name: read event </e> Read BTi PDF channel ,read channel
<e> NL: Turn a Status into a dict  name: dict from status </e> Turn the string copied from the Inspect->Network window into a Dict ,make json
"<e> NL: Profile an expression , and return a tuple of ` ( result , profile ) `  name: profile expression </e> Return a Profile object , as the result of merging a potentially existing Profile file and the args command - line arguments",profile from args
<e> NL: Extract the last part of an URL to use as a filename name: filename from url </e> Extract night from sonobat filename . Consider anything prior to noon as part of the previous night ,extract sonobat night
<e> NL: Using the dataset and model object calculate the residuals and return name: get residuals </e> Train a single overall model using the entire dataset using the Docker image . : param label_type : label type provided by user . : return : None,train all
<e> NL: Return a mapping from style names to their classes  name: get all code styles </e> Build a dict mapping names to their variations,names to abbreviations
<e> NL: Fix filename for Windows  name: remove special chars </e> Fix for legacy appenlight clients,rewrite type
<e> NL: A tiny function used by our SDK to handle the response we get from our API  name: handle response </e> A tiny function used by our SDK to sign and verify requests ,get signature
<e> NL: Get the size of the clusters : param clusters : Existing clusters : type clusters : : py : class:` . Clusters ` : returns : np . Array -- Array containing the size of the clusters name: get sizes </e> Finds the center of the three reference clusters ,find ref centers
"<e> NL: Based on recorded data , compute and return the used events , states , and transitions name: used events states transitions </e> Based on recorded data and a policy , compute and return the unused events , states , and transitions",unused events states transitions
<e> NL: Attach a data disk to a VMSS VM model name: attach model </e> Detach a data disk from a VMSS VM model,detach model
<e> NL: Yield file contents by block then close the file  name: iter and close </e> Yield file contents by block then close the file ,iter and close
"<e> NL: Checks if a live chat is currently on the go and add it to the request context  name: current livechat </e> Add the chat to the log . Return an auto response , if the chat is directed to the system . Otherwise , return an updated chat list of the sender ",post chat box
<e> NL: Set up the Jinja2 environment  name: get jinja2 template </e> Returns the jinja2 templating environment updated with the most recent cauldron environment configurations,get environment
<e> NL: this is a Django 2.2 compatibility function to access a field through a Deferred Attribute name: get field from model </e> Check if the user is authenticated . This is a compatibility function needed to support both Django 1.x and 2.x ; Django 2.x turns the function into a proper boolean so function calls will fail ,get user is authenticated
<e> NL: Compute the Gaussian log likelihood of X under the model in est  name: gaussian loglik scorer </e> Gaussian log - likelihood without constant term in time,log likelihood t
"<e> NL: Returns the catalog that stores objects of instance passed in type . If an object is indexed by more than one catalog the first match will be returned  name: get catalog </e> Return the catalog which indexes objects of instance 's type . If an object is indexed by more than one catalog , the first match will be returned ",get catalog
<e> NL: Calculate the vorticity vector from the vorticity tensor in tree dimensions name: vorticity vector3d </e> Calculate the absolute vorticity of the horizontal wind ,absolute vorticity
<e> NL: Simple function to retrieve the eigenvalues of a matrix . : param a : A matrix made up of nested lists . : return : List of eigenvalues of the provided matrix . : rtype : List[float ] name: get eigenvalues </e> Raises a matrix with two opposing eigenvalues to a power ,reflection matrix pow
<e> NL: Get the operating system name name: os name </e> Get operating system ; only works for unix - like machines,get os
<e> NL: Find a given table tag by its HTML ID name: find tdiv by id </e> Find a model reference by its table name,find model by table name
<e> NL: Serialize LSTM layer to dict name: show lstm layer </e> Returns LSTM residual block,block BiLSTM
<e> NL: Determine the NamedTuple target type for a ` ` dict ` ` value . Returns ` ` None ` ` if a suitable target can not be determined  name: get cast type for dict </e> Determine the target type for a ` ` str ` ` value . Returns ` ` None ` ` if a suitable target can not be determined ,get cast type for str
<e> NL: Returns the verbose name of a model field  name: model field verbose name </e> Returns the verbose name of an object s field ,get verbose
<e> NL: Creates a list of number sequences divided as evenly as possible  name: even list </e> Returns n evenly spaced indexes . Returns as many as possible if trunc is true,spaced indexes
<e> NL: Takes a string and makes it suitable for use as an identifier Translates to lower case Replaces white space by the white_space_becomes character ( default = underscore ) . Removes and punctuation  name: string to identifier </e> Takes a string and makes it suitable for use as an identifier,string to identifier
<e> NL: Check if the dataset is imbalanced . : param P : condition positive : type P : dict : return : is_imbalanced as bool name: imbalance check </e> Check if the dataset is imbalanced ,imbalance check
<e> NL: put all provided tokens into one token  name: merge tokens </e> Create a valid token and put into authentication payload similar to OpenID connect payloads ,get auth payload
"<e> NL: Retrieves the x and y position of the center of the cell with coordinates i , j , k name: get boundary position of index </e> Return the coordinates of the center of each areas in the segmented image",get center areas
"<e> NL: Convert list of string symmetry operations to magnetic symmetry operations i.e. remove translations name: symmetry ops2magnetic </e> Generate symmetric reflections given symmetry operations symhkl = gen_sym_ref(sym_ops , h , k , l )",gen sym ref
<e> NL: Takes an arbitrary data structure and tries to convert it into a data frame Parameters ---------- data : object data to be converted into data frame Returns ------- data : data frame name: make df </e> retrieve the data dictionary kaggle_data_dictionary.csv as a data frame,get data dictionary
"<e> NL: Check if table exists Parameters ---------- table_name : str database_name : str , optional Returns ------- bool name: table exists </e> Get a registered table . Decorated functions will be converted to ` DataFrameWrapper ` . Parameters ---------- table_name : str Returns ------- table : ` DataFrameWrapper `",get table
<e> NL: Get the filename of the config file associated with the given package or module  name: get config filename </e> Do all of the gruntwork associated with creating a new module ,new module
"<e> NL: Get the file size of a given file name: get file size </e> get file size , in megabytes : param file : : return : size of file",get size
"<e> NL: Returns the site name given the "" long "" site name  name: get site name </e> Find the next Site if we 're not "" on "" a site already ",get site
"<e> NL: Return a boolean depending on whether a regex group is matched  name: does regex have group </e> Return btn bs3 class depending on status : param boolean : Boolean : return : "" btn - success "" and "" btn - danger "" depending on boolean",f btn
"<e> NL: Return a dict from ' config ' whether it is a dict , file , or filename  name: as dict </e> Some boilerplate code for obtaining configuration dict from ctx . : return : config dict",load config
<e> NL: Get directory to work with  name: get directory </e> Ca n't get this to work ...,set terminal size
<e> NL: Get HTTP headers from environment name: get headers </e> Parses a HTTP - style headers,parse headers
<e> NL: Helper function to pop edges off the stack and produce a list of them  name: output component </e> Proxy of pop where we know we re popping a stack off of a stack ,pop stack
"<e> NL: If string endswith the suffix , remove it . Else leave it alone  name: clean suffix </e> Given a string representing a variable return a new string that is safe for C ++ codegen . If string is already safe will leave it alone ",safe cpp var
<e> NL: Iterate over a sequence in windows of size n name: slicing window </e> Iterate indefinitely over a Sequence . # Arguments seq : Sequence object # Returns Generator yielding batches ,iter sequence infinite
<e> NL: Set the default destination to copy assets to  name: set default asset dest dir </e> Set the default prefix for where to find assets ,set default asset prefix
"<e> NL: Extract and deserialize any crypto meta from the end of a value . : param value : string that may have crypto meta at end : return : a tuple of the form : ( < value without crypto meta > , < deserialized crypto meta > or None ) name: extract crypto meta </e> Fetch and parse crypto data",fetch crypto data
<e> NL: Check if the given string can be converted to float or not . This method is fast when returning True Args : val ( str ) : The input Returns : bool : Return True if the input can be converted to float name: is float </e> Check if string can be converted to float ,is float
<e> NL: Hook : for checking commit message ( prevent commit )  name: commit msg hook </e> Hook : for checking commit message ,post commit hook
"<e> NL: Return True if parameter contract is a custom contract , False otherwise  name: get custom contract </e> Returns True if the parameter contract is a custom contract , False otherwise",get custom contract
<e> NL: Generate a new Message instance from this Descriptor and a byte string . Args : descriptor : Protobuf Descriptor object byte_str : Serialized protocol buffer byte string Returns : Newly created protobuf Message object  name: parse message </e> Generate a new Message instance from this Descriptor and a byte string . Args : descriptor : Protobuf Descriptor object byte_str : Serialized protocol buffer byte string Returns : Newly created protobuf Message object ,parse message
"<e> NL: utility method to extract the query element from a URI : param uri : the URI to parse : return : name: parse query </e> Parse type and ID from an URI . Parameters ---------- uri URI to parse Returns ------- tuple ( type , ID ) parsed from the URI",from uri
<e> NL: Return the execution time of a query  name: execution time </e> Remember current system time and set ` ` t ` ` marker to that . Useful to count execution time of some parts of the code ,time push
"<e> NL: Read data from ` ` url ` ` . Returns a 2-tuple of ( text , content_type ) name: read url </e> Returns a selection for content_type ",content type selection
"<e> NL: Checks whether it is valid netCDF or not . input "" path "" : type string , path to file which shall be extracted output true if file is valid , false if not name: is valid </e> Checks whether it is valid shapefile or not . input "" path "" : type string , path to file which shall be extracted output true if file is valid , false if not",is valid
"<e> NL: Find a window with the focus , that is also a descendant of the given window . This is used to determine the window to initially send commands to . : param wx . Window ` ancestor ` : the window to check for ancestry  name: find focus descendant </e> Save window crop as image file to be read by PIL . Filename should match the image_name + window index",save crop
<e> NL: Generates a 3x3 rotation matrix for a rotation of angle theta about the y axis  name: .y axis rotation </e> Return the value of the Earth Rotation Angle ( theta ) for a UT1 date . Uses the expression from the note to IAU Resolution B1.8 of 2000 . Returns a fraction between 0.0 and 1.0 whole rotations ,earth rotation angle
<e> NL: Read RPCAP block data  name: read rpcap </e> Write RPCAP block data ,write rpcap
"<e> NL: Given an integer bitmap and an enumerated type build a set that includes zero or more enumerated type values corresponding to the bitmap  name: unpack bitmap </e> Given an integer bitmap and an enumerated type , build a set that includes zero or more enumerated type values corresponding to the bitmap ",unpack bitmap
<e> NL: Returns True if the given file - like object is closed or if f is not a file - like object  name: fileobj closed </e> Check if the object is a file - like object ,is file like
<e> NL: Create a comment . : param comment : Class instance of Comment ( ) as parameter . : return : Boolean indicating success of database action  name: create comment </e> Create a WebhookMetadata from a comment added to an issue ,build from issue comment
<e> NL: The command generator when state is merged : rtype : A list : returns : the commands necessary to merge the provided into the current configuration name: state merged </e> The command generator when state is merged : rtype : A list : returns : the commands necessary to merge the provided into the current configuration,state merged
<e> NL: List all the existing screens and build a Screen instance for each name: list screens </e> List all the existing screens and build a Screen instance for each ,list screens
<e> NL: r Get the current alternate setting of the interface  name: get interface </e> Get the current alternate setting of the interface . dev is the Device object to which the request will be sent to ,get interface
"<e> NL: Returns the last element of the list which matches the predicate , or undefined if no element matches . Acts as a transducer if a transformer is given in list position name: find last </e> Returns the index of the last element of the list which matches the predicate , or -1 if no element matches . Acts as a transducer if a transformer is given in list position",find last index
<e> NL: Load the MNIST handwritten digits dataset  name: load mnist dataset </e> Loads the MNIST dataset : return :,load mnist
<e> NL: Wrapper for search.prep_and_search that secedes from worker thread pool name: prep and search </e> Wrapper for source.read_segment that secedes from worker thread pool,read segment
<e> NL: this method will convert string boolean to the python boolean type name: convert string boolean </e> this method will convert string none to the python none type,convert string none
<e> NL: Return a normalized UNTL subject heading back to string  name: encodedUNTL to UNTL </e> Create a UNTL XML subelement ,create untl xml subelement
"<e> NL: Fetch the request from the context . This enforces the use of the template : class:`~django.template . RequestContext ` , and provides meaningful errors if this is omitted  name: get request </e> A view response shortcut which finds the required template by some concatenating and then process the return object with a RequestContext and some optional context as specified in the ` ` extra_vars ` ` parameter",response shortcut
<e> NL: Returns a list of JSON - API error objects from a given exception  name: format error data </e> Write a CSV / JSON file at location given a list of About objects . Return a list of Error objects ,write output
<e> NL: Ensure that the API key is valid  name: require auth </e> Check if an API key is valid,check api key
<e> NL: Return a list of file paths to each data file in the specified corpus  name: list corpus files </e> Return a list of file paths to each data file in the specified corpus ,list corpus files
<e> NL: Checks the key value syntax . : param str pair : The key / value pair to check : returns : The key / value pair : rtype : * tuple * : raises Error : If invalid pair syntax name: keyval converter </e> Writes ` key`-`value ` pair to ` module ` 's state hook ,set state
<e> NL: Check if the junction for oauth already created : param isamAppliance : : param instance_id : : param junction : : return : name: check config </e> Check whether file exists : param isamAppliance : : param instance_id : : param i d : : return : True / False,check file
<e> NL: Ensures an input is a string decoding if it is bytes  name: ensure text </e> URL decode a single string with a given encoding . If the charset is set to None no unicode decoding is performed and raw bytes are returned ,url unquote
<e> NL: Returns a ` ` Session ` ` instance by session i d . : param sid : A session i d . : returns : An existing ` ` Session ` ` entity  name: get by sid </e> Takes an existing ` ` context ` ` object ( as constructed in ` ` get_context_data ( ) ` ` and populates any session messages we may have ,populate session msg context
<e> NL: Return function name from given AST node : param function_node : ast node : return : str name: get ast function name and args </e> Converts an AST node into source code . Args : node : Any AST node derived from ast . AST . Returns : str : A string containing the source code corresponding to the AST ,to source
<e> NL: Custom JSON decoder that allows construction of a new Smi instance from a decoded JSON object  name: .json hook </e> A content file that converts lf to crlf ,to crlf converter
<e> NL: Returns a list of all available keypairs : param nova : the Nova client : param name : the name of the keypair to lookup : return : the keypair object or None if not found name: get keypair by name </e> Returns the names of all nova active compute servers : param nova : the Nova client : param zone_name : the Nova client : return : a list of compute server names,get availability zone hosts
<e> NL: r Returns the secondary mass from the chirp mass and primary mass  name: mass2 from mchirp mass1 </e> Calculate the component black hole masses from the total mass of the system and the mass ratio ,components from total
<e> NL: Return True if * obj * looks like a string name: is string like </e> Return True if s operates like a string ,string like
<e> NL: Makes sure the file exists  name: touch config file </e> Makes sure domain is valid with proper format ,is domain
<e> NL: Function that returns true if the given name can be used as a parameter in the c programming language  name: is legal parameter </e> Return programming language used for repository,get programming language
<e> NL: Ignore tzinfo unless convertToUTC . Output string  name: date time to string </e> Ignore tzinfo unless convertToUTC . Output string ,date time to string
"<e> NL: For data , depending on type name: for data </e> Get all user_ids or group_ids depending on ` ` user_type ` ` . See : py : mod:`toyz.utils.db ` for more info ",get all ids
"<e> NL: Search all ' a ' tags on a page for feeds : return : Tuple[list , list ] name: search a tags </e> List all auto updating feeds ",list all auto updating
"<e> NL: postorder iteration of the tree nodes ( first postorder through the children , then the node ) name: postorder iterator </e> selective postorder iteration - walk is postorder ; - if select is specified , return the node if select(node ) is True - if ignore is specified , skip completely the subtree rooted in node",filtered postorder iterator
<e> NL: Retrieve remote references defined in the CWL  name: get cur remotes </e> Retrieve original items in a batch handling CWL and standard cases ,get orig items
"<e> NL: Returns a driver library ( that contains Driver , Driver_XXX , Module_XXX ) name: load driver lib </e> Returns the list of the driver 's Module(s ) name(s ) ( classes Module_XXX )",get module names
<e> NL: Convert Numpy points array to a vtk points array . Parameters ---------- points : ndarray Returns ------- vtk_points : vtkPoints ( ) name: numpy to vtk points </e> Convert numpy points to a vtkPoints object,vtk points
<e> NL: Returns the name of a website - scrapping function  name: id source </e> Returns the website with name as given host If not silent a website not found error is raised ,get from host
<e> NL: Get all name space prefix definitions required in this XML doc . Return a dictionary of definitions and a char string of definitions  name: get required ns prefix defs </e> Lookup occurrence issue definitions and short codes,occ issues lookup
<e> NL: Return a dictionary key : current hour value : previous n hour data name: n prev hour </e> Return usage for specified hour ,get usage for date
<e> NL: defines the way to parse the magic command ` ` % encoding ` ` name: encoding parser </e> defines the way to parse the magic command ` ` % HIVE_azure ` `,HIVE azure parser
<e> NL: Return the greatest common divisor of a list of values  name: list gcd </e> returns the greatest - length common portion of the path in the given collection of file - names,common root path
"<e> NL: Retrieve the metadata for a deprecated option , if ` key ` is deprecated . Parameters ---------- key : string Returns ------- DeprecatedOption ( namedtuple ) if key is deprecated , None otherwise name: get deprecated option </e> Return the default value for given pattern . Parameters ---------- pat : string Returns ------- RegisteredOption ( namedtuple ) if key is deprecated , None otherwise",get default val
<e> NL: Helper to check if func is wraped by our deprecated decorator name: is deprecated </e> Helper to check if func is wraped by our deprecated decorator,is deprecated
<e> NL: Return given shot as a dictionary with extra data like project and sequence names  name: get full shot </e> Return given sequence as a dictionary with extra data like project name ,get full sequence
"<e> NL: ( % [ 01]+)|([01]+[bB ] ) name: t BIN </e> Splits off the species component of the allele name from the rest of it . Given "" HLA - A*02:01 "" , returns ( "" HLA "" , "" A*02:01 "" ) ",split species prefix
<e> NL: Get the available columns in the query ` statement ` . : param statement : A SQL SELECT statement . : returns : A list of columns that are being selected  name: get columns </e> get the last ' return < object > ' statement,line last return subject
<e> NL: Setup the desired SRS ( based on options ) name: setup output srs </e> Setup a jinja env based on the tool options,env create
<e> NL: Ensure that the path ends with a slash name: add slash </e> Increments a string that ends in a number,increment title
<e> NL: Returns alias if alias is a valid language  name: alias from language </e> Fill the model with alias since V1,model alias
<e> NL: Deserializes an object from a Document Snapshot . : param snapshot : Firestore Snapshot : return : name: from snapshot </e> Converts a firestore document snapshot to FirestoreObject : param snapshot : firestore document snapshot : param super_cls : subclass of FirestoreObject : return :,snapshot to obj
<e> NL: Update a method object  name: update method </e> Update a method object ,update method
"<e> NL: Adds one vector to another : param vector1 : list(float , float , float ) : param vector2 : list(float , float , float ) : return : list(float , float , float ) name: vector add </e> ` ` float SDL_cosf(float ) ` `",SDL cosf
<e> NL: Return the type of the ` location ` or None if it does not exist . Return the short form ( single character ) or long form if short = False name: get type </e> Convert the short form of an argument to its long form ,short to long
<e> NL: Determine which config file type and loader to use based on a filename  name: get loader </e> Identify the best loader based on connection ,get loader
<e> NL: Convert a constraint to SI if possible . : param expr : : return : name: constraint to si </e> Convert a constraint to SI if possible ,constraint to si
<e> NL: Issue A - ASSOCIATE confirmation ( reject ) primitive and close transport connection  name: ae 4 </e> Issue A - RELEASE confirmation primitive and close transport connection ,ar 3
<e> NL: Get the URL from local path . : param path : the local path : return : the URL name: get url from path </e> Try to get the local path for a tracked object,try get local path
"<e> NL: Compare and return value name: less than </e> Return an compare attribute , supporting AT , DX and IEventAccessor objects ",get compare attr
"<e> NL: Flatten all the tasks in all the tests Args : test(Test ) : Root test Returns(List[Task ] ) : Tasks name: flatten all tasks </e> Generate tree width suitable for ` ` merge_sorted ` ` given N inputs The larger N is , the more tasks are reduced in a single task . In theory , this is designed so all tasks are of comparable effort ",tree width
"<e> NL: Checks whether value can be found in the given constants group , which in turn , should be a Django - like choices tuple  name: is value in </e> Helper function . Checks whether found in the system libcapn version can be used by pypusher . : return : Tuple ( version_satisfied_bool , found_version_number )",lib capn version satisfied
"<e> NL: Sort a dict containing paths parts ( ie , paths divided in parts and stored as a list ) . Top paths will be given precedence over deeper paths  name: sort dict of paths </e> Prune the swagger ( in place ) of its empty paths ( ie paths with no verb )",prune empty paths
<e> NL: Load single image file of common medical image types Parameters ---------- filename : TYPE DESCRIPTION . Raises ------ ValueError DESCRIPTION . Returns ------- img : TYPE DESCRIPTION  name: safe load medical img </e> Load single image file of common medical image types Parameters ---------- filename : TYPE DESCRIPTION . Raises ------ ValueError DESCRIPTION . Returns ------- img : TYPE DESCRIPTION ,safe load medical img
"<e> NL: Serialize an array of objects , ready to be used in putdup  name: serialize tclist </e> Serialize an array of objects ",serialize array
<e> NL: Load signal types  name: load signal types </e> Load signal groups ,load signal groups
<e> NL: Return whether or not a User is authenticated . Function provides compatibility following deprecation of method call to is_authenticated ( ) in Django 2.0  name: is authenticated </e> Checks whether a given deprecation name is a valid deprecation ,is deprecation
<e> NL: Convert a single number to a floating point value  name: val to float </e> Decodes a floating point number stored in a single byte ,byte to float
"<e> NL: Set subprocess module to use . The subprocess could be eventlet.green.subprocess if using eventlet , or Python 's subprocess otherwise  name: set subprocess </e> Ensures the child process dies if this process dies ( fate - sharing ) . Windows - only . Must be called by the parent , after spawning the child . Args : child_proc : The subprocess . Popen or subprocess . Handle object ",set kill child on death win32
<e> NL: Return the default configuration as a dictionnary  name: default config </e> Format output of daemon to a dictionnary,whos to dic
<e> NL: Get current machine IP address : return : str -- IP address name: detect ip </e> Get current IP value Returns : ---------- result : string current IP value,see ip
"<e> NL: Custom strip for removing all non - alphanumeric characters  name: strip non alnums </e> Check that component name starts with an alphanumeric character , and disalllow all non - alphanumeric characters except underscore , hyphen , colon , and period in component names ",validate component name
"<e> NL: Get terminal width and height Return ( width , height ) tuple name: get terminal size </e> Return ( width , height ) of console terminal on POSIX system . ( 0 , 0 ) on IOError , i.e. when no console is allocated ",posix get window size
<e> NL: Returns locals dictionary from a given frame  name: get frame locals </e> apply func to the locals at each stack frame till func returns a non false value,find locals
<e> NL: Check is text made of small katakana name: is small katakana </e> Check is text made of small hiragana,is small hiragana
"<e> NL: Remove trailing colons from the URI back to the first non - colon  name: . trim </e> Similar to parse_args ( ) , but stripping leading colons from the first argument of a line ( usually the sender field ) ",parse prefixed args
"<e> NL: Given profile data and the name of a social media service , format it for the zone file . @serviceName : name of the service @data : legacy profile verification Returns the formatted account on success , as a dict  name: format account </e> Given profile data and the name of a social media service , format it for the zone file . @serviceName : name of the service @data : legacy profile verification Returns the formatted account on success , as a dict ",format account
<e> NL: Remove the rows denoted by ` ` indices ` ` form the CSR sparse matrix ` ` mat ` `  name: delete rows csr </e> Remove the rows denoted by indices form the CSR sparse matrix mat ,delete rows csr
<e> NL: Lists information about a table name: table info sql </e> Return information about table s fields in dictionary type ,.get type for inputs
<e> NL: Returns ` ~datetime.datetime ` object from date and time fields of header  name: parse header time </e> Adapter for fields of date / datetime / time,datetime auth adapter
<e> NL: fills the update filename template dialog name: dialog update filename template </e> fills the create filename template dialog,dialog create filename template
<e> NL: Merge the second multiple - dictionary into the first one  name: merge dicts </e> Merge the ' second ' multiple - dictionary into the ' first ' one ,merge dicts
<e> NL: alg_op : expr PLUS expr | expr MINUS expr | expr MULTIPLY expr | expr DIVIDE expr name: p alg op </e> Yield an warning message ` msg ` if ` expr ` is False,warn if
"<e> NL: parse the version and return the list of major , minor , etc version numbers : param version : the version to be parsed : returns : the list of version numbers name: get standard version </e> returns the minimum platform version that can load the given class version indicated by major . minor or None if no known platforms match the given version",platform from version
"<e> NL: Return the device type from a device_type list  name: get device type </e> Search the given device for the specified string property @param device_type Type of Device @param property String to search for @return Python string containing the value , or None if not found ",get string property
"<e> NL: Convert a vertex or vertex ID to a vertex ID , ensuring that if it 's a vertex , it belongs to the correct graph . : param vertex : The vertex or vertex ID to be converted . : return : The vertex ID  name: to vid </e> Returns symmetric vertex or -1 if not symmetric vertex found : param vertex_index : int",get symmetric vertex
<e> NL: Width of list of strings as length of longest string in that list  name: calculate width </e> Normalizes length of strings in ` ` string_list ` ` . All strings are modified to be as long as the longest one in list . Missing characters in string are appended using ` ` fill_chr ` ` ,normalize width
"<e> NL: Returns the number of children @returns number of children : 0 , 1 , 2 name: count children </e> Will get the children of the specified dn",get dn children
"<e> NL: Find the object by its UID name: find objects </e> Given a ZimbraId value , returns its corresponding UID",zimbraid to uid
<e> NL: Convert a string from one charset to another  name: change charset </e> Convert a string from one keyspace to another ,change keyspace
<e> NL: Generator that yields tracebacks found in a lines iterator name: tracebacks from lines </e> Generator that yields tracebacks found in a file object,tracebacks from file
<e> NL: wrap up an object or sequence of objects name: wrap task </e> Chop up and word - wrap a long string of text ,word wrap
<e> NL: Generates a : math:`N \times N ` identity matrix . : param n : size of the matrix : type n : int : return : identity matrix : rtype : list name: matrix identity </e> Return a sparse row sub - matrix of the identity matrix for ` ` var ` ` ,identity sub
<e> NL: Converts list of dicts to dict  name: to d </e> Recursively converts payload with mixed ABI objects and dicts to dict,mixed to dict
<e> NL: Instantiate a Table from a database file  name: .from file </e> Instantiate DeploymentDefinitions from a list ,from list
"<e> NL: Returns the first value for a given URL  name: dedupe urls </e> Extract the first image for the given URL which is a sibling of an "" h1 """,get first image
